/**
 * Name: SCUM
 * Version: 0.7.162
 */

#include "../SDK.h"

namespace CG
{
	// --------------------------------------------------
	// # Structs Functions
	// --------------------------------------------------
	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAchievementsManagerClient.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAchievementsManagerClient::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AchievementsManagerClient");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAchievementsManagerServer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAchievementsManagerServer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AchievementsManagerServer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DesignableUserWidget.SetDisplayLabelName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      displayLabelName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDesignableUserWidget::SetDisplayLabelName(const class FString& displayLabelName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DesignableUserWidget.SetDisplayLabelName");
		
		UDesignableUserWidget_SetDisplayLabelName_Params params {};
		params.displayLabelName = displayLabelName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DesignableUserWidget.SetDefaultPosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDesignableUserWidget::SetDefaultPosition(const struct FVector2D& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DesignableUserWidget.SetDefaultPosition");
		
		UDesignableUserWidget_SetDefaultPosition_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DesignableUserWidget.OnSynchronizeProperties
	 * 		Flags  -> ()
	 */
	void UDesignableUserWidget::OnSynchronizeProperties()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DesignableUserWidget.OnSynchronizeProperties");
		
		UDesignableUserWidget_OnSynchronizeProperties_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DesignableUserWidget.GetDisplayLabelName
	 * 		Flags  -> ()
	 */
	class FString UDesignableUserWidget::GetDisplayLabelName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DesignableUserWidget.GetDisplayLabelName");
		
		UDesignableUserWidget_GetDisplayLabelName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DesignableUserWidget.GetDefaultPosition
	 * 		Flags  -> ()
	 */
	struct FVector2D UDesignableUserWidget::GetDefaultPosition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DesignableUserWidget.GetDefaultPosition");
		
		UDesignableUserWidget_GetDefaultPosition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDesignableUserWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDesignableUserWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DesignableUserWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ActionProgressWidget.UnPauseProgress
	 * 		Flags  -> ()
	 */
	void UActionProgressWidget::UnPauseProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ActionProgressWidget.UnPauseProgress");
		
		UActionProgressWidget_UnPauseProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ActionProgressWidget.SetProgress
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              progress                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UActionProgressWidget::SetProgress(float progress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ActionProgressWidget.SetProgress");
		
		UActionProgressWidget_SetProgress_Params params {};
		params.progress = progress;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ActionProgressWidget.PauseProgress
	 * 		Flags  -> ()
	 */
	void UActionProgressWidget::PauseProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ActionProgressWidget.PauseProgress");
		
		UActionProgressWidget_PauseProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.ActionProgressWidget.OnActionProgressFinishedEvent__DelegateSignature
	 * 		Flags  -> ()
	 */
	void UActionProgressWidget::OnActionProgressFinishedEvent__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.ActionProgressWidget.OnActionProgressFinishedEvent__DelegateSignature");
		
		UActionProgressWidget_OnActionProgressFinishedEvent__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.ActionProgressWidget.OnActionProgressCancelledEvent__DelegateSignature
	 * 		Flags  -> ()
	 */
	void UActionProgressWidget::OnActionProgressCancelledEvent__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.ActionProgressWidget.OnActionProgressCancelledEvent__DelegateSignature");
		
		UActionProgressWidget_OnActionProgressCancelledEvent__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ActionProgressWidget.ExecuteAction
	 * 		Flags  -> ()
	 */
	void UActionProgressWidget::ExecuteAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ActionProgressWidget.ExecuteAction");
		
		UActionProgressWidget_ExecuteAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ActionProgressWidget.CancelAction
	 * 		Flags  -> ()
	 */
	void UActionProgressWidget::CancelAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ActionProgressWidget.CancelAction");
		
		UActionProgressWidget_CancelAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UActionProgressWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UActionProgressWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ActionProgressWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ActorStatics.GetActorComponentByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Name                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UActorComponent* UActorStatics::GetActorComponentByName(class AActor* Actor, const class FName& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ActorStatics.GetActorComponentByName");
		
		UActorStatics_GetActorComponentByName_Params params {};
		params.Actor = Actor;
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ActorStatics.GetActorBoundsCenter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               onlyCollidingComponents                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UActorStatics::GetActorBoundsCenter(class AActor* Actor, bool onlyCollidingComponents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ActorStatics.GetActorBoundsCenter");
		
		UActorStatics_GetActorBoundsCenter_Params params {};
		params.Actor = Actor;
		params.onlyCollidingComponents = onlyCollidingComponents;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UActorStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UActorStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ActorStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdjustableSeparator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdjustableSeparator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdjustableSeparator");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AdminCommand.Execute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              arguments                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UAdminCommand::Execute(TArray<class FString> arguments)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AdminCommand.Execute");
		
		UAdminCommand_Execute_Params params {};
		params.arguments = arguments;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AdminCommand.CanEverBeExecuted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           Controller                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      reasonIfNot                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAdminCommand::CanEverBeExecuted(class APlayerController* Controller, class FString* reasonIfNot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AdminCommand.CanEverBeExecuted");
		
		UAdminCommand_CanEverBeExecuted_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (reasonIfNot != nullptr)
			*reasonIfNot = params.reasonIfNot;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AdminCommand.CanBeExecuted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           Controller                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      reasonIfNot                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAdminCommand::CanBeExecuted(class APlayerController* Controller, class FString* reasonIfNot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AdminCommand.CanBeExecuted");
		
		UAdminCommand_CanBeExecuted_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (reasonIfNot != nullptr)
			*reasonIfNot = params.reasonIfNot;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_AddOrRemoveWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_AddOrRemoveWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_AddOrRemoveWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_AddPrisonerBodyEffect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_AddPrisonerBodyEffect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_AddPrisonerBodyEffect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_AdminLight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_AdminLight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_AdminLight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_Announce.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_Announce::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_Announce");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_BanPlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_BanPlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_BanPlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_CancelVote.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_CancelVote::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_CancelVote");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_CharacterSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_CharacterSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_CharacterSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ClearFakeName.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ClearFakeName::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ClearFakeName");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_CompleteMission.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_CompleteMission::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_CompleteMission");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_CrashMajestically.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_CrashMajestically::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_CrashMajestically");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_DebugWeapon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_DebugWeapon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_DebugWeapon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_DemolitionSkillDebug.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_DemolitionSkillDebug::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_DemolitionSkillDebug");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_DestroyAllVehicles.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_DestroyAllVehicles::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_DestroyAllVehicles");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_DestroyVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_DestroyVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_DestroyVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_DistanceDebug.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_DistanceDebug::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_DistanceDebug");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_DoorDebug.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_DoorDebug::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_DoorDebug");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_DumpAllSquadsInfoList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_DumpAllSquadsInfoList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_DumpAllSquadsInfoList");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_DumpWetnessDebug.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_DumpWetnessDebug::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_DumpWetnessDebug");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_EnableOrDisableServer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_EnableOrDisableServer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_EnableOrDisableServer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_EndTournamentMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_EndTournamentMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_EndTournamentMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_EquipParachute.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_EquipParachute::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_EquipParachute");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ExecuteConsoleCommand.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ExecuteConsoleCommand::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ExecuteConsoleCommand");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ExecutePrisonerBodyConditionInteraction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ExecutePrisonerBodyConditionInteraction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ExecutePrisonerBodyConditionInteraction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_FindSquadMember.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_FindSquadMember::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_FindSquadMember");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_GetUserID.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_GetUserID::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_GetUserID");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_GetUserIDByRank.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_GetUserIDByRank::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_GetUserIDByRank");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_KickPlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_KickPlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_KickPlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_LeaveCorpse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_LeaveCorpse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_LeaveCorpse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListMutedPlayers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListMutedPlayers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListMutedPlayers");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListPlayers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListPlayers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListPlayers");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListPrimaryAssets.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListPrimaryAssets::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListPrimaryAssets");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListPrisonerBodyConditionInteractions.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListPrisonerBodyConditionInteractions::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListPrisonerBodyConditionInteractions");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListPrisonerBodyEffects.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListPrisonerBodyEffects::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListPrisonerBodyEffects");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListPrisonerForeignSubstances.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListPrisonerForeignSubstances::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListPrisonerForeignSubstances");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListSilencedPlayers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListSilencedPlayers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListSilencedPlayers");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListSpawnedAnimals.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListSpawnedAnimals::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListSpawnedAnimals");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListSpawnedVehicles.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListSpawnedVehicles::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListSpawnedVehicles");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListSquadMembers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListSquadMembers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListSquadMembers");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListSquads.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListSquads::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListSquads");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ListWeatherControllerOverrides.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ListWeatherControllerOverrides::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ListWeatherControllerOverrides");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_Location.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_Location::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_Location");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_LogCharacterSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_LogCharacterSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_LogCharacterSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_Loot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_Loot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_Loot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_MutePlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_MutePlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_MutePlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_PlacementDebug.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_PlacementDebug::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_PlacementDebug");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_RandomizePriceDeltas.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_RandomizePriceDeltas::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_RandomizePriceDeltas");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ReloadCustomMapConfig.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ReloadCustomMapConfig::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ReloadCustomMapConfig");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ReloadVoteConfig.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ReloadVoteConfig::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ReloadVoteConfig");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_RemovePrisonerBodyEffect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_RemovePrisonerBodyEffect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_RemovePrisonerBodyEffect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_RenameVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_RenameVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_RenameVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ResetAchievements.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ResetAchievements::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ResetAchievements");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ResetEconomy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ResetEconomy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ResetEconomy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ResetMissionEnabled.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ResetMissionEnabled::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ResetMissionEnabled");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ResetSquadInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ResetSquadInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ResetSquadInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ScheduleWorldEvent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ScheduleWorldEvent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ScheduleWorldEvent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SendNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SendNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SendNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetAirplaneMaxVelocity.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetAirplaneMaxVelocity::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetAirplaneMaxVelocity");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetAllInventoryAccess.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetAllInventoryAccess::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetAllInventoryAccess");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetCraftingSearch.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetCraftingSearch::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetCraftingSearch");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetDecayTimeDilation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetDecayTimeDilation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetDecayTimeDilation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetDeluxeVersion.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetDeluxeVersion::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetDeluxeVersion");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetFacialHairLength.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetFacialHairLength::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetFacialHairLength");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetFakeName.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetFakeName::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetFakeName");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetFamePoints.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetFamePoints::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetFamePoints");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetFamePointsToAll.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetFamePointsToAll::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetFamePointsToAll");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetFamePointsToAllOnline.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetFamePointsToAllOnline::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetFamePointsToAllOnline");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetGodMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetGodMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetGodMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetHairLength.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetHairLength::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetHairLength");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetHealthToItemInHands.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetHealthToItemInHands::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetHealthToItemInHands");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetInfiniteAmmo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetInfiniteAmmo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetInfiniteAmmo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetItemDebugMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetItemDebugMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetItemDebugMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetMalfunctionProbability.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetMalfunctionProbability::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetMalfunctionProbability");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetMoneyBalance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetMoneyBalance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetMoneyBalance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetMoneyBalanceToAll.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetMoneyBalanceToAll::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetMoneyBalanceToAll");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetMoneyBalanceToAllOnline.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetMoneyBalanceToAllOnline::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetMoneyBalanceToAllOnline");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetMountedVehicleProperty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetMountedVehicleProperty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetMountedVehicleProperty");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetPrisonerAttributes.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetPrisonerAttributes::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetPrisonerAttributes");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetPrisonerImmortality.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetPrisonerImmortality::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetPrisonerImmortality");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetPrisonerInfiniteOxygen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetPrisonerInfiniteOxygen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetPrisonerInfiniteOxygen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetPrisonerInfiniteStamina.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetPrisonerInfiniteStamina::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetPrisonerInfiniteStamina");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetPrisonerMetabolismSimulationSpeed.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetPrisonerMetabolismSimulationSpeed::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetPrisonerMetabolismSimulationSpeed");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetPrisonerStamina.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetPrisonerStamina::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetPrisonerStamina");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetReplishableResourceAmount.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetReplishableResourceAmount::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetReplishableResourceAmount");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetSkillLevel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetSkillLevel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetSkillLevel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetSuperJump.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetSuperJump::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetSuperJump");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetTime.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetTime::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetTime");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetTimeSpeed.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetTimeSpeed::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetTimeSpeed");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetWeather.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetWeather::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetWeather");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetWeatherControllerOverrideActive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetWeatherControllerOverrideActive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetWeatherControllerOverrideActive");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetWeatherControllerOverrideValue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetWeatherControllerOverrideValue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetWeatherControllerOverrideValue");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShouldChainTeleportToVehicles.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShouldChainTeleportToVehicles::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShouldChainTeleportToVehicles");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShouldShowOtherPlayerInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShouldShowOtherPlayerInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShouldShowOtherPlayerInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShouldShowOtherPlayerLocations.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShouldShowOtherPlayerLocations::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShouldShowOtherPlayerLocations");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShowBaseBuildingDebug.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShowBaseBuildingDebug::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShowBaseBuildingDebug");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShowFlagInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShowFlagInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShowFlagInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShowFlagLocations.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShowFlagLocations::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShowFlagLocations");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShowNameplates.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShowNameplates::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShowNameplates");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShowVehicleInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShowVehicleInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShowVehicleInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShowVehicleLocations.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShowVehicleLocations::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShowVehicleLocations");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_ShowWeaponInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_ShowWeaponInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_ShowWeaponInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SilencePlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SilencePlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SilencePlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_Sleep.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_Sleep::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_Sleep");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SpawnPrimaryActorAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SpawnPrimaryActorAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SpawnPrimaryActorAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SpawnItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SpawnItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SpawnItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SpawnItemEntity.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SpawnItemEntity::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SpawnItemEntity");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SpawnRandomPrimaryActorAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SpawnRandomPrimaryActorAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SpawnRandomPrimaryActorAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SpawnReflectionSphere.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SpawnReflectionSphere::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SpawnReflectionSphere");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SpawnVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SpawnVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SpawnVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_StartTournamentMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_StartTournamentMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_StartTournamentMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_Teleport.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_Teleport::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_Teleport");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_TeleportTo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_TeleportTo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_TeleportTo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_TeleportTo3pm.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_TeleportTo3pm::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_TeleportTo3pm");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_TeleportToMe.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_TeleportToMe::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_TeleportToMe");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_TeleportToVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_TeleportToVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_TeleportToVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetTattooIndex.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetTattooIndex::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetTattooIndex");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_SetPrivatePartsSize.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_SetPrivatePartsSize::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_SetPrivatePartsSize");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_TrackShotsFired.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_TrackShotsFired::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_TrackShotsFired");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_TrapsDebug.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_TrapsDebug::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_TrapsDebug");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_UnbanPlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_UnbanPlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_UnbanPlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_UnmutePlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_UnmutePlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_UnmutePlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_UnsilencePlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_UnsilencePlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_UnsilencePlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_VisualizeBulletTrajectories.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_VisualizeBulletTrajectories::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_VisualizeBulletTrajectories");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_VisualizePlayerAiming.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_VisualizePlayerAiming::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_VisualizePlayerAiming");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_VisualizeZombieLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_VisualizeZombieLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_VisualizeZombieLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommand_Vote.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommand_Vote::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommand_Vote");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AdminCommandArgumentCompletion.GetCompletionValues
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              Result                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UAdminCommandArgumentCompletion::GetCompletionValues(TArray<class FString>* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AdminCommandArgumentCompletion.GetCompletionValues");
		
		UAdminCommandArgumentCompletion_GetCompletionValues_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Result != nullptr)
			*Result = params.Result;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandArgumentCompletion.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandArgumentCompletion::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandArgumentCompletion_Constant.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandArgumentCompletion_Constant::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Constant");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandArgumentCompletion_Enum.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandArgumentCompletion_Enum::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Enum");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandArgumentCompletion_Player.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandArgumentCompletion_Player::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Player");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandArgumentCompletion_PrimaryAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandArgumentCompletion_PrimaryAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_PrimaryAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandArgumentCompletion_Skill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandArgumentCompletion_Skill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Skill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandArgumentCompletion_Squad.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandArgumentCompletion_Squad::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Squad");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandArgumentCompletion_Widget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandArgumentCompletion_Widget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandArgumentCompletion_Widget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandCompletionManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandCompletionManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandCompletionManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandExecutor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandExecutor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandExecutor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandRegistry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandRegistry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandRegistry");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminCommandsStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminCommandsStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminCommandsStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAdminLight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAdminLight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AdminLight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AIDetectionTimerHandler.OnDestroyedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAIDetectionTimerHandler::OnDestroyedEvent(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AIDetectionTimerHandler.OnDestroyedEvent");
		
		AAIDetectionTimerHandler_OnDestroyedEvent_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAIDetectionTimerHandler.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAIDetectionTimerHandler::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AIDetectionTimerHandler");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.WarnAboutMounteeEvictionIfInWater
	 * 		Flags  -> ()
	 */
	void AAirplane::WarnAboutMounteeEvictionIfInWater()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.WarnAboutMounteeEvictionIfInWater");
		
		AAirplane_WarnAboutMounteeEvictionIfInWater_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_UnmountAllMountees
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUnmountFlags                                      Flags                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAirplane::Server_UnmountAllMountees(EUnmountFlags Flags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_UnmountAllMountees");
		
		AAirplane_Server_UnmountAllMountees_Params params {};
		params.Flags = Flags;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_StopEngineViaStall
	 * 		Flags  -> ()
	 */
	void AAirplane::Server_StopEngineViaStall()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_StopEngineViaStall");
		
		AAirplane_Server_StopEngineViaStall_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_StopEngineViaIgnition
	 * 		Flags  -> ()
	 */
	void AAirplane::Server_StopEngineViaIgnition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_StopEngineViaIgnition");
		
		AAirplane_Server_StopEngineViaIgnition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_StopEngineViaBeingBroken
	 * 		Flags  -> ()
	 */
	void AAirplane::Server_StopEngineViaBeingBroken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_StopEngineViaBeingBroken");
		
		AAirplane_Server_StopEngineViaBeingBroken_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_StopEngineStalling
	 * 		Flags  -> ()
	 */
	void AAirplane::Server_StopEngineStalling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_StopEngineStalling");
		
		AAirplane_Server_StopEngineStalling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_StartEngineViaIgnition
	 * 		Flags  -> ()
	 */
	void AAirplane::Server_StartEngineViaIgnition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_StartEngineViaIgnition");
		
		AAirplane_Server_StartEngineViaIgnition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_StartEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVehicleEngineStallingParameters            parameters                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AAirplane::Server_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_StartEngineStalling");
		
		AAirplane_Server_StartEngineStalling_Params params {};
		params.parameters = parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_SetLightsActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAirplane::Server_SetLightsActive(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_SetLightsActive");
		
		AAirplane_Server_SetLightsActive_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_RepairEngineBlock
	 * 		Flags  -> ()
	 */
	void AAirplane::Server_RepairEngineBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_RepairEngineBlock");
		
		AAirplane_Server_RepairEngineBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_RepairAirplaneWing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EAerodynamicSurfaceType                            Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAirplane::Server_RepairAirplaneWing(EAerodynamicSurfaceType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_RepairAirplaneWing");
		
		AAirplane_Server_RepairAirplaneWing_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.Server_ApplyImpactDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AAirplane::Server_ApplyImpactDamage(float Damage, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.Server_ApplyImpactDamage");
		
		AAirplane_Server_ApplyImpactDamage_Params params {};
		params.Damage = Damage;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.ReceiveBeginHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         MyComp                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               selfMoved                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitNormal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AAirplane::ReceiveBeginHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool selfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.ReceiveBeginHit");
		
		AAirplane_ReceiveBeginHit_Params params {};
		params.MyComp = MyComp;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.selfMoved = selfMoved;
		params.HitLocation = HitLocation;
		params.HitNormal = HitNormal;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.OnRep_WeaponMountDataArray
	 * 		Flags  -> ()
	 */
	void AAirplane::OnRep_WeaponMountDataArray()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.OnRep_WeaponMountDataArray");
		
		AAirplane_OnRep_WeaponMountDataArray_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.OnRep_LightsActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAirplane::OnRep_LightsActive(bool OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.OnRep_LightsActive");
		
		AAirplane_OnRep_LightsActive_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.OnRep_ItemContainer
	 * 		Flags  -> ()
	 */
	void AAirplane::OnRep_ItemContainer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.OnRep_ItemContainer");
		
		AAirplane_OnRep_ItemContainer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.OnRep_HealthFuelBatteryAmount
	 * 		Flags  -> ()
	 */
	void AAirplane::OnRep_HealthFuelBatteryAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.OnRep_HealthFuelBatteryAmount");
		
		AAirplane_OnRep_HealthFuelBatteryAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.OnRep_EngineState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EVehicleEngineState                                OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAirplane::OnRep_EngineState(EVehicleEngineState OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.OnRep_EngineState");
		
		AAirplane_OnRep_EngineState_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.OnRep_AerodynamicSurfaceHealths
	 * 		Flags  -> ()
	 */
	void AAirplane::OnRep_AerodynamicSurfaceHealths()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.OnRep_AerodynamicSurfaceHealths");
		
		AAirplane_OnRep_AerodynamicSurfaceHealths_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.OnPropellerHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         HitComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComponent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AAirplane::OnPropellerHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.OnPropellerHit");
		
		AAirplane_OnPropellerHit_Params params {};
		params.HitComponent = HitComponent;
		params.OtherActor = OtherActor;
		params.OtherComponent = OtherComponent;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.OnActorDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAirplane::OnActorDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.OnActorDestroyed");
		
		AAirplane_OnActorDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.NetMulticast_StopEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               skipLocallyControlled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAirplane::NetMulticast_StopEngineStalling(bool skipLocallyControlled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.NetMulticast_StopEngineStalling");
		
		AAirplane_NetMulticast_StopEngineStalling_Params params {};
		params.skipLocallyControlled = skipLocallyControlled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Airplane.NetMulticast_StartEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVehicleEngineStallingParameters            parameters                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               skipLocallyControlled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAirplane::NetMulticast_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters, bool skipLocallyControlled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Airplane.NetMulticast_StartEngineStalling");
		
		AAirplane_NetMulticast_StartEngineStalling_Params params {};
		params.parameters = parameters;
		params.skipLocallyControlled = skipLocallyControlled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAirplane.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAirplane::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Airplane");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAirplaneAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAirplaneAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AirplaneAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAirplaneMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAirplaneMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AirplaneMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAirplaneDriverMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAirplaneDriverMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AirplaneDriverMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAirplanePassengerMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAirplanePassengerMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AirplanePassengerMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAIStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAIStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AIStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAkComponentClientOnly.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAkComponentClientOnly::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AkComponentClientOnly");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAmbientSounds.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAmbientSounds::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AmbientSounds");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.Use
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Usage                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              usageWeight                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Eat                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              damageMultiplier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AItem::Use(class APrisoner* Prisoner, int32_t Usage, float usageWeight, bool Eat, float damageMultiplier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.Use");
		
		AItem_Use_Params params {};
		params.Prisoner = Prisoner;
		params.Usage = Usage;
		params.usageWeight = usageWeight;
		params.Eat = Eat;
		params.damageMultiplier = damageMultiplier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.UpdateVisuals
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               shouldHandleAging                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::UpdateVisuals(bool shouldHandleAging)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.UpdateVisuals");
		
		AItem_UpdateVisuals_Params params {};
		params.shouldHandleAging = shouldHandleAging;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.StopBlinking
	 * 		Flags  -> ()
	 */
	void AItem::StopBlinking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.StopBlinking");
		
		AItem_StopBlinking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Item.StaticMeshChangedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::StaticMeshChangedDelegate__DelegateSignature(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Item.StaticMeshChangedDelegate__DelegateSignature");
		
		AItem_StaticMeshChangedDelegate__DelegateSignature_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Item.StateChangedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::StateChangedDelegate__DelegateSignature(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Item.StateChangedDelegate__DelegateSignature");
		
		AItem_StateChangedDelegate__DelegateSignature_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Item.SkeletalMeshChangedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::SkeletalMeshChangedDelegate__DelegateSignature(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Item.SkeletalMeshChangedDelegate__DelegateSignature");
		
		AItem_SkeletalMeshChangedDelegate__DelegateSignature_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.SetWeight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::SetWeight(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.SetWeight");
		
		AItem_SetWeight_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.SetOutsideInventoryIcon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTexture2D*                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::SetOutsideInventoryIcon(class UTexture2D* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.SetOutsideInventoryIcon");
		
		AItem_SetOutsideInventoryIcon_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.SetMaxHealth
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              MaxHealth                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::SetMaxHealth(float MaxHealth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.SetMaxHealth");
		
		AItem_SetMaxHealth_Params params {};
		params.MaxHealth = MaxHealth;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.SetInventoryIconInHands
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTexture2D*                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::SetInventoryIconInHands(class UTexture2D* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.SetInventoryIconInHands");
		
		AItem_SetInventoryIconInHands_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.SetInventoryIcon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTexture2D*                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::SetInventoryIcon(class UTexture2D* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.SetInventoryIcon");
		
		AItem_SetInventoryIcon_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.SetHealthAndUsage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              health                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Usage                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::SetHealthAndUsage(float health, int32_t Usage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.SetHealthAndUsage");
		
		AItem_SetHealthAndUsage_Params params {};
		params.health = health;
		params.Usage = Usage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.SetHealth
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              health                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::SetHealth(float health)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.SetHealth");
		
		AItem_SetHealth_Params params {};
		params.health = health;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.SetCaption
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Value                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AItem::SetCaption(const class FText& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.SetCaption");
		
		AItem_SetCaption_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.Server_Throw
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     ZeroBasedStartPosition                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    StartRotation                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     StartVelocity                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::Server_Throw(const struct FVector& ZeroBasedStartPosition, const struct FRotator& StartRotation, const struct FVector& StartVelocity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.Server_Throw");
		
		AItem_Server_Throw_Params params {};
		params.ZeroBasedStartPosition = ZeroBasedStartPosition;
		params.StartRotation = StartRotation;
		params.StartVelocity = StartVelocity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.Repair
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              healthToRepair                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::Repair(float healthToRepair)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.Repair");
		
		AItem_Repair_Params params {};
		params.healthToRepair = healthToRepair;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.RemoveStacks
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            stacksToSplit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::RemoveStacks(int32_t stacksToSplit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.RemoveStacks");
		
		AItem_RemoveStacks_Params params {};
		params.stacksToSplit = stacksToSplit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Item.PickedUpStateDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               pickedUp                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::PickedUpStateDelegate__DelegateSignature(class AItem* Item, bool pickedUp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Item.PickedUpStateDelegate__DelegateSignature");
		
		AItem_PickedUpStateDelegate__DelegateSignature_Params params {};
		params.Item = Item;
		params.pickedUp = pickedUp;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRightClicked
	 * 		Flags  -> ()
	 */
	void AItem::OnRightClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRightClicked");
		
		AItem_OnRightClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRep_WeightUsed
	 * 		Flags  -> ()
	 */
	void AItem::OnRep_WeightUsed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRep_WeightUsed");
		
		AItem_OnRep_WeightUsed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRep_Visibility
	 * 		Flags  -> ()
	 */
	void AItem::OnRep_Visibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRep_Visibility");
		
		AItem_OnRep_Visibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRep_Stacks
	 * 		Flags  -> ()
	 */
	void AItem::OnRep_Stacks()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRep_Stacks");
		
		AItem_OnRep_Stacks_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRep_StackData
	 * 		Flags  -> ()
	 */
	void AItem::OnRep_StackData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRep_StackData");
		
		AItem_OnRep_StackData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRep_ReplicatedState
	 * 		Flags  -> ()
	 */
	void AItem::OnRep_ReplicatedState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRep_ReplicatedState");
		
		AItem_OnRep_ReplicatedState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRep_QuickAccessIndex
	 * 		Flags  -> ()
	 */
	void AItem::OnRep_QuickAccessIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRep_QuickAccessIndex");
		
		AItem_OnRep_QuickAccessIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRep_ItemUniqueId
	 * 		Flags  -> ()
	 */
	void AItem::OnRep_ItemUniqueId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRep_ItemUniqueId");
		
		AItem_OnRep_ItemUniqueId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRep_Health
	 * 		Flags  -> ()
	 */
	void AItem::OnRep_Health()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRep_Health");
		
		AItem_OnRep_Health_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnRep_FlagsReplicated
	 * 		Flags  -> ()
	 */
	void AItem::OnRep_FlagsReplicated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnRep_FlagsReplicated");
		
		AItem_OnRep_FlagsReplicated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnProjectileStop
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  ImpactResult                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AItem::OnProjectileStop(const struct FHitResult& ImpactResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnProjectileStop");
		
		AItem_OnProjectileStop_Params params {};
		params.ImpactResult = ImpactResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnDetachedFromItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::OnDetachedFromItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnDetachedFromItem");
		
		AItem_OnDetachedFromItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnDestroyedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Self                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::OnDestroyedEvent(class AActor* Self)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnDestroyedEvent");
		
		AItem_OnDestroyedEvent_Params params {};
		params.Self = Self;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnContainedItemDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      containedItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::OnContainedItemDestroyed(class AActor* containedItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnContainedItemDestroyed");
		
		AItem_OnContainedItemDestroyed_Params params {};
		params.containedItem = containedItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.OnAttachedToItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::OnAttachedToItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.OnAttachedToItem");
		
		AItem_OnAttachedToItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.NetMulticast_SpawnDestroyedEffects
	 * 		Flags  -> ()
	 */
	void AItem::NetMulticast_SpawnDestroyedEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.NetMulticast_SpawnDestroyedEffects");
		
		AItem_NetMulticast_SpawnDestroyedEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.NetMulticast_SetActorDropLocationAndRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AItem::NetMulticast_SetActorDropLocationAndRotation(const struct FVector& Location, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.NetMulticast_SetActorDropLocationAndRotation");
		
		AItem_NetMulticast_SetActorDropLocationAndRotation_Params params {};
		params.Location = Location;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.NetMulticast_EnsureSpawned
	 * 		Flags  -> ()
	 */
	void AItem::NetMulticast_EnsureSpawned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.NetMulticast_EnsureSpawned");
		
		AItem_NetMulticast_EnsureSpawned_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.Multicast_Throw
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     ZeroBasedStartPosition                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    StartRotation                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     StartVelocity                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::Multicast_Throw(const struct FVector& ZeroBasedStartPosition, const struct FRotator& StartRotation, const struct FVector& StartVelocity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.Multicast_Throw");
		
		AItem_Multicast_Throw_Params params {};
		params.ZeroBasedStartPosition = ZeroBasedStartPosition;
		params.StartRotation = StartRotation;
		params.StartVelocity = StartVelocity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.HasPriorityForContainerItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       containerItem                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AItem::HasPriorityForContainerItem(class AItem* containerItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.HasPriorityForContainerItem");
		
		AItem_HasPriorityForContainerItem_Params params {};
		params.containerItem = containerItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetWidgetDisplayInfo
	 * 		Flags  -> ()
	 */
	struct FWidgetDisplayInfo AItem::GetWidgetDisplayInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetWidgetDisplayInfo");
		
		AItem_GetWidgetDisplayInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetWetness
	 * 		Flags  -> ()
	 */
	float AItem::GetWetness()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetWetness");
		
		AItem_GetWetness_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetWeightUsed
	 * 		Flags  -> ()
	 */
	float AItem::GetWeightUsed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetWeightUsed");
		
		AItem_GetWeightUsed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetWeightRemained
	 * 		Flags  -> ()
	 */
	float AItem::GetWeightRemained()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetWeightRemained");
		
		AItem_GetWeightRemained_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetWeightPerUse
	 * 		Flags  -> ()
	 */
	float AItem::GetWeightPerUse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetWeightPerUse");
		
		AItem_GetWeightPerUse_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetWeight
	 * 		Flags  -> ()
	 */
	float AItem::GetWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetWeight");
		
		AItem_GetWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetWaterWeight
	 * 		Flags  -> ()
	 */
	float AItem::GetWaterWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetWaterWeight");
		
		AItem_GetWaterWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetUsedSlots
	 * 		Flags  -> ()
	 */
	int32_t AItem::GetUsedSlots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetUsedSlots");
		
		AItem_GetUsedSlots_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetUsedMass
	 * 		Flags  -> ()
	 */
	float AItem::GetUsedMass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetUsedMass");
		
		AItem_GetUsedMass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetTypes
	 * 		Flags  -> ()
	 */
	TArray<class UClass*> AItem::GetTypes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetTypes");
		
		AItem_GetTypes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetTotalWeight
	 * 		Flags  -> ()
	 */
	float AItem::GetTotalWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetTotalWeight");
		
		AItem_GetTotalWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetTotalUses
	 * 		Flags  -> ()
	 */
	int32_t AItem::GetTotalUses()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetTotalUses");
		
		AItem_GetTotalUses_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetSupportingHandIKLocation
	 * 		Flags  -> ()
	 */
	struct FVector AItem::GetSupportingHandIKLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetSupportingHandIKLocation");
		
		AItem_GetSupportingHandIKLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetStacksCount
	 * 		Flags  -> ()
	 */
	int32_t AItem::GetStacksCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetStacksCount");
		
		AItem_GetStacksCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetSizeY
	 * 		Flags  -> ()
	 */
	int32_t AItem::GetSizeY()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetSizeY");
		
		AItem_GetSizeY_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetSizeX
	 * 		Flags  -> ()
	 */
	int32_t AItem::GetSizeX()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetSizeX");
		
		AItem_GetSizeX_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetRemainingUses
	 * 		Flags  -> ()
	 */
	int32_t AItem::GetRemainingUses()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetRemainingUses");
		
		AItem_GetRemainingUses_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetRemaining
	 * 		Flags  -> ()
	 */
	int32_t AItem::GetRemaining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetRemaining");
		
		AItem_GetRemaining_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetPrisonerAnimationSet
	 * 		Flags  -> ()
	 */
	EPrisonerAnimationSet AItem::GetPrisonerAnimationSet()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetPrisonerAnimationSet");
		
		AItem_GetPrisonerAnimationSet_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetOutsideInventoryIcon
	 * 		Flags  -> ()
	 */
	class UTexture2D* AItem::GetOutsideInventoryIcon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetOutsideInventoryIcon");
		
		AItem_GetOutsideInventoryIcon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetObstructionTestCapsules
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FItemObstructionTestCapsule>         capsules                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AItem::GetObstructionTestCapsules(TArray<struct FItemObstructionTestCapsule>* capsules)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetObstructionTestCapsules");
		
		AItem_GetObstructionTestCapsules_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (capsules != nullptr)
			*capsules = params.capsules;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetNormalizedMaxHealth
	 * 		Flags  -> ()
	 */
	float AItem::GetNormalizedMaxHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetNormalizedMaxHealth");
		
		AItem_GetNormalizedMaxHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetNormalizedHealth
	 * 		Flags  -> ()
	 */
	float AItem::GetNormalizedHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetNormalizedHealth");
		
		AItem_GetNormalizedHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetNoiseLoudnessWhenPickedUp
	 * 		Flags  -> ()
	 */
	float AItem::GetNoiseLoudnessWhenPickedUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetNoiseLoudnessWhenPickedUp");
		
		AItem_GetNoiseLoudnessWhenPickedUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetNoiseLoudnessWhenDropped
	 * 		Flags  -> ()
	 */
	float AItem::GetNoiseLoudnessWhenDropped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetNoiseLoudnessWhenDropped");
		
		AItem_GetNoiseLoudnessWhenDropped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetNoiseLoudnessOnGroundImpact
	 * 		Flags  -> ()
	 */
	float AItem::GetNoiseLoudnessOnGroundImpact()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetNoiseLoudnessOnGroundImpact");
		
		AItem_GetNoiseLoudnessOnGroundImpact_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetMeshComponentForAttachmentToItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UMeshComponent* AItem::GetMeshComponentForAttachmentToItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetMeshComponentForAttachmentToItem");
		
		AItem_GetMeshComponentForAttachmentToItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetMeshComponent
	 * 		Flags  -> ()
	 */
	class UMeshComponent* AItem::GetMeshComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetMeshComponent");
		
		AItem_GetMeshComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetMaxHealth
	 * 		Flags  -> ()
	 */
	float AItem::GetMaxHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetMaxHealth");
		
		AItem_GetMaxHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetInventoryIconInHands
	 * 		Flags  -> ()
	 */
	class UTexture2D* AItem::GetInventoryIconInHands()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetInventoryIconInHands");
		
		AItem_GetInventoryIconInHands_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetInventoryIcon
	 * 		Flags  -> ()
	 */
	class UTexture2D* AItem::GetInventoryIcon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetInventoryIcon");
		
		AItem_GetInventoryIcon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetInventoryGridSizeY
	 * 		Flags  -> ()
	 */
	int32_t AItem::GetInventoryGridSizeY()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetInventoryGridSizeY");
		
		AItem_GetInventoryGridSizeY_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetInventoryGridSizeX
	 * 		Flags  -> ()
	 */
	int32_t AItem::GetInventoryGridSizeX()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetInventoryGridSizeX");
		
		AItem_GetInventoryGridSizeX_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetIgnoreSupportingHandIK
	 * 		Flags  -> ()
	 */
	bool AItem::GetIgnoreSupportingHandIK()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetIgnoreSupportingHandIK");
		
		AItem_GetIgnoreSupportingHandIK_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetHealth
	 * 		Flags  -> ()
	 */
	float AItem::GetHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetHealth");
		
		AItem_GetHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetDescription
	 * 		Flags  -> ()
	 */
	class FText AItem::GetDescription()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetDescription");
		
		AItem_GetDescription_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetDefaultMaxHealth
	 * 		Flags  -> ()
	 */
	float AItem::GetDefaultMaxHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetDefaultMaxHealth");
		
		AItem_GetDefaultMaxHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetContainerDamagePercentage
	 * 		Flags  -> ()
	 */
	float AItem::GetContainerDamagePercentage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetContainerDamagePercentage");
		
		AItem_GetContainerDamagePercentage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetCaption
	 * 		Flags  -> ()
	 */
	class FText AItem::GetCaption()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetCaption");
		
		AItem_GetCaption_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.GetAllContainedItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               recursive                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AItem*> AItem::GetAllContainedItems(bool recursive)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.GetAllContainedItems");
		
		AItem_GetAllContainedItems_Params params {};
		params.recursive = recursive;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.FindCharacterAndItemAnimation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Context                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EPrisonerMontage                                   prisonerMontageType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FCharacterAndItemAnimation AItem::FindCharacterAndItemAnimation(class UObject* Context, EPrisonerMontage prisonerMontageType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.FindCharacterAndItemAnimation");
		
		AItem_FindCharacterAndItemAnimation_Params params {};
		params.Context = Context;
		params.prisonerMontageType = prisonerMontageType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.FindAnimationMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Context                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EPrisonerMontage                                   prisonerMontageType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAnimMontage* AItem::FindAnimationMontage(class UObject* Context, EPrisonerMontage prisonerMontageType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.FindAnimationMontage");
		
		AItem_FindAnimationMontage_Params params {};
		params.Context = Context;
		params.prisonerMontageType = prisonerMontageType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.DropAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     dropLocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    dropRotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool AItem::DropAt(const struct FVector& dropLocation, const struct FRotator& dropRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.DropAt");
		
		AItem_DropAt_Params params {};
		params.dropLocation = dropLocation;
		params.dropRotation = dropRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.DropAround
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AItem::DropAround(class AActor* Actor, float Radius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.DropAround");
		
		AItem_DropAround_Params params {};
		params.Actor = Actor;
		params.Radius = Radius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.Drop
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               wasThrowed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::Drop(bool wasThrowed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.Drop");
		
		AItem_Drop_Params params {};
		params.wasThrowed = wasThrowed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.DetachFromAll
	 * 		Flags  -> ()
	 */
	void AItem::DetachFromAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.DetachFromAll");
		
		AItem_DetachFromAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.DestroyInternal
	 * 		Flags  -> ()
	 */
	void AItem::DestroyInternal()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.DestroyInternal");
		
		AItem_DestroyInternal_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Item.DebugTextChangedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::DebugTextChangedDelegate__DelegateSignature(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Item.DebugTextChangedDelegate__DelegateSignature");
		
		AItem_DebugTextChangedDelegate__DelegateSignature_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.CanStackWith
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AItem::CanStackWith(class UObject* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.CanStackWith");
		
		AItem_CanStackWith_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.CanStack
	 * 		Flags  -> ()
	 */
	bool AItem::CanStack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.CanStack");
		
		AItem_CanStack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.CanBeMeleeWeapon
	 * 		Flags  -> ()
	 */
	bool AItem::CanBeMeleeWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.CanBeMeleeWeapon");
		
		AItem_CanBeMeleeWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.CanBeDroppedBy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AItem::CanBeDroppedBy(class AConZCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.CanBeDroppedBy");
		
		AItem_CanBeDroppedBy_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.CanBeCraftedByCharactrer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AItem::CanBeCraftedByCharactrer(class ACharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.CanBeCraftedByCharactrer");
		
		AItem_CanBeCraftedByCharactrer_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.CanAutoAddItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      column                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      row                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AItem::CanAutoAddItem(class AItem* Item, unsigned char* column, unsigned char* row)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.CanAutoAddItem");
		
		AItem_CanAutoAddItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (column != nullptr)
			*column = params.column;
		if (row != nullptr)
			*row = params.row;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.CanAddItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      column                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      row                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AItem::CanAddItem(class AItem* Item, unsigned char column, unsigned char row)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.CanAddItem");
		
		AItem_CanAddItem_Params params {};
		params.Item = Item;
		params.column = column;
		params.row = row;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.Blink
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AItem::Blink(float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.Blink");
		
		AItem_Blink_Params params {};
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.AutoAddItemToInventoryNode
	 * 		Flags  -> ()
	 */
	bool AItem::AutoAddItemToInventoryNode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.AutoAddItemToInventoryNode");
		
		AItem_AutoAddItemToInventoryNode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.AttachToCharacterHands
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AItem::AttachToCharacterHands(class AConZCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.AttachToCharacterHands");
		
		AItem_AttachToCharacterHands_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Item.AddStack
	 * 		Flags  -> ()
	 */
	void AItem::AddStack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Item.AddStack");
		
		AItem_AddStack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Item");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AmmunitionItem.SetAmmoCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ERPCType                                           broadcastRPCType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAmmunitionItem::SetAmmoCount(int32_t Count, ERPCType broadcastRPCType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AmmunitionItem.SetAmmoCount");
		
		AAmmunitionItem_SetAmmoCount_Params params {};
		params.Count = Count;
		params.broadcastRPCType = broadcastRPCType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AmmunitionItem.OnRep_AmmoCountOwnerHelper
	 * 		Flags  -> ()
	 */
	void AAmmunitionItem::OnRep_AmmoCountOwnerHelper()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AmmunitionItem.OnRep_AmmoCountOwnerHelper");
		
		AAmmunitionItem_OnRep_AmmoCountOwnerHelper_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AmmunitionItem.OnRep_AmmoCount
	 * 		Flags  -> ()
	 */
	void AAmmunitionItem::OnRep_AmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AmmunitionItem.OnRep_AmmoCount");
		
		AAmmunitionItem_OnRep_AmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AmmunitionItem.NetMulticast_SetAmmoCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAmmunitionItem::NetMulticast_SetAmmoCount(int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AmmunitionItem.NetMulticast_SetAmmoCount");
		
		AAmmunitionItem_NetMulticast_SetAmmoCount_Params params {};
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AmmunitionItem.GetSpreadMultiplierForWeapon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AAmmunitionItem::GetSpreadMultiplierForWeapon(class AWeapon* Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AmmunitionItem.GetSpreadMultiplierForWeapon");
		
		AAmmunitionItem_GetSpreadMultiplierForWeapon_Params params {};
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AmmunitionItem.GetAmmoCount
	 * 		Flags  -> ()
	 */
	int32_t AAmmunitionItem::GetAmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AmmunitionItem.GetAmmoCount");
		
		AAmmunitionItem_GetAmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AmmunitionItem.Client_SetAmmoCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAmmunitionItem::Client_SetAmmoCount(int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AmmunitionItem.Client_SetAmmoCount");
		
		AAmmunitionItem_Client_SetAmmoCount_Params params {};
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAmmunitionItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAmmunitionItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AmmunitionItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAmmunitionArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAmmunitionArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AmmunitionArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAmmunitionBoneListAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAmmunitionBoneListAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AmmunitionBoneListAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemStateBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemStateBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemStateBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAmmunitionBoxItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAmmunitionBoxItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AmmunitionBoxItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AmmunitionBoxItem.OnRep_AmmoCount
	 * 		Flags  -> ()
	 */
	void AAmmunitionBoxItem::OnRep_AmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AmmunitionBoxItem.OnRep_AmmoCount");
		
		AAmmunitionBoxItem_OnRep_AmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAmmunitionBoxItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAmmunitionBoxItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AmmunitionBoxItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AmmunitionExplosiveArrow.Server_Explode
	 * 		Flags  -> ()
	 */
	void AAmmunitionExplosiveArrow::Server_Explode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AmmunitionExplosiveArrow.Server_Explode");
		
		AAmmunitionExplosiveArrow_Server_Explode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAmmunitionExplosiveArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAmmunitionExplosiveArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AmmunitionExplosiveArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAmmunitionItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAmmunitionItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AmmunitionItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.SetGender
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EConZGender                                        Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::SetGender(EConZGender Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.SetGender");
		
		AConZCharacter_SetGender_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.SetEnvironmentDescription
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FEnvironmentDescription                     Value                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::SetEnvironmentDescription(const struct FEnvironmentDescription& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.SetEnvironmentDescription");
		
		AConZCharacter_SetEnvironmentDescription_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.Server_SetEnvironmentDescription
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FEnvironmentDescription                     Value                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::Server_SetEnvironmentDescription(const struct FEnvironmentDescription& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.Server_SetEnvironmentDescription");
		
		AConZCharacter_Server_SetEnvironmentDescription_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.Server_RequestCharacterAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterActionReplicationHelper           Value                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::Server_RequestCharacterAction(const struct FCharacterActionReplicationHelper& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.Server_RequestCharacterAction");
		
		AConZCharacter_Server_RequestCharacterAction_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.Server_HandleMeleeAttackCapsuleHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              attacker                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMeleeAttackCapsuleHitInfo                  HitInfo                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::Server_HandleMeleeAttackCapsuleHit(class AConZCharacter* attacker, const struct FMeleeAttackCapsuleHitInfo& HitInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.Server_HandleMeleeAttackCapsuleHit");
		
		AConZCharacter_Server_HandleMeleeAttackCapsuleHit_Params params {};
		params.attacker = attacker;
		params.HitInfo = HitInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.Server_CharacterActionAck
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterActionAck                         ack                                                        (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::Server_CharacterActionAck(const struct FCharacterActionAck& ack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.Server_CharacterActionAck");
		
		AConZCharacter_Server_CharacterActionAck_Params params {};
		params.ack = ack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.ReceiveBeginHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         MyComp                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               selfMoved                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitNormal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::ReceiveBeginHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool selfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.ReceiveBeginHit");
		
		AConZCharacter_ReceiveBeginHit_Params params {};
		params.MyComp = MyComp;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.selfMoved = selfMoved;
		params.HitLocation = HitLocation;
		params.HitNormal = HitNormal;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.OnRep_Gender
	 * 		Flags  -> ()
	 */
	void AConZCharacter::OnRep_Gender()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.OnRep_Gender");
		
		AConZCharacter_OnRep_Gender_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.NetMulticast_RequestCharacterAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterActionReplicationHelper           Value                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               ignoreAutonomousProxy                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::NetMulticast_RequestCharacterAction(const struct FCharacterActionReplicationHelper& Value, bool ignoreAutonomousProxy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.NetMulticast_RequestCharacterAction");
		
		AConZCharacter_NetMulticast_RequestCharacterAction_Params params {};
		params.Value = Value;
		params.ignoreAutonomousProxy = ignoreAutonomousProxy;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.NetMulticast_HandleMeleeAttackCapsuleHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              attacker                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMeleeAttackCapsuleHitInfo                  HitInfo                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::NetMulticast_HandleMeleeAttackCapsuleHit(class AConZCharacter* attacker, const struct FMeleeAttackCapsuleHitInfo& HitInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.NetMulticast_HandleMeleeAttackCapsuleHit");
		
		AConZCharacter_NetMulticast_HandleMeleeAttackCapsuleHit_Params params {};
		params.attacker = attacker;
		params.HitInfo = HitInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.NetMulticast_CharacterActionAck
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterActionAck                         ack                                                        (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               ignoreAutonomousProxy                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::NetMulticast_CharacterActionAck(const struct FCharacterActionAck& ack, bool ignoreAutonomousProxy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.NetMulticast_CharacterActionAck");
		
		AConZCharacter_NetMulticast_CharacterActionAck_Params params {};
		params.ack = ack;
		params.ignoreAutonomousProxy = ignoreAutonomousProxy;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.LeaveCorpse
	 * 		Flags  -> ()
	 */
	class ACorpse* AConZCharacter::LeaveCorpse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.LeaveCorpse");
		
		AConZCharacter_LeaveCorpse_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.IsHeadBone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZCharacter::IsHeadBone(const class FName& BoneName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.IsHeadBone");
		
		AConZCharacter_IsHeadBone_Params params {};
		params.BoneName = BoneName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.IsConscious
	 * 		Flags  -> ()
	 */
	bool AConZCharacter::IsConscious()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.IsConscious");
		
		AConZCharacter_IsConscious_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.IsAlive
	 * 		Flags  -> ()
	 */
	bool AConZCharacter::IsAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.IsAlive");
		
		AConZCharacter_IsAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.HasCharacterAction
	 * 		Flags  -> ()
	 */
	bool AConZCharacter::HasCharacterAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.HasCharacterAction");
		
		AConZCharacter_HasCharacterAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.GetSoundComponent
	 * 		Flags  -> ()
	 */
	class UCharacterSoundComponent* AConZCharacter::GetSoundComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.GetSoundComponent");
		
		AConZCharacter_GetSoundComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.GetHitReactBodyPartFromHitResult
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	EDetectHitCollisionType AConZCharacter::GetHitReactBodyPartFromHitResult(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.GetHitReactBodyPartFromHitResult");
		
		AConZCharacter_GetHitReactBodyPartFromHitResult_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.GetHitReactBodyPartFromBodyPart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EBodyPart                                          Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EDetectHitCollisionType AConZCharacter::GetHitReactBodyPartFromBodyPart(EBodyPart Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.GetHitReactBodyPartFromBodyPart");
		
		AConZCharacter_GetHitReactBodyPartFromBodyPart_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.GetGender
	 * 		Flags  -> ()
	 */
	EConZGender AConZCharacter::GetGender()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.GetGender");
		
		AConZCharacter_GetGender_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.GetEnvironmentDescription
	 * 		Flags  -> ()
	 */
	struct FEnvironmentDescription AConZCharacter::GetEnvironmentDescription()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.GetEnvironmentDescription");
		
		AConZCharacter_GetEnvironmentDescription_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.GetCharacterAction
	 * 		Flags  -> ()
	 */
	class UCharacterAction* AConZCharacter::GetCharacterAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.GetCharacterAction");
		
		AConZCharacter_GetCharacterAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.GetBodyPartFromBoneName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EBodyPart AConZCharacter::GetBodyPartFromBoneName(const class FName& BoneName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.GetBodyPartFromBoneName");
		
		AConZCharacter_GetBodyPartFromBoneName_Params params {};
		params.BoneName = BoneName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.Client_RequestCharacterAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterActionReplicationHelper           Value                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               cancelExecutingAction                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::Client_RequestCharacterAction(const struct FCharacterActionReplicationHelper& Value, bool cancelExecutingAction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.Client_RequestCharacterAction");
		
		AConZCharacter_Client_RequestCharacterAction_Params params {};
		params.Value = Value;
		params.cancelExecutingAction = cancelExecutingAction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.CharacterAction_EndHandle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCharacterAction*                            Action                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::CharacterAction_EndHandle(class UCharacterAction* Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.CharacterAction_EndHandle");
		
		AConZCharacter_CharacterAction_EndHandle_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZCharacter.ActorHitCallback
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AConZCharacter::ActorHitCallback(class AActor* Actor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZCharacter.ActorHitCallback");
		
		AConZCharacter_ActorHitCallback_Params params {};
		params.Actor = Actor;
		params.OtherActor = OtherActor;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZCharacter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZCharacter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZCharacter");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2.UnpackUint8
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      pack                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<bool>                                       B                                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AAnimal2::UnpackUint8(unsigned char pack, TArray<bool>* B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2.UnpackUint8");
		
		AAnimal2_UnpackUint8_Params params {};
		params.pack = pack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (B != nullptr)
			*B = params.B;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2.PackBoolsIntoUint8
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<bool>                                       B                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	unsigned char AAnimal2::PackBoolsIntoUint8(TArray<bool> B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2.PackBoolsIntoUint8");
		
		AAnimal2_PackBoolsIntoUint8_Params params {};
		params.B = B;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2.OnRep_WoundDamage
	 * 		Flags  -> ()
	 */
	void AAnimal2::OnRep_WoundDamage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2.OnRep_WoundDamage");
		
		AAnimal2_OnRep_WoundDamage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2.OnRep_Health
	 * 		Flags  -> ()
	 */
	void AAnimal2::OnRep_Health()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2.OnRep_Health");
		
		AAnimal2_OnRep_Health_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2.NetMulticast_PlaySoundOnClients
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EAnimal2Sound                                      SoundToPlay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAnimal2::NetMulticast_PlaySoundOnClients(EAnimal2Sound SoundToPlay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2.NetMulticast_PlaySoundOnClients");
		
		AAnimal2_NetMulticast_PlaySoundOnClients_Params params {};
		params.SoundToPlay = SoundToPlay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2.GenerateBloodMarkerRPC
	 * 		Flags  -> ()
	 */
	void AAnimal2::GenerateBloodMarkerRPC()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2.GenerateBloodMarkerRPC");
		
		AAnimal2_GenerateBloodMarkerRPC_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2.ClosestPrisoner
	 * 		Flags  -> ()
	 */
	class APrisoner* AAnimal2::ClosestPrisoner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2.ClosestPrisoner");
		
		AAnimal2_ClosestPrisoner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAnimal2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAnimal2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Animal2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZCharacterMovementComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZCharacterMovementComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZCharacterMovementComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimal2MovementComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimal2MovementComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Animal2MovementComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterSoundComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterSoundComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterSoundComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimal2SoundComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimal2SoundComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Animal2SoundComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2AnimInstance.AnimNotify_RFootDownRear
	 * 		Flags  -> ()
	 */
	void UAnimal2AnimInstance::AnimNotify_RFootDownRear()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2AnimInstance.AnimNotify_RFootDownRear");
		
		UAnimal2AnimInstance_AnimNotify_RFootDownRear_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2AnimInstance.AnimNotify_RFootDown
	 * 		Flags  -> ()
	 */
	void UAnimal2AnimInstance::AnimNotify_RFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2AnimInstance.AnimNotify_RFootDown");
		
		UAnimal2AnimInstance_AnimNotify_RFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2AnimInstance.AnimNotify_LFootDownRear
	 * 		Flags  -> ()
	 */
	void UAnimal2AnimInstance::AnimNotify_LFootDownRear()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2AnimInstance.AnimNotify_LFootDownRear");
		
		UAnimal2AnimInstance_AnimNotify_LFootDownRear_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2AnimInstance.AnimNotify_LFootDown
	 * 		Flags  -> ()
	 */
	void UAnimal2AnimInstance::AnimNotify_LFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2AnimInstance.AnimNotify_LFootDown");
		
		UAnimal2AnimInstance_AnimNotify_LFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2AnimInstance.AnimNotify_IntroEnd
	 * 		Flags  -> ()
	 */
	void UAnimal2AnimInstance::AnimNotify_IntroEnd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2AnimInstance.AnimNotify_IntroEnd");
		
		UAnimal2AnimInstance_AnimNotify_IntroEnd_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Animal2AnimInstance.AnimNotify_IdleEnd
	 * 		Flags  -> ()
	 */
	void UAnimal2AnimInstance::AnimNotify_IdleEnd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Animal2AnimInstance.AnimNotify_IdleEnd");
		
		UAnimal2AnimInstance_AnimNotify_IdleEnd_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimal2AnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimal2AnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Animal2AnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimalAIController.UpdatePerception
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AActor*>                              actorsPerceived                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimalAIController::UpdatePerception(TArray<class AActor*> actorsPerceived)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimalAIController.UpdatePerception");
		
		AComplexAnimalAIController_UpdatePerception_Params params {};
		params.actorsPerceived = actorsPerceived;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimalAIController.StartFullAlert
	 * 		Flags  -> ()
	 */
	void AComplexAnimalAIController::StartFullAlert()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimalAIController.StartFullAlert");
		
		AComplexAnimalAIController_StartFullAlert_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimalAIController.QuitObserve
	 * 		Flags  -> ()
	 */
	void AComplexAnimalAIController::QuitObserve()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimalAIController.QuitObserve");
		
		AComplexAnimalAIController_QuitObserve_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimalAIController.OnTakeDamageHandler
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      damageActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       eventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimalAIController::OnTakeDamageHandler(class AActor* damageActor, float Damage, const struct FVector& HitLocation, class APawn* eventInstigator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimalAIController.OnTakeDamageHandler");
		
		AComplexAnimalAIController_OnTakeDamageHandler_Params params {};
		params.damageActor = damageActor;
		params.Damage = Damage;
		params.HitLocation = HitLocation;
		params.eventInstigator = eventInstigator;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimalAIController.OnActionChangedHandler
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EAnimalAction                                      CurrentAction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EAnimalAction                                      PrevAction                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimalAIController::OnActionChangedHandler(EAnimalAction CurrentAction, EAnimalAction PrevAction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimalAIController.OnActionChangedHandler");
		
		AComplexAnimalAIController_OnActionChangedHandler_Params params {};
		params.CurrentAction = CurrentAction;
		params.PrevAction = PrevAction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimalAIController.GetMode
	 * 		Flags  -> ()
	 */
	EAnimalMode AComplexAnimalAIController::GetMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimalAIController.GetMode");
		
		AComplexAnimalAIController_GetMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimalAIController.ChangeMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EAnimalMode                                        NewMode                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimalAIController::ChangeMode(EAnimalMode NewMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimalAIController.ChangeMode");
		
		AComplexAnimalAIController_ChangeMode_Params params {};
		params.NewMode = NewMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AComplexAnimalAIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AComplexAnimalAIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ComplexAnimalAIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAnimalContinuousChargeAttackAIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAnimalContinuousChargeAttackAIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimalContinuousChargeAttackAIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimalHandlingItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimalHandlingItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimalHandlingItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Skill.SetSkillAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESkillAttribute                                    skillAttribute                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USkill::SetSkillAttribute(ESkillAttribute skillAttribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Skill.SetSkillAttribute");
		
		USkill_SetSkillAttribute_Params params {};
		params.skillAttribute = skillAttribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Skill.SetLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESkillLevel                                        Level                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USkill::SetLevel(ESkillLevel Level)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Skill.SetLevel");
		
		USkill_SetLevel_Params params {};
		params.Level = Level;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Skill.SetExperiencePoints
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Points                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USkill::SetExperiencePoints(float Points)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Skill.SetExperiencePoints");
		
		USkill_SetExperiencePoints_Params params {};
		params.Points = Points;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Skill.IsWeakenedByAttribute
	 * 		Flags  -> ()
	 */
	bool USkill::IsWeakenedByAttribute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Skill.IsWeakenedByAttribute");
		
		USkill_IsWeakenedByAttribute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Skill.GetSkillIcon
	 * 		Flags  -> ()
	 */
	class UTexture2D* USkill::GetSkillIcon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Skill.GetSkillIcon");
		
		USkill_GetSkillIcon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Skill.GetSkillAttribute
	 * 		Flags  -> ()
	 */
	ESkillAttribute USkill::GetSkillAttribute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Skill.GetSkillAttribute");
		
		USkill_GetSkillAttribute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Skill.GetLevel
	 * 		Flags  -> ()
	 */
	ESkillLevel USkill::GetLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Skill.GetLevel");
		
		USkill_GetLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Skill.GetExperiencePoints
	 * 		Flags  -> ()
	 */
	float USkill::GetExperiencePoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Skill.GetExperiencePoints");
		
		USkill_GetExperiencePoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Skill.GetCaption
	 * 		Flags  -> ()
	 */
	class FString USkill::GetCaption()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Skill.GetCaption");
		
		USkill_GetCaption_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Skill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIntelligenceSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIntelligenceSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.IntelligenceSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimalHandlingSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimalHandlingSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimalHandlingSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AnimalSpawner2.SphereComponent_OnComponentEndOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         activatedComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAnimalSpawner2::SphereComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AnimalSpawner2.SphereComponent_OnComponentEndOverlap");
		
		AAnimalSpawner2_SphereComponent_OnComponentEndOverlap_Params params {};
		params.activatedComp = activatedComp;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AnimalSpawner2.SphereComponent_OnComponentBeginOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AAnimalSpawner2::SphereComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AnimalSpawner2.SphereComponent_OnComponentBeginOverlap");
		
		AAnimalSpawner2_SphereComponent_OnComponentBeginOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AnimalSpawner2.OnPlayerDespawned
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      despawnedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAnimalSpawner2::OnPlayerDespawned(class AActor* despawnedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AnimalSpawner2.OnPlayerDespawned");
		
		AAnimalSpawner2_OnPlayerDespawned_Params params {};
		params.despawnedActor = despawnedActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AnimalSpawner2.IsSpawnerActive
	 * 		Flags  -> ()
	 */
	bool AAnimalSpawner2::IsSpawnerActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AnimalSpawner2.IsSpawnerActive");
		
		AAnimalSpawner2_IsSpawnerActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AnimalSpawner2.GetSpawnedCarcassesAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      CarcassClass                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AAnimalSpawner2::GetSpawnedCarcassesAmount(class UClass* CarcassClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AnimalSpawner2.GetSpawnedCarcassesAmount");
		
		AAnimalSpawner2_GetSpawnedCarcassesAmount_Params params {};
		params.CarcassClass = CarcassClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AnimalSpawner2.GetSpawnedAnimalsAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      AnimalClass                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AAnimalSpawner2::GetSpawnedAnimalsAmount(class UClass* AnimalClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AnimalSpawner2.GetSpawnedAnimalsAmount");
		
		AAnimalSpawner2_GetSpawnedAnimalsAmount_Params params {};
		params.AnimalClass = AnimalClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAnimalSpawner2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAnimalSpawner2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimalSpawner2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_BoatRow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_BoatRow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_BoatRow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_CharacterActionEnd.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_CharacterActionEnd::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_CharacterActionEnd");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_CharacterActionMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_CharacterActionMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_CharacterActionMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_CharacterActionNotify.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_CharacterActionNotify::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_CharacterActionNotify");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_ClimbingFinished.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_ClimbingFinished::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_ClimbingFinished");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AnimNotify_ConditionalPlayParticleEffectForItem.ShouldPlayParticleEffectForItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAnimNotify_ConditionalPlayParticleEffectForItem::ShouldPlayParticleEffectForItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AnimNotify_ConditionalPlayParticleEffectForItem.ShouldPlayParticleEffectForItem");
		
		UAnimNotify_ConditionalPlayParticleEffectForItem_ShouldPlayParticleEffectForItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_ConditionalPlayParticleEffectForItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_ConditionalPlayParticleEffectForItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_ConditionalPlayParticleEffectForItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_FishingActionNotify.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_FishingActionNotify::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_FishingActionNotify");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_MagazineUpdateAmmunitionMeshes.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_MagazineUpdateAmmunitionMeshes::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_MagazineUpdateAmmunitionMeshes");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_MakeNoise.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_MakeNoise::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_MakeNoise");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_PlaySoundBySurface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_PlaySoundBySurface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_PlaySoundBySurface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_PlaySoundOnOwner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_PlaySoundOnOwner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_PlaySoundOnOwner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_SpawnDefecationEffects.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_SpawnDefecationEffects::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_SpawnDefecationEffects");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_SpawnDiarrheaEffects.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_SpawnDiarrheaEffects::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_SpawnDiarrheaEffects");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_WaterPaddle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_WaterPaddle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_WaterPaddle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_WeaponActionNotify.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_WeaponActionNotify::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_WeaponActionNotify");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_WeaponChamberBullet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_WeaponChamberBullet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_WeaponChamberBullet");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_WeaponChamberBulletInternal.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_WeaponChamberBulletInternal::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_WeaponChamberBulletInternal");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_WeaponEjectCasing.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_WeaponEjectCasing::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_WeaponEjectCasing");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotify_WeaponUpdateAmmunitionMeshes.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotify_WeaponUpdateAmmunitionMeshes::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotify_WeaponUpdateAmmunitionMeshes");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_ChamberWeapon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_ChamberWeapon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_ChamberWeapon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_DrainStamina.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_DrainStamina::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_DrainStamina");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_Fade.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_Fade::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_Fade");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_IgnoreUsingHandCorrections.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_IgnoreUsingHandCorrections::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_IgnoreUsingHandCorrections");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_Melee.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_Melee::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_Melee");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_NoScopingAllowed.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_NoScopingAllowed::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_NoScopingAllowed");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_PaniniOverride.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_PaniniOverride::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_PaniniOverride");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_PhysicalAnimation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_PhysicalAnimation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_PhysicalAnimation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_PlaySoundOnOwnerRanged.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_PlaySoundOnOwnerRanged::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_PlaySoundOnOwnerRanged");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_ShowAmmunitionMeshes.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_ShowAmmunitionMeshes::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_ShowAmmunitionMeshes");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_WeaponHideMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_WeaponHideMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_WeaponHideMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_WeaponRevolverDrumRotationDirection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_WeaponRevolverDrumRotationDirection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_WeaponRevolverDrumRotationDirection");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_WeaponRevolverIgnoreDrumRotation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_WeaponRevolverIgnoreDrumRotation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_WeaponRevolverIgnoreDrumRotation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimNotifyState_WeaponShowAmmunitionMeshes.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_WeaponShowAmmunitionMeshes::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimNotifyState_WeaponShowAmmunitionMeshes");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAnimStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AnimStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AAquaticLifeSpawningVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAquaticLifeSpawningVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AquaticLifeSpawningVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UStrengthSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStrengthSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StrengthSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URangedWeaponsSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URangedWeaponsSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RangedWeaponsSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UArcherySkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UArcherySkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ArcherySkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UArrayStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UArrayStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ArrayStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAttachmentSocketMountType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAttachmentSocketMountType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AttachmentSocketMountType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAttachmentSocketMountTypePrisonerHand.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAttachmentSocketMountTypePrisonerHand::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AttachmentSocketMountTypePrisonerHand");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AttributeMapInterface.SetStringAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAttributeMapInterface::SetStringAttribute(const class FString& Name, const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AttributeMapInterface.SetStringAttribute");
		
		UAttributeMapInterface_SetStringAttribute_Params params {};
		params.Name = Name;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AttributeMapInterface.SetIntAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAttributeMapInterface::SetIntAttribute(const class FString& Name, int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AttributeMapInterface.SetIntAttribute");
		
		UAttributeMapInterface_SetIntAttribute_Params params {};
		params.Name = Name;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AttributeMapInterface.SetFloatAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAttributeMapInterface::SetFloatAttribute(const class FString& Name, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AttributeMapInterface.SetFloatAttribute");
		
		UAttributeMapInterface_SetFloatAttribute_Params params {};
		params.Name = Name;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AttributeMapInterface.SetBoolAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAttributeMapInterface::SetBoolAttribute(const class FString& Name, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AttributeMapInterface.SetBoolAttribute");
		
		UAttributeMapInterface_SetBoolAttribute_Params params {};
		params.Name = Name;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AttributeMapInterface.HasAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAttributeMapInterface::HasAttribute(const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AttributeMapInterface.HasAttribute");
		
		UAttributeMapInterface_HasAttribute_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AttributeMapInterface.GetStringAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UAttributeMapInterface::GetStringAttribute(const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AttributeMapInterface.GetStringAttribute");
		
		UAttributeMapInterface_GetStringAttribute_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AttributeMapInterface.GetIntAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UAttributeMapInterface::GetIntAttribute(const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AttributeMapInterface.GetIntAttribute");
		
		UAttributeMapInterface_GetIntAttribute_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AttributeMapInterface.GetFloatAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UAttributeMapInterface::GetFloatAttribute(const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AttributeMapInterface.GetFloatAttribute");
		
		UAttributeMapInterface_GetFloatAttribute_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AttributeMapInterface.GetBoolAttribute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAttributeMapInterface::GetBoolAttribute(const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AttributeMapInterface.GetBoolAttribute");
		
		UAttributeMapInterface_GetBoolAttribute_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAttributeMapInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAttributeMapInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AttributeMapInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAudioDeviceDisplay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAudioDeviceDisplay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AudioDeviceDisplay");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAudioSettingsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAudioSettingsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AudioSettingsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.StopAkActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAudioStatics::StopAkActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.StopAkActor");
		
		UAudioStatics_StopAkActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.SetAkRTPCValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RTPC                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            InterpolationTimeMs                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAudioStatics::SetAkRTPCValue(const class FName& RTPC, float Value, int32_t InterpolationTimeMs, class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.SetAkRTPCValue");
		
		UAudioStatics_SetAkRTPCValue_Params params {};
		params.RTPC = RTPC;
		params.Value = Value;
		params.InterpolationTimeMs = InterpolationTimeMs;
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.PostAndWaitForEndOfAkEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               akEvent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bStopWhenAttachedToDestroyed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FAkExternalSourceInfo>               ExternalSources                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      EventName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLatentActionInfo                           LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	int32_t UAudioStatics::PostAndWaitForEndOfAkEvent(class UAkAudioEvent* akEvent, class AActor* Actor, bool bStopWhenAttachedToDestroyed, TArray<struct FAkExternalSourceInfo> ExternalSources, const class FString& EventName, const struct FLatentActionInfo& LatentInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.PostAndWaitForEndOfAkEvent");
		
		UAudioStatics_PostAndWaitForEndOfAkEvent_Params params {};
		params.akEvent = akEvent;
		params.Actor = Actor;
		params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
		params.ExternalSources = ExternalSources;
		params.EventName = EventName;
		params.LatentInfo = LatentInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.PostAkEventAttached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               akEvent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttachPointName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bStopWhenAttachedToDestroyed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      EventName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UAudioStatics::PostAkEventAttached(class UAkAudioEvent* akEvent, class AActor* Actor, const class FName& AttachPointName, bool bStopWhenAttachedToDestroyed, const class FString& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.PostAkEventAttached");
		
		UAudioStatics_PostAkEventAttached_Params params {};
		params.akEvent = akEvent;
		params.Actor = Actor;
		params.AttachPointName = AttachPointName;
		params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.PostAkEventAtLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               akEvent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Orientation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      EventName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UAudioStatics::PostAkEventAtLocation(class UAkAudioEvent* akEvent, const struct FVector& Location, const struct FRotator& Orientation, const class FString& EventName, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.PostAkEventAtLocation");
		
		UAudioStatics_PostAkEventAtLocation_Params params {};
		params.akEvent = akEvent;
		params.Location = Location;
		params.Orientation = Orientation;
		params.EventName = EventName;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.PostAkAudioEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               akEvent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bStopWhenAttachedToDestroyed                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      EventName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UAudioStatics::PostAkAudioEvent(class UAkAudioEvent* akEvent, class AActor* Actor, bool bStopWhenAttachedToDestroyed, const class FString& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.PostAkAudioEvent");
		
		UAudioStatics_PostAkAudioEvent_Params params {};
		params.akEvent = akEvent;
		params.Actor = Actor;
		params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetMovementPaceSwitchValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerMovementPace                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UAudioStatics::GetMovementPaceSwitchValue(EPrisonerMovementPace Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetMovementPaceSwitchValue");
		
		UAudioStatics_GetMovementPaceSwitchValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetMovementPaceSwitchName
	 * 		Flags  -> ()
	 */
	class FName UAudioStatics::GetMovementPaceSwitchName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetMovementPaceSwitchName");
		
		UAudioStatics_GetMovementPaceSwitchName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetMotionIntensitySwitchValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMotionIntensity                                   Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UAudioStatics::GetMotionIntensitySwitchValue(EMotionIntensity Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetMotionIntensitySwitchValue");
		
		UAudioStatics_GetMotionIntensitySwitchValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetMotionIntensitySwitchName
	 * 		Flags  -> ()
	 */
	class FName UAudioStatics::GetMotionIntensitySwitchName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetMotionIntensitySwitchName");
		
		UAudioStatics_GetMotionIntensitySwitchName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetMaterialSwitchValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPhysicalSurface                                   Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UAudioStatics::GetMaterialSwitchValue(EPhysicalSurface Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetMaterialSwitchValue");
		
		UAudioStatics_GetMaterialSwitchValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetMaterialSwitchName
	 * 		Flags  -> ()
	 */
	class FName UAudioStatics::GetMaterialSwitchName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetMaterialSwitchName");
		
		UAudioStatics_GetMaterialSwitchName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetImpactSeveritySwitchName
	 * 		Flags  -> ()
	 */
	class FName UAudioStatics::GetImpactSeveritySwitchName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetImpactSeveritySwitchName");
		
		UAudioStatics_GetImpactSeveritySwitchName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetHitSeveritySwitchValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHitSeverity                                       Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UAudioStatics::GetHitSeveritySwitchValue(EHitSeverity Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetHitSeveritySwitchValue");
		
		UAudioStatics_GetHitSeveritySwitchValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetGenderSwitchValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EConZGender                                        Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UAudioStatics::GetGenderSwitchValue(EConZGender Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetGenderSwitchValue");
		
		UAudioStatics_GetGenderSwitchValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetGenderSwitchName
	 * 		Flags  -> ()
	 */
	class FName UAudioStatics::GetGenderSwitchName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetGenderSwitchName");
		
		UAudioStatics_GetGenderSwitchName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetEnvironmentSwitchValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EEnvironmentClass                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UAudioStatics::GetEnvironmentSwitchValue(EEnvironmentClass Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetEnvironmentSwitchValue");
		
		UAudioStatics_GetEnvironmentSwitchValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetEnvironmentSwitchName
	 * 		Flags  -> ()
	 */
	class FName UAudioStatics::GetEnvironmentSwitchName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetEnvironmentSwitchName");
		
		UAudioStatics_GetEnvironmentSwitchName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetCharacterPainSeveritySwitchValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECharacterPainSoundSeverity                        Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UAudioStatics::GetCharacterPainSeveritySwitchValue(ECharacterPainSoundSeverity Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetCharacterPainSeveritySwitchValue");
		
		UAudioStatics_GetCharacterPainSeveritySwitchValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AudioStatics.GetCharacterPainSeveritySwitchName
	 * 		Flags  -> ()
	 */
	class FName UAudioStatics::GetCharacterPainSeveritySwitchName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AudioStatics.GetCharacterPainSeveritySwitchName");
		
		UAudioStatics_GetCharacterPainSeveritySwitchName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAudioStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAudioStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AudioStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponAttachmentMagazineAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponAttachmentMagazineAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentMagazineAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAutoCrossbowMagazineAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAutoCrossbowMagazineAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AutoCrossbowMagazineAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDexteritySkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDexteritySkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DexteritySkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAviationSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAviationSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AviationSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.AwarenessSkill.EnterFocusMode
	 * 		Flags  -> ()
	 */
	void UAwarenessSkill::EnterFocusMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.AwarenessSkill.EnterFocusMode");
		
		UAwarenessSkill_EnterFocusMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAwarenessSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAwarenessSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AwarenessSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBadAdjustableSeparator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBadAdjustableSeparator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BadAdjustableSeparator");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBankATMMainPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBankATMMainPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BankATMMainPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMinigame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMinigame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Minigame");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABankATMMinigame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABankATMMinigame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BankATMMinigame");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBankATMUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBankATMUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BankATMUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASedentaryNPC.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASedentaryNPC::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SedentaryNPC");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABanker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABanker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Banker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseBuildingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseBuildingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseBuildingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseBuildingItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseBuildingItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseBuildingItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseBuildingStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseBuildingStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseBuildingStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingResult.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingResult::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingResult");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseCraftingRecipe.Process
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCraftingRecipeParams                       Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class UCraftingResult*                             Result                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UBaseCraftingRecipe::Process(const struct FCraftingRecipeParams& Params, class UCraftingResult* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseCraftingRecipe.Process");
		
		UBaseCraftingRecipe_Process_Params params {};
		params.Params = Params;
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseCraftingRecipe.Finalize
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCraftingResult*                             Result                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UObject* UBaseCraftingRecipe::Finalize(class UObject* WorldContextObject, class UCraftingResult* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseCraftingRecipe.Finalize");
		
		UBaseCraftingRecipe_Finalize_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseCraftingRecipe.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseCraftingRecipe::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseCraftingRecipe");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseInteractionComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseInteractionComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseInteractionComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.RefreshSize
	 * 		Flags  -> ()
	 */
	void UBaseItemContainerWidget::RefreshSize()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.RefreshSize");
		
		UBaseItemContainerWidget_RefreshSize_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.BaseItemContainerWidget.OnObjectAddedToContainerEvent__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBaseItemContainerWidget::OnObjectAddedToContainerEvent__DelegateSignature(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.BaseItemContainerWidget.OnObjectAddedToContainerEvent__DelegateSignature");
		
		UBaseItemContainerWidget_OnObjectAddedToContainerEvent__DelegateSignature_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.OnDropEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UInventorySlotUserWidget*                    inventorySlot                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UBaseItemWidget*                             Item                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBaseItemContainerWidget::OnDropEvent(class UInventorySlotUserWidget* inventorySlot, class UBaseItemWidget* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.OnDropEvent");
		
		UBaseItemContainerWidget_OnDropEvent_Params params {};
		params.inventorySlot = inventorySlot;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.OnDragStartEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBaseItemWidget*                             Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGeometry                                   Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UBaseItemContainerWidget::OnDragStartEvent(class UBaseItemWidget* Widget, const struct FGeometry& Geometry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.OnDragStartEvent");
		
		UBaseItemContainerWidget_OnDragStartEvent_Params params {};
		params.Widget = Widget;
		params.Geometry = Geometry;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.OnDragLeaveEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UInventorySlotUserWidget*                    inventorySlot                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UBaseItemWidget*                             Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBaseItemContainerWidget::OnDragLeaveEvent(class UInventorySlotUserWidget* inventorySlot, class UBaseItemWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.OnDragLeaveEvent");
		
		UBaseItemContainerWidget_OnDragLeaveEvent_Params params {};
		params.inventorySlot = inventorySlot;
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.OnDragEnterEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UInventorySlotUserWidget*                    inventorySlot                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UBaseItemWidget*                             Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBaseItemContainerWidget::OnDragEnterEvent(class UInventorySlotUserWidget* inventorySlot, class UBaseItemWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.OnDragEnterEvent");
		
		UBaseItemContainerWidget_OnDragEnterEvent_Params params {};
		params.inventorySlot = inventorySlot;
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.OnDragCancelledEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBaseItemWidget*                             Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBaseItemContainerWidget::OnDragCancelledEvent(class UBaseItemWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.OnDragCancelledEvent");
		
		UBaseItemContainerWidget_OnDragCancelledEvent_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.InitGrid
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FMargin                                     gridPadding                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UBaseItemContainerWidget::InitGrid(const struct FMargin& gridPadding)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.InitGrid");
		
		UBaseItemContainerWidget_InitGrid_Params params {};
		params.gridPadding = gridPadding;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.GetSlotsForPanel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGridSlot*                                   GridSlot                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Width                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Height                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UInventorySlotUserWidget*>            Slots                                                      (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UGridPanel*                                  panel                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            numColumns                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            numRows                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UBaseItemContainerWidget::GetSlotsForPanel(class UGridSlot* GridSlot, int32_t Width, int32_t Height, TArray<class UInventorySlotUserWidget*>* Slots, class UGridPanel* panel, int32_t numColumns, int32_t numRows)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.GetSlotsForPanel");
		
		UBaseItemContainerWidget_GetSlotsForPanel_Params params {};
		params.GridSlot = GridSlot;
		params.Width = Width;
		params.Height = Height;
		params.panel = panel;
		params.numColumns = numColumns;
		params.numRows = numRows;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Slots != nullptr)
			*Slots = params.Slots;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.GetSlots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGridSlot*                                   GridSlot                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Width                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Height                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UInventorySlotUserWidget*>            Slots                                                      (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UBaseItemContainerWidget::GetSlots(class UGridSlot* GridSlot, int32_t Width, int32_t Height, TArray<class UInventorySlotUserWidget*>* Slots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.GetSlots");
		
		UBaseItemContainerWidget_GetSlots_Params params {};
		params.GridSlot = GridSlot;
		params.Width = Width;
		params.Height = Height;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Slots != nullptr)
			*Slots = params.Slots;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemContainerWidget.GetItemWidgets
	 * 		Flags  -> ()
	 */
	TArray<class UItemUserWidget*> UBaseItemContainerWidget::GetItemWidgets()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemContainerWidget.GetItemWidgets");
		
		UBaseItemContainerWidget_GetItemWidgets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseItemContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseItemContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseItemContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemWidget.SetStacksCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBaseItemWidget::SetStacksCount(int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemWidget.SetStacksCount");
		
		UBaseItemWidget_SetStacksCount_Params params {};
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemWidget.GetStacksCount
	 * 		Flags  -> ()
	 */
	int32_t UBaseItemWidget::GetStacksCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemWidget.GetStacksCount");
		
		UBaseItemWidget_GetStacksCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemWidget.GetDragImage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGeometry                                   Geometry                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UInventorySlotUserWidget*                    widgetImage                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBaseItemWidget::GetDragImage(const struct FGeometry& Geometry, class UInventorySlotUserWidget* widgetImage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemWidget.GetDragImage");
		
		UBaseItemWidget_GetDragImage_Params params {};
		params.Geometry = Geometry;
		params.widgetImage = widgetImage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BaseItemWidget.DragCancelled
	 * 		Flags  -> ()
	 */
	void UBaseItemWidget::DragCancelled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BaseItemWidget.DragCancelled");
		
		UBaseItemWidget_DragCancelled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseItemWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseItemWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseItemWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemComponentStateBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemComponentStateBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemComponentStateBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBasicGameResourceContainerComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBasicGameResourceContainerComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BasicGameResourceContainerComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BasicGameResourceContainerComponent.OnRep_ResourceAmount
	 * 		Flags  -> ()
	 */
	void UBasicGameResourceContainerComponent::OnRep_ResourceAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BasicGameResourceContainerComponent.OnRep_ResourceAmount");
		
		UBasicGameResourceContainerComponent_OnRep_ResourceAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBasicGameResourceContainerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBasicGameResourceContainerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BasicGameResourceContainerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABasicLadder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABasicLadder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BasicLadder");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBasicNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBasicNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BasicNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNotificationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNotificationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NotificationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBasicNotificationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBasicNotificationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BasicNotificationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BasicTextWidget.SetCurrentText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UBasicTextWidget::SetCurrentText(const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BasicTextWidget.SetCurrentText");
		
		UBasicTextWidget_SetCurrentText_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBasicTextWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBasicTextWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BasicTextWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBioChemSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBioChemSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BioChemSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Bird2.OnRep_States
	 * 		Flags  -> ()
	 */
	void ABird2::OnRep_States()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Bird2.OnRep_States");
		
		ABird2_OnRep_States_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Bird2.GetIsTakingOff
	 * 		Flags  -> ()
	 */
	bool ABird2::GetIsTakingOff()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Bird2.GetIsTakingOff");
		
		ABird2_GetIsTakingOff_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Bird2.GetIsStaringPerched
	 * 		Flags  -> ()
	 */
	bool ABird2::GetIsStaringPerched()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Bird2.GetIsStaringPerched");
		
		ABird2_GetIsStaringPerched_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Bird2.GetIsPerched
	 * 		Flags  -> ()
	 */
	bool ABird2::GetIsPerched()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Bird2.GetIsPerched");
		
		ABird2_GetIsPerched_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Bird2.GetIsLanding
	 * 		Flags  -> ()
	 */
	bool ABird2::GetIsLanding()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Bird2.GetIsLanding");
		
		ABird2_GetIsLanding_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Bird2.GetIsFlying
	 * 		Flags  -> ()
	 */
	bool ABird2::GetIsFlying()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Bird2.GetIsFlying");
		
		ABird2_GetIsFlying_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Bird2.CapsuleComponent_OnComponentHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         HitComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ABird2::CapsuleComponent_OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Bird2.CapsuleComponent_OnComponentHit");
		
		ABird2_CapsuleComponent_OnComponentHit_Params params {};
		params.HitComponent = HitComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABird2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABird2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Bird2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Bird2AIController.UpdatePerception
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AActor*>                              actorsPercepted                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ABird2AIController::UpdatePerception(TArray<class AActor*> actorsPercepted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Bird2AIController.UpdatePerception");
		
		ABird2AIController_UpdatePerception_Params params {};
		params.actorsPercepted = actorsPercepted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABird2AIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABird2AIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Bird2AIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBird2AnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBird2AnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Bird2AnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABirdTargetPoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABirdTargetPoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BirdTargetPoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.SetObjectiveState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EObjectiveState                                    Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               silent                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AObjective::SetObjectiveState(EObjectiveState Value, bool silent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.SetObjectiveState");
		
		AObjective_SetObjectiveState_Params params {};
		params.Value = Value;
		params.silent = silent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.Server_ActiveObjectiveInitialized
	 * 		Flags  -> ()
	 */
	void AObjective::Server_ActiveObjectiveInitialized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.Server_ActiveObjectiveInitialized");
		
		AObjective_Server_ActiveObjectiveInitialized_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.OnRep_ObjectiveStateChanged
	 * 		Flags  -> ()
	 */
	void AObjective::OnRep_ObjectiveStateChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.OnRep_ObjectiveStateChanged");
		
		AObjective_OnRep_ObjectiveStateChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.OnObjectiveStarted
	 * 		Flags  -> ()
	 */
	void AObjective::OnObjectiveStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.OnObjectiveStarted");
		
		AObjective_OnObjectiveStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.OnObjectiveInitialized
	 * 		Flags  -> ()
	 */
	void AObjective::OnObjectiveInitialized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.OnObjectiveInitialized");
		
		AObjective_OnObjectiveInitialized_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.OnObjectiveFailed
	 * 		Flags  -> ()
	 */
	void AObjective::OnObjectiveFailed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.OnObjectiveFailed");
		
		AObjective_OnObjectiveFailed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.OnObjectiveCompleted
	 * 		Flags  -> ()
	 */
	void AObjective::OnObjectiveCompleted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.OnObjectiveCompleted");
		
		AObjective_OnObjectiveCompleted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.OnObjectiveBelated
	 * 		Flags  -> ()
	 */
	void AObjective::OnObjectiveBelated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.OnObjectiveBelated");
		
		AObjective_OnObjectiveBelated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.IsStarted
	 * 		Flags  -> ()
	 */
	bool AObjective::IsStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.IsStarted");
		
		AObjective_IsStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.IsCompleted
	 * 		Flags  -> ()
	 */
	bool AObjective::IsCompleted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.IsCompleted");
		
		AObjective_IsCompleted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.GetDescription
	 * 		Flags  -> ()
	 */
	class FText AObjective::GetDescription()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.GetDescription");
		
		AObjective_GetDescription_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.FailObjective
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               forceFail                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AObjective::FailObjective(bool forceFail)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.FailObjective");
		
		AObjective_FailObjective_Params params {};
		params.forceFail = forceFail;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.CompleteObjective
	 * 		Flags  -> ()
	 */
	void AObjective::CompleteObjective()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.CompleteObjective");
		
		AObjective_CompleteObjective_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.Client_ShowWaypointWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      targetActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      actorToTieLifetime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AObjective::Client_ShowWaypointWidget(class AActor* targetActor, class AActor* actorToTieLifetime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.Client_ShowWaypointWidget");
		
		AObjective_Client_ShowWaypointWidget_Params params {};
		params.targetActor = targetActor;
		params.actorToTieLifetime = actorToTieLifetime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.Client_RemoveWaypointWidget
	 * 		Flags  -> ()
	 */
	void AObjective::Client_RemoveWaypointWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.Client_RemoveWaypointWidget");
		
		AObjective_Client_RemoveWaypointWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.Client_BroadcastTrackedItemAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            currentAmount                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AObjective::Client_BroadcastTrackedItemAmount(int32_t currentAmount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.Client_BroadcastTrackedItemAmount");
		
		AObjective_Client_BroadcastTrackedItemAmount_Params params {};
		params.currentAmount = currentAmount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Objective.CanInterruptDialogue
	 * 		Flags  -> ()
	 */
	bool AObjective::CanInterruptDialogue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Objective.CanInterruptDialogue");
		
		AObjective_CanInterruptDialogue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Objective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARequirementObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARequirementObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RequirementObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABlueprintableItemObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABlueprintableItemObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BlueprintableItemObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountable.GetReachableMountSlotsForMountSlotIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            mountSlotIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FReachableMountSlot>                 Result                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UMountable::GetReachableMountSlotsForMountSlotIndex(int32_t mountSlotIndex, TArray<struct FReachableMountSlot>* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountable.GetReachableMountSlotsForMountSlotIndex");
		
		UMountable_GetReachableMountSlotsForMountSlotIndex_Params params {};
		params.mountSlotIndex = mountSlotIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Result != nullptr)
			*Result = params.Result;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountable.GetMountSlots
	 * 		Flags  -> ()
	 */
	void UMountable::GetMountSlots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountable.GetMountSlots");
		
		UMountable_GetMountSlots_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountable.CanBeMounted
	 * 		Flags  -> ()
	 */
	bool UMountable::CanBeMounted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountable.CanBeMounted");
		
		UMountable_CanBeMounted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountable.CanBeCameraViewTarget
	 * 		Flags  -> ()
	 */
	bool UMountable::CanBeCameraViewTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountable.CanBeCameraViewTarget");
		
		UMountable_CanBeCameraViewTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMountable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMountable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Mountable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.VehicleHasFuel
	 * 		Flags  -> ()
	 */
	bool UVehicle::VehicleHasFuel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.VehicleHasFuel");
		
		UVehicle_VehicleHasFuel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.VehicleHasEngine
	 * 		Flags  -> ()
	 */
	bool UVehicle::VehicleHasEngine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.VehicleHasEngine");
		
		UVehicle_VehicleHasEngine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.VehicleHasBattery
	 * 		Flags  -> ()
	 */
	bool UVehicle::VehicleHasBattery()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.VehicleHasBattery");
		
		UVehicle_VehicleHasBattery_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.UpdateNavigationMeshes
	 * 		Flags  -> ()
	 */
	void UVehicle::UpdateNavigationMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.UpdateNavigationMeshes");
		
		UVehicle_UpdateNavigationMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.StopVehicleEngine
	 * 		Flags  -> ()
	 */
	void UVehicle::StopVehicleEngine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.StopVehicleEngine");
		
		UVehicle_StopVehicleEngine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.StartVehicleEngine
	 * 		Flags  -> ()
	 */
	void UVehicle::StartVehicleEngine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.StartVehicleEngine");
		
		UVehicle_StartVehicleEngine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.ShouldShowVehicleHud
	 * 		Flags  -> ()
	 */
	bool UVehicle::ShouldShowVehicleHud()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.ShouldShowVehicleHud");
		
		UVehicle_ShouldShowVehicleHud_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.ShouldShowAviationHud
	 * 		Flags  -> ()
	 */
	bool UVehicle::ShouldShowAviationHud()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.ShouldShowAviationHud");
		
		UVehicle_ShouldShowAviationHud_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleWheelTireDeflated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            WheelIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               isDeflated                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleWheelTireDeflated(int32_t WheelIndex, bool isDeflated)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleWheelTireDeflated");
		
		UVehicle_SetVehicleWheelTireDeflated_Params params {};
		params.WheelIndex = WheelIndex;
		params.isDeflated = isDeflated;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleThrottleAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleThrottleAmount(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleThrottleAmount");
		
		UVehicle_SetVehicleThrottleAmount_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleSteerAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleSteerAmount(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleSteerAmount");
		
		UVehicle_SetVehicleSteerAmount_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleLightsActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleLightsActive(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleLightsActive");
		
		UVehicle_SetVehicleLightsActive_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleHornActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleHornActive(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleHornActive");
		
		UVehicle_SetVehicleHornActive_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleHealth
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleHealth(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleHealth");
		
		UVehicle_SetVehicleHealth_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleHandbrakeAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleHandbrakeAmount(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleHandbrakeAmount");
		
		UVehicle_SetVehicleHandbrakeAmount_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleGearUp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleGearUp(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleGearUp");
		
		UVehicle_SetVehicleGearUp_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleGearDown
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleGearDown(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleGearDown");
		
		UVehicle_SetVehicleGearDown_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleFuelAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleFuelAmount(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleFuelAmount");
		
		UVehicle_SetVehicleFuelAmount_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleFreeLookEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleFreeLookEnabled(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleFreeLookEnabled");
		
		UVehicle_SetVehicleFreeLookEnabled_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleEngineBlockHealth
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleEngineBlockHealth(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleEngineBlockHealth");
		
		UVehicle_SetVehicleEngineBlockHealth_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleDoorWindowCollisionAttached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            DoorIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleDoorWindowCollisionAttached(int32_t DoorIndex, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleDoorWindowCollisionAttached");
		
		UVehicle_SetVehicleDoorWindowCollisionAttached_Params params {};
		params.DoorIndex = DoorIndex;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleDoorCollisionAttached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            DoorIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleDoorCollisionAttached(int32_t DoorIndex, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleDoorCollisionAttached");
		
		UVehicle_SetVehicleDoorCollisionAttached_Params params {};
		params.DoorIndex = DoorIndex;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleBrakeAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleBrakeAmount(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleBrakeAmount");
		
		UVehicle_SetVehicleBrakeAmount_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetVehicleBatteryAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetVehicleBatteryAmount(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetVehicleBatteryAmount");
		
		UVehicle_SetVehicleBatteryAmount_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SetCurrentVehicleGear
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::SetCurrentVehicleGear(int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SetCurrentVehicleGear");
		
		UVehicle_SetCurrentVehicleGear_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.SaveState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDbIntegerId UVehicle::SaveState(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.SaveState");
		
		UVehicle_SaveState_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.ResetVehicle
	 * 		Flags  -> ()
	 */
	void UVehicle::ResetVehicle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.ResetVehicle");
		
		UVehicle_ResetVehicle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.RepairVehicle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              healthToRepair                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVehicle::RepairVehicle(float healthToRepair)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.RepairVehicle");
		
		UVehicle_RepairVehicle_Params params {};
		params.healthToRepair = healthToRepair;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.LoadState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::LoadState(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.LoadState");
		
		UVehicle_LoadState_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.IsVehicleWheelTireDeflated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            WheelIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVehicle::IsVehicleWheelTireDeflated(int32_t WheelIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.IsVehicleWheelTireDeflated");
		
		UVehicle_IsVehicleWheelTireDeflated_Params params {};
		params.WheelIndex = WheelIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.IsVehicleUpright
	 * 		Flags  -> ()
	 */
	bool UVehicle::IsVehicleUpright()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.IsVehicleUpright");
		
		UVehicle_IsVehicleUpright_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.IsVehicleInteriorExposed
	 * 		Flags  -> ()
	 */
	bool UVehicle::IsVehicleInteriorExposed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.IsVehicleInteriorExposed");
		
		UVehicle_IsVehicleInteriorExposed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.IsVehicleInAir
	 * 		Flags  -> ()
	 */
	bool UVehicle::IsVehicleInAir()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.IsVehicleInAir");
		
		UVehicle_IsVehicleInAir_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.IsVehicleHornActive
	 * 		Flags  -> ()
	 */
	bool UVehicle::IsVehicleHornActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.IsVehicleHornActive");
		
		UVehicle_IsVehicleHornActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.IsVehicleFreeLookEnabled
	 * 		Flags  -> ()
	 */
	bool UVehicle::IsVehicleFreeLookEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.IsVehicleFreeLookEnabled");
		
		UVehicle_IsVehicleFreeLookEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.IsVehicleDoorWindowCollisionAttached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            DoorIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVehicle::IsVehicleDoorWindowCollisionAttached(int32_t DoorIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.IsVehicleDoorWindowCollisionAttached");
		
		UVehicle_IsVehicleDoorWindowCollisionAttached_Params params {};
		params.DoorIndex = DoorIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.IsVehicleDoorCollisionAttached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            DoorIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVehicle::IsVehicleDoorCollisionAttached(int32_t DoorIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.IsVehicleDoorCollisionAttached");
		
		UVehicle_IsVehicleDoorCollisionAttached_Params params {};
		params.DoorIndex = DoorIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.IsRadioTurnedOn
	 * 		Flags  -> ()
	 */
	bool UVehicle::IsRadioTurnedOn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.IsRadioTurnedOn");
		
		UVehicle_IsRadioTurnedOn_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleWheelsSteerAmount
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleWheelsSteerAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleWheelsSteerAmount");
		
		UVehicle_GetVehicleWheelsSteerAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleVelocity
	 * 		Flags  -> ()
	 */
	struct FVector UVehicle::GetVehicleVelocity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleVelocity");
		
		UVehicle_GetVehicleVelocity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleThrottleAmount
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleThrottleAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleThrottleAmount");
		
		UVehicle_GetVehicleThrottleAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleSteerAmount
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleSteerAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleSteerAmount");
		
		UVehicle_GetVehicleSteerAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleSpawnParameters
	 * 		Flags  -> ()
	 */
	struct FVehicleSpawnParameters UVehicle::GetVehicleSpawnParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleSpawnParameters");
		
		UVehicle_GetVehicleSpawnParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleHealthRatio
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleHealthRatio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleHealthRatio");
		
		UVehicle_GetVehicleHealthRatio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleHealthBarCaption
	 * 		Flags  -> ()
	 */
	class FText UVehicle::GetVehicleHealthBarCaption()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleHealthBarCaption");
		
		UVehicle_GetVehicleHealthBarCaption_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleHealth
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleHealth");
		
		UVehicle_GetVehicleHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleHandbrakeAmount
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleHandbrakeAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleHandbrakeAmount");
		
		UVehicle_GetVehicleHandbrakeAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleFuelResourceType
	 * 		Flags  -> ()
	 */
	class UClass* UVehicle::GetVehicleFuelResourceType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleFuelResourceType");
		
		UVehicle_GetVehicleFuelResourceType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleFuelAmountRatio
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleFuelAmountRatio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleFuelAmountRatio");
		
		UVehicle_GetVehicleFuelAmountRatio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleFuelAmount
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleFuelAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleFuelAmount");
		
		UVehicle_GetVehicleFuelAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleEngineState
	 * 		Flags  -> ()
	 */
	EVehicleEngineState UVehicle::GetVehicleEngineState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleEngineState");
		
		UVehicle_GetVehicleEngineState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleEngineRpm
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleEngineRpm()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleEngineRpm");
		
		UVehicle_GetVehicleEngineRpm_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleEngineBlockHealth
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleEngineBlockHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleEngineBlockHealth");
		
		UVehicle_GetVehicleEngineBlockHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleBrakeAmount
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleBrakeAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleBrakeAmount");
		
		UVehicle_GetVehicleBrakeAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleBatteryResourceType
	 * 		Flags  -> ()
	 */
	class UClass* UVehicle::GetVehicleBatteryResourceType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleBatteryResourceType");
		
		UVehicle_GetVehicleBatteryResourceType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleBatteryAmountRatio
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleBatteryAmountRatio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleBatteryAmountRatio");
		
		UVehicle_GetVehicleBatteryAmountRatio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleBatteryAmount
	 * 		Flags  -> ()
	 */
	float UVehicle::GetVehicleBatteryAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleBatteryAmount");
		
		UVehicle_GetVehicleBatteryAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetVehicleAnimInstance
	 * 		Flags  -> ()
	 */
	class UAnimInstance* UVehicle::GetVehicleAnimInstance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetVehicleAnimInstance");
		
		UVehicle_GetVehicleAnimInstance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetNumVehicleReverseGears
	 * 		Flags  -> ()
	 */
	int32_t UVehicle::GetNumVehicleReverseGears()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetNumVehicleReverseGears");
		
		UVehicle_GetNumVehicleReverseGears_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetNumVehicleForwardGears
	 * 		Flags  -> ()
	 */
	int32_t UVehicle::GetNumVehicleForwardGears()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetNumVehicleForwardGears");
		
		UVehicle_GetNumVehicleForwardGears_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetNumVehicleDoorWindows
	 * 		Flags  -> ()
	 */
	int32_t UVehicle::GetNumVehicleDoorWindows()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetNumVehicleDoorWindows");
		
		UVehicle_GetNumVehicleDoorWindows_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetNumVehicleDoors
	 * 		Flags  -> ()
	 */
	int32_t UVehicle::GetNumVehicleDoors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetNumVehicleDoors");
		
		UVehicle_GetNumVehicleDoors_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetNumMountees
	 * 		Flags  -> ()
	 */
	int32_t UVehicle::GetNumMountees()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetNumMountees");
		
		UVehicle_GetNumMountees_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetMountSlotIndicatorsWidget
	 * 		Flags  -> ()
	 */
	class UClass* UVehicle::GetMountSlotIndicatorsWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetMountSlotIndicatorsWidget");
		
		UVehicle_GetMountSlotIndicatorsWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetMaxVehicleHealth
	 * 		Flags  -> ()
	 */
	float UVehicle::GetMaxVehicleHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetMaxVehicleHealth");
		
		UVehicle_GetMaxVehicleHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetMaxVehicleFuelAmount
	 * 		Flags  -> ()
	 */
	float UVehicle::GetMaxVehicleFuelAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetMaxVehicleFuelAmount");
		
		UVehicle_GetMaxVehicleFuelAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetMaxVehicleEngineBlockHealth
	 * 		Flags  -> ()
	 */
	float UVehicle::GetMaxVehicleEngineBlockHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetMaxVehicleEngineBlockHealth");
		
		UVehicle_GetMaxVehicleEngineBlockHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetMaxVehicleBatteryAmount
	 * 		Flags  -> ()
	 */
	float UVehicle::GetMaxVehicleBatteryAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetMaxVehicleBatteryAmount");
		
		UVehicle_GetMaxVehicleBatteryAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetMass
	 * 		Flags  -> ()
	 */
	float UVehicle::GetMass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetMass");
		
		UVehicle_GetMass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetItemContainer
	 * 		Flags  -> ()
	 */
	class AVehicleItemContainer* UVehicle::GetItemContainer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetItemContainer");
		
		UVehicle_GetItemContainer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.GetCurrentVehicleGear
	 * 		Flags  -> ()
	 */
	int32_t UVehicle::GetCurrentVehicleGear()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.GetCurrentVehicleGear");
		
		UVehicle_GetCurrentVehicleGear_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.AreVehicleLightsActive
	 * 		Flags  -> ()
	 */
	bool UVehicle::AreVehicleLightsActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.AreVehicleLightsActive");
		
		UVehicle_AreVehicleLightsActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle.ApplyImpactDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicle::ApplyImpactDamage(float Damage, const struct FHitResult& HitResult, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle.ApplyImpactDamage");
		
		UVehicle_ApplyImpactDamage_Params params {};
		params.Damage = Damage;
		params.HitResult = HitResult;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Vehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Boat.SetBoatSailSteerAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBoat::SetBoatSailSteerAmount(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Boat.SetBoatSailSteerAmount");
		
		UBoat_SetBoatSailSteerAmount_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Boat.IsAnchored
	 * 		Flags  -> ()
	 */
	bool UBoat::IsAnchored()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Boat.IsAnchored");
		
		UBoat_IsAnchored_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Boat.HasSails
	 * 		Flags  -> ()
	 */
	bool UBoat::HasSails()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Boat.HasSails");
		
		UBoat_HasSails_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Boat.GetBoatSailSteerAmount
	 * 		Flags  -> ()
	 */
	float UBoat::GetBoatSailSteerAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Boat.GetBoatSailSteerAmount");
		
		UBoat_GetBoatSailSteerAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBoat.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBoat::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Boat");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BombDefusalMinigameBase.PlayCutWireMontage
	 * 		Flags  -> ()
	 */
	void ABombDefusalMinigameBase::PlayCutWireMontage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BombDefusalMinigameBase.PlayCutWireMontage");
		
		ABombDefusalMinigameBase_PlayCutWireMontage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABombDefusalMinigameBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABombDefusalMinigameBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BombDefusalMinigameBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABombDefusalMinigame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABombDefusalMinigame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BombDefusalMinigame");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMinigameConfiguration.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMinigameConfiguration::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MinigameConfiguration");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBombDefusalMinigameConfiguration.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBombDefusalMinigameConfiguration::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BombDefusalMinigameConfiguration");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMinigameWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMinigameWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MinigameWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BombDefusalWidget.ShowInfo
	 * 		Flags  -> ()
	 */
	void UBombDefusalWidget::ShowInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BombDefusalWidget.ShowInfo");
		
		UBombDefusalWidget_ShowInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BombDefusalWidget.ShouldShowChangeDurationInfo
	 * 		Flags  -> ()
	 */
	bool UBombDefusalWidget::ShouldShowChangeDurationInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BombDefusalWidget.ShouldShowChangeDurationInfo");
		
		UBombDefusalWidget_ShouldShowChangeDurationInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BombDefusalWidget.OnSuccess
	 * 		Flags  -> ()
	 */
	void UBombDefusalWidget::OnSuccess()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BombDefusalWidget.OnSuccess");
		
		UBombDefusalWidget_OnSuccess_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BombDefusalWidget.HideInfo
	 * 		Flags  -> ()
	 */
	void UBombDefusalWidget::HideInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BombDefusalWidget.HideInfo");
		
		UBombDefusalWidget_HideInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BombDefusalWidget.GetNumTries
	 * 		Flags  -> ()
	 */
	int32_t UBombDefusalWidget::GetNumTries()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BombDefusalWidget.GetNumTries");
		
		UBombDefusalWidget_GetNumTries_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBombDefusalWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBombDefusalWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BombDefusalWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BondageComponent.UpdateVisuals
	 * 		Flags  -> ()
	 */
	void UBondageComponent::UpdateVisuals()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BondageComponent.UpdateVisuals");
		
		UBondageComponent_UpdateVisuals_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BondageComponent.OnRep_BoundBodyPart
	 * 		Flags  -> ()
	 */
	void UBondageComponent::OnRep_BoundBodyPart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BondageComponent.OnRep_BoundBodyPart");
		
		UBondageComponent_OnRep_BoundBodyPart_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BondageComponent.OnRep_BondageItem
	 * 		Flags  -> ()
	 */
	void UBondageComponent::OnRep_BondageItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BondageComponent.OnRep_BondageItem");
		
		UBondageComponent_OnRep_BondageItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BondageComponent.GetBondageItem
	 * 		Flags  -> ()
	 */
	class AItem* UBondageComponent::GetBondageItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BondageComponent.GetBondageItem");
		
		UBondageComponent_GetBondageItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBondageComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBondageComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BondageComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBondageItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBondageItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BondageItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachment.Unequip
	 * 		Flags  -> ()
	 */
	void AWeaponAttachment::Unequip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachment.Unequip");
		
		AWeaponAttachment_Unequip_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachment.GetWeaponMalfunctionProbabilityForMalfunctionEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EWeaponMalfunctionEvent                            malfunctionEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FWeaponMalfunctionProbability AWeaponAttachment::GetWeaponMalfunctionProbabilityForMalfunctionEvent(class AWeapon* Weapon, EWeaponMalfunctionEvent malfunctionEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachment.GetWeaponMalfunctionProbabilityForMalfunctionEvent");
		
		AWeaponAttachment_GetWeaponMalfunctionProbabilityForMalfunctionEvent_Params params {};
		params.Weapon = Weapon;
		params.malfunctionEvent = malfunctionEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachment.GetStaticMeshWhenAttached
	 * 		Flags  -> ()
	 */
	class UStaticMesh* AWeaponAttachment::GetStaticMeshWhenAttached()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachment.GetStaticMeshWhenAttached");
		
		AWeaponAttachment_GetStaticMeshWhenAttached_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachment.GetSkeletalMeshWhenAttached
	 * 		Flags  -> ()
	 */
	class USkeletalMesh* AWeaponAttachment::GetSkeletalMeshWhenAttached()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachment.GetSkeletalMeshWhenAttached");
		
		AWeaponAttachment_GetSkeletalMeshWhenAttached_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachment.GetShakinessModifier
	 * 		Flags  -> ()
	 */
	float AWeaponAttachment::GetShakinessModifier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachment.GetShakinessModifier");
		
		AWeaponAttachment_GetShakinessModifier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachment.GetOwningWeapon
	 * 		Flags  -> ()
	 */
	class AWeapon* AWeaponAttachment::GetOwningWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachment.GetOwningWeapon");
		
		AWeaponAttachment_GetOwningWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachment.Equip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachment::Equip(class AWeapon* Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachment.Equip");
		
		AWeaponAttachment_Equip_Params params {};
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachment.CanBeRemovedIfAttachedToWeapon
	 * 		Flags  -> ()
	 */
	bool AWeaponAttachment::CanBeRemovedIfAttachedToWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachment.CanBeRemovedIfAttachedToWeapon");
		
		AWeaponAttachment_CanBeRemovedIfAttachedToWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachment.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachment::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachment");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABowAttachmentSilencer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABowAttachmentSilencer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BowAttachmentSilencer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABowAttachmentStabilizer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABowAttachmentStabilizer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BowAttachmentStabilizer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetWalkingIdleAnimationTP
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UMeleeSkill::GetWalkingIdleAnimationTP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetWalkingIdleAnimationTP");
		
		UMeleeSkill_GetWalkingIdleAnimationTP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetWalkingIdleAnimationFP
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UMeleeSkill::GetWalkingIdleAnimationFP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetWalkingIdleAnimationFP");
		
		UMeleeSkill_GetWalkingIdleAnimationFP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetTiredIdleAnimationTP
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UMeleeSkill::GetTiredIdleAnimationTP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetTiredIdleAnimationTP");
		
		UMeleeSkill_GetTiredIdleAnimationTP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetTiredIdleAnimationFP
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UMeleeSkill::GetTiredIdleAnimationFP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetTiredIdleAnimationFP");
		
		UMeleeSkill_GetTiredIdleAnimationFP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetStaminaMultiplier
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              excessGearWeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UMeleeSkill::GetStaminaMultiplier(float excessGearWeight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetStaminaMultiplier");
		
		UMeleeSkill_GetStaminaMultiplier_Params params {};
		params.excessGearWeight = excessGearWeight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetPrimaryIdleAnimationTP
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UMeleeSkill::GetPrimaryIdleAnimationTP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetPrimaryIdleAnimationTP");
		
		UMeleeSkill_GetPrimaryIdleAnimationTP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetPrimaryIdleAnimationFP
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UMeleeSkill::GetPrimaryIdleAnimationFP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetPrimaryIdleAnimationFP");
		
		UMeleeSkill_GetPrimaryIdleAnimationFP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetLeaveCombatModeMontage
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UMeleeSkill::GetLeaveCombatModeMontage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetLeaveCombatModeMontage");
		
		UMeleeSkill_GetLeaveCombatModeMontage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetInactivityIdleAnimations
	 * 		Flags  -> ()
	 */
	TArray<class UAnimSequenceBase*> UMeleeSkill::GetInactivityIdleAnimations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetInactivityIdleAnimations");
		
		UMeleeSkill_GetInactivityIdleAnimations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetIdleToBlockBlendDuration
	 * 		Flags  -> ()
	 */
	float UMeleeSkill::GetIdleToBlockBlendDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetIdleToBlockBlendDuration");
		
		UMeleeSkill_GetIdleToBlockBlendDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetEnterCombatModeMontage
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UMeleeSkill::GetEnterCombatModeMontage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetEnterCombatModeMontage");
		
		UMeleeSkill_GetEnterCombatModeMontage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetBlockToIdleBlendDuration
	 * 		Flags  -> ()
	 */
	float UMeleeSkill::GetBlockToIdleBlendDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetBlockToIdleBlendDuration");
		
		UMeleeSkill_GetBlockToIdleBlendDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetBlockIdleAnimationTP
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UMeleeSkill::GetBlockIdleAnimationTP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetBlockIdleAnimationTP");
		
		UMeleeSkill_GetBlockIdleAnimationTP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetBlockIdleAnimationFP
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UMeleeSkill::GetBlockIdleAnimationFP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetBlockIdleAnimationFP");
		
		UMeleeSkill_GetBlockIdleAnimationFP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetAimOffsetBlendSpaceTP
	 * 		Flags  -> ()
	 */
	class UBlendSpace* UMeleeSkill::GetAimOffsetBlendSpaceTP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetAimOffsetBlendSpaceTP");
		
		UMeleeSkill_GetAimOffsetBlendSpaceTP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeSkill.GetAimOffsetBlendSpaceFP
	 * 		Flags  -> ()
	 */
	class UBlendSpace* UMeleeSkill::GetAimOffsetBlendSpaceFP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeSkill.GetAimOffsetBlendSpaceFP");
		
		UMeleeSkill_GetAimOffsetBlendSpaceFP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeleeSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeleeSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBoxingSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBoxingSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BoxingSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTriggerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTriggerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TriggerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMotionTriggerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMotionTriggerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MotionTriggerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentEndOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         activatedComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBoxMotionTriggerComponent::BoxComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentEndOverlap");
		
		UBoxMotionTriggerComponent_BoxComponent_OnComponentEndOverlap_Params params {};
		params.activatedComp = activatedComp;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentBeginOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UBoxMotionTriggerComponent::BoxComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentBeginOverlap");
		
		UBoxMotionTriggerComponent_BoxComponent_OnComponentBeginOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBoxMotionTriggerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBoxMotionTriggerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BoxMotionTriggerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BreathingBarLungsWidget.StopCriticalLungsAnimation
	 * 		Flags  -> ()
	 */
	void UBreathingBarLungsWidget::StopCriticalLungsAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BreathingBarLungsWidget.StopCriticalLungsAnimation");
		
		UBreathingBarLungsWidget_StopCriticalLungsAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BreathingBarLungsWidget.StartCriticalLungsAnimation
	 * 		Flags  -> ()
	 */
	void UBreathingBarLungsWidget::StartCriticalLungsAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BreathingBarLungsWidget.StartCriticalLungsAnimation");
		
		UBreathingBarLungsWidget_StartCriticalLungsAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BreathingBarLungsWidget.IsCriticalLungsAnimationPlaying
	 * 		Flags  -> ()
	 */
	bool UBreathingBarLungsWidget::IsCriticalLungsAnimationPlaying()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BreathingBarLungsWidget.IsCriticalLungsAnimationPlaying");
		
		UBreathingBarLungsWidget_IsCriticalLungsAnimationPlaying_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BreathingBarLungsWidget.GetCriticalLungsAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UBreathingBarLungsWidget::GetCriticalLungsAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BreathingBarLungsWidget.GetCriticalLungsAnimation");
		
		UBreathingBarLungsWidget_GetCriticalLungsAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBreathingBarLungsWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBreathingBarLungsWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BreathingBarLungsWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABrokenArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABrokenArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BrokenArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BruisingComponent.MakeCompletelyBruised
	 * 		Flags  -> ()
	 */
	void UBruisingComponent::MakeCompletelyBruised()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BruisingComponent.MakeCompletelyBruised");
		
		UBruisingComponent_MakeCompletelyBruised_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BruisingComponent.GetBruiseLayerRenderTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EBruiseLayer                                       Layer                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTextureRenderTarget2D* UBruisingComponent::GetBruiseLayerRenderTarget(EBruiseLayer Layer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BruisingComponent.GetBruiseLayerRenderTarget");
		
		UBruisingComponent_GetBruiseLayerRenderTarget_Params params {};
		params.Layer = Layer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BruisingComponent.ClearBruises
	 * 		Flags  -> ()
	 */
	void UBruisingComponent::ClearBruises()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BruisingComponent.ClearBruises");
		
		UBruisingComponent_ClearBruises_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BruisingComponent.AddBruise
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EBruiseZone                                        zone                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBruisingComponent::AddBruise(EBruiseZone zone)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BruisingComponent.AddBruise");
		
		UBruisingComponent_AddBruise_Params params {};
		params.zone = zone;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBruisingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBruisingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BruisingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBruisingData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBruisingData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BruisingData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBuildingHelperComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBuildingHelperComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BuildingHelperComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Building.OnRep_WindowMarkerModifiers
	 * 		Flags  -> ()
	 */
	void ABuilding::OnRep_WindowMarkerModifiers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Building.OnRep_WindowMarkerModifiers");
		
		ABuilding_OnRep_WindowMarkerModifiers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Building.OnRep_Cleared
	 * 		Flags  -> ()
	 */
	void ABuilding::OnRep_Cleared()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Building.OnRep_Cleared");
		
		ABuilding_OnRep_Cleared_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABuilding.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABuilding::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Building");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BuildingManager.NetMulticast_UpdateBuildingFortificationsState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      buildingId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FFortificationData>                  FortificationData                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ABuildingManager::NetMulticast_UpdateBuildingFortificationsState(int32_t dataVersion, const class FString& buildingId, TArray<struct FFortificationData> FortificationData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BuildingManager.NetMulticast_UpdateBuildingFortificationsState");
		
		ABuildingManager_NetMulticast_UpdateBuildingFortificationsState_Params params {};
		params.dataVersion = dataVersion;
		params.buildingId = buildingId;
		params.FortificationData = FortificationData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BuildingManager.NetMulticast_UpdateBuildingData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      runtimeId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBuildingData                               BuildingData                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ABuildingManager::NetMulticast_UpdateBuildingData(int32_t dataVersion, const class FString& runtimeId, const struct FBuildingData& BuildingData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BuildingManager.NetMulticast_UpdateBuildingData");
		
		ABuildingManager_NetMulticast_UpdateBuildingData_Params params {};
		params.dataVersion = dataVersion;
		params.runtimeId = runtimeId;
		params.BuildingData = BuildingData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABuildingManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABuildingManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BuildingManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBuriable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBuriable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Buriable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBuriableItemComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBuriableItemComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BuriableItemComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBuriableChestItemComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBuriableChestItemComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BuriableChestItemComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.BuriableItemComponent.OnRep_UpdateBurialInformation
	 * 		Flags  -> ()
	 */
	void UBuriableItemComponent::OnRep_UpdateBurialInformation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.BuriableItemComponent.OnRep_UpdateBurialInformation");
		
		UBuriableItemComponent_OnRep_UpdateBurialInformation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBuriableItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBuriableItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BuriableItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBuriableChestItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBuriableChestItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BuriableChestItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBuriableTrapItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBuriableTrapItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BuriableTrapItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBurnDamageType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBurnDamageType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BurnDamageType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBuryData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBuryData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BuryData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBuryToolItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBuryToolItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BuryToolItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UC4PartTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UC4PartTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.C4PartTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CamouflageSkill.GetHidePenaltyForCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UCamouflageSkill::GetHidePenaltyForCharacter(class AConZCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CamouflageSkill.GetHidePenaltyForCharacter");
		
		UCamouflageSkill_GetHidePenaltyForCharacter_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCamouflageSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCamouflageSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CamouflageSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.SetTimerWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UKillBoxTimerWidget*                         timerWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACargoDropContainer::SetTimerWidget(class UKillBoxTimerWidget* timerWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.SetTimerWidget");
		
		ACargoDropContainer_SetTimerWidget_Params params {};
		params.timerWidget = timerWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.SetLockStateWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UDiegeticLockState*                          Value                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACargoDropContainer::SetLockStateWidget(class UDiegeticLockState* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.SetLockStateWidget");
		
		ACargoDropContainer_SetLockStateWidget_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.OnWarning
	 * 		Flags  -> ()
	 */
	void ACargoDropContainer::OnWarning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.OnWarning");
		
		ACargoDropContainer_OnWarning_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.OnTouchdown
	 * 		Flags  -> ()
	 */
	void ACargoDropContainer::OnTouchdown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.OnTouchdown");
		
		ACargoDropContainer_OnTouchdown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.OnRep_FlareParticlesEnabled
	 * 		Flags  -> ()
	 */
	void ACargoDropContainer::OnRep_FlareParticlesEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.OnRep_FlareParticlesEnabled");
		
		ACargoDropContainer_OnRep_FlareParticlesEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.OnDetonate
	 * 		Flags  -> ()
	 */
	void ACargoDropContainer::OnDetonate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.OnDetonate");
		
		ACargoDropContainer_OnDetonate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.Multicast_StartDetonation
	 * 		Flags  -> ()
	 */
	void ACargoDropContainer::Multicast_StartDetonation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.Multicast_StartDetonation");
		
		ACargoDropContainer_Multicast_StartDetonation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.Multicast_Detonate
	 * 		Flags  -> ()
	 */
	void ACargoDropContainer::Multicast_Detonate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.Multicast_Detonate");
		
		ACargoDropContainer_Multicast_Detonate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.DropToLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     EndLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              fallingTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACargoDropContainer::DropToLocation(const struct FVector& EndLocation, float fallingTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.DropToLocation");
		
		ACargoDropContainer_DropToLocation_Params params {};
		params.EndLocation = EndLocation;
		params.fallingTime = fallingTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropContainer.AddCargoLocker
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UStaticMeshComponent*                        cargoLocker                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACargoDropContainer::AddCargoLocker(class UStaticMeshComponent* cargoLocker)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropContainer.AddCargoLocker");
		
		ACargoDropContainer_AddCargoLocker_Params params {};
		params.cargoLocker = cargoLocker;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACargoDropContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACargoDropContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CargoDropContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldEvent.StartEvent
	 * 		Flags  -> ()
	 */
	void AWorldEvent::StartEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldEvent.StartEvent");
		
		AWorldEvent_StartEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWorldEvent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWorldEvent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WorldEvent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CargoDropEvent.Multicast_DisplayNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      SectorName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              FallDuration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACargoDropEvent::Multicast_DisplayNotification(const class FString& SectorName, float FallDuration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CargoDropEvent.Multicast_DisplayNotification");
		
		ACargoDropEvent_Multicast_DisplayNotification_Params params {};
		params.SectorName = SectorName;
		params.FallDuration = FallDuration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACargoDropEvent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACargoDropEvent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CargoDropEvent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACargoDropShip.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACargoDropShip::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CargoDropShip");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Carousel.ClickRight
	 * 		Flags  -> ()
	 */
	void UCarousel::ClickRight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Carousel.ClickRight");
		
		UCarousel_ClickRight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Carousel.ClickLeft
	 * 		Flags  -> ()
	 */
	void UCarousel::ClickLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Carousel.ClickLeft");
		
		UCarousel_ClickLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCarousel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCarousel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Carousel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCarouselWithLabel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCarouselWithLabel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CarouselWithLabel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChainsawState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChainsawState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChainsawState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Chainsaw.SetUseFuelUsagePerHourMultiplierWhenActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AChainsaw::SetUseFuelUsagePerHourMultiplierWhenActive(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Chainsaw.SetUseFuelUsagePerHourMultiplierWhenActive");
		
		AChainsaw_SetUseFuelUsagePerHourMultiplierWhenActive_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Chainsaw.Server_SetUseFuelUsagePerHourMultiplierWhenActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AChainsaw::Server_SetUseFuelUsagePerHourMultiplierWhenActive(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Chainsaw.Server_SetUseFuelUsagePerHourMultiplierWhenActive");
		
		AChainsaw_Server_SetUseFuelUsagePerHourMultiplierWhenActive_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Chainsaw.Server_SetTurnedOn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AChainsaw::Server_SetTurnedOn(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Chainsaw.Server_SetTurnedOn");
		
		AChainsaw_Server_SetTurnedOn_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Chainsaw.OnRep_TurnedOn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AChainsaw::OnRep_TurnedOn(bool OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Chainsaw.OnRep_TurnedOn");
		
		AChainsaw_OnRep_TurnedOn_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Chainsaw.GetUseFuelUsagePerHourMultiplierWhenActive
	 * 		Flags  -> ()
	 */
	bool AChainsaw::GetUseFuelUsagePerHourMultiplierWhenActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Chainsaw.GetUseFuelUsagePerHourMultiplierWhenActive");
		
		AChainsaw_GetUseFuelUsagePerHourMultiplierWhenActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AChainsaw.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AChainsaw::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Chainsaw");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChainsawAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChainsawAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChainsawAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.UpdateReloadData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWeaponReloadData                           reloadDataIn                                               (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FWeaponReloadData                           reloadDataOut                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AWeapon::UpdateReloadData(struct FWeaponReloadData* reloadDataIn, struct FWeaponReloadData* reloadDataOut)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.UpdateReloadData");
		
		AWeapon_UpdateReloadData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (reloadDataIn != nullptr)
			*reloadDataIn = params.reloadDataIn;
		if (reloadDataOut != nullptr)
			*reloadDataOut = params.reloadDataOut;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.UpdateAmmunitionMeshes
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<int32_t>                                    ammoIndices                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               showReversed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::UpdateAmmunitionMeshes(TArray<int32_t> ammoIndices, bool showReversed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.UpdateAmmunitionMeshes");
		
		AWeapon_UpdateAmmunitionMeshes_Params params {};
		params.ammoIndices = ammoIndices;
		params.showReversed = showReversed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Unequip
	 * 		Flags  -> ()
	 */
	void AWeapon::Unequip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Unequip");
		
		AWeapon_Unequip_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.StopFiringEffects
	 * 		Flags  -> ()
	 */
	void AWeapon::StopFiringEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.StopFiringEffects");
		
		AWeapon_StopFiringEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.StopFire
	 * 		Flags  -> ()
	 */
	void AWeapon::StopFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.StopFire");
		
		AWeapon_StopFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.StartFire
	 * 		Flags  -> ()
	 */
	void AWeapon::StartFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.StartFire");
		
		AWeapon_StartFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.ShouldPlayChamberOpenedIdle
	 * 		Flags  -> ()
	 */
	bool AWeapon::ShouldPlayChamberOpenedIdle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.ShouldPlayChamberOpenedIdle");
		
		AWeapon_ShouldPlayChamberOpenedIdle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.ShouldPlayCasingEjectedSound
	 * 		Flags  -> ()
	 */
	bool AWeapon::ShouldPlayCasingEjectedSound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.ShouldPlayCasingEjectedSound");
		
		AWeapon_ShouldPlayCasingEjectedSound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.ShouldClearMalfunctionOnEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 malfunction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EWeaponMalfunctionEvent                            malfunctionEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AWeapon::ShouldClearMalfunctionOnEvent(EWeaponMalfunction malfunction, EWeaponMalfunctionEvent malfunctionEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.ShouldClearMalfunctionOnEvent");
		
		AWeapon_ShouldClearMalfunctionOnEvent_Params params {};
		params.malfunction = malfunction;
		params.malfunctionEvent = malfunctionEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetZeroRangeOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ZeroRange                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetZeroRangeOnServer(int32_t ZeroRange)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetZeroRangeOnServer");
		
		AWeapon_SetZeroRangeOnServer_Params params {};
		params.ZeroRange = ZeroRange;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetUseWeaponAnimationPose
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetUseWeaponAnimationPose(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetUseWeaponAnimationPose");
		
		AWeapon_SetUseWeaponAnimationPose_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetUseMuzzleDirectionForShooting
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetUseMuzzleDirectionForShooting(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetUseMuzzleDirectionForShooting");
		
		AWeapon_SetUseMuzzleDirectionForShooting_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetShouldPlayChamberOpenedIdle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetShouldPlayChamberOpenedIdle(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetShouldPlayChamberOpenedIdle");
		
		AWeapon_SetShouldPlayChamberOpenedIdle_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetOverrideUseWeaponAnimationPose
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetOverrideUseWeaponAnimationPose(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetOverrideUseWeaponAnimationPose");
		
		AWeapon_SetOverrideUseWeaponAnimationPose_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetMalfunction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetMalfunction(EWeaponMalfunction Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetMalfunction");
		
		AWeapon_SetMalfunction_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetMakeNoiseLoudness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetMakeNoiseLoudness(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetMakeNoiseLoudness");
		
		AWeapon_SetMakeNoiseLoudness_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetLoadedProjectileClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      projectileClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetLoadedProjectileClass(class UClass* projectileClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetLoadedProjectileClass");
		
		AWeapon_SetLoadedProjectileClass_Params params {};
		params.projectileClass = projectileClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetIsScopingAllowed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetIsScopingAllowed(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetIsScopingAllowed");
		
		AWeapon_SetIsScopingAllowed_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetIsChambering
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetIsChambering(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetIsChambering");
		
		AWeapon_SetIsChambering_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetFiringModeOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponFiringMode                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetFiringModeOnServer(EWeaponFiringMode Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetFiringModeOnServer");
		
		AWeapon_SetFiringModeOnServer_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.SetFiringMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponFiringMode                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::SetFiringMode(EWeaponFiringMode Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.SetFiringMode");
		
		AWeapon_SetFiringMode_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_SwapAttachments
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           oldAttachment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           newAttachment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::Server_SwapAttachments(class AWeaponAttachment* oldAttachment, class AWeaponAttachment* newAttachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_SwapAttachments");
		
		AWeapon_Server_SwapAttachments_Params params {};
		params.oldAttachment = oldAttachment;
		params.newAttachment = newAttachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_StopFiringEffects
	 * 		Flags  -> ()
	 */
	void AWeapon::Server_StopFiringEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_StopFiringEffects");
		
		AWeapon_Server_StopFiringEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_StopChamberEffects
	 * 		Flags  -> ()
	 */
	void AWeapon::Server_StopChamberEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_StopChamberEffects");
		
		AWeapon_Server_StopChamberEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_SetMalfunction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::Server_SetMalfunction(EWeaponMalfunction Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_SetMalfunction");
		
		AWeapon_Server_SetMalfunction_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_SetBehaviourMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponBehaviourMode                               mode                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::Server_SetBehaviourMode(EWeaponBehaviourMode mode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_SetBehaviourMode");
		
		AWeapon_Server_SetBehaviourMode_Params params {};
		params.mode = mode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_RemoveCartridgeFromWeapon
	 * 		Flags  -> ()
	 */
	void AWeapon::Server_RemoveCartridgeFromWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_RemoveCartridgeFromWeapon");
		
		AWeapon_Server_RemoveCartridgeFromWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_PlayFiringEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isLastShot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::Server_PlayFiringEffects(bool isLastShot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_PlayFiringEffects");
		
		AWeapon_Server_PlayFiringEffects_Params params {};
		params.isLastShot = isLastShot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_PlayChamberEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               playDryFireSound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::Server_PlayChamberEffects(bool playDryFireSound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_PlayChamberEffects");
		
		AWeapon_Server_PlayChamberEffects_Params params {};
		params.playDryFireSound = playDryFireSound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_OnChamberOpenedClosed
	 * 		Flags  -> ()
	 */
	void AWeapon::Server_OnChamberOpenedClosed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_OnChamberOpenedClosed");
		
		AWeapon_Server_OnChamberOpenedClosed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_OnChamberOpened
	 * 		Flags  -> ()
	 */
	void AWeapon::Server_OnChamberOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_OnChamberOpened");
		
		AWeapon_Server_OnChamberOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_OnChamberClosed
	 * 		Flags  -> ()
	 */
	void AWeapon::Server_OnChamberClosed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_OnChamberClosed");
		
		AWeapon_Server_OnChamberClosed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_InsertCartridgeIntoWeapon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionItem*                             ammo                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAmmunitionData                             AmmunitionData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AWeapon::Server_InsertCartridgeIntoWeapon(class AAmmunitionItem* ammo, const struct FAmmunitionData& AmmunitionData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_InsertCartridgeIntoWeapon");
		
		AWeapon_Server_InsertCartridgeIntoWeapon_Params params {};
		params.ammo = ammo;
		params.AmmunitionData = AmmunitionData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_FireShotProjectile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FFireShotProjectileData                     Data                                                       (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FFireShotDescription                        desc                                                       (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AWeapon::Server_FireShotProjectile(const struct FFireShotProjectileData& Data, const struct FFireShotDescription& desc)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_FireShotProjectile");
		
		AWeapon_Server_FireShotProjectile_Params params {};
		params.Data = Data;
		params.desc = desc;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_DropAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::Server_DropAttachment(class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_DropAttachment");
		
		AWeapon_Server_DropAttachment_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Server_CancelFiringEffects
	 * 		Flags  -> ()
	 */
	void AWeapon::Server_CancelFiringEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Server_CancelFiringEffects");
		
		AWeapon_Server_CancelFiringEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.ResetZeroRange
	 * 		Flags  -> ()
	 */
	void AWeapon::ResetZeroRange()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.ResetZeroRange");
		
		AWeapon_ResetZeroRange_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.RequestClearMalfunction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 malfunction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::RequestClearMalfunction(EWeaponMalfunction malfunction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.RequestClearMalfunction");
		
		AWeapon_RequestClearMalfunction_Params params {};
		params.malfunction = malfunction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.RemoveAttachmentOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::RemoveAttachmentOnServer(class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.RemoveAttachmentOnServer");
		
		AWeapon_RemoveAttachmentOnServer_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.RemoveAttachmentLocal
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::RemoveAttachmentLocal(class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.RemoveAttachmentLocal");
		
		AWeapon_RemoveAttachmentLocal_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.RemoveAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::RemoveAttachment(class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.RemoveAttachment");
		
		AWeapon_RemoveAttachment_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.RemoveAmmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Amount                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::RemoveAmmo(int32_t Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.RemoveAmmo");
		
		AWeapon_RemoveAmmo_Params params {};
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.PlayFiringEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isLastShot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::PlayFiringEffects(bool isLastShot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.PlayFiringEffects");
		
		AWeapon_PlayFiringEffects_Params params {};
		params.isLastShot = isLastShot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnWeaponActionAnimNotify
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponActionNotifyType                            notifyType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::OnWeaponActionAnimNotify(EWeaponActionNotifyType notifyType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnWeaponActionAnimNotify");
		
		AWeapon_OnWeaponActionAnimNotify_Params params {};
		params.notifyType = notifyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnStaminaDrained
	 * 		Flags  -> ()
	 */
	void AWeapon::OnStaminaDrained()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnStaminaDrained");
		
		AWeapon_OnStaminaDrained_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnShotFired
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isLastShot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::OnShotFired(bool isLastShot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnShotFired");
		
		AWeapon_OnShotFired_Params params {};
		params.isLastShot = isLastShot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnRep_WeaponAttachmentsReplicated
	 * 		Flags  -> ()
	 */
	void AWeapon::OnRep_WeaponAttachmentsReplicated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnRep_WeaponAttachmentsReplicated");
		
		AWeapon_OnRep_WeaponAttachmentsReplicated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnRep_OwnerWeaponStateSyncData
	 * 		Flags  -> ()
	 */
	void AWeapon::OnRep_OwnerWeaponStateSyncData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnRep_OwnerWeaponStateSyncData");
		
		AWeapon_OnRep_OwnerWeaponStateSyncData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnRep_Malfunction
	 * 		Flags  -> ()
	 */
	void AWeapon::OnRep_Malfunction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnRep_Malfunction");
		
		AWeapon_OnRep_Malfunction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnRep_FireShotCounterEffectsSync
	 * 		Flags  -> ()
	 */
	void AWeapon::OnRep_FireShotCounterEffectsSync()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnRep_FireShotCounterEffectsSync");
		
		AWeapon_OnRep_FireShotCounterEffectsSync_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnRep_BehaviourMode
	 * 		Flags  -> ()
	 */
	void AWeapon::OnRep_BehaviourMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnRep_BehaviourMode");
		
		AWeapon_OnRep_BehaviourMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnChamberOpened
	 * 		Flags  -> ()
	 */
	void AWeapon::OnChamberOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnChamberOpened");
		
		AWeapon_OnChamberOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnChamberClosed
	 * 		Flags  -> ()
	 */
	void AWeapon::OnChamberClosed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnChamberClosed");
		
		AWeapon_OnChamberClosed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnAttachmentRemoved
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::OnAttachmentRemoved(class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnAttachmentRemoved");
		
		AWeapon_OnAttachmentRemoved_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.OnAttachmentAdded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::OnAttachmentAdded(class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.OnAttachmentAdded");
		
		AWeapon_OnAttachmentAdded_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.NotifyMissOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector_NetQuantizeNormal                   shootDirection                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            randomSeed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              reticleSpread                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::NotifyMissOnServer(const struct FVector_NetQuantizeNormal& shootDirection, int32_t randomSeed, float reticleSpread)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.NotifyMissOnServer");
		
		AWeapon_NotifyMissOnServer_Params params {};
		params.shootDirection = shootDirection;
		params.randomSeed = randomSeed;
		params.reticleSpread = reticleSpread;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.NotifyHitOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FVector_NetQuantizeNormal                   shootDirection                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            randomSeed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              reticleSpread                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::NotifyHitOnServer(const struct FHitResult& HitResult, const struct FVector_NetQuantizeNormal& shootDirection, int32_t randomSeed, float reticleSpread)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.NotifyHitOnServer");
		
		AWeapon_NotifyHitOnServer_Params params {};
		params.HitResult = HitResult;
		params.shootDirection = shootDirection;
		params.randomSeed = randomSeed;
		params.reticleSpread = reticleSpread;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.NetMulticast_StopFiringEffects
	 * 		Flags  -> ()
	 */
	void AWeapon::NetMulticast_StopFiringEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.NetMulticast_StopFiringEffects");
		
		AWeapon_NetMulticast_StopFiringEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.NetMulticast_StopChamberEffects
	 * 		Flags  -> ()
	 */
	void AWeapon::NetMulticast_StopChamberEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.NetMulticast_StopChamberEffects");
		
		AWeapon_NetMulticast_StopChamberEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.NetMulticast_PlayFiringEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isLastShot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::NetMulticast_PlayFiringEffects(bool isLastShot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.NetMulticast_PlayFiringEffects");
		
		AWeapon_NetMulticast_PlayFiringEffects_Params params {};
		params.isLastShot = isLastShot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.NetMulticast_PlayChamberEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               playDryFireSound                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::NetMulticast_PlayChamberEffects(bool playDryFireSound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.NetMulticast_PlayChamberEffects");
		
		AWeapon_NetMulticast_PlayChamberEffects_Params params {};
		params.playDryFireSound = playDryFireSound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.NetMulticast_CancelFiringEffects
	 * 		Flags  -> ()
	 */
	void AWeapon::NetMulticast_CancelFiringEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.NetMulticast_CancelFiringEffects");
		
		AWeapon_NetMulticast_CancelFiringEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.IsMalfunctionSupported
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 malfunction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AWeapon::IsMalfunctionSupported(EWeaponMalfunction malfunction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.IsMalfunctionSupported");
		
		AWeapon_IsMalfunctionSupported_Params params {};
		params.malfunction = malfunction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.IsInGameEvent
	 * 		Flags  -> ()
	 */
	bool AWeapon::IsInGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.IsInGameEvent");
		
		AWeapon_IsInGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.IsFiring
	 * 		Flags  -> ()
	 */
	bool AWeapon::IsFiring()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.IsFiring");
		
		AWeapon_IsFiring_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.IsChamberOpened
	 * 		Flags  -> ()
	 */
	bool AWeapon::IsChamberOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.IsChamberOpened");
		
		AWeapon_IsChamberOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.IsAmmoInMagazineCompatible
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachmentMagazine*                   magazine                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AWeapon::IsAmmoInMagazineCompatible(class AWeaponAttachmentMagazine* magazine)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.IsAmmoInMagazineCompatible");
		
		AWeapon_IsAmmoInMagazineCompatible_Params params {};
		params.magazine = magazine;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.IsAmmoCompatible
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGameplayTag                                AmmunitionTag                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AWeapon::IsAmmoCompatible(const struct FGameplayTag& AmmunitionTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.IsAmmoCompatible");
		
		AWeapon_IsAmmoCompatible_Params params {};
		params.AmmunitionTag = AmmunitionTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.IncrementZeroRange
	 * 		Flags  -> ()
	 */
	void AWeapon::IncrementZeroRange()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.IncrementZeroRange");
		
		AWeapon_IncrementZeroRange_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.HasEnoughAmmo
	 * 		Flags  -> ()
	 */
	bool AWeapon::HasEnoughAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.HasEnoughAmmo");
		
		AWeapon_HasEnoughAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.HasAmmoToUnload
	 * 		Flags  -> ()
	 */
	bool AWeapon::HasAmmoToUnload()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.HasAmmoToUnload");
		
		AWeapon_HasAmmoToUnload_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetZeroRange
	 * 		Flags  -> ()
	 */
	int32_t AWeapon::GetZeroRange()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetZeroRange");
		
		AWeapon_GetZeroRange_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetWeaponOwner
	 * 		Flags  -> ()
	 */
	class APrisoner* AWeapon::GetWeaponOwner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetWeaponOwner");
		
		AWeapon_GetWeaponOwner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetUseWeaponAnimationPose
	 * 		Flags  -> ()
	 */
	bool AWeapon::GetUseWeaponAnimationPose()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetUseWeaponAnimationPose");
		
		AWeapon_GetUseWeaponAnimationPose_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetUseMuzzleDirectionForShooting
	 * 		Flags  -> ()
	 */
	bool AWeapon::GetUseMuzzleDirectionForShooting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetUseMuzzleDirectionForShooting");
		
		AWeapon_GetUseMuzzleDirectionForShooting_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetUsedAmmoCount
	 * 		Flags  -> ()
	 */
	int32_t AWeapon::GetUsedAmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetUsedAmmoCount");
		
		AWeapon_GetUsedAmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetType
	 * 		Flags  -> ()
	 */
	EWeaponType AWeapon::GetType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetType");
		
		AWeapon_GetType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetSpread
	 * 		Flags  -> ()
	 */
	float AWeapon::GetSpread()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetSpread");
		
		AWeapon_GetSpread_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetShakiness
	 * 		Flags  -> ()
	 */
	float AWeapon::GetShakiness()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetShakiness");
		
		AWeapon_GetShakiness_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetReloadActionSequenceForData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWeaponReloadData                           reloadData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UWeaponActionReloadSequence* AWeapon::GetReloadActionSequenceForData(const struct FWeaponReloadData& reloadData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetReloadActionSequenceForData");
		
		AWeapon_GetReloadActionSequenceForData_Params params {};
		params.reloadData = reloadData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetRangedWeaponsSkill
	 * 		Flags  -> ()
	 */
	class URangedWeaponsSkill* AWeapon::GetRangedWeaponsSkill()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetRangedWeaponsSkill");
		
		AWeapon_GetRangedWeaponsSkill_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetProbabilityForMalfunction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 malfunction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              normalizedHealth                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AWeapon::GetProbabilityForMalfunction(EWeaponMalfunction malfunction, float normalizedHealth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetProbabilityForMalfunction");
		
		AWeapon_GetProbabilityForMalfunction_Params params {};
		params.malfunction = malfunction;
		params.normalizedHealth = normalizedHealth;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetOverrideUseWeaponAnimationPose
	 * 		Flags  -> ()
	 */
	bool AWeapon::GetOverrideUseWeaponAnimationPose()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetOverrideUseWeaponAnimationPose");
		
		AWeapon_GetOverrideUseWeaponAnimationPose_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetMuzzleLocation
	 * 		Flags  -> ()
	 */
	struct FVector AWeapon::GetMuzzleLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetMuzzleLocation");
		
		AWeapon_GetMuzzleLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetMuzzleDirection
	 * 		Flags  -> ()
	 */
	struct FVector AWeapon::GetMuzzleDirection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetMuzzleDirection");
		
		AWeapon_GetMuzzleDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetMaxAmmoCount
	 * 		Flags  -> ()
	 */
	int32_t AWeapon::GetMaxAmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetMaxAmmoCount");
		
		AWeapon_GetMaxAmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetMalfunctionsForEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunctionEvent                            malfunctionEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FWeaponMalfunctionEventDescription          desc                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FWeaponMalfunctionProbability>       malfunctionsIn                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FWeaponMalfunctionProbability>       malfunctionsOut                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AWeapon::GetMalfunctionsForEvent(EWeaponMalfunctionEvent malfunctionEvent, const struct FWeaponMalfunctionEventDescription& desc, TArray<struct FWeaponMalfunctionProbability>* malfunctionsIn, TArray<struct FWeaponMalfunctionProbability>* malfunctionsOut)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetMalfunctionsForEvent");
		
		AWeapon_GetMalfunctionsForEvent_Params params {};
		params.malfunctionEvent = malfunctionEvent;
		params.desc = desc;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (malfunctionsIn != nullptr)
			*malfunctionsIn = params.malfunctionsIn;
		if (malfunctionsOut != nullptr)
			*malfunctionsOut = params.malfunctionsOut;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetMakeNoiseLoudness
	 * 		Flags  -> ()
	 */
	float AWeapon::GetMakeNoiseLoudness()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetMakeNoiseLoudness");
		
		AWeapon_GetMakeNoiseLoudness_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetMagazine
	 * 		Flags  -> ()
	 */
	class AWeaponAttachmentMagazine* AWeapon::GetMagazine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetMagazine");
		
		AWeapon_GetMagazine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetLoadedProjectileClass
	 * 		Flags  -> ()
	 */
	class UClass* AWeapon::GetLoadedProjectileClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetLoadedProjectileClass");
		
		AWeapon_GetLoadedProjectileClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetLoadedAmmoCount
	 * 		Flags  -> ()
	 */
	int32_t AWeapon::GetLoadedAmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetLoadedAmmoCount");
		
		AWeapon_GetLoadedAmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetLiveAmmoCount
	 * 		Flags  -> ()
	 */
	int32_t AWeapon::GetLiveAmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetLiveAmmoCount");
		
		AWeapon_GetLiveAmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetIsScopingAllowed
	 * 		Flags  -> ()
	 */
	bool AWeapon::GetIsScopingAllowed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetIsScopingAllowed");
		
		AWeapon_GetIsScopingAllowed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetIsChambering
	 * 		Flags  -> ()
	 */
	bool AWeapon::GetIsChambering()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetIsChambering");
		
		AWeapon_GetIsChambering_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetInternalMagazineSpace
	 * 		Flags  -> ()
	 */
	int32_t AWeapon::GetInternalMagazineSpace()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetInternalMagazineSpace");
		
		AWeapon_GetInternalMagazineSpace_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetInternalMagazineAmmoCount
	 * 		Flags  -> ()
	 */
	int32_t AWeapon::GetInternalMagazineAmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetInternalMagazineAmmoCount");
		
		AWeapon_GetInternalMagazineAmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetFiringMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isLastShot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAnimMontage* AWeapon::GetFiringMontage(bool isLastShot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetFiringMontage");
		
		AWeapon_GetFiringMontage_Params params {};
		params.isLastShot = isLastShot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetFiringMode
	 * 		Flags  -> ()
	 */
	EWeaponFiringMode AWeapon::GetFiringMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetFiringMode");
		
		AWeapon_GetFiringMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetFiringBodyWeaponAnimation
	 * 		Flags  -> ()
	 */
	struct FBodyWeaponAnimation AWeapon::GetFiringBodyWeaponAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetFiringBodyWeaponAnimation");
		
		AWeapon_GetFiringBodyWeaponAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetDefaultAmmunitionData
	 * 		Flags  -> ()
	 */
	struct FAmmunitionData AWeapon::GetDefaultAmmunitionData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetDefaultAmmunitionData");
		
		AWeapon_GetDefaultAmmunitionData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetAmmunitionItemClass
	 * 		Flags  -> ()
	 */
	class UClass* AWeapon::GetAmmunitionItemClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetAmmunitionItemClass");
		
		AWeapon_GetAmmunitionItemClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetAmmoTypeString
	 * 		Flags  -> ()
	 */
	class FString AWeapon::GetAmmoTypeString()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetAmmoTypeString");
		
		AWeapon_GetAmmoTypeString_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetAmmoReloadCapacity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionItem*                             ammo                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AWeapon::GetAmmoReloadCapacity(class AAmmunitionItem* ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetAmmoReloadCapacity");
		
		AWeapon_GetAmmoReloadCapacity_Params params {};
		params.ammo = ammo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.GetAmmoCount
	 * 		Flags  -> ()
	 */
	int32_t AWeapon::GetAmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.GetAmmoCount");
		
		AWeapon_GetAmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.FireShot
	 * 		Flags  -> ()
	 */
	void AWeapon::FireShot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.FireShot");
		
		AWeapon_FireShot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.FindReloadData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AItem*>                               Items                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FWeaponReloadData                           reloadData                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool AWeapon::FindReloadData(TArray<class AItem*> Items, struct FWeaponReloadData* reloadData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.FindReloadData");
		
		AWeapon_FindReloadData_Params params {};
		params.Items = Items;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (reloadData != nullptr)
			*reloadData = params.reloadData;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.FillUpWithDefaultAmmo
	 * 		Flags  -> ()
	 */
	void AWeapon::FillUpWithDefaultAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.FillUpWithDefaultAmmo");
		
		AWeapon_FillUpWithDefaultAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Equip
	 * 		Flags  -> ()
	 */
	void AWeapon::Equip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Equip");
		
		AWeapon_Equip_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.DestroyAmmunitionMeshes
	 * 		Flags  -> ()
	 */
	void AWeapon::DestroyAmmunitionMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.DestroyAmmunitionMeshes");
		
		AWeapon_DestroyAmmunitionMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.DecrementZeroRange
	 * 		Flags  -> ()
	 */
	void AWeapon::DecrementZeroRange()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.DecrementZeroRange");
		
		AWeapon_DecrementZeroRange_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.CreateAmmunitionMeshes
	 * 		Flags  -> ()
	 */
	void AWeapon::CreateAmmunitionMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.CreateAmmunitionMeshes");
		
		AWeapon_CreateAmmunitionMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.Client_SetupForEvent
	 * 		Flags  -> ()
	 */
	void AWeapon::Client_SetupForEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.Client_SetupForEvent");
		
		AWeapon_Client_SetupForEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.CanSwitchFiringMode
	 * 		Flags  -> ()
	 */
	bool AWeapon::CanSwitchFiringMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.CanSwitchFiringMode");
		
		AWeapon_CanSwitchFiringMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.CanReloadUsingData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWeaponReloadData                           Data                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool AWeapon::CanReloadUsingData(const struct FWeaponReloadData& Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.CanReloadUsingData");
		
		AWeapon_CanReloadUsingData_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.CanFireAgain
	 * 		Flags  -> ()
	 */
	bool AWeapon::CanFireAgain()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.CanFireAgain");
		
		AWeapon_CanFireAgain_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.CancelFire
	 * 		Flags  -> ()
	 */
	void AWeapon::CancelFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.CancelFire");
		
		AWeapon_CancelFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.CanBeginFiringSequenceWithMalfunction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 malfunction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AWeapon::CanBeginFiringSequenceWithMalfunction(EWeaponMalfunction malfunction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.CanBeginFiringSequenceWithMalfunction");
		
		AWeapon_CanBeginFiringSequenceWithMalfunction_Params params {};
		params.malfunction = malfunction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.CanAddAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AWeapon::CanAddAttachment(class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.CanAddAttachment");
		
		AWeapon_CanAddAttachment_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Weapon.AttachmentRemovedSignature__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::AttachmentRemovedSignature__DelegateSignature(class AWeapon* sender, class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Weapon.AttachmentRemovedSignature__DelegateSignature");
		
		AWeapon_AttachmentRemovedSignature__DelegateSignature_Params params {};
		params.sender = sender;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Weapon.AttachmentAddedSignature__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::AttachmentAddedSignature__DelegateSignature(class AWeapon* sender, class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Weapon.AttachmentAddedSignature__DelegateSignature");
		
		AWeapon_AttachmentAddedSignature__DelegateSignature_Params params {};
		params.sender = sender;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.AddAttachmentOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::AddAttachmentOnServer(class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.AddAttachmentOnServer");
		
		AWeapon_AddAttachmentOnServer_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.AddAttachmentLocal
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               attach                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::AddAttachmentLocal(class AWeaponAttachment* attachment, bool attach)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.AddAttachmentLocal");
		
		AWeapon_AddAttachmentLocal_Params params {};
		params.attachment = attachment;
		params.attach = attach;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.AddAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               attach                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               removeExistingOnTheSameMountType                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::AddAttachment(class AWeaponAttachment* attachment, bool attach, bool removeExistingOnTheSameMountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.AddAttachment");
		
		AWeapon_AddAttachment_Params params {};
		params.attachment = attachment;
		params.attach = attach;
		params.removeExistingOnTheSameMountType = removeExistingOnTheSameMountType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.AddAmmoSingleAtLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FAmmunitionData                             ammoData                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               backLocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeapon::AddAmmoSingleAtLocation(const struct FAmmunitionData& ammoData, bool backLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.AddAmmoSingleAtLocation");
		
		AWeapon_AddAmmoSingleAtLocation_Params params {};
		params.ammoData = ammoData;
		params.backLocation = backLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.AddAmmoSingle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FAmmunitionData                             ammoData                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AWeapon::AddAmmoSingle(const struct FAmmunitionData& ammoData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.AddAmmoSingle");
		
		AWeapon_AddAmmoSingle_Params params {};
		params.ammoData = ammoData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Weapon.AddAmmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FAmmunitionData>                     ammoData                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AWeapon::AddAmmo(TArray<struct FAmmunitionData> ammoData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Weapon.AddAmmo");
		
		AWeapon_AddAmmo_Params params {};
		params.ammoData = ammoData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeapon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeapon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Weapon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.RemoveCartridgeFromWeapon
	 * 		Flags  -> ()
	 */
	void UWeaponAction::RemoveCartridgeFromWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.RemoveCartridgeFromWeapon");
		
		UWeaponAction_RemoveCartridgeFromWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.RemoveAttachmentFromWeapon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponAction::RemoveAttachmentFromWeapon(class AWeapon* Weapon, class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.RemoveAttachmentFromWeapon");
		
		UWeaponAction_RemoveAttachmentFromWeapon_Params params {};
		params.Weapon = Weapon;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.OnWeaponActionAnimNotify
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponActionNotifyType                            notifyType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponAction::OnWeaponActionAnimNotify(EWeaponActionNotifyType notifyType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.OnWeaponActionAnimNotify");
		
		UWeaponAction_OnWeaponActionAnimNotify_Params params {};
		params.notifyType = notifyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.OnActionAnimNotify
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECharacterActionNotifyType                         notifyType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponAction::OnActionAnimNotify(ECharacterActionNotifyType notifyType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.OnActionAnimNotify");
		
		UWeaponAction_OnActionAnimNotify_Params params {};
		params.notifyType = notifyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.IsCharacterOwnerMountedAsDriver
	 * 		Flags  -> ()
	 */
	bool UWeaponAction::IsCharacterOwnerMountedAsDriver()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.IsCharacterOwnerMountedAsDriver");
		
		UWeaponAction_IsCharacterOwnerMountedAsDriver_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.InsertCartridgeIntoWeaponAtLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAmmunitionItem*                             ammo                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               backLocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponAction::InsertCartridgeIntoWeaponAtLocation(class AWeapon* Weapon, class AAmmunitionItem* ammo, bool backLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.InsertCartridgeIntoWeaponAtLocation");
		
		UWeaponAction_InsertCartridgeIntoWeaponAtLocation_Params params {};
		params.Weapon = Weapon;
		params.ammo = ammo;
		params.backLocation = backLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.InsertCartridgeIntoWeapon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAmmunitionItem*                             ammo                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponAction::InsertCartridgeIntoWeapon(class AWeapon* Weapon, class AAmmunitionItem* ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.InsertCartridgeIntoWeapon");
		
		UWeaponAction_InsertCartridgeIntoWeapon_Params params {};
		params.Weapon = Weapon;
		params.ammo = ammo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.InsertCartridgeIntoMagazine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachmentMagazine*                   magazine                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAmmunitionItem*                             ammo                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponAction::InsertCartridgeIntoMagazine(class AWeaponAttachmentMagazine* magazine, class AAmmunitionItem* ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.InsertCartridgeIntoMagazine");
		
		UWeaponAction_InsertCartridgeIntoMagazine_Params params {};
		params.magazine = magazine;
		params.ammo = ammo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.GetWeapon
	 * 		Flags  -> ()
	 */
	class AWeapon* UWeaponAction::GetWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.GetWeapon");
		
		UWeaponAction_GetWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAction.AddAttachmentToWeapon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponAction::AddAttachmentToWeapon(class AWeapon* Weapon, class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAction.AddAttachmentToWeapon");
		
		UWeaponAction_AddAttachmentToWeapon_Params params {};
		params.Weapon = Weapon;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.SetNextMontageSectionFromPrevious
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        previousSection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionReloadSequence::SetNextMontageSectionFromPrevious(const class FName& previousSection, const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.SetNextMontageSectionFromPrevious");
		
		UWeaponActionReloadSequence_SetNextMontageSectionFromPrevious_Params params {};
		params.previousSection = previousSection;
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.SetNextMontageSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionReloadSequence::SetNextMontageSection(const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.SetNextMontageSection");
		
		UWeaponActionReloadSequence_SetNextMontageSection_Params params {};
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.OnMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionReloadSequence::OnMontageEnded(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.OnMontageEnded");
		
		UWeaponActionReloadSequence_OnMontageEnded_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.OnMontageBlendingOutStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionReloadSequence::OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.OnMontageBlendingOutStarted");
		
		UWeaponActionReloadSequence_OnMontageBlendingOutStarted_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.IgnoreChamberBulletOnEnd
	 * 		Flags  -> ()
	 */
	bool UWeaponActionReloadSequence::IgnoreChamberBulletOnEnd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.IgnoreChamberBulletOnEnd");
		
		UWeaponActionReloadSequence_IgnoreChamberBulletOnEnd_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.GetReloadData
	 * 		Flags  -> ()
	 */
	struct FWeaponReloadData UWeaponActionReloadSequence::GetReloadData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.GetReloadData");
		
		UWeaponActionReloadSequence_GetReloadData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.GetActiveAnimationWeapon
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UWeaponActionReloadSequence::GetActiveAnimationWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.GetActiveAnimationWeapon");
		
		UWeaponActionReloadSequence_GetActiveAnimationWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.GetActiveAnimationBody
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UWeaponActionReloadSequence::GetActiveAnimationBody()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.GetActiveAnimationBody");
		
		UWeaponActionReloadSequence_GetActiveAnimationBody_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.ExecuteUsingData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWeaponReloadData                           Data                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	float UWeaponActionReloadSequence::ExecuteUsingData(const struct FWeaponReloadData& Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.ExecuteUsingData");
		
		UWeaponActionReloadSequence_ExecuteUsingData_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.End
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Regular                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionReloadSequence::End(bool Regular)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.End");
		
		UWeaponActionReloadSequence_End_Params params {};
		params.Regular = Regular;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.CanInterrupt
	 * 		Flags  -> ()
	 */
	bool UWeaponActionReloadSequence::CanInterrupt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.CanInterrupt");
		
		UWeaponActionReloadSequence_CanInterrupt_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionReloadSequence.CanExecuteUsingData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWeaponReloadData                           Data                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UWeaponActionReloadSequence::CanExecuteUsingData(const struct FWeaponReloadData& Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionReloadSequence.CanExecuteUsingData");
		
		UWeaponActionReloadSequence_CanExecuteUsingData_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponActionReloadSequence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponActionReloadSequence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponActionReloadSequence");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChamberCartridge.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChamberCartridge::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChamberCartridge");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointWidget.TieLifetimeToActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWaypointWidget::TieLifetimeToActor(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointWidget.TieLifetimeToActor");
		
		UWaypointWidget_TieLifetimeToActor_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointWidget.SetWorldPosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWaypointWidget::SetWorldPosition(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointWidget.SetWorldPosition");
		
		UWaypointWidget_SetWorldPosition_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointWidget.SetTargetActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWaypointWidget::SetTargetActor(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointWidget.SetTargetActor");
		
		UWaypointWidget_SetTargetActor_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointWidget.OnLifetimeTiedActorDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWaypointWidget::OnLifetimeTiedActorDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointWidget.OnLifetimeTiedActorDestroyed");
		
		UWaypointWidget_OnLifetimeTiedActorDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointWidget.IsOnScreen
	 * 		Flags  -> ()
	 */
	bool UWaypointWidget::IsOnScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointWidget.IsOnScreen");
		
		UWaypointWidget_IsOnScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointWidget.IsAttached
	 * 		Flags  -> ()
	 */
	bool UWaypointWidget::IsAttached()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointWidget.IsAttached");
		
		UWaypointWidget_IsAttached_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointWidget.GetTargetActor
	 * 		Flags  -> ()
	 */
	class AActor* UWaypointWidget::GetTargetActor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointWidget.GetTargetActor");
		
		UWaypointWidget_GetTargetActor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointWidget.GetDistance
	 * 		Flags  -> ()
	 */
	float UWaypointWidget::GetDistance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointWidget.GetDistance");
		
		UWaypointWidget_GetDistance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointWidget.GetAngle
	 * 		Flags  -> ()
	 */
	float UWaypointWidget::GetAngle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointWidget.GetAngle");
		
		UWaypointWidget_GetAngle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWaypointWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWaypointWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WaypointWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.ChangeTextWidget.TextAcceptedEvent__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   User                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UChangeTextWidget::TextAcceptedEvent__DelegateSignature(class APrisoner* User, const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.ChangeTextWidget.TextAcceptedEvent__DelegateSignature");
		
		UChangeTextWidget_TextAcceptedEvent__DelegateSignature_Params params {};
		params.User = User;
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChangeTextWidget.SetMaxNumberOfCharacters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UChangeTextWidget::SetMaxNumberOfCharacters(int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChangeTextWidget.SetMaxNumberOfCharacters");
		
		UChangeTextWidget_SetMaxNumberOfCharacters_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChangeTextWidget.SetCurrentInputText_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UChangeTextWidget::SetCurrentInputText_BP(const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChangeTextWidget.SetCurrentInputText_BP");
		
		UChangeTextWidget_SetCurrentInputText_BP_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChangeTextWidget.OnTextAccepted
	 * 		Flags  -> ()
	 */
	void UChangeTextWidget::OnTextAccepted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChangeTextWidget.OnTextAccepted");
		
		UChangeTextWidget_OnTextAccepted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChangeTextWidget.OnCurrentInputTextChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (Parm, NativeAccessSpecifierPublic)
	 */
	void UChangeTextWidget::OnCurrentInputTextChanged(const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChangeTextWidget.OnCurrentInputTextChanged");
		
		UChangeTextWidget_OnCurrentInputTextChanged_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChangeTextWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChangeTextWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChangeTextWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterAction.PlayMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PlayRate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        startSection                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               assignCallbacks                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UCharacterAction::PlayMontage(class UAnimMontage* Montage, float PlayRate, const class FName& startSection, bool assignCallbacks)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterAction.PlayMontage");
		
		UCharacterAction_PlayMontage_Params params {};
		params.Montage = Montage;
		params.PlayRate = PlayRate;
		params.startSection = startSection;
		params.assignCallbacks = assignCallbacks;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterAction.OnProgressWidgetFinished
	 * 		Flags  -> ()
	 */
	void UCharacterAction::OnProgressWidgetFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterAction.OnProgressWidgetFinished");
		
		UCharacterAction_OnProgressWidgetFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterAction.OnProgressWidgetCanceled
	 * 		Flags  -> ()
	 */
	void UCharacterAction::OnProgressWidgetCanceled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterAction.OnProgressWidgetCanceled");
		
		UCharacterAction_OnProgressWidgetCanceled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterAction.OnPreActionEnd
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCharacterAction*                            Action                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterAction::OnPreActionEnd(class UCharacterAction* Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterAction.OnPreActionEnd");
		
		UCharacterAction_OnPreActionEnd_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterAction.OnPostActionEnd
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCharacterAction*                            Action                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterAction::OnPostActionEnd(class UCharacterAction* Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterAction.OnPostActionEnd");
		
		UCharacterAction_OnPostActionEnd_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterAction.OnMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterAction::OnMontageEnded(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterAction.OnMontageEnded");
		
		UCharacterAction_OnMontageEnded_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterAction.OnMontageBlendingOutStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterAction::OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterAction.OnMontageBlendingOutStarted");
		
		UCharacterAction_OnMontageBlendingOutStarted_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterActionComponent.Server_NotifyReadyToDestroy
	 * 		Flags  -> ()
	 */
	void UCharacterActionComponent::Server_NotifyReadyToDestroy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterActionComponent.Server_NotifyReadyToDestroy");
		
		UCharacterActionComponent_Server_NotifyReadyToDestroy_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterActionComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterActionComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterActionComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterActionDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterActionDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterActionDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CCNonSelectableTextWidget.SetTextColor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLinearColor                                Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCCNonSelectableTextWidget::SetTextColor(const struct FLinearColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CCNonSelectableTextWidget.SetTextColor");
		
		UCCNonSelectableTextWidget_SetTextColor_Params params {};
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CCNonSelectableTextWidget.SetText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (Parm, NativeAccessSpecifierPublic)
	 */
	void UCCNonSelectableTextWidget::SetText(const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CCNonSelectableTextWidget.SetText");
		
		UCCNonSelectableTextWidget_SetText_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CCNonSelectableTextWidget.HighlightPartially
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              percent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCCNonSelectableTextWidget::HighlightPartially(float percent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CCNonSelectableTextWidget.HighlightPartially");
		
		UCCNonSelectableTextWidget_HighlightPartially_Params params {};
		params.percent = percent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCCNonSelectableTextWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCCNonSelectableTextWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CCNonSelectableTextWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CCSkillSliderWidget.HandleValueChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCCSkillSliderWidget::HandleValueChanged(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CCSkillSliderWidget.HandleValueChanged");
		
		UCCSkillSliderWidget_HandleValueChanged_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCCSkillSliderWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCCSkillSliderWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CCSkillSliderWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCCGameUpgradeConditionDisplayWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCCGameUpgradeConditionDisplayWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CCGameUpgradeConditionDisplayWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.TrySwitchingToSkillsPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::TrySwitchingToSkillsPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.TrySwitchingToSkillsPanel");
		
		UCharacterCreationMenu_TrySwitchingToSkillsPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.TrySwitchingToCriminalRecord
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::TrySwitchingToCriminalRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.TrySwitchingToCriminalRecord");
		
		UCharacterCreationMenu_TrySwitchingToCriminalRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.SwitchToSkillsPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::SwitchToSkillsPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.SwitchToSkillsPanel");
		
		UCharacterCreationMenu_SwitchToSkillsPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.SwitchToCriminalRecord
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::SwitchToCriminalRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.SwitchToCriminalRecord");
		
		UCharacterCreationMenu_SwitchToCriminalRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.SwitchToCharacterPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::SwitchToCharacterPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.SwitchToCharacterPanel");
		
		UCharacterCreationMenu_SwitchToCharacterPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.StartGame
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::StartGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.StartGame");
		
		UCharacterCreationMenu_StartGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.ShowErrorDialog
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Message                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::ShowErrorDialog(const class FText& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.ShowErrorDialog");
		
		UCharacterCreationMenu_ShowErrorDialog_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.ShowCriminalRecord
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterTemplate                          CharacterTemplate                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Mass                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::ShowCriminalRecord(const struct FCharacterTemplate& CharacterTemplate, const class FText& Mass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.ShowCriminalRecord");
		
		UCharacterCreationMenu_ShowCriminalRecord_Params params {};
		params.CharacterTemplate = CharacterTemplate;
		params.Mass = Mass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.ReturnToMainMenu
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::ReturnToMainMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.ReturnToMainMenu");
		
		UCharacterCreationMenu_ReturnToMainMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.RandomizeSkillsPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::RandomizeSkillsPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.RandomizeSkillsPanel");
		
		UCharacterCreationMenu_RandomizeSkillsPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.RandomizeCharacterPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::RandomizeCharacterPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.RandomizeCharacterPanel");
		
		UCharacterCreationMenu_RandomizeCharacterPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnUserProfileCreated
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::OnUserProfileCreated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnUserProfileCreated");
		
		UCharacterCreationMenu_OnUserProfileCreated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnTattoosChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnTattoosChanged(int32_t NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnTattoosChanged");
		
		UCharacterCreationMenu_OnTattoosChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnStrengthChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnStrengthChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnStrengthChanged");
		
		UCharacterCreationMenu_OnStrengthChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnPenisBreastSizeChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnPenisBreastSizeChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnPenisBreastSizeChanged");
		
		UCharacterCreationMenu_OnPenisBreastSizeChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnNameCommittedInSkillsPanel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        NewValue                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ETextCommit                                        CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnNameCommittedInSkillsPanel(const class FText& NewValue, ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnNameCommittedInSkillsPanel");
		
		UCharacterCreationMenu_OnNameCommittedInSkillsPanel_Params params {};
		params.NewValue = NewValue;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnNameCommittedInCharacterPanel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        NewValue                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ETextCommit                                        CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnNameCommittedInCharacterPanel(const class FText& NewValue, ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnNameCommittedInCharacterPanel");
		
		UCharacterCreationMenu_OnNameCommittedInCharacterPanel_Params params {};
		params.NewValue = NewValue;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnNameChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnNameChanged(const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnNameChanged");
		
		UCharacterCreationMenu_OnNameChanged_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnIntelligenceChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnIntelligenceChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnIntelligenceChanged");
		
		UCharacterCreationMenu_OnIntelligenceChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnGenderChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnGenderChanged(int32_t NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnGenderChanged");
		
		UCharacterCreationMenu_OnGenderChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnDexterityChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnDexterityChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnDexterityChanged");
		
		UCharacterCreationMenu_OnDexterityChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnConstitutionChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnConstitutionChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnConstitutionChanged");
		
		UCharacterCreationMenu_OnConstitutionChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnConcealedModeChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnConcealedModeChanged(int32_t NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnConcealedModeChanged");
		
		UCharacterCreationMenu_OnConcealedModeChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnCancelClickedInSkillsPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::OnCancelClickedInSkillsPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnCancelClickedInSkillsPanel");
		
		UCharacterCreationMenu_OnCancelClickedInSkillsPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnCancelClickedInCharacterPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::OnCancelClickedInCharacterPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnCancelClickedInCharacterPanel");
		
		UCharacterCreationMenu_OnCancelClickedInCharacterPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.OnAppearanceChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::OnAppearanceChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.OnAppearanceChanged");
		
		UCharacterCreationMenu_OnAppearanceChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.HandleSkillSliderValueChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCCSkillSliderWidget*                        Slider                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESkillAttribute                                    Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationMenu::HandleSkillSliderValueChanged(class UCCSkillSliderWidget* Slider, ESkillAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.HandleSkillSliderValueChanged");
		
		UCharacterCreationMenu_HandleSkillSliderValueChanged_Params params {};
		params.Slider = Slider;
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.DestroyDefaultShirtMeshComponent
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::DestroyDefaultShirtMeshComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.DestroyDefaultShirtMeshComponent");
		
		UCharacterCreationMenu_DestroyDefaultShirtMeshComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationMenu.CreateUserProfile
	 * 		Flags  -> ()
	 */
	void UCharacterCreationMenu::CreateUserProfile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationMenu.CreateUserProfile");
		
		UCharacterCreationMenu_CreateUserProfile_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterCreationMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterCreationMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterCreationMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationNonSelectableTextWidget.SetTextColor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLinearColor                                Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationNonSelectableTextWidget::SetTextColor(const struct FLinearColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationNonSelectableTextWidget.SetTextColor");
		
		UCharacterCreationNonSelectableTextWidget_SetTextColor_Params params {};
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationNonSelectableTextWidget.SetText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (Parm, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationNonSelectableTextWidget::SetText(const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationNonSelectableTextWidget.SetText");
		
		UCharacterCreationNonSelectableTextWidget_SetText_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationNonSelectableTextWidget.HighlightPartially
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              percent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationNonSelectableTextWidget::HighlightPartially(float percent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationNonSelectableTextWidget.HighlightPartially");
		
		UCharacterCreationNonSelectableTextWidget_HighlightPartially_Params params {};
		params.percent = percent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterCreationNonSelectableTextWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterCreationNonSelectableTextWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterCreationNonSelectableTextWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationSkillSliderWidget.HandleValueChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationSkillSliderWidget::HandleValueChanged(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationSkillSliderWidget.HandleValueChanged");
		
		UCharacterCreationSkillSliderWidget_HandleValueChanged_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterCreationSkillSliderWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterCreationSkillSliderWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterCreationSkillSliderWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterCreationGameUpgradeConditionDisplayWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterCreationGameUpgradeConditionDisplayWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterCreationGameUpgradeConditionDisplayWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.TrySwitchingToSkillsPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::TrySwitchingToSkillsPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.TrySwitchingToSkillsPanel");
		
		UCharacterCreationWidget_TrySwitchingToSkillsPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.TrySwitchingToCriminalRecord
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::TrySwitchingToCriminalRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.TrySwitchingToCriminalRecord");
		
		UCharacterCreationWidget_TrySwitchingToCriminalRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.SwitchToSkillsPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::SwitchToSkillsPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.SwitchToSkillsPanel");
		
		UCharacterCreationWidget_SwitchToSkillsPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.SwitchToCriminalRecord
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::SwitchToCriminalRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.SwitchToCriminalRecord");
		
		UCharacterCreationWidget_SwitchToCriminalRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.SwitchToCharacterPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::SwitchToCharacterPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.SwitchToCharacterPanel");
		
		UCharacterCreationWidget_SwitchToCharacterPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.StartGame
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::StartGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.StartGame");
		
		UCharacterCreationWidget_StartGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.ShowErrorDialog
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Message                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::ShowErrorDialog(const class FText& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.ShowErrorDialog");
		
		UCharacterCreationWidget_ShowErrorDialog_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.ShowCriminalRecord
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterTemplate                          CharacterTemplate                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Mass                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::ShowCriminalRecord(const struct FCharacterTemplate& CharacterTemplate, const class FText& Mass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.ShowCriminalRecord");
		
		UCharacterCreationWidget_ShowCriminalRecord_Params params {};
		params.CharacterTemplate = CharacterTemplate;
		params.Mass = Mass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.ReturnToMainMenu
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::ReturnToMainMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.ReturnToMainMenu");
		
		UCharacterCreationWidget_ReturnToMainMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.RandomizeSkillsPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::RandomizeSkillsPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.RandomizeSkillsPanel");
		
		UCharacterCreationWidget_RandomizeSkillsPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.RandomizeCharacterPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::RandomizeCharacterPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.RandomizeCharacterPanel");
		
		UCharacterCreationWidget_RandomizeCharacterPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnUserProfileCreated
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::OnUserProfileCreated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnUserProfileCreated");
		
		UCharacterCreationWidget_OnUserProfileCreated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnTattoosChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnTattoosChanged(int32_t NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnTattoosChanged");
		
		UCharacterCreationWidget_OnTattoosChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnStrengthChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnStrengthChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnStrengthChanged");
		
		UCharacterCreationWidget_OnStrengthChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnPenisBreastSizeChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnPenisBreastSizeChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnPenisBreastSizeChanged");
		
		UCharacterCreationWidget_OnPenisBreastSizeChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnNameCommittedInSkillsPanel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        NewValue                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ETextCommit                                        CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnNameCommittedInSkillsPanel(const class FText& NewValue, ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnNameCommittedInSkillsPanel");
		
		UCharacterCreationWidget_OnNameCommittedInSkillsPanel_Params params {};
		params.NewValue = NewValue;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnNameCommittedInCharacterPanel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        NewValue                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ETextCommit                                        CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnNameCommittedInCharacterPanel(const class FText& NewValue, ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnNameCommittedInCharacterPanel");
		
		UCharacterCreationWidget_OnNameCommittedInCharacterPanel_Params params {};
		params.NewValue = NewValue;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnNameChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnNameChanged(const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnNameChanged");
		
		UCharacterCreationWidget_OnNameChanged_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnIntelligenceChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnIntelligenceChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnIntelligenceChanged");
		
		UCharacterCreationWidget_OnIntelligenceChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnGenderChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnGenderChanged(int32_t NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnGenderChanged");
		
		UCharacterCreationWidget_OnGenderChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnDexterityChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnDexterityChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnDexterityChanged");
		
		UCharacterCreationWidget_OnDexterityChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnConstitutionChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnConstitutionChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnConstitutionChanged");
		
		UCharacterCreationWidget_OnConstitutionChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnConcealedModeChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnConcealedModeChanged(int32_t NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnConcealedModeChanged");
		
		UCharacterCreationWidget_OnConcealedModeChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnCancelClickedInSkillsPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::OnCancelClickedInSkillsPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnCancelClickedInSkillsPanel");
		
		UCharacterCreationWidget_OnCancelClickedInSkillsPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnCancelClickedInCharacterPanel
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::OnCancelClickedInCharacterPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnCancelClickedInCharacterPanel");
		
		UCharacterCreationWidget_OnCancelClickedInCharacterPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.OnAppearanceChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::OnAppearanceChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.OnAppearanceChanged");
		
		UCharacterCreationWidget_OnAppearanceChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.HandleSkillSliderValueChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCharacterCreationSkillSliderWidget*         Slider                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESkillAttribute                                    Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterCreationWidget::HandleSkillSliderValueChanged(class UCharacterCreationSkillSliderWidget* Slider, ESkillAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.HandleSkillSliderValueChanged");
		
		UCharacterCreationWidget_HandleSkillSliderValueChanged_Params params {};
		params.Slider = Slider;
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.DestroyDefaultShirtMeshComponent
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::DestroyDefaultShirtMeshComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.DestroyDefaultShirtMeshComponent");
		
		UCharacterCreationWidget_DestroyDefaultShirtMeshComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterCreationWidget.CreateUserProfile
	 * 		Flags  -> ()
	 */
	void UCharacterCreationWidget::CreateUserProfile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterCreationWidget.CreateUserProfile");
		
		UCharacterCreationWidget_CreateUserProfile_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterCreationWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterCreationWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterCreationWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterImpactSoundsData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterImpactSoundsData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterImpactSoundsData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterItemDragComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterItemDragComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterItemDragComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterMesh.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterMesh::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterMesh");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterMeshManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterMeshManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterMeshManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterPainSoundsData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterPainSoundsData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterPainSoundsData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterSelectionWidget.UpdatePreviewPrisonersInternal
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserProfile*                                profile                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterSelectionWidget::UpdatePreviewPrisonersInternal(class UUserProfile* profile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterSelectionWidget.UpdatePreviewPrisonersInternal");
		
		UCharacterSelectionWidget_UpdatePreviewPrisonersInternal_Params params {};
		params.profile = profile;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterSelectionWidget.GoBack
	 * 		Flags  -> ()
	 */
	void UCharacterSelectionWidget::GoBack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterSelectionWidget.GoBack");
		
		UCharacterSelectionWidget_GoBack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterSelectionWidget.DeleteCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserProfile*                                UserProfile                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCharacterSelectionWidget::DeleteCharacter(class UUserProfile* UserProfile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterSelectionWidget.DeleteCharacter");
		
		UCharacterSelectionWidget_DeleteCharacter_Params params {};
		params.UserProfile = UserProfile;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterSelectionWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterSelectionWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterSelectionWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterSpawnerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterSpawnerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterSpawnerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterSpawnerSpawnee.SetupCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterSpawneeInfo                       spawneeInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCharacterSpawnerSpawnee::SetupCharacter(const struct FCharacterSpawneeInfo& spawneeInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterSpawnerSpawnee.SetupCharacter");
		
		UCharacterSpawnerSpawnee_SetupCharacter_Params params {};
		params.spawneeInfo = spawneeInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterSpawnerSpawnee.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterSpawnerSpawnee::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterSpawnerSpawnee");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterSpawningManager.SpawnCharactersAroundLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSpawnCharacterAroundInfo                   Info                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ACharacterSpawningManager::SpawnCharactersAroundLocation(const struct FSpawnCharacterAroundInfo& Info)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterSpawningManager.SpawnCharactersAroundLocation");
		
		ACharacterSpawningManager_SpawnCharactersAroundLocation_Params params {};
		params.Info = Info;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterSpawningManager.SpawnCharacterGroup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSpawnCharacterGroupInfo                    Info                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ACharacterSpawningManager::SpawnCharacterGroup(const struct FSpawnCharacterGroupInfo& Info)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterSpawningManager.SpawnCharacterGroup");
		
		ACharacterSpawningManager_SpawnCharacterGroup_Params params {};
		params.Info = Info;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterSpawningManager.SpawnCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTransform                                  SpawnTransform                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      PawnClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IgnoreLimit                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ACharacterSpawningManager::SpawnCharacter(const struct FTransform& SpawnTransform, class UClass* PawnClass, bool IgnoreLimit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterSpawningManager.SpawnCharacter");
		
		ACharacterSpawningManager_SpawnCharacter_Params params {};
		params.SpawnTransform = SpawnTransform;
		params.PawnClass = PawnClass;
		params.IgnoreLimit = IgnoreLimit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterSpawningManager.OnSpawnTriggerDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACharacterSpawningManager::OnSpawnTriggerDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterSpawningManager.OnSpawnTriggerDestroyed");
		
		ACharacterSpawningManager_OnSpawnTriggerDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CharacterSpawningManager.OnSpawnedPawnDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACharacterSpawningManager::OnSpawnedPawnDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CharacterSpawningManager.OnSpawnedPawnDestroyed");
		
		ACharacterSpawningManager_OnSpawnedPawnDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACharacterSpawningManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACharacterSpawningManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterSpawningManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterSpawnerPreset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterSpawnerPreset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterSpawnerPreset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterVoiceline.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterVoiceline::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CharacterVoiceline");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChatNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChatNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChatNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChatNotificationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChatNotificationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChatNotificationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChatSuggestionWidget.SetText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Text                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UChatSuggestionWidget::SetText(const class FString& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChatSuggestionWidget.SetText");
		
		UChatSuggestionWidget_SetText_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChatSuggestionWidget.SetIsHighlighted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UChatSuggestionWidget::SetIsHighlighted(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChatSuggestionWidget.SetIsHighlighted");
		
		UChatSuggestionWidget_SetIsHighlighted_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChatSuggestionWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChatSuggestionWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChatSuggestionWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChatText.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChatText::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChatText");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChatWidget.UpdateActiveSuggestions
	 * 		Flags  -> ()
	 */
	void UChatWidget::UpdateActiveSuggestions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChatWidget.UpdateActiveSuggestions");
		
		UChatWidget_UpdateActiveSuggestions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChatWidget.SetChatType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EChatType                                          ChatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UChatWidget::SetChatType(EChatType ChatType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChatWidget.SetChatType");
		
		UChatWidget_SetChatType_Params params {};
		params.ChatType = ChatType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChatWidget.OnTextCommitted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ETextCommit                                        CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UChatWidget::OnTextCommitted(const class FText& Text, ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChatWidget.OnTextCommitted");
		
		UChatWidget_OnTextCommitted_Params params {};
		params.Text = Text;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChatWidget.OnTextChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UChatWidget::OnTextChanged(const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChatWidget.OnTextChanged");
		
		UChatWidget_OnTextChanged_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChatWidget.GetSuggestions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Text                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               useSubstring                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class FString> UChatWidget::GetSuggestions(const class FString& Text, bool useSubstring)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChatWidget.GetSuggestions");
		
		UChatWidget_GetSuggestions_Params params {};
		params.Text = Text;
		params.useSubstring = useSubstring;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChatWidget.GetChatType
	 * 		Flags  -> ()
	 */
	EChatType UChatWidget::GetChatType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChatWidget.GetChatType");
		
		UChatWidget_GetChatType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChatWidget.AddText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		EChatType                                          ChatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UChatWidget::AddText(const class FText& Text, EChatType ChatType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChatWidget.AddText");
		
		UChatWidget_AddText_Params params {};
		params.Text = Text;
		params.ChatType = ChatType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChatWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChatWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChatWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSectionFromPrevious
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        previousSection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionCheckAmmoSequence::SetNextMontageSectionFromPrevious(const class FName& previousSection, const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSectionFromPrevious");
		
		UWeaponActionCheckAmmoSequence_SetNextMontageSectionFromPrevious_Params params {};
		params.previousSection = previousSection;
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionCheckAmmoSequence::SetNextMontageSection(const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSection");
		
		UWeaponActionCheckAmmoSequence_SetNextMontageSection_Params params {};
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.OnMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionCheckAmmoSequence::OnMontageEnded(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.OnMontageEnded");
		
		UWeaponActionCheckAmmoSequence_OnMontageEnded_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.OnMontageBlendingOutStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionCheckAmmoSequence::OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.OnMontageBlendingOutStarted");
		
		UWeaponActionCheckAmmoSequence_OnMontageBlendingOutStarted_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationWeapon
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UWeaponActionCheckAmmoSequence::GetActiveAnimationWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationWeapon");
		
		UWeaponActionCheckAmmoSequence_GetActiveAnimationWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationBody
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UWeaponActionCheckAmmoSequence::GetActiveAnimationBody()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationBody");
		
		UWeaponActionCheckAmmoSequence_GetActiveAnimationBody_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.Execute
	 * 		Flags  -> ()
	 */
	float UWeaponActionCheckAmmoSequence::Execute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.Execute");
		
		UWeaponActionCheckAmmoSequence_Execute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.End
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Regular                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionCheckAmmoSequence::End(bool Regular)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.End");
		
		UWeaponActionCheckAmmoSequence_End_Params params {};
		params.Regular = Regular;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.CanInterrupt
	 * 		Flags  -> ()
	 */
	bool UWeaponActionCheckAmmoSequence::CanInterrupt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.CanInterrupt");
		
		UWeaponActionCheckAmmoSequence_CanInterrupt_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionCheckAmmoSequence.CanExecute
	 * 		Flags  -> ()
	 */
	bool UWeaponActionCheckAmmoSequence::CanExecute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionCheckAmmoSequence.CanExecute");
		
		UWeaponActionCheckAmmoSequence_CanExecute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponActionCheckAmmoSequence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponActionCheckAmmoSequence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponActionCheckAmmoSequence");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCheckAmmoMagazineAttached.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCheckAmmoMagazineAttached::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CheckAmmoMagazineAttached");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCheckAmmoMagazineNotAttached.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCheckAmmoMagazineNotAttached::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CheckAmmoMagazineNotAttached");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCheckAssetNamesCommandlet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCheckAssetNamesCommandlet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CheckAssetNamesCommandlet");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SkillAction.OnActionFinished
	 * 		Flags  -> ()
	 */
	void USkillAction::OnActionFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SkillAction.OnActionFinished");
		
		USkillAction_OnActionFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SkillAction.OnActionCanceled
	 * 		Flags  -> ()
	 */
	void USkillAction::OnActionCanceled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SkillAction.OnActionCanceled");
		
		USkillAction_OnActionCanceled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USkillAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USkillAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SkillAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCheckDetectableItemsAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCheckDetectableItemsAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CheckDetectableItemsAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCheckDetectablePlayersAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCheckDetectablePlayersAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CheckDetectablePlayersAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCheckOccludedDetectablePlayersAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCheckOccludedDetectablePlayersAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CheckOccludedDetectablePlayersAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChestItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChestItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChestItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChestItem.OnRep_LockData
	 * 		Flags  -> ()
	 */
	void AChestItem::OnRep_LockData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChestItem.OnRep_LockData");
		
		AChestItem_OnRep_LockData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChestItem.OnRep_CachedInventoryCount
	 * 		Flags  -> ()
	 */
	void AChestItem::OnRep_CachedInventoryCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChestItem.OnRep_CachedInventoryCount");
		
		AChestItem_OnRep_CachedInventoryCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChestItem.NetMulticast_TriggerLockNeutralizationFailurePenalty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      triggeringActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AChestItem::NetMulticast_TriggerLockNeutralizationFailurePenalty(class AActor* triggeringActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChestItem.NetMulticast_TriggerLockNeutralizationFailurePenalty");
		
		AChestItem_NetMulticast_TriggerLockNeutralizationFailurePenalty_Params params {};
		params.triggeringActor = triggeringActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChestItem.NetMulticast_PlayLockAddedEffects
	 * 		Flags  -> ()
	 */
	void AChestItem::NetMulticast_PlayLockAddedEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChestItem.NetMulticast_PlayLockAddedEffects");
		
		AChestItem_NetMulticast_PlayLockAddedEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChestItem.CanViewName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AChestItem::CanViewName(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChestItem.CanViewName");
		
		AChestItem_CanViewName_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChestItem.CanChangeName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AChestItem::CanChangeName(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChestItem.CanChangeName");
		
		AChestItem_CanChangeName_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChestItem.BP_OnInventoryCountChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            numContainedItems                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AChestItem::BP_OnInventoryCountChanged(int32_t numContainedItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChestItem.BP_OnInventoryCountChanged");
		
		AChestItem_BP_OnInventoryCountChanged_Params params {};
		params.numContainedItems = numContainedItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AChestItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AChestItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChestItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionAction.OnActionFinished
	 * 		Flags  -> ()
	 */
	void UInteractionAction::OnActionFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionAction.OnActionFinished");
		
		UInteractionAction_OnActionFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionAction.OnActionCanceled
	 * 		Flags  -> ()
	 */
	void UInteractionAction::OnActionCanceled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionAction.OnActionCanceled");
		
		UInteractionAction_OnActionCanceled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteractionAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractionAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteractionAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChopItemAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChopItemAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChopItemAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChoppable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChoppable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Choppable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AChoppingObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AChoppingObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChoppingObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChoppingRecipeDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChoppingRecipeDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChoppingRecipeDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UChoppingToolItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChoppingToolItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChoppingToolItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChristmasGhost.SpawnGift
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTransform                                  Transform                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AChristmasGhost::SpawnGift(const struct FTransform& Transform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChristmasGhost.SpawnGift");
		
		AChristmasGhost_SpawnGift_Params params {};
		params.Transform = Transform;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChristmasGhost.Client_SpawnGiftItemEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTransform                                  Transform                                                  (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UParticleSystem*                             ParticleSystem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               AudioEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AChristmasGhost::Client_SpawnGiftItemEffects(const struct FTransform& Transform, class UParticleSystem* ParticleSystem, class UAkAudioEvent* AudioEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChristmasGhost.Client_SpawnGiftItemEffects");
		
		AChristmasGhost_Client_SpawnGiftItemEffects_Params params {};
		params.Transform = Transform;
		params.ParticleSystem = ParticleSystem;
		params.AudioEvent = AudioEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ChristmasGhost.Client_BeginGiftAssetsLoading
	 * 		Flags  -> ()
	 */
	void AChristmasGhost::Client_BeginGiftAssetsLoading()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ChristmasGhost.Client_BeginGiftAssetsLoading");
		
		AChristmasGhost_Client_BeginGiftAssetsLoading_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AChristmasGhost.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AChristmasGhost::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ChristmasGhost");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuSegmentInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuSegmentInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuSegmentWeaponMalfunctionInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuSegmentWeaponMalfunctionInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentWeaponMalfunctionInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuSegmentIcons.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuSegmentIcons::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentIcons");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuSegmentSubmenuInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuSegmentSubmenuInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentSubmenuInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMusicPlayerSegmentSubmenuInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMusicPlayerSegmentSubmenuInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MusicPlayerSegmentSubmenuInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVoicelineSegmentInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVoicelineSegmentInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VoicelineSegmentInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuSegmentThrowingInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuSegmentThrowingInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentThrowingInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuSegmentGenericInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuSegmentGenericInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentGenericInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuSegmentInteractionInfo.CreateSpecific
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     interactable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionStruct                          InteractionStruct                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UCircularMenuSegmentInteractionInfo* UCircularMenuSegmentInteractionInfo::CreateSpecific(class APrisoner* initiator, class UObject* interactable, const struct FInteractionStruct& InteractionStruct)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuSegmentInteractionInfo.CreateSpecific");
		
		UCircularMenuSegmentInteractionInfo_CreateSpecific_Params params {};
		params.initiator = initiator;
		params.interactable = interactable;
		params.InteractionStruct = InteractionStruct;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuSegmentInteractionInfo.Create
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EInteractionTargetType                             interactionTarget                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionStruct                          InteractionStruct                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UCircularMenuSegmentInteractionInfo* UCircularMenuSegmentInteractionInfo::Create(EInteractionTargetType interactionTarget, const struct FInteractionStruct& InteractionStruct)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuSegmentInteractionInfo.Create");
		
		UCircularMenuSegmentInteractionInfo_Create_Params params {};
		params.interactionTarget = interactionTarget;
		params.InteractionStruct = InteractionStruct;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuSegmentInteractionInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuSegmentInteractionInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentInteractionInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuMusicPlayerToggleInfo.CreateSpecific
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   interactionInitiator                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     interactableObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionStruct                          firstInteractionStruct                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FInteractionStruct                          secondInteractionStruct                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UCircularMenuMusicPlayerToggleInfo* UCircularMenuMusicPlayerToggleInfo::CreateSpecific(class APrisoner* interactionInitiator, class UObject* interactableObject, const struct FInteractionStruct& firstInteractionStruct, const struct FInteractionStruct& secondInteractionStruct)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuMusicPlayerToggleInfo.CreateSpecific");
		
		UCircularMenuMusicPlayerToggleInfo_CreateSpecific_Params params {};
		params.interactionInitiator = interactionInitiator;
		params.interactableObject = interactableObject;
		params.firstInteractionStruct = firstInteractionStruct;
		params.secondInteractionStruct = secondInteractionStruct;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuMusicPlayerToggleInfo.Create
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EInteractionTargetType                             interactionTarget                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionStruct                          fistInteractionStruct                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FInteractionStruct                          secondInteractionStruct                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UCircularMenuMusicPlayerToggleInfo* UCircularMenuMusicPlayerToggleInfo::Create(EInteractionTargetType interactionTarget, const struct FInteractionStruct& fistInteractionStruct, const struct FInteractionStruct& secondInteractionStruct)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuMusicPlayerToggleInfo.Create");
		
		UCircularMenuMusicPlayerToggleInfo_Create_Params params {};
		params.interactionTarget = interactionTarget;
		params.fistInteractionStruct = fistInteractionStruct;
		params.secondInteractionStruct = secondInteractionStruct;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuMusicPlayerToggleInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuMusicPlayerToggleInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuMusicPlayerToggleInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuSegmentWidget.UpdateVisualParameters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            numberOfSegments                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              middleCutoffPercentage                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCircularMenuSegmentWidget::UpdateVisualParameters(int32_t numberOfSegments, int32_t Index, float Offset, float middleCutoffPercentage, float Size)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuSegmentWidget.UpdateVisualParameters");
		
		UCircularMenuSegmentWidget_UpdateVisualParameters_Params params {};
		params.numberOfSegments = numberOfSegments;
		params.Index = Index;
		params.Offset = Offset;
		params.middleCutoffPercentage = middleCutoffPercentage;
		params.Size = Size;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuSegmentWidget.IsTooltipEnabled
	 * 		Flags  -> ()
	 */
	bool UCircularMenuSegmentWidget::IsTooltipEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuSegmentWidget.IsTooltipEnabled");
		
		UCircularMenuSegmentWidget_IsTooltipEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuSegmentWidget.GetTooltipText
	 * 		Flags  -> ()
	 */
	class FText UCircularMenuSegmentWidget::GetTooltipText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuSegmentWidget.GetTooltipText");
		
		UCircularMenuSegmentWidget_GetTooltipText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuSegmentWidget.CreateFromInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCircularMenuSegmentInfo*                    Info                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCircularMenuSegmentWidget* UCircularMenuSegmentWidget::CreateFromInfo(class UCircularMenuSegmentInfo* Info)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuSegmentWidget.CreateFromInfo");
		
		UCircularMenuSegmentWidget_CreateFromInfo_Params params {};
		params.Info = Info;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuSegmentWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuSegmentWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuSegmentWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuWidget.InitializeThrowingLayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Layer                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UCircularMenuSegmentThrowingInfo*>    SegmentInfo                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            countParameterOverride                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCircularMenuWidget::InitializeThrowingLayer(int32_t Layer, float Offset, TArray<class UCircularMenuSegmentThrowingInfo*> SegmentInfo, int32_t countParameterOverride)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuWidget.InitializeThrowingLayer");
		
		UCircularMenuWidget_InitializeThrowingLayer_Params params {};
		params.Layer = Layer;
		params.Offset = Offset;
		params.SegmentInfo = SegmentInfo;
		params.countParameterOverride = countParameterOverride;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuWidget.InitializeLayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Layer                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UCircularMenuSegmentInfo*>            SegmentInfo                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            countParameterOverride                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               createAdditionalDummySegments                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCircularMenuWidget::InitializeLayer(int32_t Layer, float Offset, TArray<class UCircularMenuSegmentInfo*> SegmentInfo, int32_t countParameterOverride, bool createAdditionalDummySegments)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuWidget.InitializeLayer");
		
		UCircularMenuWidget_InitializeLayer_Params params {};
		params.Layer = Layer;
		params.Offset = Offset;
		params.SegmentInfo = SegmentInfo;
		params.countParameterOverride = countParameterOverride;
		params.createAdditionalDummySegments = createAdditionalDummySegments;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuWidget.GetSegmentIdForCoordinatesAndLayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   Coordinates                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Layer                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UCircularMenuWidget::GetSegmentIdForCoordinatesAndLayer(const struct FVector2D& Coordinates, int32_t Layer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuWidget.GetSegmentIdForCoordinatesAndLayer");
		
		UCircularMenuWidget_GetSegmentIdForCoordinatesAndLayer_Params params {};
		params.Coordinates = Coordinates;
		params.Layer = Layer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuWidget.GetSegmentIdForCoordinates
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   Coordinates                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Layer                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UCircularMenuWidget::GetSegmentIdForCoordinates(const struct FVector2D& Coordinates, int32_t* Layer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuWidget.GetSegmentIdForCoordinates");
		
		UCircularMenuWidget_GetSegmentIdForCoordinates_Params params {};
		params.Coordinates = Coordinates;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Layer != nullptr)
			*Layer = params.Layer;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuWidget.CreateThrowingMenuWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UCircularMenuSegmentThrowingInfo*>    throwingSegmentInfo                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UCircularMenuWidget* UCircularMenuWidget::CreateThrowingMenuWidget(class UObject* WorldContextObject, TArray<class UCircularMenuSegmentThrowingInfo*> throwingSegmentInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuWidget.CreateThrowingMenuWidget");
		
		UCircularMenuWidget_CreateThrowingMenuWidget_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.throwingSegmentInfo = throwingSegmentInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CircularMenuWidget.Create
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UCircularMenuSegmentInfo*>            SegmentInfo                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class UCircularMenuWidget* UCircularMenuWidget::Create(class UObject* WorldContextObject, TArray<class UCircularMenuSegmentInfo*> SegmentInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CircularMenuWidget.Create");
		
		UCircularMenuWidget_Create_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.SegmentInfo = SegmentInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCircularMenuWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCircularMenuWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CircularMenuWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClaimableWhenKilled.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClaimableWhenKilled::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClaimableWhenKilled");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCleaningItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCleaningItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CleaningItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.ShowOnUI
	 * 		Flags  -> ()
	 */
	bool UWeaponActionClearMalfunctionSequence::ShowOnUI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.ShowOnUI");
		
		UWeaponActionClearMalfunctionSequence_ShowOnUI_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.ShouldClearMalfunctionOnEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 malfunction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EWeaponMalfunctionEvent                            malfunctionEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponActionClearMalfunctionSequence::ShouldClearMalfunctionOnEvent(EWeaponMalfunction malfunction, EWeaponMalfunctionEvent malfunctionEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.ShouldClearMalfunctionOnEvent");
		
		UWeaponActionClearMalfunctionSequence_ShouldClearMalfunctionOnEvent_Params params {};
		params.malfunction = malfunction;
		params.malfunctionEvent = malfunctionEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSectionFromPrevious
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        previousSection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionClearMalfunctionSequence::SetNextMontageSectionFromPrevious(const class FName& previousSection, const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSectionFromPrevious");
		
		UWeaponActionClearMalfunctionSequence_SetNextMontageSectionFromPrevious_Params params {};
		params.previousSection = previousSection;
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionClearMalfunctionSequence::SetNextMontageSection(const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSection");
		
		UWeaponActionClearMalfunctionSequence_SetNextMontageSection_Params params {};
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.OnMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionClearMalfunctionSequence::OnMontageEnded(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.OnMontageEnded");
		
		UWeaponActionClearMalfunctionSequence_OnMontageEnded_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.OnMontageBlendingOutStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionClearMalfunctionSequence::OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.OnMontageBlendingOutStarted");
		
		UWeaponActionClearMalfunctionSequence_OnMontageBlendingOutStarted_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.HandleMalfunctionEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunctionEvent                            malfunctionEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FWeaponMalfunctionEventDescription          desc                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionClearMalfunctionSequence::HandleMalfunctionEvent(EWeaponMalfunctionEvent malfunctionEvent, const struct FWeaponMalfunctionEventDescription& desc)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.HandleMalfunctionEvent");
		
		UWeaponActionClearMalfunctionSequence_HandleMalfunctionEvent_Params params {};
		params.malfunctionEvent = malfunctionEvent;
		params.desc = desc;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationWeapon
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UWeaponActionClearMalfunctionSequence::GetActiveAnimationWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationWeapon");
		
		UWeaponActionClearMalfunctionSequence_GetActiveAnimationWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationBody
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UWeaponActionClearMalfunctionSequence::GetActiveAnimationBody()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationBody");
		
		UWeaponActionClearMalfunctionSequence_GetActiveAnimationBody_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.Execute
	 * 		Flags  -> ()
	 */
	float UWeaponActionClearMalfunctionSequence::Execute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.Execute");
		
		UWeaponActionClearMalfunctionSequence_Execute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.End
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Regular                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionClearMalfunctionSequence::End(bool Regular)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.End");
		
		UWeaponActionClearMalfunctionSequence_End_Params params {};
		params.Regular = Regular;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.CanInterrupt
	 * 		Flags  -> ()
	 */
	bool UWeaponActionClearMalfunctionSequence::CanInterrupt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.CanInterrupt");
		
		UWeaponActionClearMalfunctionSequence_CanInterrupt_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionClearMalfunctionSequence.CanExecute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 malfunction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponActionClearMalfunctionSequence::CanExecute(EWeaponMalfunction malfunction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionClearMalfunctionSequence.CanExecute");
		
		UWeaponActionClearMalfunctionSequence_CanExecute_Params params {};
		params.malfunction = malfunction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponActionClearMalfunctionSequence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponActionClearMalfunctionSequence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponActionClearMalfunctionSequence");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClearBadRound.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClearBadRound::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClearBadRound");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClearClipPartiallyEjected.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClearClipPartiallyEjected::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClearClipPartiallyEjected");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClearDoubleFeed.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClearDoubleFeed::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClearDoubleFeed");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClearRoundNotLoaded.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClearRoundNotLoaded::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClearRoundNotLoaded");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClearStovePipe.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClearStovePipe::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClearStovePipe");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClearStuckBullet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClearStuckBullet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClearStuckBullet");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClientPriceCache.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClientPriceCache::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClientPriceCache");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClientSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClientSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClientSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSettingsMenu.MoveFocusUp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUINavigation                                      UINavigation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UWidget* UConZSettingsMenu::MoveFocusUp(EUINavigation UINavigation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSettingsMenu.MoveFocusUp");
		
		UConZSettingsMenu_MoveFocusUp_Params params {};
		params.UINavigation = UINavigation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSettingsMenu.MoveFocusDown
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUINavigation                                      UINavigation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UWidget* UConZSettingsMenu::MoveFocusDown(EUINavigation UINavigation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSettingsMenu.MoveFocusDown");
		
		UConZSettingsMenu_MoveFocusDown_Params params {};
		params.UINavigation = UINavigation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZSettingsMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZSettingsMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZSettingsMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClientSettingsMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClientSettingsMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClientSettingsMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClientSettingsUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClientSettingsUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClientSettingsUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ClockFaceWidget.SetTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UClockFaceWidget::SetTime(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ClockFaceWidget.SetTime");
		
		UClockFaceWidget_SetTime_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ClockFaceWidget.SetMinutes
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Minutes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UClockFaceWidget::SetMinutes(int32_t Minutes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ClockFaceWidget.SetMinutes");
		
		UClockFaceWidget_SetMinutes_Params params {};
		params.Minutes = Minutes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ClockFaceWidget.SetHours
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Hours                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UClockFaceWidget::SetHours(int32_t Hours)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ClockFaceWidget.SetHours");
		
		UClockFaceWidget_SetHours_Params params {};
		params.Hours = Hours;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClockFaceWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClockFaceWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClockFaceWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClothesItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClothesItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClothesItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ClothesItem.UpdateMaterialParamsOnClients
	 * 		Flags  -> ()
	 */
	void AClothesItem::UpdateMaterialParamsOnClients()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ClothesItem.UpdateMaterialParamsOnClients");
		
		AClothesItem_UpdateMaterialParamsOnClients_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ClothesItem.SetDirtiness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              dirtiness                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AClothesItem::SetDirtiness(float dirtiness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ClothesItem.SetDirtiness");
		
		AClothesItem_SetDirtiness_Params params {};
		params.dirtiness = dirtiness;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ClothesItem.OnRep_MaterialParameters
	 * 		Flags  -> ()
	 */
	void AClothesItem::OnRep_MaterialParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ClothesItem.OnRep_MaterialParameters");
		
		AClothesItem_OnRep_MaterialParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ClothesItem.GetWarmth
	 * 		Flags  -> ()
	 */
	int32_t AClothesItem::GetWarmth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ClothesItem.GetWarmth");
		
		AClothesItem_GetWarmth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ClothesItem.GetCapacityY
	 * 		Flags  -> ()
	 */
	int32_t AClothesItem::GetCapacityY()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ClothesItem.GetCapacityY");
		
		AClothesItem_GetCapacityY_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ClothesItem.GetCapacityX
	 * 		Flags  -> ()
	 */
	int32_t AClothesItem::GetCapacityX()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ClothesItem.GetCapacityX");
		
		AClothesItem_GetCapacityX_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AClothesItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AClothesItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClothesItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UClothesModifierItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UClothesModifierItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ClothesModifierItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CollapsableContainer.OnDisplayContentButtonClicked
	 * 		Flags  -> ()
	 */
	void UCollapsableContainer::OnDisplayContentButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CollapsableContainer.OnDisplayContentButtonClicked");
		
		UCollapsableContainer_OnDisplayContentButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCollapsableContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCollapsableContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CollapsableContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteractionAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractionAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteractionAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCutObjectAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCutObjectAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CutObjectAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCollectObjectAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCollectObjectAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CollectObjectAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCollisionDamageType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCollisionDamageType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CollisionDamageType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UComboBoxStringWithIndexing.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UComboBoxStringWithIndexing::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ComboBoxStringWithIndexing");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCommonCraftingRecipe.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCommonCraftingRecipe::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CommonCraftingRecipe");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCompanionCrowAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCompanionCrowAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CompanionCrowAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACompanionCrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACompanionCrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CompanionCrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCompassItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCompassItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CompassItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCompassWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCompassWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CompassWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.Wait
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::Wait(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.Wait");
		
		AComplexAnimal2_Wait_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.TurnTowardLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AComplexAnimal2::TurnTowardLocation(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.TurnTowardLocation");
		
		AComplexAnimal2_TurnTowardLocation_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.TurnTowardActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      foe                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AComplexAnimal2::TurnTowardActor(class AActor* foe)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.TurnTowardActor");
		
		AComplexAnimal2_TurnTowardActor_Params params {};
		params.foe = foe;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.TurnAwayFromActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      foe                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AComplexAnimal2::TurnAwayFromActor(class AActor* foe)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.TurnAwayFromActor");
		
		AComplexAnimal2_TurnAwayFromActor_Params params {};
		params.foe = foe;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.Turn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               directionLeft                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AComplexAnimal2::Turn(bool directionLeft)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.Turn");
		
		AComplexAnimal2_Turn_Params params {};
		params.directionLeft = directionLeft;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.StopAction_Multicast
	 * 		Flags  -> ()
	 */
	void AComplexAnimal2::StopAction_Multicast()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.StopAction_Multicast");
		
		AComplexAnimal2_StopAction_Multicast_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.StartAction_Multicast
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRepActionData                              newAction                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::StartAction_Multicast(const struct FRepActionData& newAction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.StartAction_Multicast");
		
		AComplexAnimal2_StartAction_Multicast_Params params {};
		params.newAction = newAction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.Sit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::Sit(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.Sit");
		
		AComplexAnimal2_Sit_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.Rest
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::Rest(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.Rest");
		
		AComplexAnimal2_Rest_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.ResetRotationRate
	 * 		Flags  -> ()
	 */
	void AComplexAnimal2::ResetRotationRate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.ResetRotationRate");
		
		AComplexAnimal2_ResetRotationRate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.PreformChargeAttack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            attackIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AComplexAnimal2::PreformChargeAttack(int32_t attackIndex, float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.PreformChargeAttack");
		
		AComplexAnimal2_PreformChargeAttack_Params params {};
		params.attackIndex = attackIndex;
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.OnRep_HungerAndEnergy
	 * 		Flags  -> ()
	 */
	void AComplexAnimal2::OnRep_HungerAndEnergy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.OnRep_HungerAndEnergy");
		
		AComplexAnimal2_OnRep_HungerAndEnergy_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.OnRep_ActionData
	 * 		Flags  -> ()
	 */
	void AComplexAnimal2::OnRep_ActionData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.OnRep_ActionData");
		
		AComplexAnimal2_OnRep_ActionData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.NetMulticast_ForceSetAnimalRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRotator                                    NewRotation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::NetMulticast_ForceSetAnimalRotation(const struct FRotator& NewRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.NetMulticast_ForceSetAnimalRotation");
		
		AComplexAnimal2_NetMulticast_ForceSetAnimalRotation_Params params {};
		params.NewRotation = NewRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.IsAttacking
	 * 		Flags  -> ()
	 */
	bool AComplexAnimal2::IsAttacking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.IsAttacking");
		
		AComplexAnimal2_IsAttacking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.Intimidate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      foe                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::Intimidate(float Time, class AActor* foe)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.Intimidate");
		
		AComplexAnimal2_Intimidate_Params params {};
		params.Time = Time;
		params.foe = foe;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.GetSpeed
	 * 		Flags  -> ()
	 */
	struct FVector AComplexAnimal2::GetSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.GetSpeed");
		
		AComplexAnimal2_GetSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.GetAngularVelocity
	 * 		Flags  -> ()
	 */
	float AComplexAnimal2::GetAngularVelocity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.GetAngularVelocity");
		
		AComplexAnimal2_GetAngularVelocity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.ForceRoattionRate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRotator                                    RotationRate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::ForceRoattionRate(const struct FRotator& RotationRate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.ForceRoattionRate");
		
		AComplexAnimal2_ForceRoattionRate_Params params {};
		params.RotationRate = RotationRate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.Eat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::Eat(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.Eat");
		
		AComplexAnimal2_Eat_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.ChargeAttackFoe
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      foe                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AComplexAnimal2::ChargeAttackFoe(class AActor* foe)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.ChargeAttackFoe");
		
		AComplexAnimal2_ChargeAttackFoe_Params params {};
		params.foe = foe;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.ChangeSpeed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              pace                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::ChangeSpeed(float pace)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.ChangeSpeed");
		
		AComplexAnimal2_ChangeSpeed_Params params {};
		params.pace = pace;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.ChangePace
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EAnimalMovementPace                                pace                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::ChangePace(EAnimalMovementPace pace)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.ChangePace");
		
		AComplexAnimal2_ChangePace_Params params {};
		params.pace = pace;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2.Alert
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AComplexAnimal2::Alert(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2.Alert");
		
		AComplexAnimal2_Alert_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AComplexAnimal2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AComplexAnimal2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ComplexAnimal2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeRight
	 * 		Flags  -> ()
	 */
	float UComplexAnimal2AnimInstance::GetTurnInPlaceElapsedTimeRight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeRight");
		
		UComplexAnimal2AnimInstance_GetTurnInPlaceElapsedTimeRight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeLeft
	 * 		Flags  -> ()
	 */
	float UComplexAnimal2AnimInstance::GetTurnInPlaceElapsedTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeLeft");
		
		UComplexAnimal2AnimInstance_GetTurnInPlaceElapsedTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceDirectionBlendAlpha
	 * 		Flags  -> ()
	 */
	float UComplexAnimal2AnimInstance::GetTurnInPlaceDirectionBlendAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceDirectionBlendAlpha");
		
		UComplexAnimal2AnimInstance_GetTurnInPlaceDirectionBlendAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceBlendAlpha
	 * 		Flags  -> ()
	 */
	float UComplexAnimal2AnimInstance::GetTurnInPlaceBlendAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceBlendAlpha");
		
		UComplexAnimal2AnimInstance_GetTurnInPlaceBlendAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UComplexAnimal2AnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UComplexAnimal2AnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ComplexAnimal2AnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConsoleStatics.SetConfigVar2
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EConfigFile                                        file                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConsoleStatics::SetConfigVar2(EConfigFile file, const class FString& Key, const class FString& Value, const class FString& Section)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConsoleStatics.SetConfigVar2");
		
		UConsoleStatics_SetConfigVar2_Params params {};
		params.file = file;
		params.Key = Key;
		params.Value = Value;
		params.Section = Section;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConsoleStatics.GetConfigVar
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EConfigFile                                        file                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UConsoleStatics::GetConfigVar(EConfigFile file, const class FString& Key, const class FString& Section)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConsoleStatics.GetConfigVar");
		
		UConsoleStatics_GetConfigVar_Params params {};
		params.file = file;
		params.Key = Key;
		params.Section = Section;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConsoleStatics.GetConfigString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UConsoleStatics::GetConfigString(const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConsoleStatics.GetConfigString");
		
		UConsoleStatics_GetConfigString_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConsoleStatics.GetConfigInt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UConsoleStatics::GetConfigInt(const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConsoleStatics.GetConfigInt");
		
		UConsoleStatics_GetConfigInt_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConsoleStatics.GetConfigFloat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UConsoleStatics::GetConfigFloat(const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConsoleStatics.GetConfigFloat");
		
		UConsoleStatics_GetConfigFloat_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConsoleStatics.GetConfigFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EConfigFile                                        file                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UConsoleStatics::GetConfigFileName(EConfigFile file)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConsoleStatics.GetConfigFileName");
		
		UConsoleStatics_GetConfigFileName_Params params {};
		params.file = file;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConsoleStatics.GetConfigBool
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UConsoleStatics::GetConfigBool(const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConsoleStatics.GetConfigBool");
		
		UConsoleStatics_GetConfigBool_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConsoleStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConsoleStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConsoleStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConstitutionSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConstitutionSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConstitutionSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConsumableDigestionHandler.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConsumableDigestionHandler::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConsumableDigestionHandler");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UContainerDisplay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UContainerDisplay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ContainerDisplay");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ContainerItemDescriptor.OnItemStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UContainerItemDescriptor::OnItemStateChanged(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ContainerItemDescriptor.OnItemStateChanged");
		
		UContainerItemDescriptor_OnItemStateChanged_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ContainerItemDescriptor.OnItemDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UContainerItemDescriptor::OnItemDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ContainerItemDescriptor.OnItemDestroyed");
		
		UContainerItemDescriptor_OnItemDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UContainerItemDescriptor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UContainerItemDescriptor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ContainerItemDescriptor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZAssetManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZAssetManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZAssetManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBase.OnElementInteracted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   User                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInteractionType                                   interactionType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionData                            InteractionData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FBaseInteractionParams                      BaseInteractionParams                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZBase::OnElementInteracted(class APrisoner* User, EInteractionType interactionType, const struct FInteractionData& InteractionData, const struct FBaseInteractionParams& BaseInteractionParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBase.OnElementInteracted");
		
		AConZBase_OnElementInteracted_Params params {};
		params.User = User;
		params.interactionType = interactionType;
		params.InteractionData = InteractionData;
		params.BaseInteractionParams = BaseInteractionParams;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBase.GetBaseName
	 * 		Flags  -> ()
	 */
	class FString AConZBase::GetBaseName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBase.GetBaseName");
		
		AConZBase_GetBaseName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZBaseElement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZBaseElement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBaseElement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_UpdateDoorData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     doorLocation                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDoorRepData                                doorData                                                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_UpdateDoorData(int32_t dataVersion, const struct FVector& doorLocation, const struct FDoorRepData& doorData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_UpdateDoorData");
		
		AConZBaseManager_NetMulticast_UpdateDoorData_Params params {};
		params.dataVersion = dataVersion;
		params.doorLocation = doorLocation;
		params.doorData = doorData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_TransferOwnership
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                oldId                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                newId                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_TransferOwnership(int32_t dataVersion, const struct FDbIntegerId& oldId, const struct FDbIntegerId& newId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_TransferOwnership");
		
		AConZBaseManager_NetMulticast_TransferOwnership_Params params {};
		params.dataVersion = dataVersion;
		params.oldId = oldId;
		params.newId = newId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_SpawnBaseElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  Transform                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FConZBaseData                               baseData                                                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ElementClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int64_t                                            ElementID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int64_t                                            OwnerUserProfileId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int64_t                                            CreatorPrisonerId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsOwnedByPlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBaseElementSpawnParams                     Params                                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_SpawnBaseElement(int32_t dataVersion, const struct FTransform& Transform, const struct FConZBaseData& baseData, class UClass* ElementClass, int64_t ElementID, int64_t OwnerUserProfileId, int64_t CreatorPrisonerId, bool IsOwnedByPlayer, const struct FBaseElementSpawnParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_SpawnBaseElement");
		
		AConZBaseManager_NetMulticast_SpawnBaseElement_Params params {};
		params.dataVersion = dataVersion;
		params.Transform = Transform;
		params.baseData = baseData;
		params.ElementClass = ElementClass;
		params.ElementID = ElementID;
		params.OwnerUserProfileId = OwnerUserProfileId;
		params.CreatorPrisonerId = CreatorPrisonerId;
		params.IsOwnedByPlayer = IsOwnedByPlayer;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_SetDebugMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EBaseBuildingDebugMode                             mode                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_SetDebugMode(class APrisoner* Prisoner, EBaseBuildingDebugMode mode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_SetDebugMode");
		
		AConZBaseManager_NetMulticast_SetDebugMode_Params params {};
		params.Prisoner = Prisoner;
		params.mode = mode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_SetBaseOwnerPlayerId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FConZBaseInteractionData                    baseData                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int64_t                                            PlayerId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_SetBaseOwnerPlayerId(int32_t dataVersion, const struct FConZBaseInteractionData& baseData, int64_t PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_SetBaseOwnerPlayerId");
		
		AConZBaseManager_NetMulticast_SetBaseOwnerPlayerId_Params params {};
		params.dataVersion = dataVersion;
		params.baseData = baseData;
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_ProcessDecay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_ProcessDecay(int32_t dataVersion, float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_ProcessDecay");
		
		AConZBaseManager_NetMulticast_ProcessDecay_Params params {};
		params.dataVersion = dataVersion;
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_InteractWithElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInteractionType                                   interactionType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FConZBaseInteractionData                    baseData                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FConZBaseElementInteractionData             baseElementData                                            (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class APrisoner*                                   User                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_InteractWithElement(int32_t dataVersion, EInteractionType interactionType, const struct FConZBaseInteractionData& baseData, const struct FConZBaseElementInteractionData& baseElementData, class APrisoner* User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_InteractWithElement");
		
		AConZBaseManager_NetMulticast_InteractWithElement_Params params {};
		params.dataVersion = dataVersion;
		params.interactionType = interactionType;
		params.baseData = baseData;
		params.baseElementData = baseElementData;
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_ExecuteFlagOvertake
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int64_t                                            ElementID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     elementLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                PlayerId                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_ExecuteFlagOvertake(int32_t dataVersion, int64_t ElementID, const struct FVector& elementLocation, const struct FDbIntegerId& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_ExecuteFlagOvertake");
		
		AConZBaseManager_NetMulticast_ExecuteFlagOvertake_Params params {};
		params.dataVersion = dataVersion;
		params.ElementID = ElementID;
		params.elementLocation = elementLocation;
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_DestroyElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FConZBaseElementIdentifier                  ElementIdentifier                                          (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               cascade                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_DestroyElement(int32_t dataVersion, const struct FConZBaseElementIdentifier& ElementIdentifier, bool cascade)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_DestroyElement");
		
		AConZBaseManager_NetMulticast_DestroyElement_Params params {};
		params.dataVersion = dataVersion;
		params.ElementIdentifier = ElementIdentifier;
		params.cascade = cascade;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_DestroyAllElementsInRadius
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Center                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              minElementAreaCovered                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              minAngleDeg                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              maxAngleDeg                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     forwardVector                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EBaseElementType                                   typeFilter                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_DestroyAllElementsInRadius(int32_t dataVersion, const struct FVector& Center, float Radius, float minElementAreaCovered, float minAngleDeg, float maxAngleDeg, const struct FVector& forwardVector, EBaseElementType typeFilter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_DestroyAllElementsInRadius");
		
		AConZBaseManager_NetMulticast_DestroyAllElementsInRadius_Params params {};
		params.dataVersion = dataVersion;
		params.Center = Center;
		params.Radius = Radius;
		params.minElementAreaCovered = minElementAreaCovered;
		params.minAngleDeg = minAngleDeg;
		params.maxAngleDeg = maxAngleDeg;
		params.forwardVector = forwardVector;
		params.typeFilter = typeFilter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_ClearBaseOwnerPlayerId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FConZBaseInteractionData                    baseData                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_ClearBaseOwnerPlayerId(int32_t dataVersion, const struct FConZBaseInteractionData& baseData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_ClearBaseOwnerPlayerId");
		
		AConZBaseManager_NetMulticast_ClearBaseOwnerPlayerId_Params params {};
		params.dataVersion = dataVersion;
		params.baseData = baseData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_ChangeFlagOwner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                oldOwnerId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                newOwnerId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_ChangeFlagOwner(int32_t dataVersion, const struct FDbIntegerId& oldOwnerId, const struct FDbIntegerId& newOwnerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_ChangeFlagOwner");
		
		AConZBaseManager_NetMulticast_ChangeFlagOwner_Params params {};
		params.dataVersion = dataVersion;
		params.oldOwnerId = oldOwnerId;
		params.newOwnerId = newOwnerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBaseManager.NetMulticast_ApplyDamageToBaseElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int64_t                                            BaseId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int64_t                                            ElementID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     elementLocation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              damageAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBaseManager::NetMulticast_ApplyDamageToBaseElement(int32_t dataVersion, int64_t BaseId, int64_t ElementID, const struct FVector& elementLocation, float damageAmount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBaseManager.NetMulticast_ApplyDamageToBaseElement");
		
		AConZBaseManager_NetMulticast_ApplyDamageToBaseElement_Params params {};
		params.dataVersion = dataVersion;
		params.BaseId = BaseId;
		params.ElementID = ElementID;
		params.elementLocation = elementLocation;
		params.damageAmount = damageAmount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZBaseManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZBaseManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBaseManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.Server_UnmountAllMountees
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUnmountFlags                                      Flags                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBoat::Server_UnmountAllMountees(EUnmountFlags Flags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.Server_UnmountAllMountees");
		
		AConZBoat_Server_UnmountAllMountees_Params params {};
		params.Flags = Flags;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.Server_StopEngineViaStall
	 * 		Flags  -> ()
	 */
	void AConZBoat::Server_StopEngineViaStall()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.Server_StopEngineViaStall");
		
		AConZBoat_Server_StopEngineViaStall_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.Server_StopEngineViaIgnition
	 * 		Flags  -> ()
	 */
	void AConZBoat::Server_StopEngineViaIgnition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.Server_StopEngineViaIgnition");
		
		AConZBoat_Server_StopEngineViaIgnition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.Server_StopEngineViaBeingBroken
	 * 		Flags  -> ()
	 */
	void AConZBoat::Server_StopEngineViaBeingBroken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.Server_StopEngineViaBeingBroken");
		
		AConZBoat_Server_StopEngineViaBeingBroken_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.Server_StopEngineStalling
	 * 		Flags  -> ()
	 */
	void AConZBoat::Server_StopEngineStalling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.Server_StopEngineStalling");
		
		AConZBoat_Server_StopEngineStalling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.Server_StartEngineViaIgnition
	 * 		Flags  -> ()
	 */
	void AConZBoat::Server_StartEngineViaIgnition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.Server_StartEngineViaIgnition");
		
		AConZBoat_Server_StartEngineViaIgnition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.Server_StartEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVehicleEngineStallingParameters            parameters                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZBoat::Server_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.Server_StartEngineStalling");
		
		AConZBoat_Server_StartEngineStalling_Params params {};
		params.parameters = parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.Server_RepairEngineBlock
	 * 		Flags  -> ()
	 */
	void AConZBoat::Server_RepairEngineBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.Server_RepairEngineBlock");
		
		AConZBoat_Server_RepairEngineBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.Server_ApplyImpactDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AConZBoat::Server_ApplyImpactDamage(float Damage, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.Server_ApplyImpactDamage");
		
		AConZBoat_Server_ApplyImpactDamage_Params params {};
		params.Damage = Damage;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.ReceiveBeginHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         MyComp                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               selfMoved                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitNormal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AConZBoat::ReceiveBeginHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool selfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.ReceiveBeginHit");
		
		AConZBoat_ReceiveBeginHit_Params params {};
		params.MyComp = MyComp;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.selfMoved = selfMoved;
		params.HitLocation = HitLocation;
		params.HitNormal = HitNormal;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.OnRep_ItemContainerContainedItemsMass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBoat::OnRep_ItemContainerContainedItemsMass(float OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.OnRep_ItemContainerContainedItemsMass");
		
		AConZBoat_OnRep_ItemContainerContainedItemsMass_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.OnRep_HealthFuelBatteryAmount
	 * 		Flags  -> ()
	 */
	void AConZBoat::OnRep_HealthFuelBatteryAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.OnRep_HealthFuelBatteryAmount");
		
		AConZBoat_OnRep_HealthFuelBatteryAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.OnRep_EngineState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EVehicleEngineState                                OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBoat::OnRep_EngineState(EVehicleEngineState OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.OnRep_EngineState");
		
		AConZBoat_OnRep_EngineState_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.NetMulticast_StopEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               skipLocallyControlled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBoat::NetMulticast_StopEngineStalling(bool skipLocallyControlled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.NetMulticast_StopEngineStalling");
		
		AConZBoat_NetMulticast_StopEngineStalling_Params params {};
		params.skipLocallyControlled = skipLocallyControlled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.NetMulticast_StartEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVehicleEngineStallingParameters            parameters                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               skipLocallyControlled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZBoat::NetMulticast_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters, bool skipLocallyControlled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.NetMulticast_StartEngineStalling");
		
		AConZBoat_NetMulticast_StartEngineStalling_Params params {};
		params.parameters = parameters;
		params.skipLocallyControlled = skipLocallyControlled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.GetMesh
	 * 		Flags  -> ()
	 */
	class USkeletalMeshComponent* AConZBoat::GetMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.GetMesh");
		
		AConZBoat_GetMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZBoat.CanBeInteractedWith
	 * 		Flags  -> ()
	 */
	bool AConZBoat::CanBeInteractedWith()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZBoat.CanBeInteractedWith");
		
		AConZBoat_CanBeInteractedWith_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZBoat.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZBoat::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBoat");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZBoatAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZBoatAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBoatAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZBoatMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZBoatMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBoatMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZBoatDriverMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZBoatDriverMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBoatDriverMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZBoatPassengerMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZBoatPassengerMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBoatPassengerMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZBoatComboMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZBoatComboMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBoatComboMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZBuoyancyComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZBuoyancyComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZBuoyancyComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZButton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZButton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZButton");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZCameraManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZCameraManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZCameraManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZEconomyManager.NetMulticast_UpdateTradeablePriceMultiplierFactor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            tradeablePriceMultiplierFactor                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZEconomyManager::NetMulticast_UpdateTradeablePriceMultiplierFactor(int32_t dataVersion, int32_t tradeablePriceMultiplierFactor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZEconomyManager.NetMulticast_UpdateTradeablePriceMultiplierFactor");
		
		AConZEconomyManager_NetMulticast_UpdateTradeablePriceMultiplierFactor_Params params {};
		params.dataVersion = dataVersion;
		params.tradeablePriceMultiplierFactor = tradeablePriceMultiplierFactor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZEconomyManager.NetMulticast_UpdateTradeableClassMapHelperOverrides
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTradeableClassDataOverrideReplicationHelper overrideUpdates                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZEconomyManager::NetMulticast_UpdateTradeableClassMapHelperOverrides(int32_t dataVersion, const struct FTradeableClassDataOverrideReplicationHelper& overrideUpdates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZEconomyManager.NetMulticast_UpdateTradeableClassMapHelperOverrides");
		
		AConZEconomyManager_NetMulticast_UpdateTradeableClassMapHelperOverrides_Params params {};
		params.dataVersion = dataVersion;
		params.overrideUpdates = overrideUpdates;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZEconomyManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZEconomyManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZEconomyManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.StartSingleplayerGame
	 * 		Flags  -> ()
	 */
	void UConZGameInstance::StartSingleplayerGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.StartSingleplayerGame");
		
		UConZGameInstance_StartSingleplayerGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.StartMultiplayerGame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Ip                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameplayPort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResponsePort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AuthToken                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZGameInstance::StartMultiplayerGame(const class FString& Ip, int32_t GameplayPort, int32_t ResponsePort, const class FString& AuthToken)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.StartMultiplayerGame");
		
		UConZGameInstance_StartMultiplayerGame_Params params {};
		params.Ip = Ip;
		params.GameplayPort = GameplayPort;
		params.ResponsePort = ResponsePort;
		params.AuthToken = AuthToken;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.SetPlayAsDrone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZGameInstance::SetPlayAsDrone(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.SetPlayAsDrone");
		
		UConZGameInstance_SetPlayAsDrone_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.SetCurrentUserProfile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserProfile*                                Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZGameInstance::SetCurrentUserProfile(class UUserProfile* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.SetCurrentUserProfile");
		
		UConZGameInstance_SetCurrentUserProfile_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.RemoveLoadingWidget
	 * 		Flags  -> ()
	 */
	void UConZGameInstance::RemoveLoadingWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.RemoveLoadingWidget");
		
		UConZGameInstance_RemoveLoadingWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.OnPreLoadMap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      mapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZGameInstance::OnPreLoadMap(const class FString& mapName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.OnPreLoadMap");
		
		UConZGameInstance_OnPreLoadMap_Params params {};
		params.mapName = mapName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.OnPostLoadMap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWorld*                                      loadedWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZGameInstance::OnPostLoadMap(class UWorld* loadedWorld)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.OnPostLoadMap");
		
		UConZGameInstance_OnPostLoadMap_Params params {};
		params.loadedWorld = loadedWorld;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.OnPlaySessionEnd
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               quit                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZGameInstance::OnPlaySessionEnd(bool quit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.OnPlaySessionEnd");
		
		UConZGameInstance_OnPlaySessionEnd_Params params {};
		params.quit = quit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.IsTransitioningMap
	 * 		Flags  -> ()
	 */
	bool UConZGameInstance::IsTransitioningMap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.IsTransitioningMap");
		
		UConZGameInstance_IsTransitioningMap_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.HandleNetworkFailure
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWorld*                                      World                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UNetDriver*                                  NetDriver                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ENetworkFailure                                    FailureType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      errorString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZGameInstance::HandleNetworkFailure(class UWorld* World, class UNetDriver* NetDriver, ENetworkFailure FailureType, const class FString& errorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.HandleNetworkFailure");
		
		UConZGameInstance_HandleNetworkFailure_Params params {};
		params.World = World;
		params.NetDriver = NetDriver;
		params.FailureType = FailureType;
		params.errorString = errorString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.GetUserManager
	 * 		Flags  -> ()
	 */
	class UUserManager* UConZGameInstance::GetUserManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.GetUserManager");
		
		UConZGameInstance_GetUserManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.GetPlayAsDrone
	 * 		Flags  -> ()
	 */
	bool UConZGameInstance::GetPlayAsDrone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.GetPlayAsDrone");
		
		UConZGameInstance_GetPlayAsDrone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.GetLastNetworkError
	 * 		Flags  -> ()
	 */
	class FText UConZGameInstance::GetLastNetworkError()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.GetLastNetworkError");
		
		UConZGameInstance_GetLastNetworkError_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.GetDedicatedServerRequest
	 * 		Flags  -> ()
	 */
	class UDedicatedServerRequest* UConZGameInstance::GetDedicatedServerRequest()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.GetDedicatedServerRequest");
		
		UConZGameInstance_GetDedicatedServerRequest_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.GetDatabaseConnection
	 * 		Flags  -> ()
	 */
	class UDbConnection* UConZGameInstance::GetDatabaseConnection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.GetDatabaseConnection");
		
		UConZGameInstance_GetDatabaseConnection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.GetCurrentUserProfile
	 * 		Flags  -> ()
	 */
	class UUserProfile* UConZGameInstance::GetCurrentUserProfile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.GetCurrentUserProfile");
		
		UConZGameInstance_GetCurrentUserProfile_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.GetCurrentUser
	 * 		Flags  -> ()
	 */
	class UUser* UConZGameInstance::GetCurrentUser()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.GetCurrentUser");
		
		UConZGameInstance_GetCurrentUser_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.AddLoadingWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ULoadingScreen*                              Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZGameInstance::AddLoadingWidget(class ULoadingScreen* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.AddLoadingWidget");
		
		UConZGameInstance_AddLoadingWidget_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameInstance.AddDefaultLoadingWidget
	 * 		Flags  -> ()
	 */
	void UConZGameInstance::AddDefaultLoadingWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameInstance.AddDefaultLoadingWidget");
		
		UConZGameInstance_AddDefaultLoadingWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZGameInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZGameInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZGameInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.SendHUDMessageToAll
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               beep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZGameMode::SendHUDMessageToAll(const class FString& Message, bool beep)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.SendHUDMessageToAll");
		
		AConZGameMode_SendHUDMessageToAll_Params params {};
		params.Message = Message;
		params.beep = beep;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.KickPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZPlayerController*                       Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      KickReason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZGameMode::KickPlayer(class AConZPlayerController* Player, const class FString& KickReason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.KickPlayer");
		
		AConZGameMode_KickPlayer_Params params {};
		params.Player = Player;
		params.KickReason = KickReason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetVehicleSpawningManager
	 * 		Flags  -> ()
	 */
	class AVehicleSpawningManager* AConZGameMode::GetVehicleSpawningManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetVehicleSpawningManager");
		
		AConZGameMode_GetVehicleSpawningManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetSurvivalStatsHandler
	 * 		Flags  -> ()
	 */
	class ASurvivalStatsHandler* AConZGameMode::GetSurvivalStatsHandler()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetSurvivalStatsHandler");
		
		AConZGameMode_GetSurvivalStatsHandler_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetReportingManager
	 * 		Flags  -> ()
	 */
	class AReportingManager* AConZGameMode::GetReportingManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetReportingManager");
		
		AConZGameMode_GetReportingManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetMissionScheduler
	 * 		Flags  -> ()
	 */
	class AMissionScheduler* AConZGameMode::GetMissionScheduler()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetMissionScheduler");
		
		AConZGameMode_GetMissionScheduler_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetMissionLevelManager
	 * 		Flags  -> ()
	 */
	class AMissionLevelManager* AConZGameMode::GetMissionLevelManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetMissionLevelManager");
		
		AConZGameMode_GetMissionLevelManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetLadderMarkersReplicator
	 * 		Flags  -> ()
	 */
	class ALadderMarkersReplicator* AConZGameMode::GetLadderMarkersReplicator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetLadderMarkersReplicator");
		
		AConZGameMode_GetLadderMarkersReplicator_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetItemVirtualizationManager
	 * 		Flags  -> ()
	 */
	class AItemVirtualizationManager* AConZGameMode::GetItemVirtualizationManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetItemVirtualizationManager");
		
		AConZGameMode_GetItemVirtualizationManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetItemSpawningManager
	 * 		Flags  -> ()
	 */
	class AItemSpawningManager* AConZGameMode::GetItemSpawningManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetItemSpawningManager");
		
		AConZGameMode_GetItemSpawningManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetHeatSourceManager
	 * 		Flags  -> ()
	 */
	class AHeatSourceManager* AConZGameMode::GetHeatSourceManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetHeatSourceManager");
		
		AConZGameMode_GetHeatSourceManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetGlobalGuardedZoneManager
	 * 		Flags  -> ()
	 */
	class AGlobalGuardedZoneManager* AConZGameMode::GetGlobalGuardedZoneManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetGlobalGuardedZoneManager");
		
		AConZGameMode_GetGlobalGuardedZoneManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetGlobalAquaticLifeManager
	 * 		Flags  -> ()
	 */
	class AGlobalAquaticLifeManager* AConZGameMode::GetGlobalAquaticLifeManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetGlobalAquaticLifeManager");
		
		AConZGameMode_GetGlobalAquaticLifeManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetGlobalAnimalSpawner
	 * 		Flags  -> ()
	 */
	class AGlobalAnimalSpawner* AConZGameMode::GetGlobalAnimalSpawner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetGlobalAnimalSpawner");
		
		AConZGameMode_GetGlobalAnimalSpawner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetEffectOverTimeDealer
	 * 		Flags  -> ()
	 */
	class AEffectOverTimeDealer* AConZGameMode::GetEffectOverTimeDealer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetEffectOverTimeDealer");
		
		AConZGameMode_GetEffectOverTimeDealer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetCharacterSpawningManager
	 * 		Flags  -> ()
	 */
	class ACharacterSpawningManager* AConZGameMode::GetCharacterSpawningManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetCharacterSpawningManager");
		
		AConZGameMode_GetCharacterSpawningManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetBaseManager
	 * 		Flags  -> ()
	 */
	class AConZBaseManager* AConZGameMode::GetBaseManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetBaseManager");
		
		AConZGameMode_GetBaseManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetAIDetectionTimerHandler
	 * 		Flags  -> ()
	 */
	class AAIDetectionTimerHandler* AConZGameMode::GetAIDetectionTimerHandler()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetAIDetectionTimerHandler");
		
		AConZGameMode_GetAIDetectionTimerHandler_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameMode.GetAchievementsManagerServer
	 * 		Flags  -> ()
	 */
	class AAchievementsManagerServer* AConZGameMode::GetAchievementsManagerServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameMode.GetAchievementsManagerServer");
		
		AConZGameMode_GetAchievementsManagerServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZGameSession.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZGameSession::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZGameSession");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.StartTournament
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTournamentParameters                       parameters                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZGameState::StartTournament(struct FTournamentParameters* parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.StartTournament");
		
		AConZGameState_StartTournament_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (parameters != nullptr)
			*parameters = params.parameters;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.SendServerTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZGameState::SendServerTime(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.SendServerTime");
		
		AConZGameState_SendServerTime_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.RemoveMemberFromSquad
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AConZSquad*                                  Squad                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               destroySquadIfEmpty                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZGameState::RemoveMemberFromSquad(const struct FDbIntegerId& UserProfileId, class AConZSquad* Squad, bool destroySquadIfEmpty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.RemoveMemberFromSquad");
		
		AConZGameState_RemoveMemberFromSquad_Params params {};
		params.UserProfileId = UserProfileId;
		params.Squad = Squad;
		params.destroySquadIfEmpty = destroySquadIfEmpty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.RemoveMemberFromAllSquads
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               destroySquadIfEmpty                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZGameState::RemoveMemberFromAllSquads(const struct FDbIntegerId& UserProfileId, bool destroySquadIfEmpty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.RemoveMemberFromAllSquads");
		
		AConZGameState_RemoveMemberFromAllSquads_Params params {};
		params.UserProfileId = UserProfileId;
		params.destroySquadIfEmpty = destroySquadIfEmpty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.OnRep_Squads
	 * 		Flags  -> ()
	 */
	void AConZGameState::OnRep_Squads()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.OnRep_Squads");
		
		AConZGameState_OnRep_Squads_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.OnRep_AreLockedLootContainersEnabled
	 * 		Flags  -> ()
	 */
	void AConZGameState::OnRep_AreLockedLootContainersEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.OnRep_AreLockedLootContainersEnabled");
		
		AConZGameState_OnRep_AreLockedLootContainersEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.Multicast_SendRespawnSettings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRespawnParameters                          parameters                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZGameState::Multicast_SendRespawnSettings(const struct FRespawnParameters& parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.Multicast_SendRespawnSettings");
		
		AConZGameState_Multicast_SendRespawnSettings_Params params {};
		params.parameters = parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.Multicast_RemoveFromPrisonerKillRegistry
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                Target                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZGameState::Multicast_RemoveFromPrisonerKillRegistry(const struct FDbIntegerId& Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.Multicast_RemoveFromPrisonerKillRegistry");
		
		AConZGameState_Multicast_RemoveFromPrisonerKillRegistry_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.Multicast_AddToOrUpdatePrisonerKillRegistry
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                Target                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                killer                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZGameState::Multicast_AddToOrUpdatePrisonerKillRegistry(const struct FDbIntegerId& Target, const struct FDbIntegerId& killer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.Multicast_AddToOrUpdatePrisonerKillRegistry");
		
		AConZGameState_Multicast_AddToOrUpdatePrisonerKillRegistry_Params params {};
		params.Target = Target;
		params.killer = killer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.IsTournamentInProgress
	 * 		Flags  -> ()
	 */
	bool AConZGameState::IsTournamentInProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.IsTournamentInProgress");
		
		AConZGameState_IsTournamentInProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.GetWaterSplineRegistry
	 * 		Flags  -> ()
	 */
	class AConZWaterSplineRegistry* AConZGameState::GetWaterSplineRegistry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.GetWaterSplineRegistry");
		
		AConZGameState_GetWaterSplineRegistry_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.GetTournament
	 * 		Flags  -> ()
	 */
	class ATournament* AConZGameState::GetTournament()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.GetTournament");
		
		AConZGameState_GetTournament_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.GetSquadForUserProfileId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AConZSquad* AConZGameState::GetSquadForUserProfileId(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.GetSquadForUserProfileId");
		
		AConZGameState_GetSquadForUserProfileId_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.GetSquadForPrisoner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AConZSquad* AConZGameState::GetSquadForPrisoner(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.GetSquadForPrisoner");
		
		AConZGameState_GetSquadForPrisoner_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.GetSquad
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                squadId                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AConZSquad* AConZGameState::GetSquad(const struct FDbIntegerId& squadId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.GetSquad");
		
		AConZGameState_GetSquad_Params params {};
		params.squadId = squadId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.GetRegisteredPrisoners
	 * 		Flags  -> ()
	 */
	TArray<class APrisoner*> AConZGameState::GetRegisteredPrisoners()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.GetRegisteredPrisoners");
		
		AConZGameState_GetRegisteredPrisoners_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.GetCustomMapBorder
	 * 		Flags  -> ()
	 */
	class ACustomMapBorder* AConZGameState::GetCustomMapBorder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.GetCustomMapBorder");
		
		AConZGameState_GetCustomMapBorder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.EndTournament
	 * 		Flags  -> ()
	 */
	void AConZGameState::EndTournament()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.EndTournament");
		
		AConZGameState_EndTournament_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.CreateSquad
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                squadId                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AConZSquad* AConZGameState::CreateSquad(const struct FDbIntegerId& squadId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.CreateSquad");
		
		AConZGameState_CreateSquad_Params params {};
		params.squadId = squadId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.CleanupSquadsFromDatabase
	 * 		Flags  -> ()
	 */
	void AConZGameState::CleanupSquadsFromDatabase()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.CleanupSquadsFromDatabase");
		
		AConZGameState_CleanupSquadsFromDatabase_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZGameState.AddMemberToSquad
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AConZSquad*                                  Squad                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZGameState::AddMemberToSquad(const struct FDbIntegerId& UserProfileId, class AConZSquad* Squad)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZGameState.AddMemberToSquad");
		
		AConZGameState_AddMemberToSquad_Params params {};
		params.UserProfileId = UserProfileId;
		params.Squad = Squad;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZGameState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZGameState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZGameState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameplayLog.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameplayLog::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameplayLog");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.UpdateUpdateableNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      notificationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::UpdateUpdateableNotification(const class FString& notificationName, const class FString& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.UpdateUpdateableNotification");
		
		AConZPlayerController_UpdateUpdateableNotification_Params params {};
		params.notificationName = notificationName;
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Testing_ProcessAdminCommand
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      commandText                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Testing_ProcessAdminCommand(const class FString& commandText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Testing_ProcessAdminCommand");
		
		AConZPlayerController_Testing_ProcessAdminCommand_Params params {};
		params.commandText = commandText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Teleport
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTeleportRequest                            request                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Teleport(const struct FTeleportRequest& request)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Teleport");
		
		AConZPlayerController_Teleport_Params params {};
		params.request = request;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ShowWarningMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLinearColor                                TextColor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::ShowWarningMessage(const class FString& Message, float Duration, const struct FLinearColor& TextColor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ShowWarningMessage");
		
		AConZPlayerController_ShowWarningMessage_Params params {};
		params.Message = Message;
		params.Duration = Duration;
		params.TextColor = TextColor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ShowUpdateableNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUpdateableNotificationDescription*          Description                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::ShowUpdateableNotification(class UUpdateableNotificationDescription* Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ShowUpdateableNotification");
		
		AConZPlayerController_ShowUpdateableNotification_Params params {};
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ShowNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBasicNotificationDescription*               Description                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::ShowNotification(class UBasicNotificationDescription* Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ShowNotification");
		
		AConZPlayerController_ShowNotification_Params params {};
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ShowLevelUpMessageFromClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      skillClass                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESkillLevel                                        skillLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::ShowLevelUpMessageFromClass(class UClass* skillClass, ESkillLevel skillLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ShowLevelUpMessageFromClass");
		
		AConZPlayerController_ShowLevelUpMessageFromClass_Params params {};
		params.skillClass = skillClass;
		params.skillLevel = skillLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ShowLevelUpMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USkill*                                      Skill                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESkillLevel                                        skillLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::ShowLevelUpMessage(class USkill* Skill, ESkillLevel skillLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ShowLevelUpMessage");
		
		AConZPlayerController_ShowLevelUpMessage_Params params {};
		params.Skill = Skill;
		params.skillLevel = skillLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ShowKillFeedNotificationOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      prefix                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      characterName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      suffix                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ping                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::ShowKillFeedNotificationOnClient(const class FString& prefix, const class FString& characterName, const class FString& suffix, bool ping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ShowKillFeedNotificationOnClient");
		
		AConZPlayerController_ShowKillFeedNotificationOnClient_Params params {};
		params.prefix = prefix;
		params.characterName = characterName;
		params.suffix = suffix;
		params.ping = ping;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ShowKillFeedMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      prefix                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      characterName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      suffix                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ping                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::ShowKillFeedMessage(const class FString& prefix, const class FString& characterName, const class FString& suffix, bool ping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ShowKillFeedMessage");
		
		AConZPlayerController_ShowKillFeedMessage_Params params {};
		params.prefix = prefix;
		params.characterName = characterName;
		params.suffix = suffix;
		params.ping = ping;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SetTeleportWorldStreamingLocationChangeDelay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SetTeleportWorldStreamingLocationChangeDelay(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SetTeleportWorldStreamingLocationChangeDelay");
		
		AConZPlayerController_SetTeleportWorldStreamingLocationChangeDelay_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SetRespawnOptionTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ERespawnOption                                     option                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               force                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SetRespawnOptionTime(ERespawnOption option, float Time, bool force)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SetRespawnOptionTime");
		
		AConZPlayerController_SetRespawnOptionTime_Params params {};
		params.option = option;
		params.Time = Time;
		params.force = force;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SetMoneyBalance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int64_t                                            moneyBalance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SetMoneyBalance(int64_t moneyBalance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SetMoneyBalance");
		
		AConZPlayerController_SetMoneyBalance_Params params {};
		params.moneyBalance = moneyBalance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SetIsChatDuplicationToMessageNotificationsMuted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SetIsChatDuplicationToMessageNotificationsMuted(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SetIsChatDuplicationToMessageNotificationsMuted");
		
		AConZPlayerController_SetIsChatDuplicationToMessageNotificationsMuted_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SetGameEventCooldown
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              cooldown                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SetGameEventCooldown(float cooldown)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SetGameEventCooldown");
		
		AConZPlayerController_SetGameEventCooldown_Params params {};
		params.cooldown = cooldown;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SetFamePoints
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SetFamePoints(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SetFamePoints");
		
		AConZPlayerController_SetFamePoints_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SetCommitSuicideOptionTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SetCommitSuicideOptionTime(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SetCommitSuicideOptionTime");
		
		AConZPlayerController_SetCommitSuicideOptionTime_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_SetRefreshPawnLocationForMap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_SetRefreshPawnLocationForMap(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_SetRefreshPawnLocationForMap");
		
		AConZPlayerController_Server_SetRefreshPawnLocationForMap_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_SendTotalPlayTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            totalPlayTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_SendTotalPlayTime(int32_t totalPlayTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_SendTotalPlayTime");
		
		AConZPlayerController_Server_SendTotalPlayTime_Params params {};
		params.totalPlayTime = totalPlayTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_SendProofOfLife
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Server_SendProofOfLife()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_SendProofOfLife");
		
		AConZPlayerController_Server_SendProofOfLife_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_SelfKickFromGameSession
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      reason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_SelfKickFromGameSession(const class FString& reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_SelfKickFromGameSession");
		
		AConZPlayerController_Server_SelfKickFromGameSession_Params params {};
		params.reason = reason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_RequestSurvivalStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                UserProfileId                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_RequestSurvivalStats(uint32_t ID, const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_RequestSurvivalStats");
		
		AConZPlayerController_Server_RequestSurvivalStats_Params params {};
		params.ID = ID;
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_RequestSquadRankingData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                squadId                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_RequestSquadRankingData(uint32_t ID, const struct FDbIntegerId& squadId, int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_RequestSquadRankingData");
		
		AConZPlayerController_Server_RequestSquadRankingData_Params params {};
		params.ID = ID;
		params.squadId = squadId;
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_RequestSquadMemberInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                squadId                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_RequestSquadMemberInfo(uint32_t ID, const struct FDbIntegerId& squadId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_RequestSquadMemberInfo");
		
		AConZPlayerController_Server_RequestSquadMemberInfo_Params params {};
		params.ID = ID;
		params.squadId = squadId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_RequestRespawnWaitTime
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Server_RequestRespawnWaitTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_RequestRespawnWaitTime");
		
		AConZPlayerController_Server_RequestRespawnWaitTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_RequestGameEventTeamChange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            preferredTeam                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_RequestGameEventTeamChange(int32_t preferredTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_RequestGameEventTeamChange");
		
		AConZPlayerController_Server_RequestGameEventTeamChange_Params params {};
		params.preferredTeam = preferredTeam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_RequestEventsRankingStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDbIntegerId                                UserProfileId                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EEventsRankingStatsOrderByField                    orderByField                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESortOrder                                         sortOrder                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_RequestEventsRankingStats(uint32_t ID, const struct FDbIntegerId& UserProfileId, int32_t Count, EEventsRankingStatsOrderByField orderByField, ESortOrder sortOrder)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_RequestEventsRankingStats");
		
		AConZPlayerController_Server_RequestEventsRankingStats_Params params {};
		params.ID = ID;
		params.UserProfileId = UserProfileId;
		params.Count = Count;
		params.orderByField = orderByField;
		params.sortOrder = sortOrder;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_ReportStartLeavingGame
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Server_ReportStartLeavingGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_ReportStartLeavingGame");
		
		AConZPlayerController_Server_ReportStartLeavingGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_ReportPlayPreparationsSucceeded
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Server_ReportPlayPreparationsSucceeded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_ReportPlayPreparationsSucceeded");
		
		AConZPlayerController_Server_ReportPlayPreparationsSucceeded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_ReportCancelLeavingGame
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Server_ReportCancelLeavingGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_ReportCancelLeavingGame");
		
		AConZPlayerController_Server_ReportCancelLeavingGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_ProcessPlasticSurgeryTransaction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            transactionId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EConZGender                                        Gender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            appearanceIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_ProcessPlasticSurgeryTransaction(int32_t transactionId, EConZGender Gender, int32_t appearanceIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_ProcessPlasticSurgeryTransaction");
		
		AConZPlayerController_Server_ProcessPlasticSurgeryTransaction_Params params {};
		params.transactionId = transactionId;
		params.Gender = Gender;
		params.appearanceIndex = appearanceIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_ProcessAdminCommand
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      commandText                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_ProcessAdminCommand(const class FString& commandText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_ProcessAdminCommand");
		
		AConZPlayerController_Server_ProcessAdminCommand_Params params {};
		params.commandText = commandText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_MountedActorHasBegunPlay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_MountedActorHasBegunPlay(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_MountedActorHasBegunPlay");
		
		AConZPlayerController_Server_MountedActorHasBegunPlay_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_LeaveGameEvent
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Server_LeaveGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_LeaveGameEvent");
		
		AConZPlayerController_Server_LeaveGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_JoinGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            preferredTeam                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_JoinGameEvent(class AGameEventBase* gameEvent, int32_t preferredTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_JoinGameEvent");
		
		AConZPlayerController_Server_JoinGameEvent_Params params {};
		params.gameEvent = gameEvent;
		params.preferredTeam = preferredTeam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_HeartbeatResponse
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           code                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Server_HeartbeatResponse(uint32_t code)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_HeartbeatResponse");
		
		AConZPlayerController_Server_HeartbeatResponse_Params params {};
		params.code = code;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_ExitPhotoMode
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Server_ExitPhotoMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_ExitPhotoMode");
		
		AConZPlayerController_Server_ExitPhotoMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_EnterPhotoMode
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Server_EnterPhotoMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_EnterPhotoMode");
		
		AConZPlayerController_Server_EnterPhotoMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Server_AllowCertainInventoryInteractions
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Server_AllowCertainInventoryInteractions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Server_AllowCertainInventoryInteractions");
		
		AConZPlayerController_Server_AllowCertainInventoryInteractions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SendHUDMessageToClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               AudioEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SendHUDMessageToClient(const class FString& Message, class UAkAudioEvent* AudioEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SendHUDMessageToClient");
		
		AConZPlayerController_SendHUDMessageToClient_Params params {};
		params.Message = Message;
		params.AudioEvent = AudioEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SendHUDMessageToAll
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               AudioEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SendHUDMessageToAll(const class FString& Message, class UAkAudioEvent* AudioEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SendHUDMessageToAll");
		
		AConZPlayerController_SendHUDMessageToAll_Params params {};
		params.Message = Message;
		params.AudioEvent = AudioEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SendChatStringToServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      string                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EChatType                                          Channel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SendChatStringToServer(const class FString& string, EChatType Channel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SendChatStringToServer");
		
		AConZPlayerController_SendChatStringToServer_Params params {};
		params.string = string;
		params.Channel = Channel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SendChatStringToClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZPlayerState*                            SenderPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      string                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EChatType                                          Channel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               shouldCopyToClientClipboard                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::SendChatStringToClient(class AConZPlayerState* SenderPlayerState, const class FString& string, EChatType Channel, bool shouldCopyToClientClipboard)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SendChatStringToClient");
		
		AConZPlayerController_SendChatStringToClient_Params params {};
		params.SenderPlayerState = SenderPlayerState;
		params.string = string;
		params.Channel = Channel;
		params.shouldCopyToClientClipboard = shouldCopyToClientClipboard;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.SaveState
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::SaveState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.SaveState");
		
		AConZPlayerController_SaveState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.RepossesOriginalPrisoner
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::RepossesOriginalPrisoner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.RepossesOriginalPrisoner");
		
		AConZPlayerController_RepossesOriginalPrisoner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.RemoveServerFromFavorites
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::RemoveServerFromFavorites()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.RemoveServerFromFavorites");
		
		AConZPlayerController_RemoveServerFromFavorites_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.RegisterRespawn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ERespawnOption                                     option                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::RegisterRespawn(ERespawnOption option)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.RegisterRespawn");
		
		AConZPlayerController_RegisterRespawn_Params params {};
		params.option = option;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.RegisterCommitSuicide
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::RegisterCommitSuicide()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.RegisterCommitSuicide");
		
		AConZPlayerController_RegisterCommitSuicide_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.PushChatMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      string                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AConZPlayerState*                            SenderPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EChatType                                          ChatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               shouldCopyToClientClipboard                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::PushChatMessage(const class FString& string, class AConZPlayerState* SenderPlayerState, EChatType ChatType, bool shouldCopyToClientClipboard)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.PushChatMessage");
		
		AConZPlayerController_PushChatMessage_Params params {};
		params.string = string;
		params.SenderPlayerState = SenderPlayerState;
		params.ChatType = ChatType;
		params.shouldCopyToClientClipboard = shouldCopyToClientClipboard;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.ConZPlayerController.PrisonerSpawnedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   spawnedPrisoner                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::PrisonerSpawnedDelegate__DelegateSignature(class APrisoner* spawnedPrisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.ConZPlayerController.PrisonerSpawnedDelegate__DelegateSignature");
		
		AConZPlayerController_PrisonerSpawnedDelegate__DelegateSignature_Params params {};
		params.spawnedPrisoner = spawnedPrisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.OnRep_UserFakeName
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::OnRep_UserFakeName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.OnRep_UserFakeName");
		
		AConZPlayerController_OnRep_UserFakeName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.OnRep_ReplicatedServerUtcNow
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::OnRep_ReplicatedServerUtcNow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.OnRep_ReplicatedServerUtcNow");
		
		AConZPlayerController_OnRep_ReplicatedServerUtcNow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.OnRep_PossessedPawn
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::OnRep_PossessedPawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.OnRep_PossessedPawn");
		
		AConZPlayerController_OnRep_PossessedPawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.OnRep_MoneyBalance
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::OnRep_MoneyBalance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.OnRep_MoneyBalance");
		
		AConZPlayerController_OnRep_MoneyBalance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.OnRep_FamePoints
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::OnRep_FamePoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.OnRep_FamePoints");
		
		AConZPlayerController_OnRep_FamePoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.OnPhotoModeTransitionTimerElapsed
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::OnPhotoModeTransitionTimerElapsed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.OnPhotoModeTransitionTimerElapsed");
		
		AConZPlayerController_OnPhotoModeTransitionTimerElapsed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.OnFadeOutFinished
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::OnFadeOutFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.OnFadeOutFinished");
		
		AConZPlayerController_OnFadeOutFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.LoadState
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::LoadState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.LoadState");
		
		AConZPlayerController_LoadState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.LeaveGameEvent
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::LeaveGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.LeaveGameEvent");
		
		AConZPlayerController_LeaveGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.JoinGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            preferredTeam                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::JoinGameEvent(class AGameEventBase* gameEvent, int32_t preferredTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.JoinGameEvent");
		
		AConZPlayerController_JoinGameEvent_Params params {};
		params.gameEvent = gameEvent;
		params.preferredTeam = preferredTeam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.IsUserAdmin
	 * 		Flags  -> ()
	 */
	bool AConZPlayerController::IsUserAdmin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.IsUserAdmin");
		
		AConZPlayerController_IsUserAdmin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.IsTeleportInProgress
	 * 		Flags  -> ()
	 */
	bool AConZPlayerController::IsTeleportInProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.IsTeleportInProgress");
		
		AConZPlayerController_IsTeleportInProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.IsPushToTalkPressed
	 * 		Flags  -> ()
	 */
	bool AConZPlayerController::IsPushToTalkPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.IsPushToTalkPressed");
		
		AConZPlayerController_IsPushToTalkPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.InputComponent_CancelAllControllerActions
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::InputComponent_CancelAllControllerActions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.InputComponent_CancelAllControllerActions");
		
		AConZPlayerController_InputComponent_CancelAllControllerActions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.InitializePathFollowingComponent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::InitializePathFollowingComponent(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.InitializePathFollowingComponent");
		
		AConZPlayerController_InitializePathFollowingComponent_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.HandleChatMessageCommit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		EChatType                                          ChatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::HandleChatMessageCommit(const class FText& Text, EChatType ChatType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.HandleChatMessageCommit");
		
		AConZPlayerController_HandleChatMessageCommit_Params params {};
		params.Text = Text;
		params.ChatType = ChatType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetUserProfileName
	 * 		Flags  -> ()
	 */
	class FString AConZPlayerController::GetUserProfileName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetUserProfileName");
		
		AConZPlayerController_GetUserProfileName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetUserProfileId
	 * 		Flags  -> ()
	 */
	struct FDbIntegerId AConZPlayerController::GetUserProfileId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetUserProfileId");
		
		AConZPlayerController_GetUserProfileId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetUserProfile
	 * 		Flags  -> ()
	 */
	class UUserProfile* AConZPlayerController::GetUserProfile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetUserProfile");
		
		AConZPlayerController_GetUserProfile_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetUserName2
	 * 		Flags  -> ()
	 */
	class FString AConZPlayerController::GetUserName2()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetUserName2");
		
		AConZPlayerController_GetUserName2_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetUserId
	 * 		Flags  -> ()
	 */
	class FString AConZPlayerController::GetUserId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetUserId");
		
		AConZPlayerController_GetUserId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetTeleportWorldStreamingLocationChangeDelay
	 * 		Flags  -> ()
	 */
	float AConZPlayerController::GetTeleportWorldStreamingLocationChangeDelay()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetTeleportWorldStreamingLocationChangeDelay");
		
		AConZPlayerController_GetTeleportWorldStreamingLocationChangeDelay_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetServerUserProfileId
	 * 		Flags  -> ()
	 */
	struct FDbIntegerId AConZPlayerController::GetServerUserProfileId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetServerUserProfileId");
		
		AConZPlayerController_GetServerUserProfileId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetRespawnWaitTime
	 * 		Flags  -> ()
	 */
	float AConZPlayerController::GetRespawnWaitTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetRespawnWaitTime");
		
		AConZPlayerController_GetRespawnWaitTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetRespawnOptionTimeLeft
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ERespawnOption                                     option                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AConZPlayerController::GetRespawnOptionTimeLeft(ERespawnOption option)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetRespawnOptionTimeLeft");
		
		AConZPlayerController_GetRespawnOptionTimeLeft_Params params {};
		params.option = option;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetRespawnOptionTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ERespawnOption                                     option                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AConZPlayerController::GetRespawnOptionTime(ERespawnOption option)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetRespawnOptionTime");
		
		AConZPlayerController_GetRespawnOptionTime_Params params {};
		params.option = option;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetPrisoner
	 * 		Flags  -> ()
	 */
	class APrisoner* AConZPlayerController::GetPrisoner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetPrisoner");
		
		AConZPlayerController_GetPrisoner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetPlayerRpcChannel
	 * 		Flags  -> ()
	 */
	class UPlayerRpcChannel* AConZPlayerController::GetPlayerRpcChannel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetPlayerRpcChannel");
		
		AConZPlayerController_GetPlayerRpcChannel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetNoiseEmitterComponent
	 * 		Flags  -> ()
	 */
	class UPawnNoiseEmitterComponent* AConZPlayerController::GetNoiseEmitterComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetNoiseEmitterComponent");
		
		AConZPlayerController_GetNoiseEmitterComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetMoneyBalanceText
	 * 		Flags  -> ()
	 */
	class FText AConZPlayerController::GetMoneyBalanceText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetMoneyBalanceText");
		
		AConZPlayerController_GetMoneyBalanceText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetMissionDialogueManager
	 * 		Flags  -> ()
	 */
	class AMissionDialogueManager* AConZPlayerController::GetMissionDialogueManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetMissionDialogueManager");
		
		AConZPlayerController_GetMissionDialogueManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetIsChatDuplicationToMessageNotificationsMuted
	 * 		Flags  -> ()
	 */
	bool AConZPlayerController::GetIsChatDuplicationToMessageNotificationsMuted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetIsChatDuplicationToMessageNotificationsMuted");
		
		AConZPlayerController_GetIsChatDuplicationToMessageNotificationsMuted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetGameEventCooldown
	 * 		Flags  -> ()
	 */
	float AConZPlayerController::GetGameEventCooldown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetGameEventCooldown");
		
		AConZPlayerController_GetGameEventCooldown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetFamePointsRounded
	 * 		Flags  -> ()
	 */
	int32_t AConZPlayerController::GetFamePointsRounded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetFamePointsRounded");
		
		AConZPlayerController_GetFamePointsRounded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetFamePoints
	 * 		Flags  -> ()
	 */
	float AConZPlayerController::GetFamePoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetFamePoints");
		
		AConZPlayerController_GetFamePoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetFameMultiplier
	 * 		Flags  -> ()
	 */
	float AConZPlayerController::GetFameMultiplier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetFameMultiplier");
		
		AConZPlayerController_GetFameMultiplier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetFameLevel
	 * 		Flags  -> ()
	 */
	int32_t AConZPlayerController::GetFameLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetFameLevel");
		
		AConZPlayerController_GetFameLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetDialogueManager
	 * 		Flags  -> ()
	 */
	class AMissionDialogueManager* AConZPlayerController::GetDialogueManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetDialogueManager");
		
		AConZPlayerController_GetDialogueManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetCommitSuicideOptionTimeLeft
	 * 		Flags  -> ()
	 */
	float AConZPlayerController::GetCommitSuicideOptionTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetCommitSuicideOptionTimeLeft");
		
		AConZPlayerController_GetCommitSuicideOptionTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetCameraManager
	 * 		Flags  -> ()
	 */
	class AConZCameraManager* AConZPlayerController::GetCameraManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetCameraManager");
		
		AConZPlayerController_GetCameraManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetAdminCommandRegistry
	 * 		Flags  -> ()
	 */
	class UAdminCommandRegistry* AConZPlayerController::GetAdminCommandRegistry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetAdminCommandRegistry");
		
		AConZPlayerController_GetAdminCommandRegistry_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.GetAchievementsManagerClient
	 * 		Flags  -> ()
	 */
	class AAchievementsManagerClient* AConZPlayerController::GetAchievementsManagerClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.GetAchievementsManagerClient");
		
		AConZPlayerController_GetAchievementsManagerClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Crash
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Crash()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Crash");
		
		AConZPlayerController_Crash_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ComputeFameLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              FamePoints                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AConZPlayerController::ComputeFameLevel(float FamePoints)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ComputeFameLevel");
		
		AConZPlayerController_ComputeFameLevel_Params params {};
		params.FamePoints = FamePoints;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_UpdateRespawnSettings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRespawnParameters                          parameters                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_UpdateRespawnSettings(const struct FRespawnParameters& parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_UpdateRespawnSettings");
		
		AConZPlayerController_Client_UpdateRespawnSettings_Params params {};
		params.parameters = parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_UpdateAdminCommandSquadArgumentCompletionValues
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              Values                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_UpdateAdminCommandSquadArgumentCompletionValues(TArray<class FString> Values)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_UpdateAdminCommandSquadArgumentCompletionValues");
		
		AConZPlayerController_Client_UpdateAdminCommandSquadArgumentCompletionValues_Params params {};
		params.Values = Values;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_UpdateAdminCommandPlayerArgumentCompletionValues
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              Values                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_UpdateAdminCommandPlayerArgumentCompletionValues(TArray<class FString> Values)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_UpdateAdminCommandPlayerArgumentCompletionValues");
		
		AConZPlayerController_Client_UpdateAdminCommandPlayerArgumentCompletionValues_Params params {};
		params.Values = Values;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_UnmuteUser
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      UserId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_UnmuteUser(const class FString& UserId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_UnmuteUser");
		
		AConZPlayerController_Client_UnmuteUser_Params params {};
		params.UserId = UserId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_TestPingLockStuff
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              averageDelta                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              averagePing                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              counter                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_TestPingLockStuff(float averageDelta, float averagePing, float counter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_TestPingLockStuff");
		
		AConZPlayerController_Client_TestPingLockStuff_Params params {};
		params.averageDelta = averageDelta;
		params.averagePing = averagePing;
		params.counter = counter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_SetRespawnWaitTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Seconds                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_SetRespawnWaitTime(float Seconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_SetRespawnWaitTime");
		
		AConZPlayerController_Client_SetRespawnWaitTime_Params params {};
		params.Seconds = Seconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_SetRespawnOptionTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ERespawnOption                                     option                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_SetRespawnOptionTime(ERespawnOption option, float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_SetRespawnOptionTime");
		
		AConZPlayerController_Client_SetRespawnOptionTime_Params params {};
		params.option = option;
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_SetIsAdmin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_SetIsAdmin(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_SetIsAdmin");
		
		AConZPlayerController_Client_SetIsAdmin_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_SetGameEventCooldown
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              cooldown                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_SetGameEventCooldown(float cooldown)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_SetGameEventCooldown");
		
		AConZPlayerController_Client_SetGameEventCooldown_Params params {};
		params.cooldown = cooldown;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_SetCommitSuicideOptionTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_SetCommitSuicideOptionTime(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_SetCommitSuicideOptionTime");
		
		AConZPlayerController_Client_SetCommitSuicideOptionTime_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_SendPackedPlayerLocationsForMap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AConZPlayerState*>                    playerStates                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<uint32_t>                                   packedMapLocations                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_SendPackedPlayerLocationsForMap(TArray<class AConZPlayerState*> playerStates, TArray<uint32_t> packedMapLocations)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_SendPackedPlayerLocationsForMap");
		
		AConZPlayerController_Client_SendPackedPlayerLocationsForMap_Params params {};
		params.playerStates = playerStates;
		params.packedMapLocations = packedMapLocations;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_SaveState
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Client_SaveState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_SaveState");
		
		AConZPlayerController_Client_SaveState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_ReceiveSurvivalStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSurvivalStats                              stats                                                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_ReceiveSurvivalStats(uint32_t ID, const struct FSurvivalStats& stats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_ReceiveSurvivalStats");
		
		AConZPlayerController_Client_ReceiveSurvivalStats_Params params {};
		params.ID = ID;
		params.stats = stats;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_ReceiveSquadRankingData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              names                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              information                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<uint64_t>                                   emblems                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<float>                                      scores                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		int32_t                                            squadRank                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            squadIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_ReceiveSquadRankingData(uint32_t ID, TArray<class FString> names, TArray<class FString> information, TArray<uint64_t> emblems, TArray<float> scores, int32_t squadRank, int32_t squadIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_ReceiveSquadRankingData");
		
		AConZPlayerController_Client_ReceiveSquadRankingData_Params params {};
		params.ID = ID;
		params.names = names;
		params.information = information;
		params.emblems = emblems;
		params.scores = scores;
		params.squadRank = squadRank;
		params.squadIndex = squadIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_ReceiveSquadMemberInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FDbIntegerId>                        userProfileIds                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              names                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<EConZSquadMemberRank>                       ranks                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<float>                                      FamePoints                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<bool>                                       online                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_ReceiveSquadMemberInfo(uint32_t ID, TArray<struct FDbIntegerId> userProfileIds, TArray<class FString> names, TArray<EConZSquadMemberRank> ranks, TArray<float> FamePoints, TArray<bool> online)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_ReceiveSquadMemberInfo");
		
		AConZPlayerController_Client_ReceiveSquadMemberInfo_Params params {};
		params.ID = ID;
		params.userProfileIds = userProfileIds;
		params.names = names;
		params.ranks = ranks;
		params.FamePoints = FamePoints;
		params.online = online;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_ReceiveEventsRankingStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FEventsRankingStatsItem>             stats                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		int32_t                                            playerRank                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_ReceiveEventsRankingStats(uint32_t ID, TArray<struct FEventsRankingStatsItem> stats, int32_t playerRank)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_ReceiveEventsRankingStats");
		
		AConZPlayerController_Client_ReceiveEventsRankingStats_Params params {};
		params.ID = ID;
		params.stats = stats;
		params.playerRank = playerRank;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_ReceiveBytesFromStream
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            streamId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              bytes                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_ReceiveBytesFromStream(int32_t streamId, TArray<unsigned char> bytes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_ReceiveBytesFromStream");
		
		AConZPlayerController_Client_ReceiveBytesFromStream_Params params {};
		params.streamId = streamId;
		params.bytes = bytes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_MuteUser
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      UserId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      userName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_MuteUser(const class FString& UserId, const class FString& userName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_MuteUser");
		
		AConZPlayerController_Client_MuteUser_Params params {};
		params.UserId = UserId;
		params.userName = userName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_Login
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPlayerLoginInfo                            serverLoginInfo                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_Login(const struct FPlayerLoginInfo& serverLoginInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_Login");
		
		AConZPlayerController_Client_Login_Params params {};
		params.serverLoginInfo = serverLoginInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_InitializePlasticSurgeryTransaction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            transactionId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_InitializePlasticSurgeryTransaction(int32_t transactionId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_InitializePlasticSurgeryTransaction");
		
		AConZPlayerController_Client_InitializePlasticSurgeryTransaction_Params params {};
		params.transactionId = transactionId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_HeartbeatRequest
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           code                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_HeartbeatRequest(uint32_t code)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_HeartbeatRequest");
		
		AConZPlayerController_Client_HeartbeatRequest_Params params {};
		params.code = code;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_HasMountedActorBegunPlay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_HasMountedActorBegunPlay(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_HasMountedActorBegunPlay");
		
		AConZPlayerController_Client_HasMountedActorBegunPlay_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_ExecuteAdminCommand
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      commandText                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_ExecuteAdminCommand(const class FString& commandText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_ExecuteAdminCommand");
		
		AConZPlayerController_Client_ExecuteAdminCommand_Params params {};
		params.commandText = commandText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_EndByteStream
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            streamId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_EndByteStream(int32_t streamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_EndByteStream");
		
		AConZPlayerController_Client_EndByteStream_Params params {};
		params.streamId = streamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_EnableRespawnOption
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ERespawnOption                                     option                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_EnableRespawnOption(ERespawnOption option)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_EnableRespawnOption");
		
		AConZPlayerController_Client_EnableRespawnOption_Params params {};
		params.option = option;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_BeginByteStream
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            streamId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ERawByteStreamType                                 streamType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZPlayerController::Client_BeginByteStream(int32_t streamId, ERawByteStreamType streamType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_BeginByteStream");
		
		AConZPlayerController_Client_BeginByteStream_Params params {};
		params.streamId = streamId;
		params.streamType = streamType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.Client_AllowCertainInventoryInteractions
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::Client_AllowCertainInventoryInteractions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.Client_AllowCertainInventoryInteractions");
		
		AConZPlayerController_Client_AllowCertainInventoryInteractions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ClearRespawnOptionTimers
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::ClearRespawnOptionTimers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ClearRespawnOptionTimers");
		
		AConZPlayerController_ClearRespawnOptionTimers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.CheckPhotoModeTransitionFailed
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::CheckPhotoModeTransitionFailed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.CheckPhotoModeTransitionFailed");
		
		AConZPlayerController_CheckPhotoModeTransitionFailed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ChatHistoryForward
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::ChatHistoryForward()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ChatHistoryForward");
		
		AConZPlayerController_ChatHistoryForward_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.ChatHistoryBack
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::ChatHistoryBack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.ChatHistoryBack");
		
		AConZPlayerController_ChatHistoryBack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.CanAddServerToFavorites
	 * 		Flags  -> ()
	 */
	bool AConZPlayerController::CanAddServerToFavorites()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.CanAddServerToFavorites");
		
		AConZPlayerController_CanAddServerToFavorites_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZPlayerController.AddServerToFavorites
	 * 		Flags  -> ()
	 */
	void AConZPlayerController::AddServerToFavorites()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZPlayerController.AddServerToFavorites");
		
		AConZPlayerController_AddServerToFavorites_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZPlayerController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZPlayerController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZPlayerController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZPlayerState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZPlayerState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZPlayerState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZReverbComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZReverbComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZReverbComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZReverbVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZReverbVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZReverbVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZSlider.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZSlider::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZSlider");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZSpectatorPawn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZSpectatorPawn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZSpectatorPawn");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.UpdateMemberStatus
	 * 		Flags  -> ()
	 */
	void AConZSquad::UpdateMemberStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.UpdateMemberStatus");
		
		AConZSquad_UpdateMemberStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.UpdateMemberLimit
	 * 		Flags  -> ()
	 */
	void AConZSquad::UpdateMemberLimit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.UpdateMemberLimit");
		
		AConZSquad_UpdateMemberLimit_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.SetMemberRank
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EConZSquadMemberRank                               Rank                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZSquad::SetMemberRank(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.SetMemberRank");
		
		AConZSquad_SetMemberRank_Params params {};
		params.UserProfileId = UserProfileId;
		params.Rank = Rank;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.SendMessageToMembers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZSquad::SendMessageToMembers(const class FString& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.SendMessageToMembers");
		
		AConZSquad_SendMessageToMembers_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.RemoveMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZSquad::RemoveMember(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.RemoveMember");
		
		AConZSquad_RemoveMember_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.PromoteMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZSquad::PromoteMember(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.PromoteMember");
		
		AConZSquad_PromoteMember_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.OnRep_SquadName
	 * 		Flags  -> ()
	 */
	void AConZSquad::OnRep_SquadName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.OnRep_SquadName");
		
		AConZSquad_OnRep_SquadName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.OnRep_SquadMessage
	 * 		Flags  -> ()
	 */
	void AConZSquad::OnRep_SquadMessage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.OnRep_SquadMessage");
		
		AConZSquad_OnRep_SquadMessage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.OnRep_Members
	 * 		Flags  -> ()
	 */
	void AConZSquad::OnRep_Members()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.OnRep_Members");
		
		AConZSquad_OnRep_Members_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.OnRep_Emblem
	 * 		Flags  -> ()
	 */
	void AConZSquad::OnRep_Emblem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.OnRep_Emblem");
		
		AConZSquad_OnRep_Emblem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.IsMemberCountValid
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               includePending                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::IsMemberCountValid(bool includePending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.IsMemberCountValid");
		
		AConZSquad_IsMemberCountValid_Params params {};
		params.includePending = includePending;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.IsAnyMemberInDanger
	 * 		Flags  -> ()
	 */
	bool AConZSquad::IsAnyMemberInDanger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.IsAnyMemberInDanger");
		
		AConZSquad_IsAnyMemberInDanger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.IsAnyMemberAlive
	 * 		Flags  -> ()
	 */
	bool AConZSquad::IsAnyMemberAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.IsAnyMemberAlive");
		
		AConZSquad_IsAnyMemberAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.InviteMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZSquad::InviteMember(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.InviteMember");
		
		AConZSquad_InviteMember_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.HasMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               includePending                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::HasMember(const struct FDbIntegerId& UserProfileId, bool includePending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.HasMember");
		
		AConZSquad_HasMember_Params params {};
		params.UserProfileId = UserProfileId;
		params.includePending = includePending;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetSuccessorForMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDbIntegerId AConZSquad::GetSuccessorForMember(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetSuccessorForMember");
		
		AConZSquad_GetSuccessorForMember_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetOnlineMembers
	 * 		Flags  -> ()
	 */
	TArray<struct FConZSquadMember> AConZSquad::GetOnlineMembers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetOnlineMembers");
		
		AConZSquad_GetOnlineMembers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetOnlineMemberCount
	 * 		Flags  -> ()
	 */
	int32_t AConZSquad::GetOnlineMemberCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetOnlineMemberCount");
		
		AConZSquad_GetOnlineMemberCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetMembers
	 * 		Flags  -> ()
	 */
	TArray<struct FConZSquadMember> AConZSquad::GetMembers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetMembers");
		
		AConZSquad_GetMembers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetMemberRank
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EConZSquadMemberRank AConZSquad::GetMemberRank(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetMemberRank");
		
		AConZSquad_GetMemberRank_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetMemberLockAccessibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EAccessLevel AConZSquad::GetMemberLockAccessibility(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetMemberLockAccessibility");
		
		AConZSquad_GetMemberLockAccessibility_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetMemberCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               includePending                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AConZSquad::GetMemberCount(bool includePending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetMemberCount");
		
		AConZSquad_GetMemberCount_Params params {};
		params.includePending = includePending;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FConZSquadMember AConZSquad::GetMember(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetMember");
		
		AConZSquad_GetMember_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetMaxAllowedMemberCount
	 * 		Flags  -> ()
	 */
	int32_t AConZSquad::GetMaxAllowedMemberCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetMaxAllowedMemberCount");
		
		AConZSquad_GetMaxAllowedMemberCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GetLeader
	 * 		Flags  -> ()
	 */
	struct FDbIntegerId AConZSquad::GetLeader()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GetLeader");
		
		AConZSquad_GetLeader_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GenerateName
	 * 		Flags  -> ()
	 */
	void AConZSquad::GenerateName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GenerateName");
		
		AConZSquad_GenerateName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GenerateMessage
	 * 		Flags  -> ()
	 */
	void AConZSquad::GenerateMessage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GenerateMessage");
		
		AConZSquad_GenerateMessage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GenerateInformation
	 * 		Flags  -> ()
	 */
	void AConZSquad::GenerateInformation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GenerateInformation");
		
		AConZSquad_GenerateInformation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.GenerateEmblem
	 * 		Flags  -> ()
	 */
	void AConZSquad::GenerateEmblem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.GenerateEmblem");
		
		AConZSquad_GenerateEmblem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.DemoteMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZSquad::DemoteMember(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.DemoteMember");
		
		AConZSquad_DemoteMember_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.CanMemberRecruitMembers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::CanMemberRecruitMembers(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.CanMemberRecruitMembers");
		
		AConZSquad_CanMemberRecruitMembers_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.CanMemberPromoteRank
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EConZSquadMemberRank                               Rank                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::CanMemberPromoteRank(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.CanMemberPromoteRank");
		
		AConZSquad_CanMemberPromoteRank_Params params {};
		params.UserProfileId = UserProfileId;
		params.Rank = Rank;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.CanMemberKickRank
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EConZSquadMemberRank                               Rank                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::CanMemberKickRank(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.CanMemberKickRank");
		
		AConZSquad_CanMemberKickRank_Params params {};
		params.UserProfileId = UserProfileId;
		params.Rank = Rank;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.CanMemberEditName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::CanMemberEditName(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.CanMemberEditName");
		
		AConZSquad_CanMemberEditName_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.CanMemberEditMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::CanMemberEditMessage(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.CanMemberEditMessage");
		
		AConZSquad_CanMemberEditMessage_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.CanMemberEditInformation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::CanMemberEditInformation(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.CanMemberEditInformation");
		
		AConZSquad_CanMemberEditInformation_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.CanMemberEditEmblem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::CanMemberEditEmblem(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.CanMemberEditEmblem");
		
		AConZSquad_CanMemberEditEmblem_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.CanMemberDemoteRank
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EConZSquadMemberRank                               Rank                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AConZSquad::CanMemberDemoteRank(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.CanMemberDemoteRank");
		
		AConZSquad_CanMemberDemoteRank_Params params {};
		params.UserProfileId = UserProfileId;
		params.Rank = Rank;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZSquad.AddMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EConZSquadMemberRank                               Rank                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZSquad::AddMember(const struct FDbIntegerId& UserProfileId, EConZSquadMemberRank Rank)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZSquad.AddMember");
		
		AConZSquad_AddMember_Params params {};
		params.UserProfileId = UserProfileId;
		params.Rank = Rank;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZSquad.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZSquad::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZSquad");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.WarnAboutMounteeEvictionIfInWater
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::WarnAboutMounteeEvictionIfInWater()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.WarnAboutMounteeEvictionIfInWater");
		
		AConZVehicle4W_WarnAboutMounteeEvictionIfInWater_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_StopEngineViaStall
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::Server_StopEngineViaStall()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_StopEngineViaStall");
		
		AConZVehicle4W_Server_StopEngineViaStall_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_StopEngineViaIgnition
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::Server_StopEngineViaIgnition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_StopEngineViaIgnition");
		
		AConZVehicle4W_Server_StopEngineViaIgnition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_StopEngineViaBeingBroken
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::Server_StopEngineViaBeingBroken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_StopEngineViaBeingBroken");
		
		AConZVehicle4W_Server_StopEngineViaBeingBroken_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_StopEngineStalling
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::Server_StopEngineStalling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_StopEngineStalling");
		
		AConZVehicle4W_Server_StopEngineStalling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_StartEngineViaMotion
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::Server_StartEngineViaMotion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_StartEngineViaMotion");
		
		AConZVehicle4W_Server_StartEngineViaMotion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_StartEngineViaIgnition
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::Server_StartEngineViaIgnition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_StartEngineViaIgnition");
		
		AConZVehicle4W_Server_StartEngineViaIgnition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_StartEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVehicleEngineStallingParameters            parameters                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::Server_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_StartEngineStalling");
		
		AConZVehicle4W_Server_StartEngineStalling_Params params {};
		params.parameters = parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_SetLightsActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::Server_SetLightsActive(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_SetLightsActive");
		
		AConZVehicle4W_Server_SetLightsActive_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_SetHornActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::Server_SetHornActive(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_SetHornActive");
		
		AConZVehicle4W_Server_SetHornActive_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_RepairEngineBlock
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::Server_RepairEngineBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_RepairEngineBlock");
		
		AConZVehicle4W_Server_RepairEngineBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.Server_ApplyImpactDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::Server_ApplyImpactDamage(float Damage, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.Server_ApplyImpactDamage");
		
		AConZVehicle4W_Server_ApplyImpactDamage_Params params {};
		params.Damage = Damage;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.ReceiveBeginHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         MyComp                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               selfMoved                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitNormal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::ReceiveBeginHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool selfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.ReceiveBeginHit");
		
		AConZVehicle4W_ReceiveBeginHit_Params params {};
		params.MyComp = MyComp;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.selfMoved = selfMoved;
		params.HitLocation = HitLocation;
		params.HitNormal = HitNormal;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.OnRep_VehiclePartsStateFlags
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           Previous                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::OnRep_VehiclePartsStateFlags(uint32_t Previous)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.OnRep_VehiclePartsStateFlags");
		
		AConZVehicle4W_OnRep_VehiclePartsStateFlags_Params params {};
		params.Previous = Previous;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.OnRep_LightsActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::OnRep_LightsActive(bool OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.OnRep_LightsActive");
		
		AConZVehicle4W_OnRep_LightsActive_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.OnRep_ItemContainerContainedItemsMass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::OnRep_ItemContainerContainedItemsMass(float OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.OnRep_ItemContainerContainedItemsMass");
		
		AConZVehicle4W_OnRep_ItemContainerContainedItemsMass_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.OnRep_HornActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::OnRep_HornActive(bool OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.OnRep_HornActive");
		
		AConZVehicle4W_OnRep_HornActive_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.OnRep_HealthFuelBatteryAmount
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::OnRep_HealthFuelBatteryAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.OnRep_HealthFuelBatteryAmount");
		
		AConZVehicle4W_OnRep_HealthFuelBatteryAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.OnRep_EngineState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EVehicleEngineState                                OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::OnRep_EngineState(EVehicleEngineState OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.OnRep_EngineState");
		
		AConZVehicle4W_OnRep_EngineState_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.NetMulticast_UpdateMassProperties
	 * 		Flags  -> ()
	 */
	void AConZVehicle4W::NetMulticast_UpdateMassProperties()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.NetMulticast_UpdateMassProperties");
		
		AConZVehicle4W_NetMulticast_UpdateMassProperties_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.NetMulticast_StopEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               skipLocallyControlled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::NetMulticast_StopEngineStalling(bool skipLocallyControlled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.NetMulticast_StopEngineStalling");
		
		AConZVehicle4W_NetMulticast_StopEngineStalling_Params params {};
		params.skipLocallyControlled = skipLocallyControlled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.NetMulticast_StartEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVehicleEngineStallingParameters            parameters                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               skipLocallyControlled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::NetMulticast_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters, bool skipLocallyControlled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.NetMulticast_StartEngineStalling");
		
		AConZVehicle4W_NetMulticast_StartEngineStalling_Params params {};
		params.parameters = parameters;
		params.skipLocallyControlled = skipLocallyControlled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.NetMulticast_PushStart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Direction                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZVehicle4W::NetMulticast_PushStart(const struct FVector& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.NetMulticast_PushStart");
		
		AConZVehicle4W_NetMulticast_PushStart_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.GetWaterImmersionDepth
	 * 		Flags  -> ()
	 */
	float AConZVehicle4W::GetWaterImmersionDepth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.GetWaterImmersionDepth");
		
		AConZVehicle4W_GetWaterImmersionDepth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.GetNumMountees
	 * 		Flags  -> ()
	 */
	int32_t AConZVehicle4W::GetNumMountees()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.GetNumMountees");
		
		AConZVehicle4W_GetNumMountees_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.GetHitZoneManager
	 * 		Flags  -> ()
	 */
	class UVehicleHitZoneManager* AConZVehicle4W::GetHitZoneManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.GetHitZoneManager");
		
		AConZVehicle4W_GetHitZoneManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicle4W.CanBeInteractedWith
	 * 		Flags  -> ()
	 */
	bool AConZVehicle4W::CanBeInteractedWith()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicle4W.CanBeInteractedWith");
		
		AConZVehicle4W_CanBeInteractedWith_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZVehicle4W.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZVehicle4W::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZVehicle4W");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZVehicle4WMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZVehicle4WMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZVehicle4WMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZVehicle4WDriverMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZVehicle4WDriverMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZVehicle4WDriverMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZVehicle4WPassengerMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZVehicle4WPassengerMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZVehicle4WPassengerMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZVehicleAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZVehicleAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZVehicleAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicleDriveComponent4W.SetSpeedLimiterMaxSpeed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZVehicleDriveComponent4W::SetSpeedLimiterMaxSpeed(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicleDriveComponent4W.SetSpeedLimiterMaxSpeed");
		
		UConZVehicleDriveComponent4W_SetSpeedLimiterMaxSpeed_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicleDriveComponent4W.InflateWheelTire
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            WheelIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZVehicleDriveComponent4W::InflateWheelTire(int32_t WheelIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicleDriveComponent4W.InflateWheelTire");
		
		UConZVehicleDriveComponent4W_InflateWheelTire_Params params {};
		params.WheelIndex = WheelIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicleDriveComponent4W.GetSpeedLimiterMaxSpeed
	 * 		Flags  -> ()
	 */
	float UConZVehicleDriveComponent4W::GetSpeedLimiterMaxSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicleDriveComponent4W.GetSpeedLimiterMaxSpeed");
		
		UConZVehicleDriveComponent4W_GetSpeedLimiterMaxSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicleDriveComponent4W.GetEngineLoad
	 * 		Flags  -> ()
	 */
	float UConZVehicleDriveComponent4W::GetEngineLoad()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicleDriveComponent4W.GetEngineLoad");
		
		UConZVehicleDriveComponent4W_GetEngineLoad_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZVehicleDriveComponent4W.DeflateWheelTire
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            WheelIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConZVehicleDriveComponent4W::DeflateWheelTire(int32_t WheelIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZVehicleDriveComponent4W.DeflateWheelTire");
		
		UConZVehicleDriveComponent4W_DeflateWheelTire_Params params {};
		params.WheelIndex = WheelIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZVehicleDriveComponent4W.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZVehicleDriveComponent4W::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZVehicleDriveComponent4W");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZVehicleSpringArmComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZVehicleSpringArmComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZVehicleSpringArmComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UConZVehicleTire.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConZVehicleTire::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZVehicleTire");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZWaterSpline.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZWaterSpline::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZWaterSpline");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZWaterSplineIsland.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZWaterSplineIsland::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZWaterSplineIsland");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZWaterSplineLake.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZWaterSplineLake::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZWaterSplineLake");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZWaterSplineOcean.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZWaterSplineOcean::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZWaterSplineOcean");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZWaterSplineRegistry.QueryWaterSplines
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FWaterQueryResult AConZWaterSplineRegistry::QueryWaterSplines(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZWaterSplineRegistry.QueryWaterSplines");
		
		AConZWaterSplineRegistry_QueryWaterSplines_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ConZWaterSplineRegistry.DrawQueryResult
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWaterQueryResult                           Result                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AConZWaterSplineRegistry::DrawQueryResult(const struct FWaterQueryResult& Result, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ConZWaterSplineRegistry.DrawQueryResult");
		
		AConZWaterSplineRegistry_DrawQueryResult_Params params {};
		params.Result = Result;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZWaterSplineRegistry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZWaterSplineRegistry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZWaterSplineRegistry");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZWaterSplineRiver.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZWaterSplineRiver::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZWaterSplineRiver");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZWorldBoundsVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZWorldBoundsVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZWorldBoundsVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AConZWorldSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AConZWorldSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ConZWorldSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCookingSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCookingSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CookingSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Corpse.OnRep_SourceCharacter
	 * 		Flags  -> ()
	 */
	void ACorpse::OnRep_SourceCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Corpse.OnRep_SourceCharacter");
		
		ACorpse_OnRep_SourceCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Corpse.OnRep_PoseData
	 * 		Flags  -> ()
	 */
	void ACorpse::OnRep_PoseData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Corpse.OnRep_PoseData");
		
		ACorpse_OnRep_PoseData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Corpse.OnRep_Inventory
	 * 		Flags  -> ()
	 */
	void ACorpse::OnRep_Inventory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Corpse.OnRep_Inventory");
		
		ACorpse_OnRep_Inventory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Corpse.OnRep_AtRest
	 * 		Flags  -> ()
	 */
	void ACorpse::OnRep_AtRest()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Corpse.OnRep_AtRest");
		
		ACorpse_OnRep_AtRest_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Corpse.Multicast_ClonePoseLocally
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              sourceCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACorpse::Multicast_ClonePoseLocally(class AConZCharacter* sourceCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Corpse.Multicast_ClonePoseLocally");
		
		ACorpse_Multicast_ClonePoseLocally_Params params {};
		params.sourceCharacter = sourceCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Corpse.CopyFromCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              sourceCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACorpse::CopyFromCharacter(class AConZCharacter* sourceCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Corpse.CopyFromCharacter");
		
		ACorpse_CopyFromCharacter_Params params {};
		params.sourceCharacter = sourceCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Corpse.ApplyAttachments
	 * 		Flags  -> ()
	 */
	void ACorpse::ApplyAttachments()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Corpse.ApplyAttachments");
		
		ACorpse_ApplyAttachments_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACorpse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACorpse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Corpse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCorpseInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCorpseInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CorpseInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftableItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftableItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftableItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlaceableCraftableItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlaceableCraftableItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableCraftableItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFortificationCraftableItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFortificationCraftableItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FortificationCraftableItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBaseBuildingBlockCraftableItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseBuildingBlockCraftableItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BaseBuildingBlockCraftableItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingAvailableItemWidget.SetOptionalState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EOptionalState                                     State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingAvailableItemWidget::SetOptionalState(EOptionalState State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingAvailableItemWidget.SetOptionalState");
		
		UCraftingAvailableItemWidget_SetOptionalState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingAvailableItemWidget.SetIsSelected
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isSelected                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingAvailableItemWidget::SetIsSelected(bool isSelected)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingAvailableItemWidget.SetIsSelected");
		
		UCraftingAvailableItemWidget_SetIsSelected_Params params {};
		params.isSelected = isSelected;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingAvailableItemWidget.SetIsOptional
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isOptional                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingAvailableItemWidget::SetIsOptional(bool isOptional)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingAvailableItemWidget.SetIsOptional");
		
		UCraftingAvailableItemWidget_SetIsOptional_Params params {};
		params.isOptional = isOptional;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingAvailableItemWidget.IsAvailable
	 * 		Flags  -> ()
	 */
	bool UCraftingAvailableItemWidget::IsAvailable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingAvailableItemWidget.IsAvailable");
		
		UCraftingAvailableItemWidget_IsAvailable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingAvailableItemWidget.Init
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingAvailableItemWidget::Init(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingAvailableItemWidget.Init");
		
		UCraftingAvailableItemWidget_Init_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingAvailableItemWidget.GetOptionalState
	 * 		Flags  -> ()
	 */
	EOptionalState UCraftingAvailableItemWidget::GetOptionalState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingAvailableItemWidget.GetOptionalState");
		
		UCraftingAvailableItemWidget_GetOptionalState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingAvailableItemWidget.GetIsSelected
	 * 		Flags  -> ()
	 */
	bool UCraftingAvailableItemWidget::GetIsSelected()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingAvailableItemWidget.GetIsSelected");
		
		UCraftingAvailableItemWidget_GetIsSelected_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingAvailableItemWidget.GetIsOptional
	 * 		Flags  -> ()
	 */
	bool UCraftingAvailableItemWidget::GetIsOptional()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingAvailableItemWidget.GetIsOptional");
		
		UCraftingAvailableItemWidget_GetIsOptional_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.CraftingAvailableItemWidget.ClickedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCraftingAvailableItemWidget*                Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingAvailableItemWidget::ClickedDelegate__DelegateSignature(class UCraftingAvailableItemWidget* Widget, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.CraftingAvailableItemWidget.ClickedDelegate__DelegateSignature");
		
		UCraftingAvailableItemWidget_ClickedDelegate__DelegateSignature_Params params {};
		params.Widget = Widget;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingAvailableItemWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingAvailableItemWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingAvailableItemWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingCache.Regenerate
	 * 		Flags  -> ()
	 */
	void UCraftingCache::Regenerate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingCache.Regenerate");
		
		UCraftingCache_Regenerate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingCache.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingCache::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingCache");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingComponentWidget.SetSatisfiedAndRequiredCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Satisfied                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Required                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingComponentWidget::SetSatisfiedAndRequiredCount(int32_t Satisfied, int32_t Required)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingComponentWidget.SetSatisfiedAndRequiredCount");
		
		UCraftingComponentWidget_SetSatisfiedAndRequiredCount_Params params {};
		params.Satisfied = Satisfied;
		params.Required = Required;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingComponentWidget.SetRequiredCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingComponentWidget::SetRequiredCount(int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingComponentWidget.SetRequiredCount");
		
		UCraftingComponentWidget_SetRequiredCount_Params params {};
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingComponentWidget.SetOrderNumber
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            orderNumber                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingComponentWidget::SetOrderNumber(int32_t orderNumber)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingComponentWidget.SetOrderNumber");
		
		UCraftingComponentWidget_SetOrderNumber_Params params {};
		params.orderNumber = orderNumber;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingComponentWidget.SetIsTool
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsTool                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingComponentWidget::SetIsTool(bool IsTool)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingComponentWidget.SetIsTool");
		
		UCraftingComponentWidget_SetIsTool_Params params {};
		params.IsTool = IsTool;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingComponentWidget.SetIsOptional
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isOptional                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingComponentWidget::SetIsOptional(bool isOptional)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingComponentWidget.SetIsOptional");
		
		UCraftingComponentWidget_SetIsOptional_Params params {};
		params.isOptional = isOptional;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingComponentWidget.SetIsAvailable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsAvailable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingComponentWidget::SetIsAvailable(bool IsAvailable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingComponentWidget.SetIsAvailable");
		
		UCraftingComponentWidget_SetIsAvailable_Params params {};
		params.IsAvailable = IsAvailable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingComponentWidget.GetIsAvailable
	 * 		Flags  -> ()
	 */
	bool UCraftingComponentWidget::GetIsAvailable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingComponentWidget.GetIsAvailable");
		
		UCraftingComponentWidget_GetIsAvailable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingComponentWidget.CreateTooltip
	 * 		Flags  -> ()
	 */
	void UCraftingComponentWidget::CreateTooltip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingComponentWidget.CreateTooltip");
		
		UCraftingComponentWidget_CreateTooltip_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingComponentWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingComponentWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingComponentWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingDatabase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingDatabase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingDatabase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingInfoWidget.SwapIngredient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            widgetIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            orderIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingInfoWidget::SwapIngredient(int32_t widgetIndex, int32_t orderIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingInfoWidget.SwapIngredient");
		
		UCraftingInfoWidget_SwapIngredient_Params params {};
		params.widgetIndex = widgetIndex;
		params.orderIndex = orderIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingInfoWidget.SetCaptionAndDescription
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Caption                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Description                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCraftingInfoWidget::SetCaptionAndDescription(const class FText& Caption, const class FText& Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingInfoWidget.SetCaptionAndDescription");
		
		UCraftingInfoWidget_SetCaptionAndDescription_Params params {};
		params.Caption = Caption;
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingInfoWidget.Init
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       itemCDO                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingInfoWidget::Init(class AItem* itemCDO)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingInfoWidget.Init");
		
		UCraftingInfoWidget_Init_Params params {};
		params.itemCDO = itemCDO;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingInfoWidget.Close
	 * 		Flags  -> ()
	 */
	void UCraftingInfoWidget::Close()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingInfoWidget.Close");
		
		UCraftingInfoWidget_Close_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingInfoWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingInfoWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingInfoWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingIngredient.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingIngredient::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingIngredient");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACraftingObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACraftingObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingPanelWidget.UpdateAvailableComponents
	 * 		Flags  -> ()
	 */
	void UCraftingPanelWidget::UpdateAvailableComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingPanelWidget.UpdateAvailableComponents");
		
		UCraftingPanelWidget_UpdateAvailableComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.CraftingPanelWidget.RecipeItemClicked__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCraftableItem*                              CraftableItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingPanelWidget::RecipeItemClicked__DelegateSignature(class UCraftableItem* CraftableItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.CraftingPanelWidget.RecipeItemClicked__DelegateSignature");
		
		UCraftingPanelWidget_RecipeItemClicked__DelegateSignature_Params params {};
		params.CraftableItem = CraftableItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingPanelWidget.OnRecipeClicked
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCraftingRecipeWidget*                       Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingPanelWidget::OnRecipeClicked(class UCraftingRecipeWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingPanelWidget.OnRecipeClicked");
		
		UCraftingPanelWidget_OnRecipeClicked_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingPanelWidget.OnAdditionalIngredientSelected
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCraftingAvailableItemWidget*                Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingPanelWidget::OnAdditionalIngredientSelected(class UCraftingAvailableItemWidget* Widget, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingPanelWidget.OnAdditionalIngredientSelected");
		
		UCraftingPanelWidget_OnAdditionalIngredientSelected_Params params {};
		params.Widget = Widget;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingPanelWidget.HighlightRecipesContainingString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      str                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingPanelWidget::HighlightRecipesContainingString(const class FString& str)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingPanelWidget.HighlightRecipesContainingString");
		
		UCraftingPanelWidget_HighlightRecipesContainingString_Params params {};
		params.str = str;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingPanelWidget.HandlePrisonerChange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingPanelWidget::HandlePrisonerChange(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingPanelWidget.HandlePrisonerChange");
		
		UCraftingPanelWidget_HandlePrisonerChange_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingPanelWidget.Craft
	 * 		Flags  -> ()
	 */
	void UCraftingPanelWidget::Craft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingPanelWidget.Craft");
		
		UCraftingPanelWidget_Craft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingPanelWidget.CanCraft
	 * 		Flags  -> ()
	 */
	bool UCraftingPanelWidget::CanCraft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingPanelWidget.CanCraft");
		
		UCraftingPanelWidget_CanCraft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingPanelWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingPanelWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingPanelWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingProduct.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingProduct::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingProduct");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingRecipeWidget.SetTooltipFromClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingRecipeWidget::SetTooltipFromClass(class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingRecipeWidget.SetTooltipFromClass");
		
		UCraftingRecipeWidget_SetTooltipFromClass_Params params {};
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingRecipeWidget.SetTooltipFromCaptionAndDescription
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Caption                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Description                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCraftingRecipeWidget::SetTooltipFromCaptionAndDescription(const class FText& Caption, const class FText& Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingRecipeWidget.SetTooltipFromCaptionAndDescription");
		
		UCraftingRecipeWidget_SetTooltipFromCaptionAndDescription_Params params {};
		params.Caption = Caption;
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingRecipeWidget.SetIsSelected
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isSelected                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingRecipeWidget::SetIsSelected(bool isSelected)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingRecipeWidget.SetIsSelected");
		
		UCraftingRecipeWidget_SetIsSelected_Params params {};
		params.isSelected = isSelected;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingRecipeWidget.SetIsHighlighted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isHighligted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingRecipeWidget::SetIsHighlighted(bool isHighligted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingRecipeWidget.SetIsHighlighted");
		
		UCraftingRecipeWidget_SetIsHighlighted_Params params {};
		params.isHighligted = isHighligted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingRecipeWidget.SetIsGrayedOut
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isGrayedOut                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingRecipeWidget::SetIsGrayedOut(bool isGrayedOut)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingRecipeWidget.SetIsGrayedOut");
		
		UCraftingRecipeWidget_SetIsGrayedOut_Params params {};
		params.isGrayedOut = isGrayedOut;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingRecipeWidget.SetAvailabilityState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ERecipeAvailabilityState                           State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingRecipeWidget::SetAvailabilityState(ERecipeAvailabilityState State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingRecipeWidget.SetAvailabilityState");
		
		UCraftingRecipeWidget_SetAvailabilityState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.CraftingRecipeWidget.RecipeSelectedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UCraftingRecipeWidget*                       Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCraftingRecipeWidget::RecipeSelectedDelegate__DelegateSignature(class UCraftingRecipeWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.CraftingRecipeWidget.RecipeSelectedDelegate__DelegateSignature");
		
		UCraftingRecipeWidget_RecipeSelectedDelegate__DelegateSignature_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingRecipeWidget.GetCaption
	 * 		Flags  -> ()
	 */
	class FText UCraftingRecipeWidget::GetCaption()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingRecipeWidget.GetCaption");
		
		UCraftingRecipeWidget_GetCaption_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CraftingRecipeWidget.GetAvailabilityState
	 * 		Flags  -> ()
	 */
	ERecipeAvailabilityState UCraftingRecipeWidget::GetAvailabilityState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CraftingRecipeWidget.GetAvailabilityState");
		
		UCraftingRecipeWidget_GetAvailabilityState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingRecipeWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingRecipeWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingRecipeWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingIngredientType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingIngredientType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingIngredientType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftingSlotType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftingSlotType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftingSlotType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCraftItemAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCraftItemAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CraftItemAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFBase.SphereOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ACTFBase::SphereOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFBase.SphereOverlap");
		
		ACTFBase_SphereOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFBase.OnRep_Team
	 * 		Flags  -> ()
	 */
	void ACTFBase::OnRep_Team()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFBase.OnRep_Team");
		
		ACTFBase_OnRep_Team_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFBase.OnRep_Radius
	 * 		Flags  -> ()
	 */
	void ACTFBase::OnRep_Radius()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFBase.OnRep_Radius");
		
		ACTFBase_OnRep_Radius_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACTFBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACTFBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CTFBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFFlag.SphereOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ACTFFlag::SphereOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFFlag.SphereOverlap");
		
		ACTFFlag_SphereOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFFlag.OnRep_Team
	 * 		Flags  -> ()
	 */
	void ACTFFlag::OnRep_Team()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFFlag.OnRep_Team");
		
		ACTFFlag_OnRep_Team_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFFlag.OnRep_FlagTransform
	 * 		Flags  -> ()
	 */
	void ACTFFlag::OnRep_FlagTransform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFFlag.OnRep_FlagTransform");
		
		ACTFFlag_OnRep_FlagTransform_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACTFFlag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACTFFlag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CTFFlag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFFlagStand.OnRep_LightColor
	 * 		Flags  -> ()
	 */
	void ACTFFlagStand::OnRep_LightColor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFFlagStand.OnRep_LightColor");
		
		ACTFFlagStand_OnRep_LightColor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACTFFlagStand.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACTFFlagStand::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CTFFlagStand");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.UpdateTeamMemberCount
	 * 		Flags  -> ()
	 */
	void AGameEventBase::UpdateTeamMemberCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.UpdateTeamMemberCount");
		
		AGameEventBase_UpdateTeamMemberCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.UpdateRanking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::UpdateRanking(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.UpdateRanking");
		
		AGameEventBase_UpdateRanking_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.SetTeamScore
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TeamIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Score                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::SetTeamScore(int32_t TeamIndex, float Score)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.SetTeamScore");
		
		AGameEventBase_SetTeamScore_Params params {};
		params.TeamIndex = TeamIndex;
		params.Score = Score;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.SetParticipantTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TeamIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::SetParticipantTeam(class APrisoner* Prisoner, int32_t TeamIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.SetParticipantTeam");
		
		AGameEventBase_SetParticipantTeam_Params params {};
		params.Prisoner = Prisoner;
		params.TeamIndex = TeamIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.SetParameters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGameEventParameters                        parameters                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::SetParameters(const struct FGameEventParameters& parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.SetParameters");
		
		AGameEventBase_SetParameters_Params params {};
		params.parameters = parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.SetNumberOfTeams
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::SetNumberOfTeams(int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.SetNumberOfTeams");
		
		AGameEventBase_SetNumberOfTeams_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.ScheduleEvent
	 * 		Flags  -> ()
	 */
	bool AGameEventBase::ScheduleEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.ScheduleEvent");
		
		AGameEventBase_ScheduleEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.SavePrisonerState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::SavePrisonerState(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.SavePrisonerState");
		
		AGameEventBase_SavePrisonerState_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.SameTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   prisonerA                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APrisoner*                                   prisonerB                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGameEventBase::SameTeam(class APrisoner* prisonerA, class APrisoner* prisonerB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.SameTeam");
		
		AGameEventBase_SameTeam_Params params {};
		params.prisonerA = prisonerA;
		params.prisonerB = prisonerB;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.ResetGameEventArea
	 * 		Flags  -> ()
	 */
	void AGameEventBase::ResetGameEventArea()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.ResetGameEventArea");
		
		AGameEventBase_ResetGameEventArea_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.RegisterParticipant
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            preferredTeam                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::RegisterParticipant(class APrisoner* Prisoner, int32_t preferredTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.RegisterParticipant");
		
		AGameEventBase_RegisterParticipant_Params params {};
		params.Prisoner = Prisoner;
		params.preferredTeam = preferredTeam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.PresentSpawnScreen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::PresentSpawnScreen(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.PresentSpawnScreen");
		
		AGameEventBase_PresentSpawnScreen_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.ParticipantEnter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::ParticipantEnter(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.ParticipantEnter");
		
		AGameEventBase_ParticipantEnter_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.OnRep_Rankings
	 * 		Flags  -> ()
	 */
	void AGameEventBase::OnRep_Rankings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.OnRep_Rankings");
		
		AGameEventBase_OnRep_Rankings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.OnRep_ParticipantInfo
	 * 		Flags  -> ()
	 */
	void AGameEventBase::OnRep_ParticipantInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.OnRep_ParticipantInfo");
		
		AGameEventBase_OnRep_ParticipantInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.NetMulticast_UpdateScoreboard
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            victimIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            killerIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsHeadShot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::NetMulticast_UpdateScoreboard(int32_t victimIndex, int32_t killerIndex, bool IsHeadShot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.NetMulticast_UpdateScoreboard");
		
		AGameEventBase_NetMulticast_UpdateScoreboard_Params params {};
		params.victimIndex = victimIndex;
		params.killerIndex = killerIndex;
		params.IsHeadShot = IsHeadShot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_StopMusic
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               StopAudioEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::Multicast_StopMusic(class UAkAudioEvent* StopAudioEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_StopMusic");
		
		AGameEventBase_Multicast_StopMusic_Params params {};
		params.StopAudioEvent = StopAudioEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_StopCountdownAnnouncement
	 * 		Flags  -> ()
	 */
	void AGameEventBase::Multicast_StopCountdownAnnouncement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_StopCountdownAnnouncement");
		
		AGameEventBase_Multicast_StopCountdownAnnouncement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_ShowScoreboardForEveryone
	 * 		Flags  -> ()
	 */
	void AGameEventBase::Multicast_ShowScoreboardForEveryone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_ShowScoreboardForEveryone");
		
		AGameEventBase_Multicast_ShowScoreboardForEveryone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_ShowEventNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGameEventNotificationType                         Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      auxString                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::Multicast_ShowEventNotification(EGameEventNotificationType Type, const class FString& auxString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_ShowEventNotification");
		
		AGameEventBase_Multicast_ShowEventNotification_Params params {};
		params.Type = Type;
		params.auxString = auxString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_PlayMusic
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               StartAudioEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::Multicast_PlayMusic(class UAkAudioEvent* StartAudioEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_PlayMusic");
		
		AGameEventBase_Multicast_PlayMusic_Params params {};
		params.StartAudioEvent = StartAudioEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_PlayCountdownAnnouncement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::Multicast_PlayCountdownAnnouncement(class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_PlayCountdownAnnouncement");
		
		AGameEventBase_Multicast_PlayCountdownAnnouncement_Params params {};
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_PlayAnnouncementToTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TeamIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::Multicast_PlayAnnouncementToTeam(int32_t TeamIndex, class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_PlayAnnouncementToTeam");
		
		AGameEventBase_Multicast_PlayAnnouncementToTeam_Params params {};
		params.TeamIndex = TeamIndex;
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_PlayAnnouncementToParticipant
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::Multicast_PlayAnnouncementToParticipant(class APrisoner* Prisoner, class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_PlayAnnouncementToParticipant");
		
		AGameEventBase_Multicast_PlayAnnouncementToParticipant_Params params {};
		params.Prisoner = Prisoner;
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_PlayAnnouncementToAllParticipants
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::Multicast_PlayAnnouncementToAllParticipants(class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_PlayAnnouncementToAllParticipants");
		
		AGameEventBase_Multicast_PlayAnnouncementToAllParticipants_Params params {};
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.Multicast_HideScoreboardForEveryone
	 * 		Flags  -> ()
	 */
	void AGameEventBase::Multicast_HideScoreboardForEveryone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.Multicast_HideScoreboardForEveryone");
		
		AGameEventBase_Multicast_HideScoreboardForEveryone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.KickParticipant
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::KickParticipant(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.KickParticipant");
		
		AGameEventBase_KickParticipant_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.IsTeamFull
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TeamIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGameEventBase::IsTeamFull(int32_t TeamIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.IsTeamFull");
		
		AGameEventBase_IsTeamFull_Params params {};
		params.TeamIndex = TeamIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.IsParticipating
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGameEventBase::IsParticipating(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.IsParticipating");
		
		AGameEventBase_IsParticipating_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.InitEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventLocationMarker*                    marker                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGameEventManager*                           Manager                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::InitEvent(class AGameEventLocationMarker* marker, class AGameEventManager* Manager)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.InitEvent");
		
		AGameEventBase_InitEvent_Params params {};
		params.marker = marker;
		params.Manager = Manager;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetWinningTeamsPerRound
	 * 		Flags  -> ()
	 */
	TArray<int32_t> AGameEventBase::GetWinningTeamsPerRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetWinningTeamsPerRound");
		
		AGameEventBase_GetWinningTeamsPerRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetTeamScore
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TeamIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AGameEventBase::GetTeamScore(int32_t TeamIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetTeamScore");
		
		AGameEventBase_GetTeamScore_Params params {};
		params.TeamIndex = TeamIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetTeamMemberCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TeamIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGameEventBase::GetTeamMemberCount(int32_t TeamIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetTeamMemberCount");
		
		AGameEventBase_GetTeamMemberCount_Params params {};
		params.TeamIndex = TeamIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetStatusTime
	 * 		Flags  -> ()
	 */
	float AGameEventBase::GetStatusTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetStatusTime");
		
		AGameEventBase_GetStatusTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetSpawnRotationForLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FRotator AGameEventBase::GetSpawnRotationForLocation(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetSpawnRotationForLocation");
		
		AGameEventBase_GetSpawnRotationForLocation_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetScoreboardWidget
	 * 		Flags  -> ()
	 */
	class UGameEventScoreboardWidget* AGameEventBase::GetScoreboardWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetScoreboardWidget");
		
		AGameEventBase_GetScoreboardWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetRoundTimeLeft
	 * 		Flags  -> ()
	 */
	float AGameEventBase::GetRoundTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetRoundTimeLeft");
		
		AGameEventBase_GetRoundTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetPossibleLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UItemSelection*>                      primaryWeapons                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class UItemSelection*>                      secondaryWeapons                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class UItemSelection*>                      tertiaryWeapons                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class UItemSelection*>                      outfits                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class UItemSelection*>                      support                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class UItemSelection*>                      Gear                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::GetPossibleLoadout(class APrisoner* Prisoner, TArray<class UItemSelection*>* primaryWeapons, TArray<class UItemSelection*>* secondaryWeapons, TArray<class UItemSelection*>* tertiaryWeapons, TArray<class UItemSelection*>* outfits, TArray<class UItemSelection*>* support, TArray<class UItemSelection*>* Gear)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetPossibleLoadout");
		
		AGameEventBase_GetPossibleLoadout_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (primaryWeapons != nullptr)
			*primaryWeapons = params.primaryWeapons;
		if (secondaryWeapons != nullptr)
			*secondaryWeapons = params.secondaryWeapons;
		if (tertiaryWeapons != nullptr)
			*tertiaryWeapons = params.tertiaryWeapons;
		if (outfits != nullptr)
			*outfits = params.outfits;
		if (support != nullptr)
			*support = params.support;
		if (Gear != nullptr)
			*Gear = params.Gear;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetParticipantTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGameEventBase::GetParticipantTeam(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetParticipantTeam");
		
		AGameEventBase_GetParticipantTeam_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetParticipantJoinLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector AGameEventBase::GetParticipantJoinLocation(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetParticipantJoinLocation");
		
		AGameEventBase_GetParticipantJoinLocation_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetParticipantInfo
	 * 		Flags  -> ()
	 */
	TArray<struct FGameEventParticipantInfo> AGameEventBase::GetParticipantInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetParticipantInfo");
		
		AGameEventBase_GetParticipantInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetParticipantAtRank
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Rank                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGameEventBase::GetParticipantAtRank(int32_t Rank)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetParticipantAtRank");
		
		AGameEventBase_GetParticipantAtRank_Params params {};
		params.Rank = Rank;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetParameters
	 * 		Flags  -> ()
	 */
	struct FGameEventParameters AGameEventBase::GetParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetParameters");
		
		AGameEventBase_GetParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetNumberOfTeams
	 * 		Flags  -> ()
	 */
	int32_t AGameEventBase::GetNumberOfTeams()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetNumberOfTeams");
		
		AGameEventBase_GetNumberOfTeams_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetNumberOfParticipants
	 * 		Flags  -> ()
	 */
	int32_t AGameEventBase::GetNumberOfParticipants()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetNumberOfParticipants");
		
		AGameEventBase_GetNumberOfParticipants_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetNumberOfActiveParticipants
	 * 		Flags  -> ()
	 */
	int32_t AGameEventBase::GetNumberOfActiveParticipants()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetNumberOfActiveParticipants");
		
		AGameEventBase_GetNumberOfActiveParticipants_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetMiniScoreboardWidget
	 * 		Flags  -> ()
	 */
	class UGameEventScoreboardWidget* AGameEventBase::GetMiniScoreboardWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetMiniScoreboardWidget");
		
		AGameEventBase_GetMiniScoreboardWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetMaxDurationLeft
	 * 		Flags  -> ()
	 */
	float AGameEventBase::GetMaxDurationLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetMaxDurationLeft");
		
		AGameEventBase_GetMaxDurationLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetMarker
	 * 		Flags  -> ()
	 */
	class AGameEventLocationMarker* AGameEventBase::GetMarker()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetMarker");
		
		AGameEventBase_GetMarker_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetEventState
	 * 		Flags  -> ()
	 */
	EGameEventState AGameEventBase::GetEventState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetEventState");
		
		AGameEventBase_GetEventState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetDatabaseEventId
	 * 		Flags  -> ()
	 */
	struct FDbIntegerId AGameEventBase::GetDatabaseEventId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetDatabaseEventId");
		
		AGameEventBase_GetDatabaseEventId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetCurrentRoundDatabaseId
	 * 		Flags  -> ()
	 */
	struct FDbIntegerId AGameEventBase::GetCurrentRoundDatabaseId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetCurrentRoundDatabaseId");
		
		AGameEventBase_GetCurrentRoundDatabaseId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetCurrentRound
	 * 		Flags  -> ()
	 */
	int32_t AGameEventBase::GetCurrentRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetCurrentRound");
		
		AGameEventBase_GetCurrentRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetCardWidget
	 * 		Flags  -> ()
	 */
	class UGameEventCardWidget* AGameEventBase::GetCardWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetCardWidget");
		
		AGameEventBase_GetCardWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetCancelTimeLeft
	 * 		Flags  -> ()
	 */
	float AGameEventBase::GetCancelTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetCancelTimeLeft");
		
		AGameEventBase_GetCancelTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.GetBorder
	 * 		Flags  -> ()
	 */
	class AGameEventBorder* AGameEventBase::GetBorder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.GetBorder");
		
		AGameEventBase_GetBorder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.ForceParticipantStatsRep
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::ForceParticipantStatsRep(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.ForceParticipantStatsRep");
		
		AGameEventBase_ForceParticipantStatsRep_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.FindParticipantIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGameEventBase::FindParticipantIndex(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.FindParticipantIndex");
		
		AGameEventBase_FindParticipantIndex_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.EquipParticipantLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::EquipParticipantLoadout(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.EquipParticipantLoadout");
		
		AGameEventBase_EquipParticipantLoadout_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.DeclareWinningTeam
	 * 		Flags  -> ()
	 */
	int32_t AGameEventBase::DeclareWinningTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.DeclareWinningTeam");
		
		AGameEventBase_DeclareWinningTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.ConvertScoreToFame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::ConvertScoreToFame(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.ConvertScoreToFame");
		
		AGameEventBase_ConvertScoreToFame_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.ClearTeamScores
	 * 		Flags  -> ()
	 */
	void AGameEventBase::ClearTeamScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.ClearTeamScores");
		
		AGameEventBase_ClearTeamScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.ChooseSpawnLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector AGameEventBase::ChooseSpawnLocation(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.ChooseSpawnLocation");
		
		AGameEventBase_ChooseSpawnLocation_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.CheckParticipatingPrisoners
	 * 		Flags  -> ()
	 */
	void AGameEventBase::CheckParticipatingPrisoners()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.CheckParticipatingPrisoners");
		
		AGameEventBase_CheckParticipatingPrisoners_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.CanStart
	 * 		Flags  -> ()
	 */
	bool AGameEventBase::CanStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.CanStart");
		
		AGameEventBase_CanStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.CanSchedule
	 * 		Flags  -> ()
	 */
	bool AGameEventBase::CanSchedule()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.CanSchedule");
		
		AGameEventBase_CanSchedule_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.CanJoin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            preferredTeam                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGameEventBase::CanJoin(class APrisoner* Prisoner, int32_t preferredTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.CanJoin");
		
		AGameEventBase_CanJoin_Params params {};
		params.Prisoner = Prisoner;
		params.preferredTeam = preferredTeam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.CancelEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               force                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::CancelEvent(bool force)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.CancelEvent");
		
		AGameEventBase_CancelEvent_Params params {};
		params.force = force;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.CallInParticipant
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::CallInParticipant(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.CallInParticipant");
		
		AGameEventBase_CallInParticipant_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.AwardParticipant
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameEventRewardPoints                      reward                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AGameEventBase::AwardParticipant(int32_t Index, const struct FGameEventRewardPoints& reward)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.AwardParticipant");
		
		AGameEventBase_AwardParticipant_Params params {};
		params.Index = Index;
		params.reward = reward;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBase.AssignParticipantTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGameEventBase::AssignParticipantTeam(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBase.AssignParticipantTeam");
		
		AGameEventBase_AssignParticipantTeam_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGameEventBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGameEventBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStats.GetTeamKills
	 * 		Flags  -> ()
	 */
	int32_t UGameEventParticipantStats::GetTeamKills()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStats.GetTeamKills");
		
		UGameEventParticipantStats_GetTeamKills_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStats.GetSuicides
	 * 		Flags  -> ()
	 */
	int32_t UGameEventParticipantStats::GetSuicides()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStats.GetSuicides");
		
		UGameEventParticipantStats_GetSuicides_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStats.GetScore
	 * 		Flags  -> ()
	 */
	float UGameEventParticipantStats::GetScore()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStats.GetScore");
		
		UGameEventParticipantStats_GetScore_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStats.GetHeadshots
	 * 		Flags  -> ()
	 */
	int32_t UGameEventParticipantStats::GetHeadshots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStats.GetHeadshots");
		
		UGameEventParticipantStats_GetHeadshots_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStats.GetEnemyKills
	 * 		Flags  -> ()
	 */
	int32_t UGameEventParticipantStats::GetEnemyKills()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStats.GetEnemyKills");
		
		UGameEventParticipantStats_GetEnemyKills_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStats.GetDeaths
	 * 		Flags  -> ()
	 */
	int32_t UGameEventParticipantStats::GetDeaths()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStats.GetDeaths");
		
		UGameEventParticipantStats_GetDeaths_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStats.GetAssists
	 * 		Flags  -> ()
	 */
	int32_t UGameEventParticipantStats::GetAssists()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStats.GetAssists");
		
		UGameEventParticipantStats_GetAssists_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventParticipantStats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventParticipantStats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventParticipantStats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCTFParticipantStats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTFParticipantStats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CTFParticipantStats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFGameEvent.SetCTFParameters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCTFParameters                              Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ACTFGameEvent::SetCTFParameters(const struct FCTFParameters& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFGameEvent.SetCTFParameters");
		
		ACTFGameEvent_SetCTFParameters_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFGameEvent.OnParticipantDied
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   victim                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDamageEvent                                DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class AController*                                 eventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      causer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACTFGameEvent::OnParticipantDied(class APrisoner* victim, const struct FDamageEvent& DamageEvent, class AController* eventInstigator, class AActor* causer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFGameEvent.OnParticipantDied");
		
		ACTFGameEvent_OnParticipantDied_Params params {};
		params.victim = victim;
		params.DamageEvent = DamageEvent;
		params.eventInstigator = eventInstigator;
		params.causer = causer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFGameEvent.GetFlagB
	 * 		Flags  -> ()
	 */
	class ACTFFlag* ACTFGameEvent::GetFlagB()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFGameEvent.GetFlagB");
		
		ACTFGameEvent_GetFlagB_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFGameEvent.GetFlagA
	 * 		Flags  -> ()
	 */
	class ACTFFlag* ACTFGameEvent::GetFlagA()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFGameEvent.GetFlagA");
		
		ACTFGameEvent_GetFlagA_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CTFGameEvent.GetCTFParameters
	 * 		Flags  -> ()
	 */
	struct FCTFParameters ACTFGameEvent::GetCTFParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CTFGameEvent.GetCTFParameters");
		
		ACTFGameEvent_GetCTFParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACTFGameEvent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACTFGameEvent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CTFGameEvent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLocationMarker.GetAreaCenter
	 * 		Flags  -> ()
	 */
	struct FVector AGameEventLocationMarker::GetAreaCenter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLocationMarker.GetAreaCenter");
		
		AGameEventLocationMarker_GetAreaCenter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLocationMarker.CreateGameEvent
	 * 		Flags  -> ()
	 */
	class AGameEventBase* AGameEventLocationMarker::CreateGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLocationMarker.CreateGameEvent");
		
		AGameEventLocationMarker_CreateGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLocationMarker.CreateBorder
	 * 		Flags  -> ()
	 */
	class AGameEventBorder* AGameEventLocationMarker::CreateBorder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLocationMarker.CreateBorder");
		
		AGameEventLocationMarker_CreateBorder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGameEventLocationMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGameEventLocationMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventLocationMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACTFLocationMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACTFLocationMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CTFLocationMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCurrencyItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCurrencyItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CurrencyItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomMapBorder.OnRep_TournamentCompletionPercentage
	 * 		Flags  -> ()
	 */
	void ACustomMapBorder::OnRep_TournamentCompletionPercentage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomMapBorder.OnRep_TournamentCompletionPercentage");
		
		ACustomMapBorder_OnRep_TournamentCompletionPercentage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomMapBorder.OnRep_IsInTournamentMode
	 * 		Flags  -> ()
	 */
	void ACustomMapBorder::OnRep_IsInTournamentMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomMapBorder.OnRep_IsInTournamentMode");
		
		ACustomMapBorder_OnRep_IsInTournamentMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomMapBorder.OnRep_CustomMapDimensions
	 * 		Flags  -> ()
	 */
	void ACustomMapBorder::OnRep_CustomMapDimensions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomMapBorder.OnRep_CustomMapDimensions");
		
		ACustomMapBorder_OnRep_CustomMapDimensions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomMapBorder.OnRep_Active
	 * 		Flags  -> ()
	 */
	void ACustomMapBorder::OnRep_Active()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomMapBorder.OnRep_Active");
		
		ACustomMapBorder_OnRep_Active_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACustomMapBorder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACustomMapBorder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomMapBorder");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneRegistry.NetMulticast_ReceiveCustomZoneData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCustomZoneConfiguration                    globalConfiguration                                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCustomZoneConfiguration>            configurations                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCustomZoneRegion>                   Regions                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCustomZoneRegistry::NetMulticast_ReceiveCustomZoneData(const struct FCustomZoneConfiguration& globalConfiguration, TArray<struct FCustomZoneConfiguration> configurations, TArray<struct FCustomZoneRegion> Regions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneRegistry.NetMulticast_ReceiveCustomZoneData");
		
		UCustomZoneRegistry_NetMulticast_ReceiveCustomZoneData_Params params {};
		params.globalConfiguration = globalConfiguration;
		params.configurations = configurations;
		params.Regions = Regions;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneRegistry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneRegistry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneRegistry");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsApplyNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsApplyNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsApplyNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress7
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsColorPicker::HandleButtonPress7()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress7");
		
		UCustomZoneSettingsColorPicker_HandleButtonPress7_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress6
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsColorPicker::HandleButtonPress6()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress6");
		
		UCustomZoneSettingsColorPicker_HandleButtonPress6_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress5
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsColorPicker::HandleButtonPress5()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress5");
		
		UCustomZoneSettingsColorPicker_HandleButtonPress5_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress4
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsColorPicker::HandleButtonPress4()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress4");
		
		UCustomZoneSettingsColorPicker_HandleButtonPress4_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress3
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsColorPicker::HandleButtonPress3()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress3");
		
		UCustomZoneSettingsColorPicker_HandleButtonPress3_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress2
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsColorPicker::HandleButtonPress2()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress2");
		
		UCustomZoneSettingsColorPicker_HandleButtonPress2_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress1
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsColorPicker::HandleButtonPress1()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress1");
		
		UCustomZoneSettingsColorPicker_HandleButtonPress1_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress0
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsColorPicker::HandleButtonPress0()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress0");
		
		UCustomZoneSettingsColorPicker_HandleButtonPress0_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsColorPicker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsColorPicker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsColorPicker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsConfiguration.HandleRemoveButtonClicked
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsConfiguration::HandleRemoveButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsConfiguration.HandleRemoveButtonClicked");
		
		UCustomZoneSettingsConfiguration_HandleRemoveButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsConfiguration.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsConfiguration::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsConfiguration");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsConfigurationDetails.HandleNameChange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ETextCommit                                        CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomZoneSettingsConfigurationDetails::HandleNameChange(const class FText& Text, ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsConfigurationDetails.HandleNameChange");
		
		UCustomZoneSettingsConfigurationDetails_HandleNameChange_Params params {};
		params.Text = Text;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsConfigurationDetails.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsConfigurationDetails::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsConfigurationDetails");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsConfigurationsList.UpdateConfiguration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ConfigurationIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCustomZoneConfiguration                    Configuration                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCustomZoneSettingsConfigurationsList::UpdateConfiguration(int32_t ConfigurationIndex, const struct FCustomZoneConfiguration& Configuration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsConfigurationsList.UpdateConfiguration");
		
		UCustomZoneSettingsConfigurationsList_UpdateConfiguration_Params params {};
		params.ConfigurationIndex = ConfigurationIndex;
		params.Configuration = Configuration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsConfigurationsList.RemoveConfiguration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ConfigurationIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomZoneSettingsConfigurationsList::RemoveConfiguration(int32_t ConfigurationIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsConfigurationsList.RemoveConfiguration");
		
		UCustomZoneSettingsConfigurationsList_RemoveConfiguration_Params params {};
		params.ConfigurationIndex = ConfigurationIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsConfigurationsList.AddConfiguration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCustomZoneConfiguration                    Configuration                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UCustomZoneSettingsConfigurationsList::AddConfiguration(const struct FCustomZoneConfiguration& Configuration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsConfigurationsList.AddConfiguration");
		
		UCustomZoneSettingsConfigurationsList_AddConfiguration_Params params {};
		params.Configuration = Configuration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsConfigurationsList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsConfigurationsList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsConfigurationsList");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsDetailsDisplay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsDetailsDisplay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsDetailsDisplay");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsEventDisplay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsEventDisplay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsEventDisplay");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionSkip
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsHandlingMethodSelector::HandleSelectionSkip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionSkip");
		
		UCustomZoneSettingsHandlingMethodSelector_HandleSelectionSkip_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionBlock
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsHandlingMethodSelector::HandleSelectionBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionBlock");
		
		UCustomZoneSettingsHandlingMethodSelector_HandleSelectionBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionAllow
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsHandlingMethodSelector::HandleSelectionAllow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionAllow");
		
		UCustomZoneSettingsHandlingMethodSelector_HandleSelectionAllow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsHandlingMethodSelector.GetHandlingMethodDescription
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECustomZoneEventHandlingMethod                     Method                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UCustomZoneSettingsHandlingMethodSelector::GetHandlingMethodDescription(ECustomZoneEventHandlingMethod Method)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsHandlingMethodSelector.GetHandlingMethodDescription");
		
		UCustomZoneSettingsHandlingMethodSelector_GetHandlingMethodDescription_Params params {};
		params.Method = Method;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsHandlingMethodSelector.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsHandlingMethodSelector::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsHandlingMethodSelector");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsMap.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsMap::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsMap");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsMenu.CloseMenu
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsMenu::CloseMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsMenu.CloseMenu");
		
		UCustomZoneSettingsMenu_CloseMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegion.HandleRemoveButtonClicked
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsRegion::HandleRemoveButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegion.HandleRemoveButtonClicked");
		
		UCustomZoneSettingsRegion_HandleRemoveButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegion.HandleIncreasePriorityButtonClicked
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsRegion::HandleIncreasePriorityButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegion.HandleIncreasePriorityButtonClicked");
		
		UCustomZoneSettingsRegion_HandleIncreasePriorityButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegion.HandleDecreasePriorityButtonClicked
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsRegion::HandleDecreasePriorityButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegion.HandleDecreasePriorityButtonClicked");
		
		UCustomZoneSettingsRegion_HandleDecreasePriorityButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegion.GetDefaultZoneState
	 * 		Flags  -> ()
	 */
	EDefaultCustomZoneState UCustomZoneSettingsRegion::GetDefaultZoneState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegion.GetDefaultZoneState");
		
		UCustomZoneSettingsRegion_GetDefaultZoneState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsRegion.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsRegion::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsRegion");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegionDetails.OpenConfiguration
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsRegionDetails::OpenConfiguration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegionDetails.OpenConfiguration");
		
		UCustomZoneSettingsRegionDetails_OpenConfiguration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegionDetails.IncrementConfiguration
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsRegionDetails::IncrementConfiguration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegionDetails.IncrementConfiguration");
		
		UCustomZoneSettingsRegionDetails_IncrementConfiguration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegionDetails.HandleSizeChange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETextCommit                                        CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomZoneSettingsRegionDetails::HandleSizeChange(float Value, ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegionDetails.HandleSizeChange");
		
		UCustomZoneSettingsRegionDetails_HandleSizeChange_Params params {};
		params.Value = Value;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegionDetails.HandleShapeChange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UWidget*                                     Source                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EChangeSource                                      changeSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomZoneSettingsRegionDetails::HandleShapeChange(int32_t OldValue, int32_t NewValue, class UWidget* Source, EChangeSource changeSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegionDetails.HandleShapeChange");
		
		UCustomZoneSettingsRegionDetails_HandleShapeChange_Params params {};
		params.OldValue = OldValue;
		params.NewValue = NewValue;
		params.Source = Source;
		params.changeSource = changeSource;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegionDetails.HandleRestoreClicked
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsRegionDetails::HandleRestoreClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegionDetails.HandleRestoreClicked");
		
		UCustomZoneSettingsRegionDetails_HandleRestoreClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegionDetails.HandleNameChange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ETextCommit                                        CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomZoneSettingsRegionDetails::HandleNameChange(const class FText& Text, ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegionDetails.HandleNameChange");
		
		UCustomZoneSettingsRegionDetails_HandleNameChange_Params params {};
		params.Text = Text;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegionDetails.HandleLocationChange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETextCommit                                        CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomZoneSettingsRegionDetails::HandleLocationChange(float Value, ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegionDetails.HandleLocationChange");
		
		UCustomZoneSettingsRegionDetails_HandleLocationChange_Params params {};
		params.Value = Value;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsRegionDetails.DecrementConfiguration
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsRegionDetails::DecrementConfiguration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsRegionDetails.DecrementConfiguration");
		
		UCustomZoneSettingsRegionDetails_DecrementConfiguration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsRegionDetails.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsRegionDetails::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsRegionDetails");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsRegionsList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsRegionsList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsRegionsList");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsUIController.ToggleRemoveRegionMapMode
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsUIController::ToggleRemoveRegionMapMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsUIController.ToggleRemoveRegionMapMode");
		
		UCustomZoneSettingsUIController_ToggleRemoveRegionMapMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsUIController.ToggleAddRectangleRegionMapMode
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsUIController::ToggleAddRectangleRegionMapMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsUIController.ToggleAddRectangleRegionMapMode");
		
		UCustomZoneSettingsUIController_ToggleAddRectangleRegionMapMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsUIController.ToggleAddCircleRegionMapMode
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsUIController::ToggleAddCircleRegionMapMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsUIController.ToggleAddCircleRegionMapMode");
		
		UCustomZoneSettingsUIController_ToggleAddCircleRegionMapMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsUIController.ResetToDefaults
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsUIController::ResetToDefaults()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsUIController.ResetToDefaults");
		
		UCustomZoneSettingsUIController_ResetToDefaults_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsUIController.ProcessAddDefaultRegionRequest
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsUIController::ProcessAddDefaultRegionRequest()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsUIController.ProcessAddDefaultRegionRequest");
		
		UCustomZoneSettingsUIController_ProcessAddDefaultRegionRequest_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsUIController.ProcessAddDefaultConfigurationRequest
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsUIController::ProcessAddDefaultConfigurationRequest()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsUIController.ProcessAddDefaultConfigurationRequest");
		
		UCustomZoneSettingsUIController_ProcessAddDefaultConfigurationRequest_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.CustomZoneSettingsUIController.ApplyCustomZoneSettings
	 * 		Flags  -> ()
	 */
	void UCustomZoneSettingsUIController::ApplyCustomZoneSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.CustomZoneSettingsUIController.ApplyCustomZoneSettings");
		
		UCustomZoneSettingsUIController_ApplyCustomZoneSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCustomZoneSettingsUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomZoneSettingsUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CustomZoneSettingsUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCutObjectAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCutObjectAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CutObjectAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ACuttingObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACuttingObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.CuttingObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDamageCustomization.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDamageCustomization::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DamageCustomization");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDamageData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDamageData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DamageData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDamageDealer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDamageDealer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DamageDealer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDamageDirectionIndicator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDamageDirectionIndicator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DamageDirectionIndicator");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDamageReceiver.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDamageReceiver::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DamageReceiver");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UScumPointDamageType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UScumPointDamageType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ScumPointDamageType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UScumRadialDamageType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UScumRadialDamageType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ScumRadialDamageType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DamageStatics.TestingOnly_DirectDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDamageStatics::TestingOnly_DirectDamage(class AActor* Target, float Damage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DamageStatics.TestingOnly_DirectDamage");
		
		UDamageStatics_TestingOnly_DirectDamage_Params params {};
		params.Target = Target;
		params.Damage = Damage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DamageStatics.CheckWeaponDescReferences
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContext                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDamageStatics::CheckWeaponDescReferences(class UObject* WorldContext)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DamageStatics.CheckWeaponDescReferences");
		
		UDamageStatics_CheckWeaponDescReferences_Params params {};
		params.WorldContext = WorldContext;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDamageStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDamageStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DamageStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.OnTriggerEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTriggeredEventData                         eventData                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATrapItem::OnTriggerEvent(const struct FTriggeredEventData& eventData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.OnTriggerEvent");
		
		ATrapItem_OnTriggerEvent_Params params {};
		params.eventData = eventData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.OnTrapDestroyTimer
	 * 		Flags  -> ()
	 */
	void ATrapItem::OnTrapDestroyTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.OnTrapDestroyTimer");
		
		ATrapItem_OnTrapDestroyTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.OnRep_WasTriggered
	 * 		Flags  -> ()
	 */
	void ATrapItem::OnRep_WasTriggered()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.OnRep_WasTriggered");
		
		ATrapItem_OnRep_WasTriggered_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.OnRep_LastTriggerOwner
	 * 		Flags  -> ()
	 */
	void ATrapItem::OnRep_LastTriggerOwner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.OnRep_LastTriggerOwner");
		
		ATrapItem_OnRep_LastTriggerOwner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.OnRep_IsDestroyed
	 * 		Flags  -> ()
	 */
	void ATrapItem::OnRep_IsDestroyed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.OnRep_IsDestroyed");
		
		ATrapItem_OnRep_IsDestroyed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.OnRep_IsArmed
	 * 		Flags  -> ()
	 */
	void ATrapItem::OnRep_IsArmed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.OnRep_IsArmed");
		
		ATrapItem_OnRep_IsArmed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.OnRep_CurrentTrigger
	 * 		Flags  -> ()
	 */
	void ATrapItem::OnRep_CurrentTrigger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.OnRep_CurrentTrigger");
		
		ATrapItem_OnRep_CurrentTrigger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.OnLocalPrisonerSpawned
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATrapItem::OnLocalPrisonerSpawned(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.OnLocalPrisonerSpawned");
		
		ATrapItem_OnLocalPrisonerSpawned_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.OnActorDestroyTimer
	 * 		Flags  -> ()
	 */
	void ATrapItem::OnActorDestroyTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.OnActorDestroyTimer");
		
		ATrapItem_OnActorDestroyTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.NetMulticast_TriggerTrap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTrapTriggerParams                          Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATrapItem::NetMulticast_TriggerTrap(const struct FTrapTriggerParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.NetMulticast_TriggerTrap");
		
		ATrapItem_NetMulticast_TriggerTrap_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.Multicast_SetOnlyManualTrigger
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               onlyManualTrigger                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATrapItem::Multicast_SetOnlyManualTrigger(bool onlyManualTrigger)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.Multicast_SetOnlyManualTrigger");
		
		ATrapItem_Multicast_SetOnlyManualTrigger_Params params {};
		params.onlyManualTrigger = onlyManualTrigger;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.IsBuried
	 * 		Flags  -> ()
	 */
	bool ATrapItem::IsBuried()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.IsBuried");
		
		ATrapItem_IsBuried_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.IsArmed
	 * 		Flags  -> ()
	 */
	bool ATrapItem::IsArmed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.IsArmed");
		
		ATrapItem_IsArmed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.BP_OnTriggered
	 * 		Flags  -> ()
	 */
	void ATrapItem::BP_OnTriggered()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.BP_OnTriggered");
		
		ATrapItem_BP_OnTriggered_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.BP_OnRefueled
	 * 		Flags  -> ()
	 */
	void ATrapItem::BP_OnRefueled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.BP_OnRefueled");
		
		ATrapItem_BP_OnRefueled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.BP_OnDisarmed
	 * 		Flags  -> ()
	 */
	void ATrapItem::BP_OnDisarmed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.BP_OnDisarmed");
		
		ATrapItem_BP_OnDisarmed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrapItem.BP_OnArmed
	 * 		Flags  -> ()
	 */
	void ATrapItem::BP_OnArmed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrapItem.BP_OnArmed");
		
		ATrapItem_BP_OnArmed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATrapItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATrapItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrapItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADamagingTrapItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADamagingTrapItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DamagingTrapItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDataSingleton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDataSingleton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DataSingleton");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DbConnection.Open
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EDbConnectionOpenMode                              mode                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UDbConnection::Open(EDbConnectionOpenMode mode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DbConnection.Open");
		
		UDbConnection_Open_Params params {};
		params.mode = mode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DbConnection.IsOpen
	 * 		Flags  -> ()
	 */
	bool UDbConnection::IsOpen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DbConnection.IsOpen");
		
		UDbConnection_IsOpen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DbConnection.GetOpenMode
	 * 		Flags  -> ()
	 */
	EDbConnectionOpenMode UDbConnection::GetOpenMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DbConnection.GetOpenMode");
		
		UDbConnection_GetOpenMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DbConnection.Close
	 * 		Flags  -> ()
	 */
	bool UDbConnection::Close()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DbConnection.Close");
		
		UDbConnection_Close_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDbConnection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDbConnection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DbConnection");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDbStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDbStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DbStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDeathmatchParticipantStats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDeathmatchParticipantStats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DeathmatchParticipantStats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DeathmatchGameEvent.SetDeathmatchParameters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDeathmatchParameters                       Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ADeathmatchGameEvent::SetDeathmatchParameters(const struct FDeathmatchParameters& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DeathmatchGameEvent.SetDeathmatchParameters");
		
		ADeathmatchGameEvent_SetDeathmatchParameters_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DeathmatchGameEvent.RestrictGameEventArea
	 * 		Flags  -> ()
	 */
	void ADeathmatchGameEvent::RestrictGameEventArea()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DeathmatchGameEvent.RestrictGameEventArea");
		
		ADeathmatchGameEvent_RestrictGameEventArea_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DeathmatchGameEvent.GetDeathmatchParameters
	 * 		Flags  -> ()
	 */
	struct FDeathmatchParameters ADeathmatchGameEvent::GetDeathmatchParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DeathmatchGameEvent.GetDeathmatchParameters");
		
		ADeathmatchGameEvent_GetDeathmatchParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADeathmatchGameEvent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADeathmatchGameEvent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DeathmatchGameEvent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADeathmatchLocationMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADeathmatchLocationMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DeathmatchLocationMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDedicatedServerRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDedicatedServerRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DedicatedServerRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDedicatedServerResponse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDedicatedServerResponse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DedicatedServerResponse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Deer2.OnRep_HartHind
	 * 		Flags  -> ()
	 */
	void ADeer2::OnRep_HartHind()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Deer2.OnRep_HartHind");
		
		ADeer2_OnRep_HartHind_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADeer2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADeer2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Deer2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDefaultDamageCustomization.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDefaultDamageCustomization::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DefaultDamageCustomization");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDefusingCuttingToolItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDefusingCuttingToolItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DefusingCuttingToolItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDemolitionSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDemolitionSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DemolitionSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDepotItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDepotItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DepotItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVirtualizedItemUserData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVirtualizedItemUserData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VirtualizedItemUserData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDepotItemUserData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDepotItemUserData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DepotItemUserData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADepotItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADepotItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DepotItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDerivedWidgetsData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDerivedWidgetsData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DerivedWidgetsData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDetectableMetalAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDetectableMetalAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DetectableMetalAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDetectableTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDetectableTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DetectableTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DialogButton.OnClick
	 * 		Flags  -> ()
	 */
	void UDialogButton::OnClick()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DialogButton.OnClick");
		
		UDialogButton_OnClick_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDialogButton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDialogButton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DialogButton");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DialogueContainerWidget.StartAvatarAnimation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EDialogAnimationState                              AnimationState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDialogueContainerWidget::StartAvatarAnimation(EDialogAnimationState AnimationState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DialogueContainerWidget.StartAvatarAnimation");
		
		UDialogueContainerWidget_StartAvatarAnimation_Params params {};
		params.AnimationState = AnimationState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DialogueContainerWidget.GetShowAvatarAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UDialogueContainerWidget::GetShowAvatarAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DialogueContainerWidget.GetShowAvatarAnimation");
		
		UDialogueContainerWidget_GetShowAvatarAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DialogueContainerWidget.GetHideAvatarAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UDialogueContainerWidget::GetHideAvatarAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DialogueContainerWidget.GetHideAvatarAnimation");
		
		UDialogueContainerWidget_GetHideAvatarAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDialogueContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDialogueContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DialogueContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDialogueData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDialogueData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DialogueData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDiegeticLockState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDiegeticLockState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DiegeticLockState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DigestionItem.GetWeight
	 * 		Flags  -> ()
	 */
	float UDigestionItem::GetWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DigestionItem.GetWeight");
		
		UDigestionItem_GetWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DigestionItem.GetVolume
	 * 		Flags  -> ()
	 */
	float UDigestionItem::GetVolume()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DigestionItem.GetVolume");
		
		UDigestionItem_GetVolume_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DigestionItem.GetShouldProcess
	 * 		Flags  -> ()
	 */
	bool UDigestionItem::GetShouldProcess()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DigestionItem.GetShouldProcess");
		
		UDigestionItem_GetShouldProcess_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DigestionItem.GetRemainingWeight
	 * 		Flags  -> ()
	 */
	float UDigestionItem::GetRemainingWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DigestionItem.GetRemainingWeight");
		
		UDigestionItem_GetRemainingWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DigestionItem.GetRemainingWater
	 * 		Flags  -> ()
	 */
	float UDigestionItem::GetRemainingWater()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DigestionItem.GetRemainingWater");
		
		UDigestionItem_GetRemainingWater_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DigestionItem.GetRemainingVolume
	 * 		Flags  -> ()
	 */
	float UDigestionItem::GetRemainingVolume()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DigestionItem.GetRemainingVolume");
		
		UDigestionItem_GetRemainingVolume_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DigestionItem.GetId
	 * 		Flags  -> ()
	 */
	int32_t UDigestionItem::GetId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DigestionItem.GetId");
		
		UDigestionItem_GetId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DigestionItem.GetCaption
	 * 		Flags  -> ()
	 */
	class FString UDigestionItem::GetCaption()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DigestionItem.GetCaption");
		
		UDigestionItem_GetCaption_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDigestionItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDigestionItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DigestionItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADistantLevel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADistantLevel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DistantLevel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DistantLevelManager.HandleStreamingLevelsVisibilityChanged
	 * 		Flags  -> ()
	 */
	void ADistantLevelManager::HandleStreamingLevelsVisibilityChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DistantLevelManager.HandleStreamingLevelsVisibilityChanged");
		
		ADistantLevelManager_HandleStreamingLevelsVisibilityChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADistantLevelManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADistantLevelManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DistantLevelManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDogTagItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDogTagItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DogTagItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DogTagItem.OnRep_UserProfileName
	 * 		Flags  -> ()
	 */
	void ADogTagItem::OnRep_UserProfileName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DogTagItem.OnRep_UserProfileName");
		
		ADogTagItem_OnRep_UserProfileName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADogTagItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADogTagItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DogTagItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPriceCategory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPriceCategory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PriceCategory");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Door.OnUnlockFailed__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ADoor::OnUnlockFailed__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Door.OnUnlockFailed__DelegateSignature");
		
		ADoor_OnUnlockFailed__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Door.OnUnlocked__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       Door                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADoor::OnUnlocked__DelegateSignature(class ADoor* Door)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Door.OnUnlocked__DelegateSignature");
		
		ADoor_OnUnlocked__DelegateSignature_Params params {};
		params.Door = Door;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Door.OnRep_StateFlags
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EDoorStateFlags                                    Previous                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADoor::OnRep_StateFlags(EDoorStateFlags Previous)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Door.OnRep_StateFlags");
		
		ADoor_OnRep_StateFlags_Params params {};
		params.Previous = Previous;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Door.OnRep_OwningUserProfileId
	 * 		Flags  -> ()
	 */
	void ADoor::OnRep_OwningUserProfileId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Door.OnRep_OwningUserProfileId");
		
		ADoor_OnRep_OwningUserProfileId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Door.OnRep_Locks
	 * 		Flags  -> ()
	 */
	void ADoor::OnRep_Locks()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Door.OnRep_Locks");
		
		ADoor_OnRep_Locks_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Door.OnOpened__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ADoor::OnOpened__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Door.OnOpened__DelegateSignature");
		
		ADoor_OnOpened__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Door.OnLockRemoved__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       Door                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADoor::OnLockRemoved__DelegateSignature(class ADoor* Door)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Door.OnLockRemoved__DelegateSignature");
		
		ADoor_OnLockRemoved__DelegateSignature_Params params {};
		params.Door = Door;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Door.OnLocked__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       Door                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADoor::OnLocked__DelegateSignature(class ADoor* Door)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Door.OnLocked__DelegateSignature");
		
		ADoor_OnLocked__DelegateSignature_Params params {};
		params.Door = Door;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Door.OnDestroyedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Self                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADoor::OnDestroyedEvent(class AActor* Self)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Door.OnDestroyedEvent");
		
		ADoor_OnDestroyedEvent_Params params {};
		params.Self = Self;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Door.OnAudioStopped
	 * 		Flags  -> ()
	 */
	void ADoor::OnAudioStopped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Door.OnAudioStopped");
		
		ADoor_OnAudioStopped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Door.IsOpen
	 * 		Flags  -> ()
	 */
	bool ADoor::IsOpen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Door.IsOpen");
		
		ADoor_IsOpen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Door.ChangeOpenState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               shouldOpen                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADoor::ChangeOpenState(bool shouldOpen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Door.ChangeOpenState");
		
		ADoor_ChangeOpenState_Params params {};
		params.shouldOpen = shouldOpen;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADoor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADoor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Door");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDoorLockingRegistry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDoorLockingRegistry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DoorLockingRegistry");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDoorUnlockData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDoorUnlockData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DoorUnlockData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDoorUnlockItemComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDoorUnlockItemComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DoorUnlockItemComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DoorUnlockItemComponent.OnRep_DoorLockingDescriptor
	 * 		Flags  -> ()
	 */
	void UDoorUnlockItemComponent::OnRep_DoorLockingDescriptor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DoorUnlockItemComponent.OnRep_DoorLockingDescriptor");
		
		UDoorUnlockItemComponent_OnRep_DoorLockingDescriptor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDoorUnlockItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDoorUnlockItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DoorUnlockItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUpgradeWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUpgradeWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UpgradeWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUpgradeSlotWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUpgradeSlotWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UpgradeSlotWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDoorUpgradeWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDoorUpgradeWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DoorUpgradeWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADoubleDoor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADoubleDoor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DoubleDoor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADoubleRegularDoorStatic.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADoubleRegularDoorStatic::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DoubleRegularDoorStatic");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DoubleSlidingDoorStatic.AddDoorPartInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     cloasedPosition                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OpenedPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USceneComponent*                             moveableComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADoubleSlidingDoorStatic::AddDoorPartInfo(const struct FVector& cloasedPosition, const struct FVector& OpenedPosition, class USceneComponent* moveableComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DoubleSlidingDoorStatic.AddDoorPartInfo");
		
		ADoubleSlidingDoorStatic_AddDoorPartInfo_Params params {};
		params.cloasedPosition = cloasedPosition;
		params.OpenedPosition = OpenedPosition;
		params.moveableComponent = moveableComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADoubleSlidingDoorStatic.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADoubleSlidingDoorStatic::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DoubleSlidingDoorStatic");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFoodItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFoodItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FoodItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDrinkItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDrinkItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DrinkItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.OnRep_Temperature
	 * 		Flags  -> ()
	 */
	void AFoodItem::OnRep_Temperature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.OnRep_Temperature");
		
		AFoodItem_OnRep_Temperature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.OnRep_ItemOpened
	 * 		Flags  -> ()
	 */
	void AFoodItem::OnRep_ItemOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.OnRep_ItemOpened");
		
		AFoodItem_OnRep_ItemOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.OnRep_IsCooking
	 * 		Flags  -> ()
	 */
	void AFoodItem::OnRep_IsCooking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.OnRep_IsCooking");
		
		AFoodItem_OnRep_IsCooking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.OnAudioComponentExpired
	 * 		Flags  -> ()
	 */
	void AFoodItem::OnAudioComponentExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.OnAudioComponentExpired");
		
		AFoodItem_OnAudioComponentExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.IsCooking
	 * 		Flags  -> ()
	 */
	bool AFoodItem::IsCooking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.IsCooking");
		
		AFoodItem_IsCooking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.GetVolume
	 * 		Flags  -> ()
	 */
	float AFoodItem::GetVolume()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.GetVolume");
		
		AFoodItem_GetVolume_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.GetThermalConductivityFactor
	 * 		Flags  -> ()
	 */
	float AFoodItem::GetThermalConductivityFactor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.GetThermalConductivityFactor");
		
		AFoodItem_GetThermalConductivityFactor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.GetTemperature
	 * 		Flags  -> ()
	 */
	float AFoodItem::GetTemperature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.GetTemperature");
		
		AFoodItem_GetTemperature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.GetEnvironmentTemperature
	 * 		Flags  -> ()
	 */
	float AFoodItem::GetEnvironmentTemperature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.GetEnvironmentTemperature");
		
		AFoodItem_GetEnvironmentTemperature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FoodItem.GetCookingAmount
	 * 		Flags  -> ()
	 */
	float AFoodItem::GetCookingAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FoodItem.GetCookingAmount");
		
		AFoodItem_GetCookingAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFoodItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFoodItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FoodItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADrinkItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADrinkItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DrinkItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDrinkWaterAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDrinkWaterAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DrinkWaterAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDrivingSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDrivingSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DrivingSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Drone.Server_SetCurrentSpeedStep
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            step                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADrone::Server_SetCurrentSpeedStep(int32_t step)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Drone.Server_SetCurrentSpeedStep");
		
		ADrone_Server_SetCurrentSpeedStep_Params params {};
		params.step = step;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Drone.SelfDestruct
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               shouldSpawnItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADrone::SelfDestruct(bool shouldSpawnItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Drone.SelfDestruct");
		
		ADrone_SelfDestruct_Params params {};
		params.shouldSpawnItem = shouldSpawnItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Drone.OnRep_CurrentSpeedStep
	 * 		Flags  -> ()
	 */
	void ADrone::OnRep_CurrentSpeedStep()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Drone.OnRep_CurrentSpeedStep");
		
		ADrone_OnRep_CurrentSpeedStep_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Drone.OnHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         HitComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ADrone::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Drone.OnHit");
		
		ADrone_OnHit_Params params {};
		params.HitComponent = HitComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Drone.NetMulticast_ToggleSmokeParticles
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               shouldPlay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADrone::NetMulticast_ToggleSmokeParticles(bool shouldPlay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Drone.NetMulticast_ToggleSmokeParticles");
		
		ADrone_NetMulticast_ToggleSmokeParticles_Params params {};
		params.shouldPlay = shouldPlay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Drone.NetMulticast_SpawnDestroyedEffects
	 * 		Flags  -> ()
	 */
	void ADrone::NetMulticast_SpawnDestroyedEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Drone.NetMulticast_SpawnDestroyedEffects");
		
		ADrone_NetMulticast_SpawnDestroyedEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Drone.NetMulticast_PlaySoundOnClients
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EDroneSound                                        SoundToPlay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               force                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADrone::NetMulticast_PlaySoundOnClients(EDroneSound SoundToPlay, bool force)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Drone.NetMulticast_PlaySoundOnClients");
		
		ADrone_NetMulticast_PlaySoundOnClients_Params params {};
		params.SoundToPlay = SoundToPlay;
		params.force = force;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADrone.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADrone::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Drone");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DroneAIController.FollowCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  characterToFollow                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADroneAIController::FollowCharacter(class ACharacter* characterToFollow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DroneAIController.FollowCharacter");
		
		ADroneAIController_FollowCharacter_Params params {};
		params.characterToFollow = characterToFollow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADroneAIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADroneAIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DroneAIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADroneCameraActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADroneCameraActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DroneCameraActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDroneSoundComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDroneSoundComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DroneSoundComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDroneTargetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDroneTargetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DroneTargetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuSelectionWidget.Update
	 * 		Flags  -> ()
	 */
	void UDropdownMenuSelectionWidget::Update()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuSelectionWidget.Update");
		
		UDropdownMenuSelectionWidget_Update_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuSelectionWidget.SetMenu
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UDropdownMenuWidget*                         DropdownMenu                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDropdownMenuSelectionWidget::SetMenu(class UDropdownMenuWidget* DropdownMenu)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuSelectionWidget.SetMenu");
		
		UDropdownMenuSelectionWidget_SetMenu_Params params {};
		params.DropdownMenu = DropdownMenu;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuSelectionWidget.SelectRandom
	 * 		Flags  -> ()
	 */
	void UDropdownMenuSelectionWidget::SelectRandom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuSelectionWidget.SelectRandom");
		
		UDropdownMenuSelectionWidget_SelectRandom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuSelectionWidget.Select
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDropdownMenuSelectionWidget::Select(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuSelectionWidget.Select");
		
		UDropdownMenuSelectionWidget_Select_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.DropdownMenuSelectionWidget.OnDropdownSelectionDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UDropdownMenuSelectionWidget*                Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDropdownMenuSelectionWidget::OnDropdownSelectionDelegate__DelegateSignature(class UDropdownMenuSelectionWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.DropdownMenuSelectionWidget.OnDropdownSelectionDelegate__DelegateSignature");
		
		UDropdownMenuSelectionWidget_OnDropdownSelectionDelegate__DelegateSignature_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuSelectionWidget.GetMenu
	 * 		Flags  -> ()
	 */
	class UDropdownMenuWidget* UDropdownMenuSelectionWidget::GetMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuSelectionWidget.GetMenu");
		
		UDropdownMenuSelectionWidget_GetMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuSelectionWidget.Click
	 * 		Flags  -> ()
	 */
	void UDropdownMenuSelectionWidget::Click()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuSelectionWidget.Click");
		
		UDropdownMenuSelectionWidget_Click_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDropdownMenuSelectionWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDropdownMenuSelectionWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropdownMenuSelectionWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuWidget.Update
	 * 		Flags  -> ()
	 */
	void UDropdownMenuWidget::Update()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuWidget.Update");
		
		UDropdownMenuWidget_Update_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuWidget.SetSelectedElementIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDropdownMenuWidget::SetSelectedElementIndex(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuWidget.SetSelectedElementIndex");
		
		UDropdownMenuWidget_SetSelectedElementIndex_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuWidget.Open
	 * 		Flags  -> ()
	 */
	void UDropdownMenuWidget::Open()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuWidget.Open");
		
		UDropdownMenuWidget_Open_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.DropdownMenuWidget.OnDropdownMenuUpdate__DelegateSignature
	 * 		Flags  -> ()
	 */
	void UDropdownMenuWidget::OnDropdownMenuUpdate__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.DropdownMenuWidget.OnDropdownMenuUpdate__DelegateSignature");
		
		UDropdownMenuWidget_OnDropdownMenuUpdate__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuWidget.IsOpen
	 * 		Flags  -> ()
	 */
	bool UDropdownMenuWidget::IsOpen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuWidget.IsOpen");
		
		UDropdownMenuWidget_IsOpen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuWidget.InitOptions
	 * 		Flags  -> ()
	 */
	void UDropdownMenuWidget::InitOptions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuWidget.InitOptions");
		
		UDropdownMenuWidget_InitOptions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuWidget.GetSelectedElementIndex
	 * 		Flags  -> ()
	 */
	int32_t UDropdownMenuWidget::GetSelectedElementIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuWidget.GetSelectedElementIndex");
		
		UDropdownMenuWidget_GetSelectedElementIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuWidget.GetSelectedElement
	 * 		Flags  -> ()
	 */
	class UDropdownMenuSelectionWidget* UDropdownMenuWidget::GetSelectedElement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuWidget.GetSelectedElement");
		
		UDropdownMenuWidget_GetSelectedElement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuWidget.GetOptionCount
	 * 		Flags  -> ()
	 */
	int32_t UDropdownMenuWidget::GetOptionCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuWidget.GetOptionCount");
		
		UDropdownMenuWidget_GetOptionCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropdownMenuWidget.Close
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Collapse                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDropdownMenuWidget::Close(bool Collapse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropdownMenuWidget.Close");
		
		UDropdownMenuWidget_Close_Params params {};
		params.Collapse = Collapse;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDropdownMenuWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDropdownMenuWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropdownMenuWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneDroppable.SetGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADropZoneGameEvent*                          gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADropZoneDroppable::SetGameEvent(class ADropZoneGameEvent* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneDroppable.SetGameEvent");
		
		ADropZoneDroppable_SetGameEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneDroppable.OnRep_FlareParticlesTeam
	 * 		Flags  -> ()
	 */
	void ADropZoneDroppable::OnRep_FlareParticlesTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneDroppable.OnRep_FlareParticlesTeam");
		
		ADropZoneDroppable_OnRep_FlareParticlesTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneDroppable.OnRep_FlareParticlesEnabled
	 * 		Flags  -> ()
	 */
	void ADropZoneDroppable::OnRep_FlareParticlesEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneDroppable.OnRep_FlareParticlesEnabled");
		
		ADropZoneDroppable_OnRep_FlareParticlesEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneDroppable.GetGameEvent
	 * 		Flags  -> ()
	 */
	class ADropZoneGameEvent* ADropZoneDroppable::GetGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneDroppable.GetGameEvent");
		
		ADropZoneDroppable_GetGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADropZoneDroppable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADropZoneDroppable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropZoneDroppable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADropZoneCargo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADropZoneCargo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropZoneCargo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneCrate.OnRep_HasKey
	 * 		Flags  -> ()
	 */
	void ADropZoneCrate::OnRep_HasKey()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneCrate.OnRep_HasKey");
		
		ADropZoneCrate_OnRep_HasKey_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADropZoneCrate.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADropZoneCrate::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropZoneCrate");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneEquipmentTable.UntrackItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADropZoneEquipmentTable::UntrackItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneEquipmentTable.UntrackItem");
		
		ADropZoneEquipmentTable_UntrackItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneEquipmentTable.TrackItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADropZoneEquipmentTable::TrackItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneEquipmentTable.TrackItem");
		
		ADropZoneEquipmentTable_TrackItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneEquipmentTable.PerformItemCleanup
	 * 		Flags  -> ()
	 */
	void ADropZoneEquipmentTable::PerformItemCleanup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneEquipmentTable.PerformItemCleanup");
		
		ADropZoneEquipmentTable_PerformItemCleanup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneEquipmentTable.OnTrackedItemDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADropZoneEquipmentTable::OnTrackedItemDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneEquipmentTable.OnTrackedItemDestroyed");
		
		ADropZoneEquipmentTable_OnTrackedItemDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneEquipmentTable.BeginCleaningItems
	 * 		Flags  -> ()
	 */
	void ADropZoneEquipmentTable::BeginCleaningItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneEquipmentTable.BeginCleaningItems");
		
		ADropZoneEquipmentTable_BeginCleaningItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADropZoneEquipmentTable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADropZoneEquipmentTable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropZoneEquipmentTable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDropZoneParticipantStats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDropZoneParticipantStats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropZoneParticipantStats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.SetDropZoneParameters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDropZoneParameters                         Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ADropZoneGameEvent::SetDropZoneParameters(const struct FDropZoneParameters& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.SetDropZoneParameters");
		
		ADropZoneGameEvent_SetDropZoneParameters_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.OnRep_CapturingTeam
	 * 		Flags  -> ()
	 */
	void ADropZoneGameEvent::OnRep_CapturingTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.OnRep_CapturingTeam");
		
		ADropZoneGameEvent_OnRep_CapturingTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetSlot
	 * 		Flags  -> ()
	 */
	class ADropZoneSlot* ADropZoneGameEvent::GetSlot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetSlot");
		
		ADropZoneGameEvent_GetSlot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetPhaseTimeLeft
	 * 		Flags  -> ()
	 */
	float ADropZoneGameEvent::GetPhaseTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetPhaseTimeLeft");
		
		ADropZoneGameEvent_GetPhaseTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetPhase
	 * 		Flags  -> ()
	 */
	EDropZoneGameEventPhase ADropZoneGameEvent::GetPhase()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetPhase");
		
		ADropZoneGameEvent_GetPhase_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetKeyCarrier
	 * 		Flags  -> ()
	 */
	class APrisoner* ADropZoneGameEvent::GetKeyCarrier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetKeyCarrier");
		
		ADropZoneGameEvent_GetKeyCarrier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetKey
	 * 		Flags  -> ()
	 */
	class ADropZoneKey* ADropZoneGameEvent::GetKey()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetKey");
		
		ADropZoneGameEvent_GetKey_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetDropZoneParameters
	 * 		Flags  -> ()
	 */
	struct FDropZoneParameters ADropZoneGameEvent::GetDropZoneParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetDropZoneParameters");
		
		ADropZoneGameEvent_GetDropZoneParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetCrateB
	 * 		Flags  -> ()
	 */
	class ADropZoneCrate* ADropZoneGameEvent::GetCrateB()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetCrateB");
		
		ADropZoneGameEvent_GetCrateB_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetCrateA
	 * 		Flags  -> ()
	 */
	class ADropZoneCrate* ADropZoneGameEvent::GetCrateA()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetCrateA");
		
		ADropZoneGameEvent_GetCrateA_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetCargo
	 * 		Flags  -> ()
	 */
	class ADropZoneCargo* ADropZoneGameEvent::GetCargo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetCargo");
		
		ADropZoneGameEvent_GetCargo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetCapturingTeam
	 * 		Flags  -> ()
	 */
	int32_t ADropZoneGameEvent::GetCapturingTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetCapturingTeam");
		
		ADropZoneGameEvent_GetCapturingTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneGameEvent.GetCaptureProgress
	 * 		Flags  -> ()
	 */
	float ADropZoneGameEvent::GetCaptureProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneGameEvent.GetCaptureProgress");
		
		ADropZoneGameEvent_GetCaptureProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADropZoneGameEvent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADropZoneGameEvent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropZoneGameEvent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneKey.SphereOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ADropZoneKey::SphereOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneKey.SphereOverlap");
		
		ADropZoneKey_SphereOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneKey.SetGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADropZoneGameEvent*                          gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADropZoneKey::SetGameEvent(class ADropZoneGameEvent* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneKey.SetGameEvent");
		
		ADropZoneKey_SetGameEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneKey.GetGameEvent
	 * 		Flags  -> ()
	 */
	class ADropZoneGameEvent* ADropZoneKey::GetGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneKey.GetGameEvent");
		
		ADropZoneKey_GetGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADropZoneKey.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADropZoneKey::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropZoneKey");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADropZoneLocationMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADropZoneLocationMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropZoneLocationMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneSlot.SetGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADropZoneGameEvent*                          gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADropZoneSlot::SetGameEvent(class ADropZoneGameEvent* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneSlot.SetGameEvent");
		
		ADropZoneSlot_SetGameEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneSlot.Server_Activate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ADropZoneSlot::Server_Activate(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneSlot.Server_Activate");
		
		ADropZoneSlot_Server_Activate_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneSlot.GetOpeningDuration
	 * 		Flags  -> ()
	 */
	float ADropZoneSlot::GetOpeningDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneSlot.GetOpeningDuration");
		
		ADropZoneSlot_GetOpeningDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.DropZoneSlot.GetGameEvent
	 * 		Flags  -> ()
	 */
	class ADropZoneGameEvent* ADropZoneSlot::GetGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.DropZoneSlot.GetGameEvent");
		
		ADropZoneSlot_GetGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ADropZoneSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADropZoneSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DropZoneSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDualArcedProgressBar.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDualArcedProgressBar::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DualArcedProgressBar");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UDummyCollisionCapsule.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDummyCollisionCapsule::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.DummyCollisionCapsule");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATrader.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATrader::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Trader");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayerRpcChannelServerDataRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerRpcChannelServerDataRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayerRpcChannelServerDataRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEconomyManagerDataRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEconomyManagerDataRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EconomyManagerDataRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayerRpcChannelServerDataResponse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerRpcChannelServerDataResponse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayerRpcChannelServerDataResponse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEconomyManagerDataResponse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEconomyManagerDataResponse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EconomyManagerDataResponse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEconomySpecificData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEconomySpecificData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EconomySpecificData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AEffectOverTimeDealer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AEffectOverTimeDealer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EffectOverTimeDealer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UElectricDoorAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UElectricDoorAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ElectricDoorAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UElectricianGlovesTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UElectricianGlovesTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ElectricianGlovesTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEmblemData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEmblemData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EmblemData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEnduranceSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnduranceSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EnduranceSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.UpdateZoomEffect
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Fraction                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::UpdateZoomEffect(float Fraction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.UpdateZoomEffect");
		
		APrisoner_UpdateZoomEffect_Params params {};
		params.Fraction = Fraction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.UpdateWristwatchVisibility
	 * 		Flags  -> ()
	 */
	void APrisoner::UpdateWristwatchVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.UpdateWristwatchVisibility");
		
		APrisoner_UpdateWristwatchVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.UpdateSquadPanel
	 * 		Flags  -> ()
	 */
	void APrisoner::UpdateSquadPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.UpdateSquadPanel");
		
		APrisoner_UpdateSquadPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.UpdateDeluxePlayerStatus
	 * 		Flags  -> ()
	 */
	void APrisoner::UpdateDeluxePlayerStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.UpdateDeluxePlayerStatus");
		
		APrisoner_UpdateDeluxePlayerStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.TryInteractDefault
	 * 		Flags  -> ()
	 */
	void APrisoner::TryInteractDefault()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.TryInteractDefault");
		
		APrisoner_TryInteractDefault_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ToggleSquadPanel
	 * 		Flags  -> ()
	 */
	void APrisoner::ToggleSquadPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ToggleSquadPanel");
		
		APrisoner_ToggleSquadPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ToggleJournalPanel
	 * 		Flags  -> ()
	 */
	void APrisoner::ToggleJournalPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ToggleJournalPanel");
		
		APrisoner_ToggleJournalPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ToggleEventsPanel
	 * 		Flags  -> ()
	 */
	void APrisoner::ToggleEventsPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ToggleEventsPanel");
		
		APrisoner_ToggleEventsPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ToggleCraftingPanel
	 * 		Flags  -> ()
	 */
	void APrisoner::ToggleCraftingPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ToggleCraftingPanel");
		
		APrisoner_ToggleCraftingPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Teleport
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrisonerTeleportRequest                    request                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Teleport(const struct FPrisonerTeleportRequest& request)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Teleport");
		
		APrisoner_Teleport_Params params {};
		params.request = request;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.TakeItemInHandsOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::TakeItemInHandsOnServer(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.TakeItemInHandsOnServer");
		
		APrisoner_TakeItemInHandsOnServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.TakeItemInHands
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::TakeItemInHands(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.TakeItemInHands");
		
		APrisoner_TakeItemInHands_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Prisoner.TabModeOpened__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ETabMode                                           tabMode                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::TabModeOpened__DelegateSignature(ETabMode tabMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Prisoner.TabModeOpened__DelegateSignature");
		
		APrisoner_TabModeOpened__DelegateSignature_Params params {};
		params.tabMode = tabMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Prisoner.TabModeClosed__DelegateSignature
	 * 		Flags  -> ()
	 */
	void APrisoner::TabModeClosed__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Prisoner.TabModeClosed__DelegateSignature");
		
		APrisoner_TabModeClosed__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SwitchToVehicleSeatIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SwitchToVehicleSeatIndex(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SwitchToVehicleSeatIndex");
		
		APrisoner_SwitchToVehicleSeatIndex_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.StopInteraction
	 * 		Flags  -> ()
	 */
	void APrisoner::StopInteraction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.StopInteraction");
		
		APrisoner_StopInteraction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.StartPrimaryMeleeAttack
	 * 		Flags  -> ()
	 */
	void APrisoner::StartPrimaryMeleeAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.StartPrimaryMeleeAttack");
		
		APrisoner_StartPrimaryMeleeAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.StartMeleeDodge
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EDodgeDirectionType                                Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::StartMeleeDodge(EDodgeDirectionType Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.StartMeleeDodge");
		
		APrisoner_StartMeleeDodge_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.StartMeleeAttack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGameplayTag                                meleeAttackType                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::StartMeleeAttack(const struct FGameplayTag& meleeAttackType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.StartMeleeAttack");
		
		APrisoner_StartMeleeAttack_Params params {};
		params.meleeAttackType = meleeAttackType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ShowSpawnScreen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               loadoutMenu                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::ShowSpawnScreen(bool loadoutMenu)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ShowSpawnScreen");
		
		APrisoner_ShowSpawnScreen_Params params {};
		params.loadoutMenu = loadoutMenu;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ShouldLookatMeleeTarget
	 * 		Flags  -> ()
	 */
	bool APrisoner::ShouldLookatMeleeTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ShouldLookatMeleeTarget");
		
		APrisoner_ShouldLookatMeleeTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ShouldIgnoreRotation
	 * 		Flags  -> ()
	 */
	bool APrisoner::ShouldIgnoreRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ShouldIgnoreRotation");
		
		APrisoner_ShouldIgnoreRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetWristwatchBrightness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetWristwatchBrightness(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetWristwatchBrightness");
		
		APrisoner_SetWristwatchBrightness_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetWeaponAimingTypeOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponAimingType                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetWeaponAimingTypeOnServer(EWeaponAimingType Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetWeaponAimingTypeOnServer");
		
		APrisoner_SetWeaponAimingTypeOnServer_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetTargetOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetTargetOnServer(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetTargetOnServer");
		
		APrisoner_SetTargetOnServer_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetTargetLeanAmountOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetTargetLeanAmountOnServer(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetTargetLeanAmountOnServer");
		
		APrisoner_SetTargetLeanAmountOnServer_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetTargetCrouchStage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetTargetCrouchStage(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetTargetCrouchStage");
		
		APrisoner_SetTargetCrouchStage_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetStance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerStance                                    Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetStance(EPrisonerStance Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetStance");
		
		APrisoner_SetStance_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetShouldIgnoreHeadTurningAndLeaning
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetShouldIgnoreHeadTurningAndLeaning(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetShouldIgnoreHeadTurningAndLeaning");
		
		APrisoner_SetShouldIgnoreHeadTurningAndLeaning_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetRotationTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      rotationTarget                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetRotationTarget(class AActor* rotationTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetRotationTarget");
		
		APrisoner_SetRotationTarget_Params params {};
		params.rotationTarget = rotationTarget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetPlayerSoundLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetPlayerSoundLevel(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetPlayerSoundLevel");
		
		APrisoner_SetPlayerSoundLevel_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetPartWaterWeight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerWettablePart                              part                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetPartWaterWeight(EPrisonerWettablePart part, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetPartWaterWeight");
		
		APrisoner_SetPartWaterWeight_Params params {};
		params.part = part;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetOverrideIsLimping
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetOverrideIsLimping(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetOverrideIsLimping");
		
		APrisoner_SetOverrideIsLimping_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetNightVisionEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetNightVisionEnabled(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetNightVisionEnabled");
		
		APrisoner_SetNightVisionEnabled_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetNameTextVisibilityForAll
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Visible                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetNameTextVisibilityForAll(bool Visible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetNameTextVisibilityForAll");
		
		APrisoner_SetNameTextVisibilityForAll_Params params {};
		params.Visible = Visible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetNameTextVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Visible                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetNameTextVisibility(bool Visible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetNameTextVisibility");
		
		APrisoner_SetNameTextVisibility_Params params {};
		params.Visible = Visible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetMidiDeviceByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::SetMidiDeviceByName(const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetMidiDeviceByName");
		
		APrisoner_SetMidiDeviceByName_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetMidiDeviceByIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::SetMidiDeviceByIndex(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetMidiDeviceByIndex");
		
		APrisoner_SetMidiDeviceByIndex_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetMeleeTargetSelectionMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerMeleeTargetSelectionMode                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetMeleeTargetSelectionMode(EPrisonerMeleeTargetSelectionMode Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetMeleeTargetSelectionMode");
		
		APrisoner_SetMeleeTargetSelectionMode_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetMeleeTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetMeleeTarget(class AActor* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetMeleeTarget");
		
		APrisoner_SetMeleeTarget_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetItemInHandsOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetItemInHandsOnClient(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetItemInHandsOnClient");
		
		APrisoner_SetItemInHandsOnClient_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetIsLimpingOverrideEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetIsLimpingOverrideEnabled(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetIsLimpingOverrideEnabled");
		
		APrisoner_SetIsLimpingOverrideEnabled_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetIsInCombatModeOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetIsInCombatModeOnServer(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetIsInCombatModeOnServer");
		
		APrisoner_SetIsInCombatModeOnServer_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetIsInCombatMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetIsInCombatMode(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetIsInCombatMode");
		
		APrisoner_SetIsInCombatMode_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetIsEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetIsEnabled(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetIsEnabled");
		
		APrisoner_SetIsEnabled_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetGameEvent(class AGameEventBase* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetGameEvent");
		
		APrisoner_SetGameEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetFreeLookEnabledOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetFreeLookEnabledOnServer(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetFreeLookEnabledOnServer");
		
		APrisoner_SetFreeLookEnabledOnServer_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetFreeLookEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetFreeLookEnabled(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetFreeLookEnabled");
		
		APrisoner_SetFreeLookEnabled_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetDesiredPaceOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetDesiredPaceOnServer(unsigned char Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetDesiredPaceOnServer");
		
		APrisoner_SetDesiredPaceOnServer_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetDesiredPace
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerMovementPace                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetDesiredPace(EPrisonerMovementPace Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetDesiredPace");
		
		APrisoner_SetDesiredPace_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SetDesiredLeanAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SetDesiredLeanAmount(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SetDesiredLeanAmount");
		
		APrisoner_SetDesiredLeanAmount_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_UnpackAmmoBox
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionBoxItem*                          Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_UnpackAmmoBox(class AAmmunitionBoxItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_UnpackAmmoBox");
		
		APrisoner_Server_UnpackAmmoBox_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_Unmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUnmountFlags                                      Flags                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_Unmount(EUnmountFlags Flags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_Unmount");
		
		APrisoner_Server_Unmount_Params params {};
		params.Flags = Flags;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_UnloadAmmoFromMagazine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachmentMagazine*                   magazine                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_UnloadAmmoFromMagazine(class AWeaponAttachmentMagazine* magazine)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_UnloadAmmoFromMagazine");
		
		APrisoner_Server_UnloadAmmoFromMagazine_Params params {};
		params.magazine = magazine;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_TurnPrisonerInPlace
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              turnAngle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_TurnPrisonerInPlace(float turnAngle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_TurnPrisonerInPlace");
		
		APrisoner_Server_TurnPrisonerInPlace_Params params {};
		params.turnAngle = turnAngle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_ThrowRequested
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_ThrowRequested()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_ThrowRequested");
		
		APrisoner_Server_ThrowRequested_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SyncWeaponState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FWeaponStateSyncData                        Data                                                       (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SyncWeaponState(class AWeapon* Weapon, const struct FWeaponStateSyncData& Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SyncWeaponState");
		
		APrisoner_Server_SyncWeaponState_Params params {};
		params.Weapon = Weapon;
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SwapWeaponAttachments
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           oldAttachment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           newAttachment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SwapWeaponAttachments(class AWeapon* Weapon, class AWeaponAttachment* oldAttachment, class AWeaponAttachment* newAttachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SwapWeaponAttachments");
		
		APrisoner_Server_SwapWeaponAttachments_Params params {};
		params.Weapon = Weapon;
		params.oldAttachment = oldAttachment;
		params.newAttachment = newAttachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_StoreAmmoInAmmoBox
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionItem*                             ammo                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAmmunitionBoxItem*                          Box                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_StoreAmmoInAmmoBox(class AAmmunitionItem* ammo, class AAmmunitionBoxItem* Box)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_StoreAmmoInAmmoBox");
		
		APrisoner_Server_StoreAmmoInAmmoBox_Params params {};
		params.ammo = ammo;
		params.Box = Box;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SplitCurrencyItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       currencyItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            newAmount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SplitCurrencyItem(class AItem* currencyItem, int32_t newAmount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SplitCurrencyItem");
		
		APrisoner_Server_SplitCurrencyItem_Params params {};
		params.currencyItem = currencyItem;
		params.newAmount = newAmount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SplitAmmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionItem*                             ammoItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SplitAmmo(class AAmmunitionItem* ammoItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SplitAmmo");
		
		APrisoner_Server_SplitAmmo_Params params {};
		params.ammoItem = ammoItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SpawnScreenWakeUp
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_SpawnScreenWakeUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SpawnScreenWakeUp");
		
		APrisoner_Server_SpawnScreenWakeUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SpawnAmmunitionArrow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FAmmunitionArrowSpawningParamsHelper        AmmunitionArrowSpawningParamsHelper                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SpawnAmmunitionArrow(const struct FHitResult& HitResult, const struct FAmmunitionArrowSpawningParamsHelper& AmmunitionArrowSpawningParamsHelper, const struct FVector& Location, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SpawnAmmunitionArrow");
		
		APrisoner_Server_SpawnAmmunitionArrow_Params params {};
		params.HitResult = HitResult;
		params.AmmunitionArrowSpawningParamsHelper = AmmunitionArrowSpawningParamsHelper;
		params.Location = Location;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetVehicleWeaponAimingStance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EVehicleWeaponAimingStance                         stance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetVehicleWeaponAimingStance(EVehicleWeaponAimingStance stance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetVehicleWeaponAimingStance");
		
		APrisoner_Server_SetVehicleWeaponAimingStance_Params params {};
		params.stance = stance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetVehicleAimingYaw
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Angle                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetVehicleAimingYaw(float Angle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetVehicleAimingYaw");
		
		APrisoner_Server_SetVehicleAimingYaw_Params params {};
		params.Angle = Angle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetTargetCrouchStage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetTargetCrouchStage(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetTargetCrouchStage");
		
		APrisoner_Server_SetTargetCrouchStage_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetShouldIgnoreHeadTurning
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetShouldIgnoreHeadTurning(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetShouldIgnoreHeadTurning");
		
		APrisoner_Server_SetShouldIgnoreHeadTurning_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetShadowIntensity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetShadowIntensity(unsigned char Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetShadowIntensity");
		
		APrisoner_Server_SetShadowIntensity_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetScopingWithItemInHandsState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EScopingWithItemInHandsState                       Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetScopingWithItemInHandsState(EScopingWithItemInHandsState Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetScopingWithItemInHandsState");
		
		APrisoner_Server_SetScopingWithItemInHandsState_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetRotationTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      rotationTarget                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetRotationTarget(class AActor* rotationTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetRotationTarget");
		
		APrisoner_Server_SetRotationTarget_Params params {};
		params.rotationTarget = rotationTarget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetPlayingInstrumentState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPlayingInstrumentState                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetPlayingInstrumentState(EPlayingInstrumentState Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetPlayingInstrumentState");
		
		APrisoner_Server_SetPlayingInstrumentState_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetMeleeTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetMeleeTarget(class AActor* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetMeleeTarget");
		
		APrisoner_Server_SetMeleeTarget_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetItemInHandsVisualObstructionDepth
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetItemInHandsVisualObstructionDepth(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetItemInHandsVisualObstructionDepth");
		
		APrisoner_Server_SetItemInHandsVisualObstructionDepth_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetItemInHandsActualObstructionDepth
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetItemInHandsActualObstructionDepth(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetItemInHandsActualObstructionDepth");
		
		APrisoner_Server_SetItemInHandsActualObstructionDepth_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetHoldBreathState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHoldBreathState                                   Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetHoldBreathState(EHoldBreathState Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetHoldBreathState");
		
		APrisoner_Server_SetHoldBreathState_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetGameEventLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      primary                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              primaryAttachments                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      secondary                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              secondaryAttachments                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      tertiary                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              tertiaryAttachments                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              outfit                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              support                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetGameEventLoadout(class UClass* primary, TArray<class UClass*> primaryAttachments, class UClass* secondary, TArray<class UClass*> secondaryAttachments, class UClass* tertiary, TArray<class UClass*> tertiaryAttachments, TArray<class UClass*> outfit, TArray<class UClass*> support)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetGameEventLoadout");
		
		APrisoner_Server_SetGameEventLoadout_Params params {};
		params.primary = primary;
		params.primaryAttachments = primaryAttachments;
		params.secondary = secondary;
		params.secondaryAttachments = secondaryAttachments;
		params.tertiary = tertiary;
		params.tertiaryAttachments = tertiaryAttachments;
		params.outfit = outfit;
		params.support = support;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetExaminedPrisoner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetExaminedPrisoner(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetExaminedPrisoner");
		
		APrisoner_Server_SetExaminedPrisoner_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetDangerCooldown
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              cooldown                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetDangerCooldown(float cooldown, class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetDangerCooldown");
		
		APrisoner_Server_SetDangerCooldown_Params params {};
		params.cooldown = cooldown;
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetCarryingItemState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECarryingItemState                                 State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetCarryingItemState(ECarryingItemState State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetCarryingItemState");
		
		APrisoner_Server_SetCarryingItemState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_SetActiveParachute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AClothesItem*                                parachute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_SetActiveParachute(class AClothesItem* parachute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_SetActiveParachute");
		
		APrisoner_Server_SetActiveParachute_Params params {};
		params.parachute = parachute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_RespawnAtCommonSpawnLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerCommonSpawnLocation                       commonSpawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSectorId                                   SectorId                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_RespawnAtCommonSpawnLocation(EPrisonerCommonSpawnLocation commonSpawnLocation, const struct FSectorId& SectorId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_RespawnAtCommonSpawnLocation");
		
		APrisoner_Server_RespawnAtCommonSpawnLocation_Params params {};
		params.commonSpawnLocation = commonSpawnLocation;
		params.SectorId = SectorId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_ReportVote
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Vote                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_ReportVote(bool Vote)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_ReportVote");
		
		APrisoner_Server_ReportVote_Params params {};
		params.Vote = Vote;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_RemoveNearbyFoliageInstances
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_RemoveNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_RemoveNearbyFoliageInstances");
		
		APrisoner_Server_RemoveNearbyFoliageInstances_Params params {};
		params.replicatedInstanceInfo = replicatedInstanceInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_RemoveInventoryNode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     container                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInventoryPositionDataRepHelper             position                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_RemoveInventoryNode(class UObject* Item, class UObject* container, const struct FInventoryPositionDataRepHelper& position, class UObject* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_RemoveInventoryNode");
		
		APrisoner_Server_RemoveInventoryNode_Params params {};
		params.Item = Item;
		params.container = container;
		params.position = position;
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_PropagateFootstepEnhancerSound
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_PropagateFootstepEnhancerSound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_PropagateFootstepEnhancerSound");
		
		APrisoner_Server_PropagateFootstepEnhancerSound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_ProjectileDealDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FNetPackedProjectileDamageEvent             packedDamageEvent                                          (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_ProjectileDealDamage(const struct FNetPackedProjectileDamageEvent& packedDamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_ProjectileDealDamage");
		
		APrisoner_Server_ProjectileDealDamage_Params params {};
		params.packedDamageEvent = packedDamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_PrisonWalletHandleItemSpawning
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_PrisonWalletHandleItemSpawning(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_PrisonWalletHandleItemSpawning");
		
		APrisoner_Server_PrisonWalletHandleItemSpawning_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_OnLockpickingProtectionTriggered
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Lockpickable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UParticleSystem*                             Particles                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               audio                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ParticlesScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_OnLockpickingProtectionTriggered(class UObject* Lockpickable, float Damage, class UParticleSystem* Particles, class UAkAudioEvent* audio, const struct FVector& ParticlesScale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_OnLockpickingProtectionTriggered");
		
		APrisoner_Server_OnLockpickingProtectionTriggered_Params params {};
		params.Lockpickable = Lockpickable;
		params.Damage = Damage;
		params.Particles = Particles;
		params.audio = audio;
		params.ParticlesScale = ParticlesScale;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_Mount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_Mount(class UObject* slot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_Mount");
		
		APrisoner_Server_Mount_Params params {};
		params.slot = slot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_lockpickingEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Lockpickable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Succeeded                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FConZBaseElementIdentifier                  lockpickableBaseElement                                    (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_lockpickingEnded(class UObject* Lockpickable, bool Succeeded, const struct FConZBaseElementIdentifier& lockpickableBaseElement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_lockpickingEnded");
		
		APrisoner_Server_lockpickingEnded_Params params {};
		params.Lockpickable = Lockpickable;
		params.Succeeded = Succeeded;
		params.lockpickableBaseElement = lockpickableBaseElement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_LoadAmmoIntoMagazine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionItem*                             AmmunitionItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachmentMagazine*                   magazine                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_LoadAmmoIntoMagazine(class AAmmunitionItem* AmmunitionItem, class AWeaponAttachmentMagazine* magazine, int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_LoadAmmoIntoMagazine");
		
		APrisoner_Server_LoadAmmoIntoMagazine_Params params {};
		params.AmmunitionItem = AmmunitionItem;
		params.magazine = magazine;
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_JumpOffLadder
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_JumpOffLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_JumpOffLadder");
		
		APrisoner_Server_JumpOffLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_JoinCurrencyItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       finalItem                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       initiatingItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_JoinCurrencyItem(class AItem* finalItem, class AItem* initiatingItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_JoinCurrencyItem");
		
		APrisoner_Server_JoinCurrencyItem_Params params {};
		params.finalItem = finalItem;
		params.initiatingItem = initiatingItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_JoinAmmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionItem*                             finalItem                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAmmunitionItem*                             initiatingItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_JoinAmmo(class AAmmunitionItem* finalItem, class AAmmunitionItem* initiatingItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_JoinAmmo");
		
		APrisoner_Server_JoinAmmo_Params params {};
		params.finalItem = finalItem;
		params.initiatingItem = initiatingItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_InteractWithLadder
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     traceOrigin                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     traceDirection                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_InteractWithLadder(const struct FVector& traceOrigin, const struct FVector& traceDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_InteractWithLadder");
		
		APrisoner_Server_InteractWithLadder_Params params {};
		params.traceOrigin = traceOrigin;
		params.traceDirection = traceDirection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_InstrumentStopTone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPlayableInstrumentTone                            tone                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              timeOffset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            octave                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_InstrumentStopTone(EPlayableInstrumentTone tone, float timeOffset, int32_t octave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_InstrumentStopTone");
		
		APrisoner_Server_InstrumentStopTone_Params params {};
		params.tone = tone;
		params.timeOffset = timeOffset;
		params.octave = octave;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_InstrumentPlayTone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPlayableInstrumentTone                            tone                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              timeOffset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            octave                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_InstrumentPlayTone(EPlayableInstrumentTone tone, float timeOffset, int32_t octave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_InstrumentPlayTone");
		
		APrisoner_Server_InstrumentPlayTone_Params params {};
		params.tone = tone;
		params.timeOffset = timeOffset;
		params.octave = octave;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_InstrumentOctaveUp
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_InstrumentOctaveUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_InstrumentOctaveUp");
		
		APrisoner_Server_InstrumentOctaveUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_InstrumentOctaveDown
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_InstrumentOctaveDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_InstrumentOctaveDown");
		
		APrisoner_Server_InstrumentOctaveDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_InitiateCraftedUpgradePlacement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FConZBaseElementIdentifier                  elementToBeUpgraded                                        (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UPlaceableCraftableItem*                     upgradeRecipe                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  Transform                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_InitiateCraftedUpgradePlacement(const struct FConZBaseElementIdentifier& elementToBeUpgraded, class UPlaceableCraftableItem* upgradeRecipe, const struct FTransform& Transform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_InitiateCraftedUpgradePlacement");
		
		APrisoner_Server_InitiateCraftedUpgradePlacement_Params params {};
		params.elementToBeUpgraded = elementToBeUpgraded;
		params.upgradeRecipe = upgradeRecipe;
		params.Transform = Transform;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_InitiateCraftedPlacement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            craftableIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_InitiateCraftedPlacement(int32_t craftableIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_InitiateCraftedPlacement");
		
		APrisoner_Server_InitiateCraftedPlacement_Params params {};
		params.craftableIndex = craftableIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_HandleGearMotion
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMotionIntensity                                   motionIntensity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               shouldMakeNoise                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_HandleGearMotion(EMotionIntensity motionIntensity, bool shouldMakeNoise)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_HandleGearMotion");
		
		APrisoner_Server_HandleGearMotion_Params params {};
		params.motionIntensity = motionIntensity;
		params.shouldMakeNoise = shouldMakeNoise;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_HandleFootstep
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMotionIntensity                                   motionIntensity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               shouldMakeNoise                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_HandleFootstep(EMotionIntensity motionIntensity, bool shouldMakeNoise)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_HandleFootstep");
		
		APrisoner_Server_HandleFootstep_Params params {};
		params.motionIntensity = motionIntensity;
		params.shouldMakeNoise = shouldMakeNoise;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_DestroyPlaceable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_DestroyPlaceable(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_DestroyPlaceable");
		
		APrisoner_Server_DestroyPlaceable_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_DamageLockpickingTools
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       lockpick                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       tensionTool                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_DamageLockpickingTools(class AItem* lockpick, class AItem* tensionTool)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_DamageLockpickingTools");
		
		APrisoner_Server_DamageLockpickingTools_Params params {};
		params.lockpick = lockpick;
		params.tensionTool = tensionTool;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_CommitSuicide
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_CommitSuicide()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_CommitSuicide");
		
		APrisoner_Server_CommitSuicide_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_ClimbWindow
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_ClimbWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_ClimbWindow");
		
		APrisoner_Server_ClimbWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_Climb
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_Climb()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_Climb");
		
		APrisoner_Server_Climb_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_ClearDangerCooldown
	 * 		Flags  -> ()
	 */
	void APrisoner::Server_ClearDangerCooldown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_ClearDangerCooldown");
		
		APrisoner_Server_ClearDangerCooldown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_ApplyPointDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		EDamageChannel                                     damageChannel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_ApplyPointDamage(float Damage, const struct FHitResult& HitResult, EDamageChannel damageChannel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_ApplyPointDamage");
		
		APrisoner_Server_ApplyPointDamage_Params params {};
		params.Damage = Damage;
		params.HitResult = HitResult;
		params.damageChannel = damageChannel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_AIMovementFinished
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               wasSuccessful                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_AIMovementFinished(bool wasSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_AIMovementFinished");
		
		APrisoner_Server_AIMovementFinished_Params params {};
		params.wasSuccessful = wasSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_AddNearbyFoliageInstances
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_AddNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_AddNearbyFoliageInstances");
		
		APrisoner_Server_AddNearbyFoliageInstances_Params params {};
		params.replicatedInstanceInfo = replicatedInstanceInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Server_AddInventoryNode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     container                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInventoryPositionDataRepHelper             position                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Server_AddInventoryNode(class UObject* Item, class UObject* container, const struct FInventoryPositionDataRepHelper& position, class UObject* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Server_AddInventoryNode");
		
		APrisoner_Server_AddInventoryNode_Params params {};
		params.Item = Item;
		params.container = container;
		params.position = position;
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SendSquadInvitationOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   invited                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SendSquadInvitationOnServer(class APrisoner* invited)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SendSquadInvitationOnServer");
		
		APrisoner_SendSquadInvitationOnServer_Params params {};
		params.invited = invited;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SendSquadInvitationOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   invitor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      invitorName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SendSquadInvitationOnClient(class APrisoner* invitor, const class FString& invitorName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SendSquadInvitationOnClient");
		
		APrisoner_SendSquadInvitationOnClient_Params params {};
		params.invitor = invitor;
		params.invitorName = invitorName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.SendMessageToClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               AudioEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::SendMessageToClient(const class FString& Message, class UAkAudioEvent* AudioEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.SendMessageToClient");
		
		APrisoner_SendMessageToClient_Params params {};
		params.Message = Message;
		params.AudioEvent = AudioEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.RightShoulderHolsterInteract
	 * 		Flags  -> ()
	 */
	void APrisoner::RightShoulderHolsterInteract()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.RightShoulderHolsterInteract");
		
		APrisoner_RightShoulderHolsterInteract_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Revive
	 * 		Flags  -> ()
	 */
	void APrisoner::Revive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Revive");
		
		APrisoner_Revive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.RespawnAtCommonSpawnLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerCommonSpawnLocation                       commonSpawnLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSectorId                                   SectorId                                                   (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::RespawnAtCommonSpawnLocation(EPrisonerCommonSpawnLocation commonSpawnLocation, const struct FSectorId& SectorId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.RespawnAtCommonSpawnLocation");
		
		APrisoner_RespawnAtCommonSpawnLocation_Params params {};
		params.commonSpawnLocation = commonSpawnLocation;
		params.SectorId = SectorId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.RequestRespawn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrisonerTeleportRequest                    request                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void APrisoner::RequestRespawn(const struct FPrisonerTeleportRequest& request)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.RequestRespawn");
		
		APrisoner_RequestRespawn_Params params {};
		params.request = request;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.RemoveWeaponAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::RemoveWeaponAttachment(class AWeapon* Weapon, class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.RemoveWeaponAttachment");
		
		APrisoner_RemoveWeaponAttachment_Params params {};
		params.Weapon = Weapon;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.RemoveItemFromHands
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHandsHolstersType                                 preferedHolsterType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::RemoveItemFromHands(EHandsHolstersType preferedHolsterType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.RemoveItemFromHands");
		
		APrisoner_RemoveItemFromHands_Params params {};
		params.preferedHolsterType = preferedHolsterType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.RemoveFromSquadOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::RemoveFromSquadOnServer(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.RemoveFromSquadOnServer");
		
		APrisoner_RemoveFromSquadOnServer_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.RemoveBondage
	 * 		Flags  -> ()
	 */
	void APrisoner::RemoveBondage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.RemoveBondage");
		
		APrisoner_RemoveBondage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.PromoteSquadMemberOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::PromoteSquadMemberOnServer(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.PromoteSquadMemberOnServer");
		
		APrisoner_PromoteSquadMemberOnServer_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.PlaceItemInInventoryOrHolster
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               tryToJoinItems                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::PlaceItemInInventoryOrHolster(class AItem* Item, bool tryToJoinItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.PlaceItemInInventoryOrHolster");
		
		APrisoner_PlaceItemInInventoryOrHolster_Params params {};
		params.Item = Item;
		params.tryToJoinItems = tryToJoinItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Prisoner.PanelsClosed__DelegateSignature
	 * 		Flags  -> ()
	 */
	void APrisoner::PanelsClosed__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Prisoner.PanelsClosed__DelegateSignature");
		
		APrisoner_PanelsClosed__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OpenTabMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ETabMode                                           mode                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OpenTabMode(ETabMode mode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OpenTabMode");
		
		APrisoner_OpenTabMode_Params params {};
		params.mode = mode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OpenInteractDefaultContextMenu
	 * 		Flags  -> ()
	 */
	void APrisoner::OpenInteractDefaultContextMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OpenInteractDefaultContextMenu");
		
		APrisoner_OpenInteractDefaultContextMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_VehicleWeaponAimingStance
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_VehicleWeaponAimingStance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_VehicleWeaponAimingStance");
		
		APrisoner_OnRep_VehicleWeaponAimingStance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_UserFakeName
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_UserFakeName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_UserFakeName");
		
		APrisoner_OnRep_UserFakeName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_ThrowingComponent
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_ThrowingComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_ThrowingComponent");
		
		APrisoner_OnRep_ThrowingComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_ScopingWithItemInHandsState
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_ScopingWithItemInHandsState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_ScopingWithItemInHandsState");
		
		APrisoner_OnRep_ScopingWithItemInHandsState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_RotationTarget
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_RotationTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_RotationTarget");
		
		APrisoner_OnRep_RotationTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_RightShoulderHolsteredItem
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_RightShoulderHolsteredItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_RightShoulderHolsteredItem");
		
		APrisoner_OnRep_RightShoulderHolsteredItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_PlayingInstrumentState
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_PlayingInstrumentState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_PlayingInstrumentState");
		
		APrisoner_OnRep_PlayingInstrumentState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_PackedWetness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           oldWetness                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnRep_PackedWetness(uint32_t oldWetness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_PackedWetness");
		
		APrisoner_OnRep_PackedWetness_Params params {};
		params.oldWetness = oldWetness;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_PackedBooleans
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_PackedBooleans()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_PackedBooleans");
		
		APrisoner_OnRep_PackedBooleans_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_Mount
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_Mount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_Mount");
		
		APrisoner_OnRep_Mount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_MeleeTarget
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_MeleeTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_MeleeTarget");
		
		APrisoner_OnRep_MeleeTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_LeftShoulderHolsteredItem
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_LeftShoulderHolsteredItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_LeftShoulderHolsteredItem");
		
		APrisoner_OnRep_LeftShoulderHolsteredItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_ItemInHandsVisualObstructionDepth
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnRep_ItemInHandsVisualObstructionDepth(unsigned char OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_ItemInHandsVisualObstructionDepth");
		
		APrisoner_OnRep_ItemInHandsVisualObstructionDepth_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_IsInCombatMode
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_IsInCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_IsInCombatMode");
		
		APrisoner_OnRep_IsInCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_HandBondage
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_HandBondage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_HandBondage");
		
		APrisoner_OnRep_HandBondage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_GameEvent
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_GameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_GameEvent");
		
		APrisoner_OnRep_GameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_FreeLookEnabled
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_FreeLookEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_FreeLookEnabled");
		
		APrisoner_OnRep_FreeLookEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_FishingComponent
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_FishingComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_FishingComponent");
		
		APrisoner_OnRep_FishingComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_DesiredStance
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_DesiredStance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_DesiredStance");
		
		APrisoner_OnRep_DesiredStance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_DesiredPace
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_DesiredPace()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_DesiredPace");
		
		APrisoner_OnRep_DesiredPace_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_DeluxeVersion
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_DeluxeVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_DeluxeVersion");
		
		APrisoner_OnRep_DeluxeVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_CarryingItemState
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_CarryingItemState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_CarryingItemState");
		
		APrisoner_OnRep_CarryingItemState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnRep_AimOffset
	 * 		Flags  -> ()
	 */
	void APrisoner::OnRep_AimOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnRep_AimOffset");
		
		APrisoner_OnRep_AimOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnPlaceableDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnPlaceableDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnPlaceableDestroyed");
		
		APrisoner_OnPlaceableDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnMovingThroughNearbyFoliageInstance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrisonerNearbyFoliageInstanceInfo          instanceInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnMovingThroughNearbyFoliageInstance(const struct FPrisonerNearbyFoliageInstanceInfo& instanceInfo, float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnMovingThroughNearbyFoliageInstance");
		
		APrisoner_OnMovingThroughNearbyFoliageInstance_Params params {};
		params.instanceInfo = instanceInfo;
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnMovementUpdated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OldLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OldVelocity                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnMovementUpdated");
		
		APrisoner_OnMovementUpdated_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		params.OldLocation = OldLocation;
		params.OldVelocity = OldVelocity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnMidiEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMIDIDeviceController*                       MIDIDeviceController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Timestamp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EMIDIEventType                                     EventType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Channel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ControlID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Velocity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            RawEventType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnMidiEvent(class UMIDIDeviceController* MIDIDeviceController, int32_t Timestamp, EMIDIEventType EventType, int32_t Channel, int32_t ControlID, int32_t Velocity, int32_t RawEventType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnMidiEvent");
		
		APrisoner_OnMidiEvent_Params params {};
		params.MIDIDeviceController = MIDIDeviceController;
		params.Timestamp = Timestamp;
		params.EventType = EventType;
		params.Channel = Channel;
		params.ControlID = ControlID;
		params.Velocity = Velocity;
		params.RawEventType = RawEventType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnInteractDefaultContextMenuClosed
	 * 		Flags  -> ()
	 */
	void APrisoner::OnInteractDefaultContextMenuClosed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnInteractDefaultContextMenuClosed");
		
		APrisoner_OnInteractDefaultContextMenuClosed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnHearNoise
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APawn*                                       instigatorPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnHearNoise(class APawn* instigatorPawn, const struct FVector& Location, float Volume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnHearNoise");
		
		APrisoner_OnHearNoise_Params params {};
		params.instigatorPawn = instigatorPawn;
		params.Location = Location;
		params.Volume = Volume;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnExaminedPrisonerUnequippedItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrisonerInventoryComponent*                 inventory                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnExaminedPrisonerUnequippedItem(class UPrisonerInventoryComponent* inventory, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnExaminedPrisonerUnequippedItem");
		
		APrisoner_OnExaminedPrisonerUnequippedItem_Params params {};
		params.inventory = inventory;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnExaminedPrisonerEquippedItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrisonerInventoryComponent*                 inventory                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnExaminedPrisonerEquippedItem(class UPrisonerInventoryComponent* inventory, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnExaminedPrisonerEquippedItem");
		
		APrisoner_OnExaminedPrisonerEquippedItem_Params params {};
		params.inventory = inventory;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnEndMovingThroughNearbyFoliageInstance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrisonerNearbyFoliageInstanceInfo          instanceInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnEndMovingThroughNearbyFoliageInstance(const struct FPrisonerNearbyFoliageInstanceInfo& instanceInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnEndMovingThroughNearbyFoliageInstance");
		
		APrisoner_OnEndMovingThroughNearbyFoliageInstance_Params params {};
		params.instanceInfo = instanceInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnBorderCrossingPenaltyChange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EPrisonerBorderCrossingPenalty                     newPenalty                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnBorderCrossingPenaltyChange(class APrisoner* Prisoner, EPrisonerBorderCrossingPenalty newPenalty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnBorderCrossingPenaltyChange");
		
		APrisoner_OnBorderCrossingPenaltyChange_Params params {};
		params.Prisoner = Prisoner;
		params.newPenalty = newPenalty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.OnBeginMovingThroughNearbyFoliageInstance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrisonerNearbyFoliageInstanceInfo          instanceInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void APrisoner::OnBeginMovingThroughNearbyFoliageInstance(const struct FPrisonerNearbyFoliageInstanceInfo& instanceInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.OnBeginMovingThroughNearbyFoliageInstance");
		
		APrisoner_OnBeginMovingThroughNearbyFoliageInstance_Params params {};
		params.instanceInfo = instanceInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_UpdateAdminStates
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      states                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_UpdateAdminStates(unsigned char states)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_UpdateAdminStates");
		
		APrisoner_NetMulticast_UpdateAdminStates_Params params {};
		params.states = states;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_TurnPrisonerInPlace
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              turnAngle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_TurnPrisonerInPlace(float turnAngle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_TurnPrisonerInPlace");
		
		APrisoner_NetMulticast_TurnPrisonerInPlace_Params params {};
		params.turnAngle = turnAngle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_SpawnForcedVomitingEffects
	 * 		Flags  -> ()
	 */
	void APrisoner::NetMulticast_SpawnForcedVomitingEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_SpawnForcedVomitingEffects");
		
		APrisoner_NetMulticast_SpawnForcedVomitingEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_SpawnForcedUrinationEffects
	 * 		Flags  -> ()
	 */
	void APrisoner::NetMulticast_SpawnForcedUrinationEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_SpawnForcedUrinationEffects");
		
		APrisoner_NetMulticast_SpawnForcedUrinationEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_SpawnDefecationEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               shouldBeDiarrhea                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               isForced                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_SpawnDefecationEffects(bool shouldBeDiarrhea, bool isForced)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_SpawnDefecationEffects");
		
		APrisoner_NetMulticast_SpawnDefecationEffects_Params params {};
		params.shouldBeDiarrhea = shouldBeDiarrhea;
		params.isForced = isForced;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_SetUserFakeName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      fakeName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_SetUserFakeName(const class FString& fakeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_SetUserFakeName");
		
		APrisoner_NetMulticast_SetUserFakeName_Params params {};
		params.fakeName = fakeName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_SetActiveParachute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AClothesItem*                                parachute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_SetActiveParachute(class AClothesItem* parachute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_SetActiveParachute");
		
		APrisoner_NetMulticast_SetActiveParachute_Params params {};
		params.parachute = parachute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_RemoveNearbyFoliageInstances
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_RemoveNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_RemoveNearbyFoliageInstances");
		
		APrisoner_NetMulticast_RemoveNearbyFoliageInstances_Params params {};
		params.replicatedInstanceInfo = replicatedInstanceInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_PostAudioEventOnPrisoner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               akEvent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               multiCastToClients                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_PostAudioEventOnPrisoner(class UAkAudioEvent* akEvent, bool multiCastToClients)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_PostAudioEventOnPrisoner");
		
		APrisoner_NetMulticast_PostAudioEventOnPrisoner_Params params {};
		params.akEvent = akEvent;
		params.multiCastToClients = multiCastToClients;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_PlayLockpickingProtectionEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Lockpickable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UParticleSystem*                             Particles                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               audio                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ParticlesScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_PlayLockpickingProtectionEffects(class UObject* Lockpickable, class UParticleSystem* Particles, class UAkAudioEvent* audio, const struct FVector& ParticlesScale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_PlayLockpickingProtectionEffects");
		
		APrisoner_NetMulticast_PlayLockpickingProtectionEffects_Params params {};
		params.Lockpickable = Lockpickable;
		params.Particles = Particles;
		params.audio = audio;
		params.ParticlesScale = ParticlesScale;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_PlayFootstepEnhancerSound
	 * 		Flags  -> ()
	 */
	void APrisoner::NetMulticast_PlayFootstepEnhancerSound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_PlayFootstepEnhancerSound");
		
		APrisoner_NetMulticast_PlayFootstepEnhancerSound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_InstrumentStopTone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPlayableInstrumentTone                            tone                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              timeOffset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            octave                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_InstrumentStopTone(EPlayableInstrumentTone tone, float timeOffset, int32_t octave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_InstrumentStopTone");
		
		APrisoner_NetMulticast_InstrumentStopTone_Params params {};
		params.tone = tone;
		params.timeOffset = timeOffset;
		params.octave = octave;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_InstrumentPlayTone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPlayableInstrumentTone                            tone                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              timeOffset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            octave                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_InstrumentPlayTone(EPlayableInstrumentTone tone, float timeOffset, int32_t octave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_InstrumentPlayTone");
		
		APrisoner_NetMulticast_InstrumentPlayTone_Params params {};
		params.tone = tone;
		params.timeOffset = timeOffset;
		params.octave = octave;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_InstrumentOctaveUp
	 * 		Flags  -> ()
	 */
	void APrisoner::NetMulticast_InstrumentOctaveUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_InstrumentOctaveUp");
		
		APrisoner_NetMulticast_InstrumentOctaveUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_InstrumentOctaveDown
	 * 		Flags  -> ()
	 */
	void APrisoner::NetMulticast_InstrumentOctaveDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_InstrumentOctaveDown");
		
		APrisoner_NetMulticast_InstrumentOctaveDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_HandleLanded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     ImpactVelocity                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_HandleLanded(const struct FVector& ImpactVelocity, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_HandleLanded");
		
		APrisoner_NetMulticast_HandleLanded_Params params {};
		params.ImpactVelocity = ImpactVelocity;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_ForceDeluxePlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EDeluxeVersion                                     DeluxeVersion                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_ForceDeluxePlayer(EDeluxeVersion DeluxeVersion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_ForceDeluxePlayer");
		
		APrisoner_NetMulticast_ForceDeluxePlayer_Params params {};
		params.DeluxeVersion = DeluxeVersion;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_ApplyPlasticSurgery
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EConZGender                                        Gender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            appearanceIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_ApplyPlasticSurgery(EConZGender Gender, int32_t appearanceIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_ApplyPlasticSurgery");
		
		APrisoner_NetMulticast_ApplyPlasticSurgery_Params params {};
		params.Gender = Gender;
		params.appearanceIndex = appearanceIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_AIMovementFinished
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               wasSuccessful                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_AIMovementFinished(bool wasSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_AIMovementFinished");
		
		APrisoner_NetMulticast_AIMovementFinished_Params params {};
		params.wasSuccessful = wasSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.NetMulticast_AddNearbyFoliageInstances
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void APrisoner::NetMulticast_AddNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.NetMulticast_AddNearbyFoliageInstances");
		
		APrisoner_NetMulticast_AddNearbyFoliageInstances_Params params {};
		params.replicatedInstanceInfo = replicatedInstanceInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.LeftShoulderHolsterInteract
	 * 		Flags  -> ()
	 */
	void APrisoner::LeftShoulderHolsterInteract()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.LeftShoulderHolsterInteract");
		
		APrisoner_LeftShoulderHolsterInteract_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.LeaveSquadOnServer
	 * 		Flags  -> ()
	 */
	void APrisoner::LeaveSquadOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.LeaveSquadOnServer");
		
		APrisoner_LeaveSquadOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.LeaveCombatMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               PlayAnimation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               overrideAbilityCheck                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::LeaveCombatMode(bool PlayAnimation, bool overrideAbilityCheck)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.LeaveCombatMode");
		
		APrisoner_LeaveCombatMode_Params params {};
		params.PlayAnimation = PlayAnimation;
		params.overrideAbilityCheck = overrideAbilityCheck;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsThrowing
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsThrowing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsThrowing");
		
		APrisoner_IsThrowing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsThrowAiming
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsThrowAiming()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsThrowAiming");
		
		APrisoner_IsThrowAiming_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsTeleportInProgress
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsTeleportInProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsTeleportInProgress");
		
		APrisoner_IsTeleportInProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsSquadInvitationReceived
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsSquadInvitationReceived()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsSquadInvitationReceived");
		
		APrisoner_IsSquadInvitationReceived_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsPostFreeLookControllerRotationBlendActive
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsPostFreeLookControllerRotationBlendActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsPostFreeLookControllerRotationBlendActive");
		
		APrisoner_IsPostFreeLookControllerRotationBlendActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsNightVisionEnabled
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsNightVisionEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsNightVisionEnabled");
		
		APrisoner_IsNightVisionEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsMemberOfMySquad
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::IsMemberOfMySquad(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsMemberOfMySquad");
		
		APrisoner_IsMemberOfMySquad_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsMemberOf
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZSquad*                                  Squad                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::IsMemberOf(class AConZSquad* Squad)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsMemberOf");
		
		APrisoner_IsMemberOf_Params params {};
		params.Squad = Squad;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsLimping
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsLimping()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsLimping");
		
		APrisoner_IsLimping_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsInteracting
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsInteracting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsInteracting");
		
		APrisoner_IsInteracting_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsInFishingMinigame
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsInFishingMinigame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsInFishingMinigame");
		
		APrisoner_IsInFishingMinigame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsInDanger
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsInDanger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsInDanger");
		
		APrisoner_IsInDanger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsInCombatMode
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsInCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsInCombatMode");
		
		APrisoner_IsInCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsFreeLookEnabled
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsFreeLookEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsFreeLookEnabled");
		
		APrisoner_IsFreeLookEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsFishing
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsFishing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsFishing");
		
		APrisoner_IsFishing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsEnabled
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsEnabled");
		
		APrisoner_IsEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsCompletelyInitialized
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsCompletelyInitialized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsCompletelyInitialized");
		
		APrisoner_IsCompletelyInitialized_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsAliveInGameEvent
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsAliveInGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsAliveInGameEvent");
		
		APrisoner_IsAliveInGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsActorMeleeTargetCandidate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::IsActorMeleeTargetCandidate(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsActorMeleeTargetCandidate");
		
		APrisoner_IsActorMeleeTargetCandidate_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsActivelyParticipatingInGameEvent
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsActivelyParticipatingInGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsActivelyParticipatingInGameEvent");
		
		APrisoner_IsActivelyParticipatingInGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IsActivelyFishing
	 * 		Flags  -> ()
	 */
	bool APrisoner::IsActivelyFishing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IsActivelyFishing");
		
		APrisoner_IsActivelyFishing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.InventoryComponent_ItemUnequipped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrisonerInventoryComponent*                 sender                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::InventoryComponent_ItemUnequipped(class UPrisonerInventoryComponent* sender, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.InventoryComponent_ItemUnequipped");
		
		APrisoner_InventoryComponent_ItemUnequipped_Params params {};
		params.sender = sender;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.InventoryComponent_ItemEquipped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrisonerInventoryComponent*                 sender                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::InventoryComponent_ItemEquipped(class UPrisonerInventoryComponent* sender, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.InventoryComponent_ItemEquipped");
		
		APrisoner_InventoryComponent_ItemEquipped_Params params {};
		params.sender = sender;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.InteractWithObjectOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     interactable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInteractionType                                   interactionType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionData                            InteractionData                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void APrisoner::InteractWithObjectOnServer(class UObject* interactable, EInteractionType interactionType, const struct FInteractionData& InteractionData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.InteractWithObjectOnServer");
		
		APrisoner_InteractWithObjectOnServer_Params params {};
		params.interactable = interactable;
		params.interactionType = interactionType;
		params.InteractionData = InteractionData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.InitFromCharacterTemplate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterTemplate                          CharacterTemplate                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void APrisoner::InitFromCharacterTemplate(const struct FCharacterTemplate& CharacterTemplate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.InitFromCharacterTemplate");
		
		APrisoner_InitFromCharacterTemplate_Params params {};
		params.CharacterTemplate = CharacterTemplate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.IncreaseCrouchStage
	 * 		Flags  -> ()
	 */
	void APrisoner::IncreaseCrouchStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.IncreaseCrouchStage");
		
		APrisoner_IncreaseCrouchStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Prisoner.HoveredActorChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      hoveredActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::HoveredActorChanged__DelegateSignature(class AActor* hoveredActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Prisoner.HoveredActorChanged__DelegateSignature");
		
		APrisoner_HoveredActorChanged__DelegateSignature_Params params {};
		params.hoveredActor = hoveredActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.HolsterItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            attachmentSocketHelper                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::HolsterItemOnServer(class AItem* Item, int32_t attachmentSocketHelper)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.HolsterItemOnServer");
		
		APrisoner_HolsterItemOnServer_Params params {};
		params.Item = Item;
		params.attachmentSocketHelper = attachmentSocketHelper;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.HitReactComponent_StateChanged
	 * 		Flags  -> ()
	 */
	void APrisoner::HitReactComponent_StateChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.HitReactComponent_StateChanged");
		
		APrisoner_HitReactComponent_StateChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.HideSpawnScreen
	 * 		Flags  -> ()
	 */
	void APrisoner::HideSpawnScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.HideSpawnScreen");
		
		APrisoner_HideSpawnScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.HasItemOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::HasItemOfClass(class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.HasItemOfClass");
		
		APrisoner_HasItemOfClass_Params params {};
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.HasItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::HasItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.HasItem");
		
		APrisoner_HasItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.HasHandsUp
	 * 		Flags  -> ()
	 */
	bool APrisoner::HasHandsUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.HasHandsUp");
		
		APrisoner_HasHandsUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.HasHandBondage
	 * 		Flags  -> ()
	 */
	bool APrisoner::HasHandBondage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.HasHandBondage");
		
		APrisoner_HasHandBondage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.HasCurrentMovementEffectOnNearbyFoliage
	 * 		Flags  -> ()
	 */
	bool APrisoner::HasCurrentMovementEffectOnNearbyFoliage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.HasCurrentMovementEffectOnNearbyFoliage");
		
		APrisoner_HasCurrentMovementEffectOnNearbyFoliage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.HandleIntroCinematicFinished
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCameraManager*                          cameraManager                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::HandleIntroCinematicFinished(class AConZCameraManager* cameraManager)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.HandleIntroCinematicFinished");
		
		APrisoner_HandleIntroCinematicFinished_Params params {};
		params.cameraManager = cameraManager;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetWristwatchComponent
	 * 		Flags  -> ()
	 */
	class UChildActorComponent* APrisoner::GetWristwatchComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetWristwatchComponent");
		
		APrisoner_GetWristwatchComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetWetness
	 * 		Flags  -> ()
	 */
	float APrisoner::GetWetness()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetWetness");
		
		APrisoner_GetWetness_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetWeightLoad
	 * 		Flags  -> ()
	 */
	float APrisoner::GetWeightLoad()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetWeightLoad");
		
		APrisoner_GetWeightLoad_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetWeapon
	 * 		Flags  -> ()
	 */
	class AWeapon* APrisoner::GetWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetWeapon");
		
		APrisoner_GetWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetWaterMovementParameters
	 * 		Flags  -> ()
	 */
	struct FPrisonerWaterMovementParameters APrisoner::GetWaterMovementParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetWaterMovementParameters");
		
		APrisoner_GetWaterMovementParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetVisionEffectsComponent
	 * 		Flags  -> ()
	 */
	class UVisionEffectsComponent* APrisoner::GetVisionEffectsComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetVisionEffectsComponent");
		
		APrisoner_GetVisionEffectsComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetVehicleWeaponAimingStance
	 * 		Flags  -> ()
	 */
	EVehicleWeaponAimingStance APrisoner::GetVehicleWeaponAimingStance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetVehicleWeaponAimingStance");
		
		APrisoner_GetVehicleWeaponAimingStance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetUserProfileName
	 * 		Flags  -> ()
	 */
	class FString APrisoner::GetUserProfileName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetUserProfileName");
		
		APrisoner_GetUserProfileName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetUserProfile
	 * 		Flags  -> ()
	 */
	class UUserProfile* APrisoner::GetUserProfile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetUserProfile");
		
		APrisoner_GetUserProfile_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetUserId
	 * 		Flags  -> ()
	 */
	class FString APrisoner::GetUserId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetUserId");
		
		APrisoner_GetUserId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetUserActiveName
	 * 		Flags  -> ()
	 */
	class FString APrisoner::GetUserActiveName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetUserActiveName");
		
		APrisoner_GetUserActiveName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetThrowingComponent
	 * 		Flags  -> ()
	 */
	class UPrisonerThrowComponent* APrisoner::GetThrowingComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetThrowingComponent");
		
		APrisoner_GetThrowingComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetTargetCrouchStage
	 * 		Flags  -> ()
	 */
	float APrisoner::GetTargetCrouchStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetTargetCrouchStage");
		
		APrisoner_GetTargetCrouchStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetTacticsBlobMaterial
	 * 		Flags  -> ()
	 */
	class UMaterialInstanceDynamic* APrisoner::GetTacticsBlobMaterial()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetTacticsBlobMaterial");
		
		APrisoner_GetTacticsBlobMaterial_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetTabMouseMovement
	 * 		Flags  -> ()
	 */
	struct FVector2D APrisoner::GetTabMouseMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetTabMouseMovement");
		
		APrisoner_GetTabMouseMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetTabMode
	 * 		Flags  -> ()
	 */
	ETabMode APrisoner::GetTabMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetTabMode");
		
		APrisoner_GetTabMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetStance
	 * 		Flags  -> ()
	 */
	EPrisonerStance APrisoner::GetStance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetStance");
		
		APrisoner_GetStance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetSquad
	 * 		Flags  -> ()
	 */
	class AConZSquad* APrisoner::GetSquad()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetSquad");
		
		APrisoner_GetSquad_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetShouldIgnoreHeadTurningAndLeaning
	 * 		Flags  -> ()
	 */
	bool APrisoner::GetShouldIgnoreHeadTurningAndLeaning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetShouldIgnoreHeadTurningAndLeaning");
		
		APrisoner_GetShouldIgnoreHeadTurningAndLeaning_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetServerUserProfileId
	 * 		Flags  -> ()
	 */
	struct FDbIntegerId APrisoner::GetServerUserProfileId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetServerUserProfileId");
		
		APrisoner_GetServerUserProfileId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetSavedSpawnRotation
	 * 		Flags  -> ()
	 */
	struct FRotator APrisoner::GetSavedSpawnRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetSavedSpawnRotation");
		
		APrisoner_GetSavedSpawnRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetSavedSpawnLocationActive
	 * 		Flags  -> ()
	 */
	bool APrisoner::GetSavedSpawnLocationActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetSavedSpawnLocationActive");
		
		APrisoner_GetSavedSpawnLocationActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetSavedSpawnLocation
	 * 		Flags  -> ()
	 */
	struct FVector APrisoner::GetSavedSpawnLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetSavedSpawnLocation");
		
		APrisoner_GetSavedSpawnLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetRotationTarget
	 * 		Flags  -> ()
	 */
	class AActor* APrisoner::GetRotationTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetRotationTarget");
		
		APrisoner_GetRotationTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetPrisonWalletComponent
	 * 		Flags  -> ()
	 */
	class UPrisonerPrisonWalletComponent* APrisoner::GetPrisonWalletComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetPrisonWalletComponent");
		
		APrisoner_GetPrisonWalletComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetPrisonerMovement
	 * 		Flags  -> ()
	 */
	class UPrisonerMovementComponent* APrisoner::GetPrisonerMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetPrisonerMovement");
		
		APrisoner_GetPrisonerMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetPrisonerAnimInstance
	 * 		Flags  -> ()
	 */
	class UPrisonerAnimInstance* APrisoner::GetPrisonerAnimInstance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetPrisonerAnimInstance");
		
		APrisoner_GetPrisonerAnimInstance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetPenisSkeletalMeshComponent
	 * 		Flags  -> ()
	 */
	class USkeletalMeshComponent* APrisoner::GetPenisSkeletalMeshComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetPenisSkeletalMeshComponent");
		
		APrisoner_GetPenisSkeletalMeshComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetPartWetness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerWettablePart                              part                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float APrisoner::GetPartWetness(EPrisonerWettablePart part)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetPartWetness");
		
		APrisoner_GetPartWetness_Params params {};
		params.part = part;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetPartWaterWeight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerWettablePart                              part                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float APrisoner::GetPartWaterWeight(EPrisonerWettablePart part)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetPartWaterWeight");
		
		APrisoner_GetPartWaterWeight_Params params {};
		params.part = part;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetOverrideIsLimping
	 * 		Flags  -> ()
	 */
	bool APrisoner::GetOverrideIsLimping()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetOverrideIsLimping");
		
		APrisoner_GetOverrideIsLimping_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetNearbyFoliageInfo
	 * 		Flags  -> ()
	 */
	struct FPrisonerNearbyFoliageInfo APrisoner::GetNearbyFoliageInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetNearbyFoliageInfo");
		
		APrisoner_GetNearbyFoliageInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetMusicPlayerComponent
	 * 		Flags  -> ()
	 */
	class UPrisonerMusicPlayerComponent* APrisoner::GetMusicPlayerComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetMusicPlayerComponent");
		
		APrisoner_GetMusicPlayerComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetMotionIntensity
	 * 		Flags  -> ()
	 */
	EMotionIntensity APrisoner::GetMotionIntensity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetMotionIntensity");
		
		APrisoner_GetMotionIntensity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetMeleeTargetSelectionMode
	 * 		Flags  -> ()
	 */
	EPrisonerMeleeTargetSelectionMode APrisoner::GetMeleeTargetSelectionMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetMeleeTargetSelectionMode");
		
		APrisoner_GetMeleeTargetSelectionMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetMeleeTarget
	 * 		Flags  -> ()
	 */
	class AActor* APrisoner::GetMeleeTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetMeleeTarget");
		
		APrisoner_GetMeleeTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetMaxPartWaterWeight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerWettablePart                              part                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float APrisoner::GetMaxPartWaterWeight(EPrisonerWettablePart part)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetMaxPartWaterWeight");
		
		APrisoner_GetMaxPartWaterWeight_Params params {};
		params.part = part;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetMaxAllowedPace
	 * 		Flags  -> ()
	 */
	EPrisonerMovementPace APrisoner::GetMaxAllowedPace()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetMaxAllowedPace");
		
		APrisoner_GetMaxAllowedPace_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetLookatMeleeTargetAimOffset
	 * 		Flags  -> ()
	 */
	struct FRotator APrisoner::GetLookatMeleeTargetAimOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetLookatMeleeTargetAimOffset");
		
		APrisoner_GetLookatMeleeTargetAimOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetLeanAmount
	 * 		Flags  -> ()
	 */
	float APrisoner::GetLeanAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetLeanAmount");
		
		APrisoner_GetLeanAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetLastCorpse
	 * 		Flags  -> ()
	 */
	class ACorpse* APrisoner::GetLastCorpse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetLastCorpse");
		
		APrisoner_GetLastCorpse_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetItemOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AItem* APrisoner::GetItemOfClass(class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetItemOfClass");
		
		APrisoner_GetItemOfClass_Params params {};
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetItemInHands
	 * 		Flags  -> ()
	 */
	class AItem* APrisoner::GetItemInHands()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetItemInHands");
		
		APrisoner_GetItemInHands_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetIsLimpingOverrideEnabled
	 * 		Flags  -> ()
	 */
	bool APrisoner::GetIsLimpingOverrideEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetIsLimpingOverrideEnabled");
		
		APrisoner_GetIsLimpingOverrideEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetIsInFirstPersonView
	 * 		Flags  -> ()
	 */
	bool APrisoner::GetIsInFirstPersonView()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetIsInFirstPersonView");
		
		APrisoner_GetIsInFirstPersonView_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetHoldBreathState
	 * 		Flags  -> ()
	 */
	EHoldBreathState APrisoner::GetHoldBreathState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetHoldBreathState");
		
		APrisoner_GetHoldBreathState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetHandBondage
	 * 		Flags  -> ()
	 */
	class UBondageComponent* APrisoner::GetHandBondage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetHandBondage");
		
		APrisoner_GetHandBondage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetGroundMovementParameters
	 * 		Flags  -> ()
	 */
	struct FPrisonerGroundMovementParameters APrisoner::GetGroundMovementParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetGroundMovementParameters");
		
		APrisoner_GetGroundMovementParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetGameEvent
	 * 		Flags  -> ()
	 */
	class AGameEventBase* APrisoner::GetGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetGameEvent");
		
		APrisoner_GetGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetFishingRod
	 * 		Flags  -> ()
	 */
	class AFishingRod* APrisoner::GetFishingRod()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetFishingRod");
		
		APrisoner_GetFishingRod_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetFishingComponent
	 * 		Flags  -> ()
	 */
	class UPrisonerFishingComponent* APrisoner::GetFishingComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetFishingComponent");
		
		APrisoner_GetFishingComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetDesiredPace
	 * 		Flags  -> ()
	 */
	EPrisonerMovementPace APrisoner::GetDesiredPace()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetDesiredPace");
		
		APrisoner_GetDesiredPace_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetDesiredLeanAmount
	 * 		Flags  -> ()
	 */
	float APrisoner::GetDesiredLeanAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetDesiredLeanAmount");
		
		APrisoner_GetDesiredLeanAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetCurrentMidiDeviceIndex
	 * 		Flags  -> ()
	 */
	int32_t APrisoner::GetCurrentMidiDeviceIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetCurrentMidiDeviceIndex");
		
		APrisoner_GetCurrentMidiDeviceIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetCurrentHitReactType
	 * 		Flags  -> ()
	 */
	struct FGameplayTag APrisoner::GetCurrentHitReactType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetCurrentHitReactType");
		
		APrisoner_GetCurrentHitReactType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetCrouchStage
	 * 		Flags  -> ()
	 */
	float APrisoner::GetCrouchStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetCrouchStage");
		
		APrisoner_GetCrouchStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetCombatMode
	 * 		Flags  -> ()
	 */
	EPrisonerCombatMode APrisoner::GetCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetCombatMode");
		
		APrisoner_GetCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetCollidingNearbyFoliageInfo
	 * 		Flags  -> ()
	 */
	struct FPrisonerNearbyFoliageInfo APrisoner::GetCollidingNearbyFoliageInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetCollidingNearbyFoliageInfo");
		
		APrisoner_GetCollidingNearbyFoliageInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetClampedDesiredPace
	 * 		Flags  -> ()
	 */
	EPrisonerMovementPace APrisoner::GetClampedDesiredPace()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetClampedDesiredPace");
		
		APrisoner_GetClampedDesiredPace_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetBruisingComponent
	 * 		Flags  -> ()
	 */
	class UBruisingComponent* APrisoner::GetBruisingComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetBruisingComponent");
		
		APrisoner_GetBruisingComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetBreastJiggleAmount
	 * 		Flags  -> ()
	 */
	float APrisoner::GetBreastJiggleAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetBreastJiggleAmount");
		
		APrisoner_GetBreastJiggleAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetBodySimulation
	 * 		Flags  -> ()
	 */
	class UPrisonerBodySimulationComponent* APrisoner::GetBodySimulation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetBodySimulation");
		
		APrisoner_GetBodySimulation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetBellyJiggleAmount
	 * 		Flags  -> ()
	 */
	float APrisoner::GetBellyJiggleAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetBellyJiggleAmount");
		
		APrisoner_GetBellyJiggleAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetAngularVelocity
	 * 		Flags  -> ()
	 */
	float APrisoner::GetAngularVelocity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetAngularVelocity");
		
		APrisoner_GetAngularVelocity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GetAimOffset
	 * 		Flags  -> ()
	 */
	struct FRotator APrisoner::GetAimOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GetAimOffset");
		
		APrisoner_GetAimOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GenitalsExposed
	 * 		Flags  -> ()
	 */
	bool APrisoner::GenitalsExposed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GenitalsExposed");
		
		APrisoner_GenitalsExposed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.GameEventFriendlyFireCheck
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::GameEventFriendlyFireCheck(class APrisoner* Other)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.GameEventFriendlyFireCheck");
		
		APrisoner_GameEventFriendlyFireCheck_Params params {};
		params.Other = Other;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.FindNextOrPreviousMeleeTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Next                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AActor* APrisoner::FindNextOrPreviousMeleeTarget(class AActor* Target, bool Next)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.FindNextOrPreviousMeleeTarget");
		
		APrisoner_FindNextOrPreviousMeleeTarget_Params params {};
		params.Target = Target;
		params.Next = Next;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ExamineItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::ExamineItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ExamineItem");
		
		APrisoner_ExamineItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.EquippedNightVisionGoggles_ActivatedChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ANightVisionGogglesItem*                     Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::EquippedNightVisionGoggles_ActivatedChanged(class ANightVisionGogglesItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.EquippedNightVisionGoggles_ActivatedChanged");
		
		APrisoner_EquippedNightVisionGoggles_ActivatedChanged_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.EnterCombatMode
	 * 		Flags  -> ()
	 */
	bool APrisoner::EnterCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.EnterCombatMode");
		
		APrisoner_EnterCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.DropItemFromHands
	 * 		Flags  -> ()
	 */
	void APrisoner::DropItemFromHands()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.DropItemFromHands");
		
		APrisoner_DropItemFromHands_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.DidGameEventRoundStarted
	 * 		Flags  -> ()
	 */
	bool APrisoner::DidGameEventRoundStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.DidGameEventRoundStarted");
		
		APrisoner_DidGameEventRoundStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.DetonateHead
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               shouldDestroyHeadgear                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::DetonateHead(bool shouldDestroyHeadgear)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.DetonateHead");
		
		APrisoner_DetonateHead_Params params {};
		params.shouldDestroyHeadgear = shouldDestroyHeadgear;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.DestroyThrowingComponent
	 * 		Flags  -> ()
	 */
	void APrisoner::DestroyThrowingComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.DestroyThrowingComponent");
		
		APrisoner_DestroyThrowingComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.DestroyPrisonWalletComponent
	 * 		Flags  -> ()
	 */
	void APrisoner::DestroyPrisonWalletComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.DestroyPrisonWalletComponent");
		
		APrisoner_DestroyPrisonWalletComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.DestroyPlaceable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::DestroyPlaceable(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.DestroyPlaceable");
		
		APrisoner_DestroyPlaceable_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.DestroyFishingComponent
	 * 		Flags  -> ()
	 */
	void APrisoner::DestroyFishingComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.DestroyFishingComponent");
		
		APrisoner_DestroyFishingComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.DemoteSquadMemberOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                UserProfileId                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::DemoteSquadMemberOnServer(const struct FDbIntegerId& UserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.DemoteSquadMemberOnServer");
		
		APrisoner_DemoteSquadMemberOnServer_Params params {};
		params.UserProfileId = UserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.DecreaseCrouchStage
	 * 		Flags  -> ()
	 */
	void APrisoner::DecreaseCrouchStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.DecreaseCrouchStage");
		
		APrisoner_DecreaseCrouchStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CreateThrowingComponent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       itemToThrow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EThrowingAnimationType                             animationType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UPrisonerThrowComponent* APrisoner::CreateThrowingComponent(class AItem* itemToThrow, EThrowingAnimationType animationType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CreateThrowingComponent");
		
		APrisoner_CreateThrowingComponent_Params params {};
		params.itemToThrow = itemToThrow;
		params.animationType = animationType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CreateSquadOnServer
	 * 		Flags  -> ()
	 */
	void APrisoner::CreateSquadOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CreateSquadOnServer");
		
		APrisoner_CreateSquadOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CreatePrisonWalletComponent
	 * 		Flags  -> ()
	 */
	class UPrisonerPrisonWalletComponent* APrisoner::CreatePrisonWalletComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CreatePrisonWalletComponent");
		
		APrisoner_CreatePrisonWalletComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CreateMusicPlayerComponent
	 * 		Flags  -> ()
	 */
	class UPrisonerMusicPlayerComponent* APrisoner::CreateMusicPlayerComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CreateMusicPlayerComponent");
		
		APrisoner_CreateMusicPlayerComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CreateFishingComponent
	 * 		Flags  -> ()
	 */
	class UPrisonerFishingComponent* APrisoner::CreateFishingComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CreateFishingComponent");
		
		APrisoner_CreateFishingComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ConstructWristwatchChildActor
	 * 		Flags  -> ()
	 */
	void APrisoner::ConstructWristwatchChildActor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ConstructWristwatchChildActor");
		
		APrisoner_ConstructWristwatchChildActor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CommitSuicide
	 * 		Flags  -> ()
	 */
	void APrisoner::CommitSuicide()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CommitSuicide");
		
		APrisoner_CommitSuicide_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ClosePanels
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               switchingTabs                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::ClosePanels(bool switchingTabs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ClosePanels");
		
		APrisoner_ClosePanels_Params params {};
		params.switchingTabs = switchingTabs;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_TriggerMeleeHitEffect
	 * 		Flags  -> ()
	 */
	void APrisoner::Client_TriggerMeleeHitEffect()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_TriggerMeleeHitEffect");
		
		APrisoner_Client_TriggerMeleeHitEffect_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_TriggerBulletHitEffect
	 * 		Flags  -> ()
	 */
	void APrisoner::Client_TriggerBulletHitEffect()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_TriggerBulletHitEffect");
		
		APrisoner_Client_TriggerBulletHitEffect_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_SpawnScreenAllowWakeUp
	 * 		Flags  -> ()
	 */
	void APrisoner::Client_SpawnScreenAllowWakeUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_SpawnScreenAllowWakeUp");
		
		APrisoner_Client_SpawnScreenAllowWakeUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_ShowSpawnScreen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               loadoutMenu                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Client_ShowSpawnScreen(bool loadoutMenu)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_ShowSpawnScreen");
		
		APrisoner_Client_ShowSpawnScreen_Params params {};
		params.loadoutMenu = loadoutMenu;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_SetSavedSpawnLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Active                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Velocity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Client_SetSavedSpawnLocation(bool Active, const struct FVector& Location, const struct FVector& Velocity, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_SetSavedSpawnLocation");
		
		APrisoner_Client_SetSavedSpawnLocation_Params params {};
		params.Active = Active;
		params.Location = Location;
		params.Velocity = Velocity;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_OpenParachute
	 * 		Flags  -> ()
	 */
	void APrisoner::Client_OpenParachute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_OpenParachute");
		
		APrisoner_Client_OpenParachute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_OnTakeDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDamageEvent                                DamageEvent                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class AController*                                 eventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      damageObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Client_OnTakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* eventInstigator, class AActor* damageObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_OnTakeDamage");
		
		APrisoner_Client_OnTakeDamage_Params params {};
		params.Damage = Damage;
		params.DamageEvent = DamageEvent;
		params.eventInstigator = eventInstigator;
		params.damageObject = damageObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_OnPhoenixTearsInjection
	 * 		Flags  -> ()
	 */
	void APrisoner::Client_OnPhoenixTearsInjection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_OnPhoenixTearsInjection");
		
		APrisoner_Client_OnPhoenixTearsInjection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_OnNoiseInstigated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              noiseLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Client_OnNoiseInstigated(float noiseLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_OnNoiseInstigated");
		
		APrisoner_Client_OnNoiseInstigated_Params params {};
		params.noiseLevel = noiseLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_OnExitPhotoMode
	 * 		Flags  -> ()
	 */
	void APrisoner::Client_OnExitPhotoMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_OnExitPhotoMode");
		
		APrisoner_Client_OnExitPhotoMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_OnEnterPhotoMode
	 * 		Flags  -> ()
	 */
	void APrisoner::Client_OnEnterPhotoMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_OnEnterPhotoMode");
		
		APrisoner_Client_OnEnterPhotoMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_OnAIDetectionTimerChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              detectionTimer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Client_OnAIDetectionTimerChanged(float detectionTimer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_OnAIDetectionTimerChanged");
		
		APrisoner_Client_OnAIDetectionTimerChanged_Params params {};
		params.detectionTimer = detectionTimer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_LoadAmmoIntoMagazine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponAttachmentMagazine*                   magazine                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FAmmunitionData>                     ammoData                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Client_LoadAmmoIntoMagazine(class AWeaponAttachmentMagazine* magazine, TArray<struct FAmmunitionData> ammoData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_LoadAmmoIntoMagazine");
		
		APrisoner_Client_LoadAmmoIntoMagazine_Params params {};
		params.magazine = magazine;
		params.ammoData = ammoData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_Interact
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     interactable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInteractionType                                   interactionType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionData                            InteractionData                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Client_Interact(class UObject* interactable, EInteractionType interactionType, const struct FInteractionData& InteractionData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_Interact");
		
		APrisoner_Client_Interact_Params params {};
		params.interactable = interactable;
		params.interactionType = interactionType;
		params.InteractionData = InteractionData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_HighlightKeyboardOnDamage
	 * 		Flags  -> ()
	 */
	void APrisoner::Client_HighlightKeyboardOnDamage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_HighlightKeyboardOnDamage");
		
		APrisoner_Client_HighlightKeyboardOnDamage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_HideSpawnScreen
	 * 		Flags  -> ()
	 */
	void APrisoner::Client_HideSpawnScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_HideSpawnScreen");
		
		APrisoner_Client_HideSpawnScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_FadeInVision
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Client_FadeInVision(float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_FadeInVision");
		
		APrisoner_Client_FadeInVision_Params params {};
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.Client_ActivateIntroCinematic
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              initialAltitude                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::Client_ActivateIntroCinematic(float initialAltitude)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.Client_ActivateIntroCinematic");
		
		APrisoner_Client_ActivateIntroCinematic_Params params {};
		params.initialAltitude = initialAltitude;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ClearMalfunction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponMalfunction                                 malfunction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::ClearMalfunction(EWeaponMalfunction malfunction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ClearMalfunction");
		
		APrisoner_ClearMalfunction_Params params {};
		params.malfunction = malfunction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ClearGameEventLoadout
	 * 		Flags  -> ()
	 */
	void APrisoner::ClearGameEventLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ClearGameEventLoadout");
		
		APrisoner_ClearGameEventLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ClearEquipment
	 * 		Flags  -> ()
	 */
	void APrisoner::ClearEquipment()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ClearEquipment");
		
		APrisoner_ClearEquipment_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ChooseFirstMeleeTarget
	 * 		Flags  -> ()
	 */
	class AActor* APrisoner::ChooseFirstMeleeTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ChooseFirstMeleeTarget");
		
		APrisoner_ChooseFirstMeleeTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.ChangeSquadData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      information                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FConZSquadEmblem                            emblem                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void APrisoner::ChangeSquadData(const class FString& Name, const class FString& Message, const class FString& information, const struct FConZSquadEmblem& emblem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.ChangeSquadData");
		
		APrisoner_ChangeSquadData_Params params {};
		params.Name = Name;
		params.Message = Message;
		params.information = information;
		params.emblem = emblem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CarryItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::CarryItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CarryItem");
		
		APrisoner_CarryItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Prisoner.CarriedItemsVisibilityChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Visible                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::CarriedItemsVisibilityChanged__DelegateSignature(bool Visible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Prisoner.CarriedItemsVisibilityChanged__DelegateSignature");
		
		APrisoner_CarriedItemsVisibilityChanged__DelegateSignature_Params params {};
		params.Visible = Visible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CapsuleComponent_PhysicsVolumeChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APhysicsVolume*                              Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::CapsuleComponent_PhysicsVolumeChanged(class APhysicsVolume* Volume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CapsuleComponent_PhysicsVolumeChanged");
		
		APrisoner_CapsuleComponent_PhysicsVolumeChanged_Params params {};
		params.Volume = Volume;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CanTakeItemInHands
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::CanTakeItemInHands(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CanTakeItemInHands");
		
		APrisoner_CanTakeItemInHands_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CanOpenTabMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ETabMode                                           mode                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool APrisoner::CanOpenTabMode(ETabMode mode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CanOpenTabMode");
		
		APrisoner_CanOpenTabMode_Params params {};
		params.mode = mode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CanLeaveCombatMode
	 * 		Flags  -> ()
	 */
	bool APrisoner::CanLeaveCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CanLeaveCombatMode");
		
		APrisoner_CanLeaveCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CanEnterMeleeCombatMode
	 * 		Flags  -> ()
	 */
	bool APrisoner::CanEnterMeleeCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CanEnterMeleeCombatMode");
		
		APrisoner_CanEnterMeleeCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CanEnterCombatMode
	 * 		Flags  -> ()
	 */
	bool APrisoner::CanEnterCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CanEnterCombatMode");
		
		APrisoner_CanEnterCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CancelSquadInvitationOnServer
	 * 		Flags  -> ()
	 */
	void APrisoner::CancelSquadInvitationOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CancelSquadInvitationOnServer");
		
		APrisoner_CancelSquadInvitationOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CancelSquadInvitationOnClient
	 * 		Flags  -> ()
	 */
	void APrisoner::CancelSquadInvitationOnClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CancelSquadInvitationOnClient");
		
		APrisoner_CancelSquadInvitationOnClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CancelInteractableDragging
	 * 		Flags  -> ()
	 */
	void APrisoner::CancelInteractableDragging()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CancelInteractableDragging");
		
		APrisoner_CancelInteractableDragging_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CalculateRespawnPriceBasedOnSquadSize
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            defaultPrice                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EPrisonerCommonSpawnLocation                       SpawnLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t APrisoner::CalculateRespawnPriceBasedOnSquadSize(int32_t defaultPrice, EPrisonerCommonSpawnLocation SpawnLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CalculateRespawnPriceBasedOnSquadSize");
		
		APrisoner_CalculateRespawnPriceBasedOnSquadSize_Params params {};
		params.defaultPrice = defaultPrice;
		params.SpawnLocation = SpawnLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.CalculateAIPerceptionPercentage
	 * 		Flags  -> ()
	 */
	float APrisoner::CalculateAIPerceptionPercentage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.CalculateAIPerceptionPercentage");
		
		APrisoner_CalculateAIPerceptionPercentage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.Prisoner.BorderCrossingPenaltyChange__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EPrisonerBorderCrossingPenalty                     newPenalty                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::BorderCrossingPenaltyChange__DelegateSignature(class APrisoner* sender, EPrisonerBorderCrossingPenalty newPenalty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.Prisoner.BorderCrossingPenaltyChange__DelegateSignature");
		
		APrisoner_BorderCrossingPenaltyChange__DelegateSignature_Params params {};
		params.sender = sender;
		params.newPenalty = newPenalty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.BaseInteractionComponent_OnBaseInteractionEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBaseInteractionComponent*                   Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBaseInteractionEvent                       BaseInteractionEvent                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void APrisoner::BaseInteractionComponent_OnBaseInteractionEvent(class UBaseInteractionComponent* Component, const struct FBaseInteractionEvent& BaseInteractionEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.BaseInteractionComponent_OnBaseInteractionEvent");
		
		APrisoner_BaseInteractionComponent_OnBaseInteractionEvent_Params params {};
		params.Component = Component;
		params.BaseInteractionEvent = BaseInteractionEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.AreBreastsExposed
	 * 		Flags  -> ()
	 */
	bool APrisoner::AreBreastsExposed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.AreBreastsExposed");
		
		APrisoner_AreBreastsExposed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.AddWeaponAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::AddWeaponAttachment(class AWeapon* Weapon, class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.AddWeaponAttachment");
		
		APrisoner_AddWeaponAttachment_Params params {};
		params.Weapon = Weapon;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.AddToSquadOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                squadId                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::AddToSquadOnServer(const struct FDbIntegerId& squadId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.AddToSquadOnServer");
		
		APrisoner_AddToSquadOnServer_Params params {};
		params.squadId = squadId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.AddHandBondage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       bondageItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::AddHandBondage(class AItem* bondageItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.AddHandBondage");
		
		APrisoner_AddHandBondage_Params params {};
		params.bondageItem = bondageItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Prisoner.AcceptSquadInvitationOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZSquad*                                  Squad                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               accepted                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisoner::AcceptSquadInvitationOnServer(class AConZSquad* Squad, bool accepted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Prisoner.AcceptSquadInvitationOnServer");
		
		APrisoner_AcceptSquadInvitationOnServer_Params params {};
		params.Squad = Squad;
		params.accepted = accepted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisoner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisoner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Prisoner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerSkillsUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerSkillsUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerSkillsUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerSkillUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerSkillUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerSkillUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerSkillUIData_Endurance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerSkillUIData_Endurance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerSkillUIData_Endurance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEngineeringSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEngineeringSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EngineeringSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEnvironmentDescriptionComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnvironmentDescriptionComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EnvironmentDescriptionComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AObtainItemObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AObtainItemObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ObtainItemObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AEquipItemObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AEquipItemObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EquipItemObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEquipmentItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEquipmentItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EquipmentItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AEquipmentItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AEquipmentItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EquipmentItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEventInsertCartridge.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEventInsertCartridge::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EventInsertCartridge");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEventInsertMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEventInsertMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EventInsertMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExamineAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExamineAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExamineAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExamineAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExamineAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExamineAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExamineObjectAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExamineObjectAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExamineObjectAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExaminePrisonerAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExaminePrisonerAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExaminePrisonerAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExecuteInteractionAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExecuteInteractionAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExecuteInteractionAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ExpandableContainer.InvokeExpansionChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               maximized                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UExpandableContainer::InvokeExpansionChanged(bool maximized)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ExpandableContainer.InvokeExpansionChanged");
		
		UExpandableContainer_InvokeExpansionChanged_Params params {};
		params.maximized = maximized;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExpandableContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExpandableContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExpandableContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExplosionDamageType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExplosionDamageType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExplosionDamageType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFailurePenalty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFailurePenalty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FailurePenalty");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExplosionFailurePenalty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExplosionFailurePenalty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExplosionFailurePenalty");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExplosiveProtectionItemComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExplosiveProtectionItemComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExplosiveProtectionItemComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ExplosiveProtectionItemComponent.NetMulticast_PlayDetonationEffects
	 * 		Flags  -> ()
	 */
	void UExplosiveProtectionItemComponent::NetMulticast_PlayDetonationEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ExplosiveProtectionItemComponent.NetMulticast_PlayDetonationEffects");
		
		UExplosiveProtectionItemComponent_NetMulticast_PlayDetonationEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExplosiveProtectionItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExplosiveProtectionItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExplosiveProtectionItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ExplosiveTrapItem.Detonate
	 * 		Flags  -> ()
	 */
	void AExplosiveTrapItem::Detonate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ExplosiveTrapItem.Detonate");
		
		AExplosiveTrapItem_Detonate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AExplosiveTrapItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AExplosiveTrapItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExplosiveTrapItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExteriorCharacterSpawnerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExteriorCharacterSpawnerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExteriorCharacterSpawnerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFakeItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFakeItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FakeItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFillItemWithReplenishableResourceAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFillItemWithReplenishableResourceAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FillItemWithReplenishableResourceAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFillWaterAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFillWaterAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FillWaterAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFireItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFireItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FireItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireItem.SetBurning
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               burning                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFireItem::SetBurning(bool burning)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireItem.SetBurning");
		
		AFireItem_SetBurning_Params params {};
		params.burning = burning;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireItem.Server_SetBurning
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               burning                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFireItem::Server_SetBurning(bool burning)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireItem.Server_SetBurning");
		
		AFireItem_Server_SetBurning_Params params {};
		params.burning = burning;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireItem.OnRep_IsBurning
	 * 		Flags  -> ()
	 */
	void AFireItem::OnRep_IsBurning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireItem.OnRep_IsBurning");
		
		AFireItem_OnRep_IsBurning_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireItem.OnRep_BurningStage
	 * 		Flags  -> ()
	 */
	void AFireItem::OnRep_BurningStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireItem.OnRep_BurningStage");
		
		AFireItem_OnRep_BurningStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireItem.GetBurning
	 * 		Flags  -> ()
	 */
	bool AFireItem::GetBurning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireItem.GetBurning");
		
		AFireItem_GetBurning_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFireItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFireItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FireItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFireplaceItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFireplaceItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FireplaceItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFireplaceItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFireplaceItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FireplaceItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFireworksItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFireworksItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FireworksItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksItem.SetIsFiring
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsFiring                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFireworksItem::SetIsFiring(bool IsFiring)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksItem.SetIsFiring");
		
		AFireworksItem_SetIsFiring_Params params {};
		params.IsFiring = IsFiring;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksItem.OnRep_IsFiring
	 * 		Flags  -> ()
	 */
	void AFireworksItem::OnRep_IsFiring()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksItem.OnRep_IsFiring");
		
		AFireworksItem_OnRep_IsFiring_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksItem.OnFuseLit
	 * 		Flags  -> ()
	 */
	void AFireworksItem::OnFuseLit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksItem.OnFuseLit");
		
		AFireworksItem_OnFuseLit_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksItem.LaunchShell
	 * 		Flags  -> ()
	 */
	void AFireworksItem::LaunchShell()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksItem.LaunchShell");
		
		AFireworksItem_LaunchShell_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksItem.IsFiring
	 * 		Flags  -> ()
	 */
	bool AFireworksItem::IsFiring()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksItem.IsFiring");
		
		AFireworksItem_IsFiring_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksItem.GetTotalShells
	 * 		Flags  -> ()
	 */
	int32_t AFireworksItem::GetTotalShells()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksItem.GetTotalShells");
		
		AFireworksItem_GetTotalShells_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksItem.GetSecondsBetweenLaunches
	 * 		Flags  -> ()
	 */
	float AFireworksItem::GetSecondsBetweenLaunches()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksItem.GetSecondsBetweenLaunches");
		
		AFireworksItem_GetSecondsBetweenLaunches_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksItem.CanStartFiring
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AFireworksItem::CanStartFiring(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksItem.CanStartFiring");
		
		AFireworksItem_CanStartFiring_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksItem.AutoLaunchShells
	 * 		Flags  -> ()
	 */
	void AFireworksItem::AutoLaunchShells()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksItem.AutoLaunchShells");
		
		AFireworksItem_AutoLaunchShells_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFireworksItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFireworksItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FireworksItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksTrapItem.OnRep_IsFiring
	 * 		Flags  -> ()
	 */
	void AFireworksTrapItem::OnRep_IsFiring()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksTrapItem.OnRep_IsFiring");
		
		AFireworksTrapItem_OnRep_IsFiring_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksTrapItem.LaunchShell
	 * 		Flags  -> ()
	 */
	void AFireworksTrapItem::LaunchShell()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksTrapItem.LaunchShell");
		
		AFireworksTrapItem_LaunchShell_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FireworksTrapItem.Detonate
	 * 		Flags  -> ()
	 */
	void AFireworksTrapItem::Detonate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FireworksTrapItem.Detonate");
		
		AFireworksTrapItem_Detonate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFireworksTrapItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFireworksTrapItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FireworksTrapItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishInstancedStaticMeshComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishInstancedStaticMeshComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishInstancedStaticMeshComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingAttachment.Unequip
	 * 		Flags  -> ()
	 */
	void AFishingAttachment::Unequip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingAttachment.Unequip");
		
		AFishingAttachment_Unequip_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingAttachment.GetStaticMeshWhenAttached
	 * 		Flags  -> ()
	 */
	class UStaticMesh* AFishingAttachment::GetStaticMeshWhenAttached()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingAttachment.GetStaticMeshWhenAttached");
		
		AFishingAttachment_GetStaticMeshWhenAttached_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingAttachment.GetSkeletalMeshWhenAttached
	 * 		Flags  -> ()
	 */
	class USkeletalMesh* AFishingAttachment::GetSkeletalMeshWhenAttached()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingAttachment.GetSkeletalMeshWhenAttached");
		
		AFishingAttachment_GetSkeletalMeshWhenAttached_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingAttachment.GetOwningFishingRod
	 * 		Flags  -> ()
	 */
	class AFishingRod* AFishingAttachment::GetOwningFishingRod()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingAttachment.GetOwningFishingRod");
		
		AFishingAttachment_GetOwningFishingRod_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingAttachment.Equip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingRod*                                 FishingRod                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingAttachment::Equip(class AFishingRod* FishingRod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingAttachment.Equip");
		
		AFishingAttachment_Equip_Params params {};
		params.FishingRod = FishingRod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingAttachment.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingAttachment::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingAttachment");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingAttachmentBait.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingAttachmentBait::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingAttachmentBait");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingAttachmentFloater.Server_SendState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRigidBodyState                             State                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AFishingAttachmentFloater::Server_SendState(float DeltaTime, const struct FRigidBodyState& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingAttachmentFloater.Server_SendState");
		
		AFishingAttachmentFloater_Server_SendState_Params params {};
		params.DeltaTime = DeltaTime;
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingAttachmentFloater.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingAttachmentFloater::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingAttachmentFloater");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingAttachmentHook.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingAttachmentHook::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingAttachmentHook");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingAttachmentReel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingAttachmentReel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingAttachmentReel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingAttachmentSinker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingAttachmentSinker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingAttachmentSinker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingAttachmentWire.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingAttachmentWire::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingAttachmentWire");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingBarWidget.SetSegmentBarNum
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            numOfSegments                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFishingBarWidget::SetSegmentBarNum(int32_t numOfSegments)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingBarWidget.SetSegmentBarNum");
		
		UFishingBarWidget_SetSegmentBarNum_Params params {};
		params.numOfSegments = numOfSegments;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingBarWidget.SetProgressPercentage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFishingBarWidget::SetProgressPercentage(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingBarWidget.SetProgressPercentage");
		
		UFishingBarWidget_SetProgressPercentage_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingBarWidget.GetProgressPercentage
	 * 		Flags  -> ()
	 */
	float UFishingBarWidget::GetProgressPercentage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingBarWidget.GetProgressPercentage");
		
		UFishingBarWidget_GetProgressPercentage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishingBarWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishingBarWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingBarWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishingContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishingContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingReelAnimInstance.GetReelingAnimSequence
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UFishingReelAnimInstance::GetReelingAnimSequence()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingReelAnimInstance.GetReelingAnimSequence");
		
		UFishingReelAnimInstance_GetReelingAnimSequence_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishingReelAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishingReelAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingReelAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishingRodState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishingRodState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingRodState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_SwapAttachments
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingAttachment*                          oldAttachment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AFishingAttachment*                          newAttachment                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_SwapAttachments(class AFishingAttachment* oldAttachment, class AFishingAttachment* newAttachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_SwapAttachments");
		
		AFishingRod_Server_SwapAttachments_Params params {};
		params.oldAttachment = oldAttachment;
		params.newAttachment = newAttachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_SpawnCaughtFish
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      caughtFishClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EFishSpecies                                       FishSpecies                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              caughtFishMass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              caughtFishSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_SpawnCaughtFish(class UClass* caughtFishClass, EFishSpecies FishSpecies, float caughtFishMass, float caughtFishSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_SpawnCaughtFish");
		
		AFishingRod_Server_SpawnCaughtFish_Params params {};
		params.caughtFishClass = caughtFishClass;
		params.FishSpecies = FishSpecies;
		params.caughtFishMass = caughtFishMass;
		params.caughtFishSize = caughtFishSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_SetShouldShortCast
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_SetShouldShortCast(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_SetShouldShortCast");
		
		AFishingRod_Server_SetShouldShortCast_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_SetFishingState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EFishingState                                      fishingState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_SetFishingState(EFishingState fishingState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_SetFishingState");
		
		AFishingRod_Server_SetFishingState_Params params {};
		params.fishingState = fishingState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_SetCastPower
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_SetCastPower(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_SetCastPower");
		
		AFishingRod_Server_SetCastPower_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_SendState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRigidBodyState                             State                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              reelingAmount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               isFastReeling                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_SendState(float DeltaTime, const struct FRigidBodyState& State, float reelingAmount, bool isFastReeling)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_SendState");
		
		AFishingRod_Server_SendState_Params params {};
		params.DeltaTime = DeltaTime;
		params.State = State;
		params.reelingAmount = reelingAmount;
		params.isFastReeling = isFastReeling;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_ResetAttachments
	 * 		Flags  -> ()
	 */
	void AFishingRod::Server_ResetAttachments()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_ResetAttachments");
		
		AFishingRod_Server_ResetAttachments_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_RemoveAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_RemoveAttachment(class AFishingAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_RemoveAttachment");
		
		AFishingRod_Server_RemoveAttachment_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_ReleaseCastingObject
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              castingPower                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EFishingState                                      nextState                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_ReleaseCastingObject(const struct FVector& Location, const struct FVector& Direction, float castingPower, EFishingState nextState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_ReleaseCastingObject");
		
		AFishingRod_Server_ReleaseCastingObject_Params params {};
		params.Location = Location;
		params.Direction = Direction;
		params.castingPower = castingPower;
		params.nextState = nextState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_OnWireBreak
	 * 		Flags  -> ()
	 */
	void AFishingRod::Server_OnWireBreak()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_OnWireBreak");
		
		AFishingRod_Server_OnWireBreak_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_OnLeaveActiveFishingState
	 * 		Flags  -> ()
	 */
	void AFishingRod::Server_OnLeaveActiveFishingState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_OnLeaveActiveFishingState");
		
		AFishingRod_Server_OnLeaveActiveFishingState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_OnEnterActiveFishingState
	 * 		Flags  -> ()
	 */
	void AFishingRod::Server_OnEnterActiveFishingState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_OnEnterActiveFishingState");
		
		AFishingRod_Server_OnEnterActiveFishingState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_InitiateCast
	 * 		Flags  -> ()
	 */
	void AFishingRod::Server_InitiateCast()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_InitiateCast");
		
		AFishingRod_Server_InitiateCast_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_HookFish
	 * 		Flags  -> ()
	 */
	void AFishingRod::Server_HookFish()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_HookFish");
		
		AFishingRod_Server_HookFish_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_EnterTrophyState
	 * 		Flags  -> ()
	 */
	void AFishingRod::Server_EnterTrophyState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_EnterTrophyState");
		
		AFishingRod_Server_EnterTrophyState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_CleanupTrophyState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               keptFish                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_CleanupTrophyState(bool keptFish)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_CleanupTrophyState");
		
		AFishingRod_Server_CleanupTrophyState_Params params {};
		params.keptFish = keptFish;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_CheckIfFishBitBait
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_CheckIfFishBitBait(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_CheckIfFishBitBait");
		
		AFishingRod_Server_CheckIfFishBitBait_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.Server_AddAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::Server_AddAttachment(class AFishingAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.Server_AddAttachment");
		
		AFishingRod_Server_AddAttachment_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.RemoveAttachmentLocal
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::RemoveAttachmentLocal(class AFishingAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.RemoveAttachmentLocal");
		
		AFishingRod_RemoveAttachmentLocal_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.RemoveAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::RemoveAttachment(class AFishingAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.RemoveAttachment");
		
		AFishingRod_RemoveAttachment_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.OnRep_MinigameTrophy
	 * 		Flags  -> ()
	 */
	void AFishingRod::OnRep_MinigameTrophy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.OnRep_MinigameTrophy");
		
		AFishingRod_OnRep_MinigameTrophy_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.OnRep_MinigameItem
	 * 		Flags  -> ()
	 */
	void AFishingRod::OnRep_MinigameItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.OnRep_MinigameItem");
		
		AFishingRod_OnRep_MinigameItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.OnRep_FishingAttachmentsReplicated
	 * 		Flags  -> ()
	 */
	void AFishingRod::OnRep_FishingAttachmentsReplicated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.OnRep_FishingAttachmentsReplicated");
		
		AFishingRod_OnRep_FishingAttachmentsReplicated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.OnReleaseFishClicked
	 * 		Flags  -> ()
	 */
	void AFishingRod::OnReleaseFishClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.OnReleaseFishClicked");
		
		AFishingRod_OnReleaseFishClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.OnKeepFishClicked
	 * 		Flags  -> ()
	 */
	void AFishingRod::OnKeepFishClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.OnKeepFishClicked");
		
		AFishingRod_OnKeepFishClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.OnFishingActionAnimNotify
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EFishingActionNotifyType                           notifyType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::OnFishingActionAnimNotify(EFishingActionNotifyType notifyType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.OnFishingActionAnimNotify");
		
		AFishingRod_OnFishingActionAnimNotify_Params params {};
		params.notifyType = notifyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.NetMulticast_SetHookBitten
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UFishSpeciesData*                            speciesData                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::NetMulticast_SetHookBitten(bool Value, class UFishSpeciesData* speciesData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.NetMulticast_SetHookBitten");
		
		AFishingRod_NetMulticast_SetHookBitten_Params params {};
		params.Value = Value;
		params.speciesData = speciesData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.NetMulticast_ResetAttachments
	 * 		Flags  -> ()
	 */
	void AFishingRod::NetMulticast_ResetAttachments()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.NetMulticast_ResetAttachments");
		
		AFishingRod_NetMulticast_ResetAttachments_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.NetMulticast_ReleaseCastingObject
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              castingPower                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EFishingState                                      nextState                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::NetMulticast_ReleaseCastingObject(const struct FVector& Location, const struct FVector& Direction, float castingPower, EFishingState nextState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.NetMulticast_ReleaseCastingObject");
		
		AFishingRod_NetMulticast_ReleaseCastingObject_Params params {};
		params.Location = Location;
		params.Direction = Direction;
		params.castingPower = castingPower;
		params.nextState = nextState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.NetMulticast_OnWireBreak
	 * 		Flags  -> ()
	 */
	void AFishingRod::NetMulticast_OnWireBreak()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.NetMulticast_OnWireBreak");
		
		AFishingRod_NetMulticast_OnWireBreak_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.NetMulticast_OnLeaveActiveFishingState
	 * 		Flags  -> ()
	 */
	void AFishingRod::NetMulticast_OnLeaveActiveFishingState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.NetMulticast_OnLeaveActiveFishingState");
		
		AFishingRod_NetMulticast_OnLeaveActiveFishingState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.NetMulticast_OnEnterActiveFishingState
	 * 		Flags  -> ()
	 */
	void AFishingRod::NetMulticast_OnEnterActiveFishingState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.NetMulticast_OnEnterActiveFishingState");
		
		AFishingRod_NetMulticast_OnEnterActiveFishingState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.NetMulticast_InitiateCast
	 * 		Flags  -> ()
	 */
	void AFishingRod::NetMulticast_InitiateCast()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.NetMulticast_InitiateCast");
		
		AFishingRod_NetMulticast_InitiateCast_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.NetMulticast_HookFish
	 * 		Flags  -> ()
	 */
	void AFishingRod::NetMulticast_HookFish()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.NetMulticast_HookFish");
		
		AFishingRod_NetMulticast_HookFish_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.GetFishingRodOwner
	 * 		Flags  -> ()
	 */
	class APrisoner* AFishingRod::GetFishingRodOwner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.GetFishingRodOwner");
		
		AFishingRod_GetFishingRodOwner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.CanAddAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingAttachment*                          attachment                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AFishingRod::CanAddAttachment(class AFishingAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.CanAddAttachment");
		
		AFishingRod_CanAddAttachment_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.FishingRod.AttachmentRemovedSignature__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingRod*                                 sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::AttachmentRemovedSignature__DelegateSignature(class AFishingRod* sender, class AFishingAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.FishingRod.AttachmentRemovedSignature__DelegateSignature");
		
		AFishingRod_AttachmentRemovedSignature__DelegateSignature_Params params {};
		params.sender = sender;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.FishingRod.AttachmentAddedSignature__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingRod*                                 sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::AttachmentAddedSignature__DelegateSignature(class AFishingRod* sender, class AFishingAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.FishingRod.AttachmentAddedSignature__DelegateSignature");
		
		AFishingRod_AttachmentAddedSignature__DelegateSignature_Params params {};
		params.sender = sender;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.AddAttachmentLocal
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               attach                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::AddAttachmentLocal(class AFishingAttachment* attachment, bool attach)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.AddAttachmentLocal");
		
		AFishingRod_AddAttachmentLocal_Params params {};
		params.attachment = attachment;
		params.attach = attach;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingRod.AddAttachment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               attach                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               removeExistingOnTheSameMountType                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFishingRod::AddAttachment(class AFishingAttachment* attachment, bool attach, bool removeExistingOnTheSameMountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingRod.AddAttachment");
		
		AFishingRod_AddAttachment_Params params {};
		params.attachment = attachment;
		params.attach = attach;
		params.removeExistingOnTheSameMountType = removeExistingOnTheSameMountType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingRod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingRod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingRod");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishingRodAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishingRodAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingRodAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingTrophyActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingTrophyActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingTrophyActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingTrophyWidget.OnReleasedPressed
	 * 		Flags  -> ()
	 */
	void UFishingTrophyWidget::OnReleasedPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingTrophyWidget.OnReleasedPressed");
		
		UFishingTrophyWidget_OnReleasedPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingTrophyWidget.OnKeepPressed
	 * 		Flags  -> ()
	 */
	void UFishingTrophyWidget::OnKeepPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingTrophyWidget.OnKeepPressed");
		
		UFishingTrophyWidget_OnKeepPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishingTrophyWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishingTrophyWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingTrophyWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishingWireComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishingWireComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingWireComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishingZoneIndicator.OnRep_Radius
	 * 		Flags  -> ()
	 */
	void AFishingZoneIndicator::OnRep_Radius()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishingZoneIndicator.OnRep_Radius");
		
		AFishingZoneIndicator_OnRep_Radius_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishingZoneIndicator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishingZoneIndicator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishingZoneIndicator");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishSchoolActor.OnRep_MoveToLocationRep
	 * 		Flags  -> ()
	 */
	void AFishSchoolActor::OnRep_MoveToLocationRep()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishSchoolActor.OnRep_MoveToLocationRep");
		
		AFishSchoolActor_OnRep_MoveToLocationRep_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FishSchoolActor.OnRep_CurrentState
	 * 		Flags  -> ()
	 */
	void AFishSchoolActor::OnRep_CurrentState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FishSchoolActor.OnRep_CurrentState");
		
		AFishSchoolActor_OnRep_CurrentState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFishSchoolActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFishSchoolActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishSchoolActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishSpawningPreset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishSpawningPreset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishSpawningPreset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishSpeciesData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishSpeciesData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishSpeciesData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFishSpeciesPreset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFishSpeciesPreset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FishSpeciesPreset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FlagAreaVisualizer.DestroyVisualizer
	 * 		Flags  -> ()
	 */
	void AFlagAreaVisualizer::DestroyVisualizer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FlagAreaVisualizer.DestroyVisualizer");
		
		AFlagAreaVisualizer_DestroyVisualizer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFlagAreaVisualizer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFlagAreaVisualizer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FlagAreaVisualizer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFlareItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFlareItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FlareItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FlareItem.SwitchPointLight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               turnOn                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFlareItem::SwitchPointLight(bool turnOn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FlareItem.SwitchPointLight");
		
		AFlareItem_SwitchPointLight_Params params {};
		params.turnOn = turnOn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FlareItem.SetState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EFlareIgniteState                                  State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFlareItem::SetState(EFlareIgniteState State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FlareItem.SetState");
		
		AFlareItem_SetState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FlareItem.RequestPrisonerIgniteFlare
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFlareItem::RequestPrisonerIgniteFlare(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FlareItem.RequestPrisonerIgniteFlare");
		
		AFlareItem_RequestPrisonerIgniteFlare_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FlareItem.OnRep_State
	 * 		Flags  -> ()
	 */
	void AFlareItem::OnRep_State()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FlareItem.OnRep_State");
		
		AFlareItem_OnRep_State_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FlareItem.IsBurning
	 * 		Flags  -> ()
	 */
	bool AFlareItem::IsBurning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FlareItem.IsBurning");
		
		AFlareItem_IsBurning_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FlareItem.Ignite
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFlareItem::Ignite(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FlareItem.Ignite");
		
		AFlareItem_Ignite_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FlareItem.GetState
	 * 		Flags  -> ()
	 */
	EFlareIgniteState AFlareItem::GetState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FlareItem.GetState");
		
		AFlareItem_GetState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFlareItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFlareItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FlareItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FlareTrapItem.Detonate
	 * 		Flags  -> ()
	 */
	void AFlareTrapItem::Detonate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FlareTrapItem.Detonate");
		
		AFlareTrapItem_Detonate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFlareTrapItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFlareTrapItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FlareTrapItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GrenadeItem.Server_PullPin
	 * 		Flags  -> ()
	 */
	void AGrenadeItem::Server_PullPin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GrenadeItem.Server_PullPin");
		
		AGrenadeItem_Server_PullPin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GrenadeItem.Multicast_PlayEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     zeroBasedLocation                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AGrenadeItem::Multicast_PlayEffects(const struct FVector& zeroBasedLocation, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GrenadeItem.Multicast_PlayEffects");
		
		AGrenadeItem_Multicast_PlayEffects_Params params {};
		params.zeroBasedLocation = zeroBasedLocation;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GrenadeItem.GetArmingMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EThrowingType                                      throwingType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAnimMontage* AGrenadeItem::GetArmingMontage(EThrowingType throwingType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GrenadeItem.GetArmingMontage");
		
		AGrenadeItem_GetArmingMontage_Params params {};
		params.throwingType = throwingType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGrenadeItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGrenadeItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GrenadeItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFlashbangItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFlashbangItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FlashbangItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFlashbangItemEffects.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFlashbangItemEffects::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FlashbangItemEffects");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFocusableWidgetInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFocusableWidgetInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FocusableWidgetInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FogSphere.SetFogDensity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Density                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFogSphere::SetFogDensity(float Density)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FogSphere.SetFogDensity");
		
		AFogSphere_SetFogDensity_Params params {};
		params.Density = Density;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.FogSphere.OnTimeOfDayChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeatherController2*                         sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFogSphere::OnTimeOfDayChanged(class AWeatherController2* sender)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.FogSphere.OnTimeOfDayChanged");
		
		AFogSphere_OnTimeOfDayChanged_Params params {};
		params.sender = sender;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFogSphere.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFogSphere::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FogSphere");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFoliageAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFoliageAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FoliageAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFoliageInstancedBush.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFoliageInstancedBush::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FoliageInstancedBush");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFoliageInstancedGrass.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFoliageInstancedGrass::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FoliageInstancedGrass");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFoliageInstancedTree.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFoliageInstancedTree::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FoliageInstancedTree");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFollowsMouseActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFollowsMouseActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FollowsMouseActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UForceUnlockItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UForceUnlockItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ForceUnlockItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UForeignSubstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UForeignSubstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ForeignSubstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFortificationComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFortificationComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FortificationComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFragGrenadeItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFragGrenadeItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FragGrenadeItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UFuelItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFuelItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.FuelItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.SetEnablePawnCollision
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBorder::SetEnablePawnCollision(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.SetEnablePawnCollision");
		
		AGameEventBorder_SetEnablePawnCollision_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.OnRep_Collision
	 * 		Flags  -> ()
	 */
	void AGameEventBorder::OnRep_Collision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.OnRep_Collision");
		
		AGameEventBorder_OnRep_Collision_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.Multicast_SetRadius
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBorder::Multicast_SetRadius(float Radius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.Multicast_SetRadius");
		
		AGameEventBorder_Multicast_SetRadius_Params params {};
		params.Radius = Radius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.Multicast_SetOffset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBorder::Multicast_SetOffset(const struct FVector& Offset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.Multicast_SetOffset");
		
		AGameEventBorder_Multicast_SetOffset_Params params {};
		params.Offset = Offset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.IsActive
	 * 		Flags  -> ()
	 */
	bool AGameEventBorder::IsActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.IsActive");
		
		AGameEventBorder_IsActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.HeatUpAndChangeArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     focus                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              heatUpDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBorder::HeatUpAndChangeArea(float Radius, const struct FVector& focus, float Duration, float heatUpDuration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.HeatUpAndChangeArea");
		
		AGameEventBorder_HeatUpAndChangeArea_Params params {};
		params.Radius = Radius;
		params.focus = focus;
		params.Duration = Duration;
		params.heatUpDuration = heatUpDuration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.GetState
	 * 		Flags  -> ()
	 */
	EGameEventBorderState AGameEventBorder::GetState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.GetState");
		
		AGameEventBorder_GetState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.GetRadius
	 * 		Flags  -> ()
	 */
	float AGameEventBorder::GetRadius()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.GetRadius");
		
		AGameEventBorder_GetRadius_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.GetOffset
	 * 		Flags  -> ()
	 */
	struct FVector AGameEventBorder::GetOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.GetOffset");
		
		AGameEventBorder_GetOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.GetBorderCenter
	 * 		Flags  -> ()
	 */
	struct FVector AGameEventBorder::GetBorderCenter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.GetBorderCenter");
		
		AGameEventBorder_GetBorderCenter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.ChangeState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGameEventBorderState                              State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBorder::ChangeState(EGameEventBorderState State, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.ChangeState");
		
		AGameEventBorder_ChangeState_Params params {};
		params.State = State;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventBorder.ChangeArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     focus                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventBorder::ChangeArea(float Radius, const struct FVector& focus, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventBorder.ChangeArea");
		
		AGameEventBorder_ChangeArea_Params params {};
		params.Radius = Radius;
		params.focus = focus;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGameEventBorder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGameEventBorder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventBorder");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventCardWidget.GetGameEvent
	 * 		Flags  -> ()
	 */
	class AGameEventBase* UGameEventCardWidget::GetGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventCardWidget.GetGameEvent");
		
		UGameEventCardWidget_GetGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventCardWidget.Create
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGameEventCardWidget* UGameEventCardWidget::Create(class AGameEventBase* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventCardWidget.Create");
		
		UGameEventCardWidget_Create_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventCardWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventCardWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventCardWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventInfoWidget.UpdateStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              _gameEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventInfoWidget::UpdateStats(class AGameEventBase* _gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventInfoWidget.UpdateStats");
		
		UGameEventInfoWidget_UpdateStats_Params params {};
		params._gameEvent = _gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventInfoWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventInfoWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventInfoWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLeaderboardWidget.UpdateTopPlayers
	 * 		Flags  -> ()
	 */
	void UGameEventLeaderboardWidget::UpdateTopPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLeaderboardWidget.UpdateTopPlayers");
		
		UGameEventLeaderboardWidget_UpdateTopPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLeaderboardWidget.UpdatePlayerRanking
	 * 		Flags  -> ()
	 */
	void UGameEventLeaderboardWidget::UpdatePlayerRanking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLeaderboardWidget.UpdatePlayerRanking");
		
		UGameEventLeaderboardWidget_UpdatePlayerRanking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLeaderboardWidget.RequestTopPlayers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EEventsRankingStatsOrderByField                    orderByField                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESortOrder                                         sortOrder                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventLeaderboardWidget::RequestTopPlayers(int32_t Count, EEventsRankingStatsOrderByField orderByField, ESortOrder sortOrder)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLeaderboardWidget.RequestTopPlayers");
		
		UGameEventLeaderboardWidget_RequestTopPlayers_Params params {};
		params.Count = Count;
		params.orderByField = orderByField;
		params.sortOrder = sortOrder;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLeaderboardWidget.RequestPlayerRanking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Pad                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EEventsRankingStatsOrderByField                    orderByField                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESortOrder                                         sortOrder                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventLeaderboardWidget::RequestPlayerRanking(int32_t Pad, EEventsRankingStatsOrderByField orderByField, ESortOrder sortOrder)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLeaderboardWidget.RequestPlayerRanking");
		
		UGameEventLeaderboardWidget_RequestPlayerRanking_Params params {};
		params.Pad = Pad;
		params.orderByField = orderByField;
		params.sortOrder = sortOrder;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLeaderboardWidget.CancelReqeusts
	 * 		Flags  -> ()
	 */
	void UGameEventLeaderboardWidget::CancelReqeusts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLeaderboardWidget.CancelReqeusts");
		
		UGameEventLeaderboardWidget_CancelReqeusts_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventLeaderboardWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventLeaderboardWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventLeaderboardWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLoadoutMenuWidget.SetGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventLoadoutMenuWidget::SetGameEvent(class AGameEventBase* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLoadoutMenuWidget.SetGameEvent");
		
		UGameEventLoadoutMenuWidget_SetGameEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLoadoutMenuWidget.GetGameEvent
	 * 		Flags  -> ()
	 */
	class AGameEventBase* UGameEventLoadoutMenuWidget::GetGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLoadoutMenuWidget.GetGameEvent");
		
		UGameEventLoadoutMenuWidget_GetGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventLoadoutMenuWidget.CreateLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      primary                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      secondary                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      tertiary                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              outfit                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              support                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)
	 * 		class UPrisonerLoadout*                            loadout                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventLoadoutMenuWidget::CreateLoadout(class UClass* primary, class UClass* secondary, class UClass* tertiary, TArray<class UClass*> outfit, TArray<class UClass*> support, class UPrisonerLoadout* loadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventLoadoutMenuWidget.CreateLoadout");
		
		UGameEventLoadoutMenuWidget_CreateLoadout_Params params {};
		params.primary = primary;
		params.secondary = secondary;
		params.tertiary = tertiary;
		params.outfit = outfit;
		params.support = support;
		params.loadout = loadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventLoadoutMenuWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventLoadoutMenuWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventLoadoutMenuWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.TrySchedulingNextEvent
	 * 		Flags  -> ()
	 */
	class AGameEventBase* AGameEventManager::TrySchedulingNextEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.TrySchedulingNextEvent");
		
		AGameEventManager_TrySchedulingNextEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.PickRandomMarker
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      markerType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               preferUnused                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               forcePick                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGameEventLocationMarker* AGameEventManager::PickRandomMarker(class UClass* markerType, bool preferUnused, bool forcePick)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.PickRandomMarker");
		
		AGameEventManager_PickRandomMarker_Params params {};
		params.markerType = markerType;
		params.preferUnused = preferUnused;
		params.forcePick = forcePick;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.OnRep_EndedGameEvents
	 * 		Flags  -> ()
	 */
	void AGameEventManager::OnRep_EndedGameEvents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.OnRep_EndedGameEvents");
		
		AGameEventManager_OnRep_EndedGameEvents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.OnRep_CurrentGameEvents
	 * 		Flags  -> ()
	 */
	void AGameEventManager::OnRep_CurrentGameEvents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.OnRep_CurrentGameEvents");
		
		AGameEventManager_OnRep_CurrentGameEvents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.OnRep_AnnouncedGameEvents
	 * 		Flags  -> ()
	 */
	void AGameEventManager::OnRep_AnnouncedGameEvents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.OnRep_AnnouncedGameEvents");
		
		AGameEventManager_OnRep_AnnouncedGameEvents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.IsEventLocationFree
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Location                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool AGameEventManager::IsEventLocationFree(class FText* Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.IsEventLocationFree");
		
		AGameEventManager_IsEventLocationFree_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Location != nullptr)
			*Location = params.Location;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.GetPrisonerRegisteredGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGameEventBase* AGameEventManager::GetPrisonerRegisteredGameEvent(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.GetPrisonerRegisteredGameEvent");
		
		AGameEventManager_GetPrisonerRegisteredGameEvent_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.GetPanelWidget
	 * 		Flags  -> ()
	 */
	class UGameEventPanelWidget* AGameEventManager::GetPanelWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.GetPanelWidget");
		
		AGameEventManager_GetPanelWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.GetEndedEvents
	 * 		Flags  -> ()
	 */
	TArray<class AGameEventBase*> AGameEventManager::GetEndedEvents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.GetEndedEvents");
		
		AGameEventManager_GetEndedEvents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.GetCurrentEvents
	 * 		Flags  -> ()
	 */
	TArray<class AGameEventBase*> AGameEventManager::GetCurrentEvents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.GetCurrentEvents");
		
		AGameEventManager_GetCurrentEvents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.GetAnnouncedEvents
	 * 		Flags  -> ()
	 */
	TArray<class AGameEventBase*> AGameEventManager::GetAnnouncedEvents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.GetAnnouncedEvents");
		
		AGameEventManager_GetAnnouncedEvents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.CreateGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventLocationMarker*                    marker                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StartDelay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGameEventBase* AGameEventManager::CreateGameEvent(class AGameEventLocationMarker* marker, float StartDelay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.CreateGameEvent");
		
		AGameEventManager_CreateGameEvent_Params params {};
		params.marker = marker;
		params.StartDelay = StartDelay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventManager.CancelAllGameEvents
	 * 		Flags  -> ()
	 */
	void AGameEventManager::CancelAllGameEvents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventManager.CancelAllGameEvents");
		
		AGameEventManager_CancelAllGameEvents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGameEventManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGameEventManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.UpdateLists
	 * 		Flags  -> ()
	 */
	void UGameEventPanelWidget::UpdateLists()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.UpdateLists");
		
		UGameEventPanelWidget_UpdateLists_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.OnUpdate
	 * 		Flags  -> ()
	 */
	void UGameEventPanelWidget::OnUpdate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.OnUpdate");
		
		UGameEventPanelWidget_OnUpdate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.OnOpened
	 * 		Flags  -> ()
	 */
	void UGameEventPanelWidget::OnOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.OnOpened");
		
		UGameEventPanelWidget_OnOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.OnClosed
	 * 		Flags  -> ()
	 */
	void UGameEventPanelWidget::OnClosed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.OnClosed");
		
		UGameEventPanelWidget_OnClosed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.GetGameEventManager
	 * 		Flags  -> ()
	 */
	class AGameEventManager* UGameEventPanelWidget::GetGameEventManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.GetGameEventManager");
		
		UGameEventPanelWidget_GetGameEventManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.EmptyLists
	 * 		Flags  -> ()
	 */
	void UGameEventPanelWidget::EmptyLists()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.EmptyLists");
		
		UGameEventPanelWidget_EmptyLists_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.Create
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventManager*                           GEManager                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGameEventPanelWidget* UGameEventPanelWidget::Create(class AGameEventManager* GEManager)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.Create");
		
		UGameEventPanelWidget_Create_Params params {};
		params.GEManager = GEManager;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.AddEndedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventPanelWidget::AddEndedEvent(class AGameEventBase* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.AddEndedEvent");
		
		UGameEventPanelWidget_AddEndedEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.AddCurrentEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventPanelWidget::AddCurrentEvent(class AGameEventBase* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.AddCurrentEvent");
		
		UGameEventPanelWidget_AddCurrentEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventPanelWidget.AddAnnouncedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventPanelWidget::AddAnnouncedEvent(class AGameEventBase* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventPanelWidget.AddAnnouncedEvent");
		
		UGameEventPanelWidget_AddAnnouncedEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventPanelWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventPanelWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventPanelWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantInfoCardWidget.UpdateStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventParticipantInfoCardWidget::UpdateStats(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantInfoCardWidget.UpdateStats");
		
		UGameEventParticipantInfoCardWidget_UpdateStats_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventParticipantInfoCardWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventParticipantInfoCardWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventParticipantInfoCardWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.UpdateStats
	 * 		Flags  -> ()
	 */
	void UGameEventParticipantStatsWidget::UpdateStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.UpdateStats");
		
		UGameEventParticipantStatsWidget_UpdateStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.UpdateColours
	 * 		Flags  -> ()
	 */
	void UGameEventParticipantStatsWidget::UpdateColours()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.UpdateColours");
		
		UGameEventParticipantStatsWidget_UpdateColours_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.SetTeamIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventParticipantStatsWidget::SetTeamIndex(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.SetTeamIndex");
		
		UGameEventParticipantStatsWidget_SetTeamIndex_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.SetColours
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGameEventTeamColours                       colours                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UGameEventParticipantStatsWidget::SetColours(const struct FGameEventTeamColours& colours)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.SetColours");
		
		UGameEventParticipantStatsWidget_SetColours_Params params {};
		params.colours = colours;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.IsValid
	 * 		Flags  -> ()
	 */
	bool UGameEventParticipantStatsWidget::IsValid()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.IsValid");
		
		UGameEventParticipantStatsWidget_IsValid_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.GetTeamIndex
	 * 		Flags  -> ()
	 */
	int32_t UGameEventParticipantStatsWidget::GetTeamIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.GetTeamIndex");
		
		UGameEventParticipantStatsWidget_GetTeamIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.GetScoreboard
	 * 		Flags  -> ()
	 */
	class UGameEventScoreboardWidget* UGameEventParticipantStatsWidget::GetScoreboard()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.GetScoreboard");
		
		UGameEventParticipantStatsWidget_GetScoreboard_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.GetIndex
	 * 		Flags  -> ()
	 */
	int32_t UGameEventParticipantStatsWidget::GetIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.GetIndex");
		
		UGameEventParticipantStatsWidget_GetIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.GetGameEvent
	 * 		Flags  -> ()
	 */
	class AGameEventBase* UGameEventParticipantStatsWidget::GetGameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.GetGameEvent");
		
		UGameEventParticipantStatsWidget_GetGameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventParticipantStatsWidget.FillLabels
	 * 		Flags  -> ()
	 */
	void UGameEventParticipantStatsWidget::FillLabels()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventParticipantStatsWidget.FillLabels");
		
		UGameEventParticipantStatsWidget_FillLabels_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventParticipantStatsWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventParticipantStatsWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventParticipantStatsWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventRoundInfoWidget.SetGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventRoundInfoWidget::SetGameEvent(class AGameEventBase* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventRoundInfoWidget.SetGameEvent");
		
		UGameEventRoundInfoWidget_SetGameEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventRoundInfoWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventRoundInfoWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventRoundInfoWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventScoreboardWidget.SetSelectedIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventScoreboardWidget::SetSelectedIndex(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventScoreboardWidget.SetSelectedIndex");
		
		UGameEventScoreboardWidget_SetSelectedIndex_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventScoreboardWidget.OnUpdate
	 * 		Flags  -> ()
	 */
	void UGameEventScoreboardWidget::OnUpdate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventScoreboardWidget.OnUpdate");
		
		UGameEventScoreboardWidget_OnUpdate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventScoreboardWidget.InitializeScoreboard
	 * 		Flags  -> ()
	 */
	void UGameEventScoreboardWidget::InitializeScoreboard()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventScoreboardWidget.InitializeScoreboard");
		
		UGameEventScoreboardWidget_InitializeScoreboard_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventScoreboardWidget.GetSelectedIndex
	 * 		Flags  -> ()
	 */
	int32_t UGameEventScoreboardWidget::GetSelectedIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventScoreboardWidget.GetSelectedIndex");
		
		UGameEventScoreboardWidget_GetSelectedIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventScoreboardWidget.CreateMini
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      statClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      teamHeaderClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGameEventScoreboardWidget* UGameEventScoreboardWidget::CreateMini(class AGameEventBase* gameEvent, class UClass* statClass, class UClass* teamHeaderClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventScoreboardWidget.CreateMini");
		
		UGameEventScoreboardWidget_CreateMini_Params params {};
		params.gameEvent = gameEvent;
		params.statClass = statClass;
		params.teamHeaderClass = teamHeaderClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventScoreboardWidget.Create
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      roundInfoClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      teamHeaderClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      statClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGameEventScoreboardWidget* UGameEventScoreboardWidget::Create(class AGameEventBase* gameEvent, class UClass* roundInfoClass, class UClass* teamHeaderClass, class UClass* statClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventScoreboardWidget.Create");
		
		UGameEventScoreboardWidget_Create_Params params {};
		params.gameEvent = gameEvent;
		params.roundInfoClass = roundInfoClass;
		params.teamHeaderClass = teamHeaderClass;
		params.statClass = statClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventScoreboardWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventScoreboardWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventScoreboardWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTeamHeaderWidget.SetGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGameEventBase*                              gameEvent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameEventTeamHeaderWidget::SetGameEvent(class AGameEventBase* gameEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTeamHeaderWidget.SetGameEvent");
		
		UGameEventTeamHeaderWidget_SetGameEvent_Params params {};
		params.gameEvent = gameEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTeamHeaderWidget.ClearWinCounters
	 * 		Flags  -> ()
	 */
	void UGameEventTeamHeaderWidget::ClearWinCounters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTeamHeaderWidget.ClearWinCounters");
		
		UGameEventTeamHeaderWidget_ClearWinCounters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTeamHeaderWidget.AddWinCounter
	 * 		Flags  -> ()
	 */
	void UGameEventTeamHeaderWidget::AddWinCounter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTeamHeaderWidget.AddWinCounter");
		
		UGameEventTeamHeaderWidget_AddWinCounter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameEventTeamHeaderWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameEventTeamHeaderWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventTeamHeaderWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.TravelToDestination
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Destination                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventTransport::TravelToDestination(const struct FVector& Destination)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.TravelToDestination");
		
		AGameEventTransport_TravelToDestination_Params params {};
		params.Destination = Destination;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.SkipToDestination
	 * 		Flags  -> ()
	 */
	void AGameEventTransport::SkipToDestination()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.SkipToDestination");
		
		AGameEventTransport_SkipToDestination_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.ReserveForPrisoner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventTransport::ReserveForPrisoner(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.ReserveForPrisoner");
		
		AGameEventTransport_ReserveForPrisoner_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.OnRep_TargetPosition
	 * 		Flags  -> ()
	 */
	void AGameEventTransport::OnRep_TargetPosition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.OnRep_TargetPosition");
		
		AGameEventTransport_OnRep_TargetPosition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.OnRep_LastPosition
	 * 		Flags  -> ()
	 */
	void AGameEventTransport::OnRep_LastPosition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.OnRep_LastPosition");
		
		AGameEventTransport_OnRep_LastPosition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.OnOrderComplete
	 * 		Flags  -> ()
	 */
	void AGameEventTransport::OnOrderComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.OnOrderComplete");
		
		AGameEventTransport_OnOrderComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.LeaveIsland
	 * 		Flags  -> ()
	 */
	void AGameEventTransport::LeaveIsland()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.LeaveIsland");
		
		AGameEventTransport_LeaveIsland_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.LandAtLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Destination                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGameEventTransport::LandAtLocation(const struct FVector& Destination)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.LandAtLocation");
		
		AGameEventTransport_LandAtLocation_Params params {};
		params.Destination = Destination;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.IsInteractable
	 * 		Flags  -> ()
	 */
	bool AGameEventTransport::IsInteractable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.IsInteractable");
		
		AGameEventTransport_IsInteractable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.GetReservedParticipant
	 * 		Flags  -> ()
	 */
	class APrisoner* AGameEventTransport::GetReservedParticipant()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.GetReservedParticipant");
		
		AGameEventTransport_GetReservedParticipant_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GameEventTransport.CancelOrder
	 * 		Flags  -> ()
	 */
	void AGameEventTransport::CancelOrder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GameEventTransport.CancelOrder");
		
		AGameEventTransport_CancelOrder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGameEventTransport.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGameEventTransport::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameEventTransport");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceConsumptionData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceConsumptionData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceConsumptionData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceContainerProxyRegistry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceContainerProxyRegistry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceContainerProxyRegistry");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceContainerProxyForInfiniteResource.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceContainerProxyForInfiniteResource::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceContainerProxyForInfiniteResource");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceContainerProxyForReplenishableResource.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceContainerProxyForReplenishableResource::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceContainerProxyForReplenishableResource");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceType_Liquid.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceType_Liquid::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceType_Liquid");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceType_Alcohol.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceType_Alcohol::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceType_Alcohol");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceType_Water.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceType_Water::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceType_Water");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceType_SoftDrink.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceType_SoftDrink::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceType_SoftDrink");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGameResourceType_Solid.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameResourceType_Solid::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GameResourceType_Solid");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Garden.OnRep_NumSlots
	 * 		Flags  -> ()
	 */
	void AGarden::OnRep_NumSlots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Garden.OnRep_NumSlots");
		
		AGarden_OnRep_NumSlots_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGarden.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGarden::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Garden");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GardenManager.UpdateDrawGardenPlacement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DrawTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGardenManager::UpdateDrawGardenPlacement(const struct FVector& Location, float DrawTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GardenManager.UpdateDrawGardenPlacement");
		
		AGardenManager_UpdateDrawGardenPlacement_Params params {};
		params.Location = Location;
		params.DrawTime = DrawTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GardenManager.ProjectViewpointToGround
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Point                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGardenManager::ProjectViewpointToGround(struct FVector* Point)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GardenManager.ProjectViewpointToGround");
		
		AGardenManager_ProjectViewpointToGround_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Point != nullptr)
			*Point = params.Point;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GardenManager.PlantAPlantAtLookedLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPlantSpecies*                               species                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGardenManager::PlantAPlantAtLookedLocation(class UPlantSpecies* species)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GardenManager.PlantAPlantAtLookedLocation");
		
		AGardenManager_PlantAPlantAtLookedLocation_Params params {};
		params.species = species;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GardenManager.PlaceGardenPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGardenManager::PlaceGardenPoint(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GardenManager.PlaceGardenPoint");
		
		AGardenManager_PlaceGardenPoint_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GardenManager.GenerateGardensInSquare
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIntPoint                                   countXY                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   distanceXY                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIntPoint                                   MinSize                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIntPoint                                   MaxSize                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGardenManager::GenerateGardensInSquare(const struct FVector& Location, const struct FIntPoint& countXY, const struct FVector2D& distanceXY, const struct FIntPoint& MinSize, const struct FIntPoint& MaxSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GardenManager.GenerateGardensInSquare");
		
		AGardenManager_GenerateGardensInSquare_Params params {};
		params.Location = Location;
		params.countXY = countXY;
		params.distanceXY = distanceXY;
		params.MinSize = MinSize;
		params.MaxSize = MaxSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GardenManager.GenerateGardensInRadius
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Spread                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIntPoint                                   MinSize                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIntPoint                                   MaxSize                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGardenManager::GenerateGardensInRadius(int32_t Count, const struct FVector& Location, float Spread, const struct FIntPoint& MinSize, const struct FIntPoint& MaxSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GardenManager.GenerateGardensInRadius");
		
		AGardenManager_GenerateGardensInRadius_Params params {};
		params.Count = Count;
		params.Location = Location;
		params.Spread = Spread;
		params.MinSize = MinSize;
		params.MaxSize = MaxSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GardenManager.ClearAllMeshInstances
	 * 		Flags  -> ()
	 */
	void AGardenManager::ClearAllMeshInstances()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GardenManager.ClearAllMeshInstances");
		
		AGardenManager_ClearAllMeshInstances_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GardenManager.AddWaterToPlantAtLookedLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGardenManager::AddWaterToPlantAtLookedLocation(float Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GardenManager.AddWaterToPlantAtLookedLocation");
		
		AGardenManager_AddWaterToPlantAtLookedLocation_Params params {};
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGardenManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGardenManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GardenManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGasMaskTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGasMaskTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GasMaskTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GhostTrailComponent.SetTrailActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Active                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGhostTrailComponent::SetTrailActive(bool Active)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GhostTrailComponent.SetTrailActive");
		
		UGhostTrailComponent_SetTrailActive_Params params {};
		params.Active = Active;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.GhostTrailComponent.GetTrailActive
	 * 		Flags  -> ()
	 */
	bool UGhostTrailComponent::GetTrailActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.GhostTrailComponent.GetTrailActive");
		
		UGhostTrailComponent_GetTrailActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGhostTrailComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGhostTrailComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GhostTrailComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGib.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGib::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Gib");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGlobalAnimalSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGlobalAnimalSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GlobalAnimalSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGlobalAquaticLifeManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGlobalAquaticLifeManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GlobalAquaticLifeManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGlobalBirdSpawner2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGlobalBirdSpawner2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GlobalBirdSpawner2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGlobalGuardedZoneManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGlobalGuardedZoneManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GlobalGuardedZoneManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGlobalItemSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGlobalItemSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GlobalItemSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGlobalUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGlobalUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GlobalUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGloveStatsTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGloveStatsTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GloveStatsTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGradedArcedProgressBar.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGradedArcedProgressBar::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GradedArcedProgressBar");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGraph2DWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGraph2DWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Graph2DWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGraphicsSettingsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGraphicsSettingsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GraphicsSettingsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGrappleActionComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGrappleActionComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GrappleActionComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGrappleActionParameters.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGrappleActionParameters::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GrappleActionParameters");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGrapplingWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGrapplingWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GrapplingWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGrenadeAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGrenadeAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GrenadeAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGuardedZoneManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGuardedZoneManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.GuardedZoneManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHandgunSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHandgunSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HandgunSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHandheldLightItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHandheldLightItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HandheldLightItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandheldLightItem.OnRep_LightIntensity
	 * 		Flags  -> ()
	 */
	void AHandheldLightItem::OnRep_LightIntensity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandheldLightItem.OnRep_LightIntensity");
		
		AHandheldLightItem_OnRep_LightIntensity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandheldLightItem.OnRep_CurrentLightAngleIndex
	 * 		Flags  -> ()
	 */
	void AHandheldLightItem::OnRep_CurrentLightAngleIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandheldLightItem.OnRep_CurrentLightAngleIndex");
		
		AHandheldLightItem_OnRep_CurrentLightAngleIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandheldLightItem.OnComponentDeactivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHandheldLightItem::OnComponentDeactivated(class UActorComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandheldLightItem.OnComponentDeactivated");
		
		AHandheldLightItem_OnComponentDeactivated_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandheldLightItem.OnComponentActivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               wasReset                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHandheldLightItem::OnComponentActivated(class UActorComponent* Component, bool wasReset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandheldLightItem.OnComponentActivated");
		
		AHandheldLightItem_OnComponentActivated_Params params {};
		params.Component = Component;
		params.wasReset = wasReset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandheldLightItem.GetCurrentLightAngle
	 * 		Flags  -> ()
	 */
	float AHandheldLightItem::GetCurrentLightAngle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandheldLightItem.GetCurrentLightAngle");
		
		AHandheldLightItem_GetCurrentLightAngle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandheldLightItem.BP_TurnOn
	 * 		Flags  -> ()
	 */
	void AHandheldLightItem::BP_TurnOn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandheldLightItem.BP_TurnOn");
		
		AHandheldLightItem_BP_TurnOn_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandheldLightItem.BP_TurnOff
	 * 		Flags  -> ()
	 */
	void AHandheldLightItem::BP_TurnOff()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandheldLightItem.BP_TurnOff");
		
		AHandheldLightItem_BP_TurnOff_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandheldLightItem.BP_OnCurrentLightIntensityChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHandheldLightItem::BP_OnCurrentLightIntensityChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandheldLightItem.BP_OnCurrentLightIntensityChanged");
		
		AHandheldLightItem_BP_OnCurrentLightIntensityChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandheldLightItem.BP_OnCurrentLightAngleChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHandheldLightItem::BP_OnCurrentLightAngleChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandheldLightItem.BP_OnCurrentLightAngleChanged");
		
		AHandheldLightItem_BP_OnCurrentLightAngleChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AHandheldLightItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AHandheldLightItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HandheldLightItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHandheldLightItemAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHandheldLightItemAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HandheldLightItemAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AHandheldSkeletalMeshLightItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AHandheldSkeletalMeshLightItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HandheldSkeletalMeshLightItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandPanel3.GetQuickAccessAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UQuickAccessItemSwitcher3* UHandPanel3::GetQuickAccessAt(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandPanel3.GetQuickAccessAt");
		
		UHandPanel3_GetQuickAccessAt_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHandPanel3.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHandPanel3::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HandPanel3");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryContainerWidget2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryContainerWidget2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryContainerWidget2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandsHolstersWidget2.OnFishingAttachmentRemoved
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingRod*                                 FishingRod                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHandsHolstersWidget2::OnFishingAttachmentRemoved(class AFishingRod* FishingRod, class AFishingAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandsHolstersWidget2.OnFishingAttachmentRemoved");
		
		UHandsHolstersWidget2_OnFishingAttachmentRemoved_Params params {};
		params.FishingRod = FishingRod;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandsHolstersWidget2.OnFishingAttachmentDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHandsHolstersWidget2::OnFishingAttachmentDestroyed(class AActor* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandsHolstersWidget2.OnFishingAttachmentDestroyed");
		
		UHandsHolstersWidget2_OnFishingAttachmentDestroyed_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandsHolstersWidget2.OnFishingAttachmentAdded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFishingRod*                                 FishingRod                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AFishingAttachment*                          attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHandsHolstersWidget2::OnFishingAttachmentAdded(class AFishingRod* FishingRod, class AFishingAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandsHolstersWidget2.OnFishingAttachmentAdded");
		
		UHandsHolstersWidget2_OnFishingAttachmentAdded_Params params {};
		params.FishingRod = FishingRod;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandsHolstersWidget2.OnAttachmentRemoved
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHandsHolstersWidget2::OnAttachmentRemoved(class AWeapon* Weapon, class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandsHolstersWidget2.OnAttachmentRemoved");
		
		UHandsHolstersWidget2_OnAttachmentRemoved_Params params {};
		params.Weapon = Weapon;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandsHolstersWidget2.OnAttachmentDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHandsHolstersWidget2::OnAttachmentDestroyed(class AActor* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandsHolstersWidget2.OnAttachmentDestroyed");
		
		UHandsHolstersWidget2_OnAttachmentDestroyed_Params params {};
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandsHolstersWidget2.OnAttachmentAdded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AWeaponAttachment*                           attachment                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHandsHolstersWidget2::OnAttachmentAdded(class AWeapon* Weapon, class AWeaponAttachment* attachment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandsHolstersWidget2.OnAttachmentAdded");
		
		UHandsHolstersWidget2_OnAttachmentAdded_Params params {};
		params.Weapon = Weapon;
		params.attachment = attachment;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandsHolstersWidget2.InitBlueprint
	 * 		Flags  -> ()
	 */
	void UHandsHolstersWidget2::InitBlueprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandsHolstersWidget2.InitBlueprint");
		
		UHandsHolstersWidget2_InitBlueprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HandsHolstersWidget2.Init
	 * 		Flags  -> ()
	 */
	void UHandsHolstersWidget2::Init()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HandsHolstersWidget2.Init");
		
		UHandsHolstersWidget2_Init_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHandsHolstersWidget2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHandsHolstersWidget2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HandsHolstersWidget2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHasCustomRadialDamageHandler.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHasCustomRadialDamageHandler::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HasCustomRadialDamageHandler");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HasLadderMarkersInterface.GetLadderMarkers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FLadderMarker>                       Result                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UHasLadderMarkersInterface::GetLadderMarkers(TArray<struct FLadderMarker>* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HasLadderMarkersInterface.GetLadderMarkers");
		
		UHasLadderMarkersInterface_GetLadderMarkers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Result != nullptr)
			*Result = params.Result;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHasLadderMarkersInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHasLadderMarkersInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HasLadderMarkersInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHasOwningUser.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHasOwningUser::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HasOwningUser");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHasProcessViewRotation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHasProcessViewRotation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HasProcessViewRotation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HasWindowMarkersInterface.GetWindowMarkers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FWindowMarker>                       Result                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UHasWindowMarkersInterface::GetWindowMarkers(TArray<struct FWindowMarker>* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HasWindowMarkersInterface.GetWindowMarkers");
		
		UHasWindowMarkersInterface_GetWindowMarkers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Result != nullptr)
			*Result = params.Result;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHasWindowMarkersInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHasWindowMarkersInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HasWindowMarkersInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HealthWidget.SetMaxHealthPercentage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHealthWidget::SetMaxHealthPercentage(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HealthWidget.SetMaxHealthPercentage");
		
		UHealthWidget_SetMaxHealthPercentage_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HealthWidget.SetHealthPercentage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHealthWidget::SetHealthPercentage(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HealthWidget.SetHealthPercentage");
		
		UHealthWidget_SetHealthPercentage_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHealthWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHealthWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HealthWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.SetSourceParameters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHeatSourceParameters                       parameters                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AHeatSourceManager::SetSourceParameters(const struct FDbIntegerId& ID, const struct FHeatSourceParameters& parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.SetSourceParameters");
		
		AHeatSourceManager_SetSourceParameters_Params params {};
		params.ID = ID;
		params.parameters = parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.SetSourceLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHeatSourceManager::SetSourceLocation(const struct FDbIntegerId& ID, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.SetSourceLocation");
		
		AHeatSourceManager_SetSourceLocation_Params params {};
		params.ID = ID;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.SetFuelDuration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Amount                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHeatSourceManager::SetFuelDuration(const struct FDbIntegerId& ID, float Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.SetFuelDuration");
		
		AHeatSourceManager_SetFuelDuration_Params params {};
		params.ID = ID;
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.SetFuelCapacity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Amount                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHeatSourceManager::SetFuelCapacity(const struct FDbIntegerId& ID, float Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.SetFuelCapacity");
		
		AHeatSourceManager_SetFuelCapacity_Params params {};
		params.ID = ID;
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.IsSourceValid
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AHeatSourceManager::IsSourceValid(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.IsSourceValid");
		
		AHeatSourceManager_IsSourceValid_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.GetSourceParameters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHeatSourceParameters                       parameters                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool AHeatSourceManager::GetSourceParameters(const struct FDbIntegerId& ID, struct FHeatSourceParameters* parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.GetSourceParameters");
		
		AHeatSourceManager_GetSourceParameters_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (parameters != nullptr)
			*parameters = params.parameters;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.GetSourceLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector AHeatSourceManager::GetSourceLocation(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.GetSourceLocation");
		
		AHeatSourceManager_GetSourceLocation_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.GetHeatTemperature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AHeatSourceManager::GetHeatTemperature(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.GetHeatTemperature");
		
		AHeatSourceManager_GetHeatTemperature_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.GetFuelDuration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AHeatSourceManager::GetFuelDuration(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.GetFuelDuration");
		
		AHeatSourceManager_GetFuelDuration_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HeatSourceManager.GetFuelCapacity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AHeatSourceManager::GetFuelCapacity(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HeatSourceManager.GetFuelCapacity");
		
		AHeatSourceManager_GetFuelCapacity_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AHeatSourceManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AHeatSourceManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HeatSourceManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AHeatSourceMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AHeatSourceMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HeatSourceMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHeatSourceMarkersComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHeatSourceMarkersComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HeatSourceMarkersComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.RecoverFromRagdollImmediately
	 * 		Flags  -> ()
	 */
	void UHitReactComponent::RecoverFromRagdollImmediately()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.RecoverFromRagdollImmediately");
		
		UHitReactComponent_RecoverFromRagdollImmediately_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.RecoverFromRagdoll
	 * 		Flags  -> ()
	 */
	void UHitReactComponent::RecoverFromRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.RecoverFromRagdoll");
		
		UHitReactComponent_RecoverFromRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.OnRep_ServerRagdollLocation
	 * 		Flags  -> ()
	 */
	void UHitReactComponent::OnRep_ServerRagdollLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.OnRep_ServerRagdollLocation");
		
		UHitReactComponent_OnRep_ServerRagdollLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.OnRep_RagdollTransitionState
	 * 		Flags  -> ()
	 */
	void UHitReactComponent::OnRep_RagdollTransitionState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.OnRep_RagdollTransitionState");
		
		UHitReactComponent_OnRep_RagdollTransitionState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.OnMontageBlendingOut
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHitReactComponent::OnMontageBlendingOut(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.OnMontageBlendingOut");
		
		UHitReactComponent_OnMontageBlendingOut_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.MoveRagdollMesh
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         MeshComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     currentLocation                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     TargetLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHitReactComponent::MoveRagdollMesh(class UPrimitiveComponent* MeshComponent, const struct FVector& currentLocation, const struct FVector& TargetLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.MoveRagdollMesh");
		
		UHitReactComponent_MoveRagdollMesh_Params params {};
		params.MeshComponent = MeshComponent;
		params.currentLocation = currentLocation;
		params.TargetLocation = TargetLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.IsRagdollAtRest
	 * 		Flags  -> ()
	 */
	bool UHitReactComponent::IsRagdollAtRest()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.IsRagdollAtRest");
		
		UHitReactComponent_IsRagdollAtRest_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.IsPlayingGetUpMontage
	 * 		Flags  -> ()
	 */
	bool UHitReactComponent::IsPlayingGetUpMontage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.IsPlayingGetUpMontage");
		
		UHitReactComponent_IsPlayingGetUpMontage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.IsInRagdoll
	 * 		Flags  -> ()
	 */
	bool UHitReactComponent::IsInRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.IsInRagdoll");
		
		UHitReactComponent_IsInRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.IsCapsuleOverlapped
	 * 		Flags  -> ()
	 */
	bool UHitReactComponent::IsCapsuleOverlapped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.IsCapsuleOverlapped");
		
		UHitReactComponent_IsCapsuleOverlapped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.IsBlendingRagdoll
	 * 		Flags  -> ()
	 */
	bool UHitReactComponent::IsBlendingRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.IsBlendingRagdoll");
		
		UHitReactComponent_IsBlendingRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.GoToRagdoll
	 * 		Flags  -> ()
	 */
	void UHitReactComponent::GoToRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.GoToRagdoll");
		
		UHitReactComponent_GoToRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.GetPelvisRotation
	 * 		Flags  -> ()
	 */
	struct FQuat UHitReactComponent::GetPelvisRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.GetPelvisRotation");
		
		UHitReactComponent_GetPelvisRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.GetPelvisBoneName
	 * 		Flags  -> ()
	 */
	class FName UHitReactComponent::GetPelvisBoneName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.GetPelvisBoneName");
		
		UHitReactComponent_GetPelvisBoneName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.CanRecoverFromRagdoll
	 * 		Flags  -> ()
	 */
	bool UHitReactComponent::CanRecoverFromRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.CanRecoverFromRagdoll");
		
		UHitReactComponent_CanRecoverFromRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HitReactComponent.ApplyPhysicalAnimationData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPhysicalAnimationDesc                      desc                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UHitReactComponent::ApplyPhysicalAnimationData(const struct FPhysicalAnimationDesc& desc)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HitReactComponent.ApplyPhysicalAnimationData");
		
		UHitReactComponent_ApplyPhysicalAnimationData_Params params {};
		params.desc = desc;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHitReactComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHitReactComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HitReactComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHitReactLandingParams.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHitReactLandingParams::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HitReactLandingParams");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHitReactMapping.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHitReactMapping::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HitReactMapping");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HoverPanelWidget.SetWorldPosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHoverPanelWidget::SetWorldPosition(const struct FVector& position)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HoverPanelWidget.SetWorldPosition");
		
		UHoverPanelWidget_SetWorldPosition_Params params {};
		params.position = position;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HoverPanelWidget.SetScreenPosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHoverPanelWidget::SetScreenPosition(const struct FVector2D& position)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HoverPanelWidget.SetScreenPosition");
		
		UHoverPanelWidget_SetScreenPosition_Params params {};
		params.position = position;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HoverPanelWidget.GetContentBox
	 * 		Flags  -> ()
	 */
	class UVerticalBox* UHoverPanelWidget::GetContentBox()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HoverPanelWidget.GetContentBox");
		
		UHoverPanelWidget_GetContentBox_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HoverPanelWidget.ClearPanel
	 * 		Flags  -> ()
	 */
	void UHoverPanelWidget::ClearPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HoverPanelWidget.ClearPanel");
		
		UHoverPanelWidget_ClearPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHoverPanelWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHoverPanelWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HoverPanelWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AHUD_John.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AHUD_John::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HUD_John");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHUDNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHUDNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HUDNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHUDNotificationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHUDNotificationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HUDNotificationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.UpdateUpdateableNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      notificationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::UpdateUpdateableNotification(const class FString& notificationName, const class FString& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.UpdateUpdateableNotification");
		
		UHudWidget_UpdateUpdateableNotification_Params params {};
		params.notificationName = notificationName;
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.UpdateHUDElementVisibility
	 * 		Flags  -> ()
	 */
	void UHudWidget::UpdateHUDElementVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.UpdateHUDElementVisibility");
		
		UHudWidget_UpdateHUDElementVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.UpdateAttributesHistory
	 * 		Flags  -> ()
	 */
	void UHudWidget::UpdateAttributesHistory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.UpdateAttributesHistory");
		
		UHudWidget_UpdateAttributesHistory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ToggleMonitorsVisibility
	 * 		Flags  -> ()
	 */
	void UHudWidget::ToggleMonitorsVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ToggleMonitorsVisibility");
		
		UHudWidget_ToggleMonitorsVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.SwitchTabMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::SwitchTabMode(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.SwitchTabMode");
		
		UHudWidget_SwitchTabMode_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.StartUpdateableNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUpdateableNotificationDescription*          Description                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::StartUpdateableNotification(class UUpdateableNotificationDescription* Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.StartUpdateableNotification");
		
		UHudWidget_StartUpdateableNotification_Params params {};
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ShowWarningMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLinearColor                                TextColor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::ShowWarningMessage(const class FString& Message, float Duration, const struct FLinearColor& TextColor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ShowWarningMessage");
		
		UHudWidget_ShowWarningMessage_Params params {};
		params.Message = Message;
		params.Duration = Duration;
		params.TextColor = TextColor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ShowTrapsDetectedNotification
	 * 		Flags  -> ()
	 */
	void UHudWidget::ShowTrapsDetectedNotification()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ShowTrapsDetectedNotification");
		
		UHudWidget_ShowTrapsDetectedNotification_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ShowNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBasicNotificationDescription*               Description                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::ShowNotification(class UBasicNotificationDescription* Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ShowNotification");
		
		UHudWidget_ShowNotification_Params params {};
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ShowLevelUpNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USkill*                                      Skill                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESkillLevel                                        skillLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::ShowLevelUpNotification(class USkill* Skill, ESkillLevel skillLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ShowLevelUpNotification");
		
		UHudWidget_ShowLevelUpNotification_Params params {};
		params.Skill = Skill;
		params.skillLevel = skillLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ShowKillFeedNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        prefix                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        characterName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        suffix                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               ping                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::ShowKillFeedNotification(const class FText& prefix, const class FText& characterName, const class FText& suffix, bool ping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ShowKillFeedNotification");
		
		UHudWidget_ShowKillFeedNotification_Params params {};
		params.prefix = prefix;
		params.characterName = characterName;
		params.suffix = suffix;
		params.ping = ping;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ShouldSerializeWidgetLayout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWidget*                                     Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UHudWidget::ShouldSerializeWidgetLayout(class UWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ShouldSerializeWidgetLayout");
		
		UHudWidget_ShouldSerializeWidgetLayout_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.SetTabModeTabIsAlerted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::SetTabModeTabIsAlerted(int32_t Index, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.SetTabModeTabIsAlerted");
		
		UHudWidget_SetTabModeTabIsAlerted_Params params {};
		params.Index = Index;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.SetTabEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ETabMode                                           Tab                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::SetTabEnabled(ETabMode Tab, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.SetTabEnabled");
		
		UHudWidget_SetTabEnabled_Params params {};
		params.Tab = Tab;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.SetPrisoner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::SetPrisoner(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.SetPrisoner");
		
		UHudWidget_SetPrisoner_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.SetMainCanvasVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Visible                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::SetMainCanvasVisibility(bool Visible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.SetMainCanvasVisibility");
		
		UHudWidget_SetMainCanvasVisibility_Params params {};
		params.Visible = Visible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.SaveLayout
	 * 		Flags  -> ()
	 */
	bool UHudWidget::SaveLayout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.SaveLayout");
		
		UHudWidget_SaveLayout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ResetLayout
	 * 		Flags  -> ()
	 */
	void UHudWidget::ResetLayout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ResetLayout");
		
		UHudWidget_ResetLayout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.RemoveTeammateName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::RemoveTeammateName(const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.RemoveTeammateName");
		
		UHudWidget_RemoveTeammateName_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.OnPrisonerChanged
	 * 		Flags  -> ()
	 */
	void UHudWidget::OnPrisonerChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.OnPrisonerChanged");
		
		UHudWidget_OnPrisonerChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.LoadLayout
	 * 		Flags  -> ()
	 */
	bool UHudWidget::LoadLayout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.LoadLayout");
		
		UHudWidget_LoadLayout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.IsSkydivingHUDActive
	 * 		Flags  -> ()
	 */
	bool UHudWidget::IsSkydivingHUDActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.IsSkydivingHUDActive");
		
		UHudWidget_IsSkydivingHUDActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.IsHUDVisible
	 * 		Flags  -> ()
	 */
	bool UHudWidget::IsHUDVisible()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.IsHUDVisible");
		
		UHudWidget_IsHUDVisible_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetVicinityPanel
	 * 		Flags  -> ()
	 */
	class UVicinityPanel3* UHudWidget::GetVicinityPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetVicinityPanel");
		
		UHudWidget_GetVicinityPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetTopLevelPanelWidget
	 * 		Flags  -> ()
	 */
	class UPanelWidget* UHudWidget::GetTopLevelPanelWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetTopLevelPanelWidget");
		
		UHudWidget_GetTopLevelPanelWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetSquadPanelWidget
	 * 		Flags  -> ()
	 */
	class USquadPanelWidget* UHudWidget::GetSquadPanelWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetSquadPanelWidget");
		
		UHudWidget_GetSquadPanelWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetScreenSpaceHealthWidget
	 * 		Flags  -> ()
	 */
	class UScreenSpaceHealthWidget* UHudWidget::GetScreenSpaceHealthWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetScreenSpaceHealthWidget");
		
		UHudWidget_GetScreenSpaceHealthWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetPrisonerLifeIndicatorsSprite
	 * 		Flags  -> ()
	 */
	class UPrisonerLifeIndicatorsSprite* UHudWidget::GetPrisonerLifeIndicatorsSprite()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetPrisonerLifeIndicatorsSprite");
		
		UHudWidget_GetPrisonerLifeIndicatorsSprite_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetPrisoner
	 * 		Flags  -> ()
	 */
	class APrisoner* UHudWidget::GetPrisoner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetPrisoner");
		
		UHudWidget_GetPrisoner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetObjectivesContainer
	 * 		Flags  -> ()
	 */
	class UObjectivesContainerWidget* UHudWidget::GetObjectivesContainer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetObjectivesContainer");
		
		UHudWidget_GetObjectivesContainer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetMusicPlayerDisplayWidget
	 * 		Flags  -> ()
	 */
	class UMusicPlayerDisplayWidget* UHudWidget::GetMusicPlayerDisplayWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetMusicPlayerDisplayWidget");
		
		UHudWidget_GetMusicPlayerDisplayWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetMissionResultWidget
	 * 		Flags  -> ()
	 */
	class UMissionResult* UHudWidget::GetMissionResultWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetMissionResultWidget");
		
		UHudWidget_GetMissionResultWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetMainCanvasVisibility
	 * 		Flags  -> ()
	 */
	bool UHudWidget::GetMainCanvasVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetMainCanvasVisibility");
		
		UHudWidget_GetMainCanvasVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetJournalPanelWidget
	 * 		Flags  -> ()
	 */
	class UJournalPanelWidget* UHudWidget::GetJournalPanelWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetJournalPanelWidget");
		
		UHudWidget_GetJournalPanelWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetInventoryPanel
	 * 		Flags  -> ()
	 */
	class UInventoryPanelThirdIteration* UHudWidget::GetInventoryPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetInventoryPanel");
		
		UHudWidget_GetInventoryPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetHandPanel
	 * 		Flags  -> ()
	 */
	class UHandPanel3* UHudWidget::GetHandPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetHandPanel");
		
		UHudWidget_GetHandPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetGrapplingWidget
	 * 		Flags  -> ()
	 */
	class UGrapplingWidget* UHudWidget::GetGrapplingWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetGrapplingWidget");
		
		UHudWidget_GetGrapplingWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetFishingTrophyWidget
	 * 		Flags  -> ()
	 */
	class UFishingTrophyWidget* UHudWidget::GetFishingTrophyWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetFishingTrophyWidget");
		
		UHudWidget_GetFishingTrophyWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetFishingContainerWidget
	 * 		Flags  -> ()
	 */
	class UFishingContainerWidget* UHudWidget::GetFishingContainerWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetFishingContainerWidget");
		
		UHudWidget_GetFishingContainerWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetDialogueContainerWidget
	 * 		Flags  -> ()
	 */
	class UDialogueContainerWidget* UHudWidget::GetDialogueContainerWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetDialogueContainerWidget");
		
		UHudWidget_GetDialogueContainerWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetCraftingPanel
	 * 		Flags  -> ()
	 */
	class UCraftingPanelWidget* UHudWidget::GetCraftingPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetCraftingPanel");
		
		UHudWidget_GetCraftingPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetCompassWidget
	 * 		Flags  -> ()
	 */
	class UCompassWidget* UHudWidget::GetCompassWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetCompassWidget");
		
		UHudWidget_GetCompassWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetBreathingBarLungsWidget
	 * 		Flags  -> ()
	 */
	class UBreathingBarLungsWidget* UHudWidget::GetBreathingBarLungsWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetBreathingBarLungsWidget");
		
		UHudWidget_GetBreathingBarLungsWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetBCURightPanel
	 * 		Flags  -> ()
	 */
	class UUserWidget* UHudWidget::GetBCURightPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetBCURightPanel");
		
		UHudWidget_GetBCURightPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.GetBCULeftPanel
	 * 		Flags  -> ()
	 */
	class UUserWidget* UHudWidget::GetBCULeftPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.GetBCULeftPanel");
		
		UHudWidget_GetBCULeftPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ClearTeammateNames
	 * 		Flags  -> ()
	 */
	void UHudWidget::ClearTeammateNames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ClearTeammateNames");
		
		UHudWidget_ClearTeammateNames_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.ClearNotifications
	 * 		Flags  -> ()
	 */
	void UHudWidget::ClearNotifications()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.ClearNotifications");
		
		UHudWidget_ClearNotifications_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.AddWarning
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWarningType                                       warningType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               playSounds                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::AddWarning(EWarningType warningType, bool playSounds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.AddWarning");
		
		UHudWidget_AddWarning_Params params {};
		params.warningType = warningType;
		params.playSounds = playSounds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.AddTeammateName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::AddTeammateName(const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.AddTeammateName");
		
		UHudWidget_AddTeammateName_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.AddMessageWithColor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHUDMessageType                                    Type                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLinearColor                                Color                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::AddMessageWithColor(EHUDMessageType Type, const class FText& Text, float Duration, const struct FLinearColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.AddMessageWithColor");
		
		UHudWidget_AddMessageWithColor_Params params {};
		params.Type = Type;
		params.Text = Text;
		params.Duration = Duration;
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.AddMessageToScreen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               beep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLinearColor                                Color                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::AddMessageToScreen(const class FText& Text, bool beep, const struct FLinearColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.AddMessageToScreen");
		
		UHudWidget_AddMessageToScreen_Params params {};
		params.Text = Text;
		params.beep = beep;
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.HudWidget.AddChatLine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      string                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EChatType                                          ChatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudWidget::AddChatLine(const class FString& string, EChatType ChatType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.HudWidget.AddChatLine");
		
		UHudWidget_AddChatLine_Params params {};
		params.string = string;
		params.ChatType = ChatType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHudWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHudWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HudWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIndexedHierarchicalInstancedStaticMeshComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIndexedHierarchicalInstancedStaticMeshComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.IndexedHierarchicalInstancedStaticMeshComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInfiniteResourceAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInfiniteResourceAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InfiniteResourceAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIngredientEmptyCraftingCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIngredientEmptyCraftingCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.IngredientEmptyCraftingCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInjectableSubstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInjectableSubstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InjectableSubstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInputDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInputDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InputDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.RevertControlChanges
	 * 		Flags  -> ()
	 */
	void UInputWidget::RevertControlChanges()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.RevertControlChanges");
		
		UInputWidget_RevertControlChanges_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.ResetControlsToDefault
	 * 		Flags  -> ()
	 */
	void UInputWidget::ResetControlsToDefault()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.ResetControlsToDefault");
		
		UInputWidget_ResetControlsToDefault_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.InitKeyBindings
	 * 		Flags  -> ()
	 */
	void UInputWidget::InitKeyBindings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.InitKeyBindings");
		
		UInputWidget_InitKeyBindings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.GetAxisMappings
	 * 		Flags  -> ()
	 */
	TArray<struct FInputAxisKeyMapping> UInputWidget::GetAxisMappings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.GetAxisMappings");
		
		UInputWidget_GetAxisMappings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.GetAxisMappingForAxisName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        AxisName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Scale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FInputAxisKeyMapping UInputWidget::GetAxisMappingForAxisName(const class FName& AxisName, float Scale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.GetAxisMappingForAxisName");
		
		UInputWidget_GetAxisMappingForAxisName_Params params {};
		params.AxisName = AxisName;
		params.Scale = Scale;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.GetActionMappings
	 * 		Flags  -> ()
	 */
	TArray<struct FInputActionKeyMapping> UInputWidget::GetActionMappings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.GetActionMappings");
		
		UInputWidget_GetActionMappings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.GetActionMappingForActionName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FInputActionKeyMapping UInputWidget::GetActionMappingForActionName(const class FName& ActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.GetActionMappingForActionName");
		
		UInputWidget_GetActionMappingForActionName_Params params {};
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.ChangeAxisMapping
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        AxisName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FKey                                        Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Scale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputWidget::ChangeAxisMapping(const class FName& AxisName, const struct FKey& Key, float Scale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.ChangeAxisMapping");
		
		UInputWidget_ChangeAxisMapping_Params params {};
		params.AxisName = AxisName;
		params.Key = Key;
		params.Scale = Scale;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.ChangeActionMapping
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FKey                                        Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputWidget::ChangeActionMapping(const class FName& ActionName, const struct FKey& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.ChangeActionMapping");
		
		UInputWidget_ChangeActionMapping_Params params {};
		params.ActionName = ActionName;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InputWidget.ApplyControlChanges
	 * 		Flags  -> ()
	 */
	void UInputWidget::ApplyControlChanges()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InputWidget.ApplyControlChanges");
		
		UInputWidget_ApplyControlChanges_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInputWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInputWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InputWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInsertCartridge.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInsertCartridge::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InsertCartridge");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInsertCartridgeIntoMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInsertCartridgeIntoMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InsertCartridgeIntoMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InsertMagazine.IsMagazineToLoadEmpty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWeaponReloadData                           Data                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UInsertMagazine::IsMagazineToLoadEmpty(const struct FWeaponReloadData& Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InsertMagazine.IsMagazineToLoadEmpty");
		
		UInsertMagazine_IsMagazineToLoadEmpty_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInsertMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInsertMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InsertMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInsertMagazineInsertCartridge.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInsertMagazineInsertCartridge::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InsertMagazineInsertCartridge");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InspectedItemWidget.SetIsToolForSomething
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsTool                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInspectedItemWidget::SetIsToolForSomething(bool IsTool)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InspectedItemWidget.SetIsToolForSomething");
		
		UInspectedItemWidget_SetIsToolForSomething_Params params {};
		params.IsTool = IsTool;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInspectedItemWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInspectedItemWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InspectedItemWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AInstrumentItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AInstrumentItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InstrumentItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.OnHovered
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableInterface::OnHovered(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.OnHovered");
		
		UInteractableInterface_OnHovered_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.IsAbleToInteractWithItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UInteractableInterface::IsAbleToInteractWithItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.IsAbleToInteractWithItem");
		
		UInteractableInterface_IsAbleToInteractWithItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.InteractWithItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInteractionType                                   interactionType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionData                            InteractionData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UInteractableInterface::InteractWithItem(class APlayerController* PlayerController, class AItem* Item, EInteractionType interactionType, const struct FInteractionData& InteractionData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.InteractWithItem");
		
		UInteractableInterface_InteractWithItem_Params params {};
		params.PlayerController = PlayerController;
		params.Item = Item;
		params.interactionType = interactionType;
		params.InteractionData = InteractionData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.Interact
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   User                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInteractionType                                   interactionType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionData                            InteractionData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UInteractableInterface::Interact(class APrisoner* User, EInteractionType interactionType, const struct FInteractionData& InteractionData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.Interact");
		
		UInteractableInterface_Interact_Params params {};
		params.User = User;
		params.interactionType = interactionType;
		params.InteractionData = InteractionData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.GetStateForInteractionWithItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EInteractionState UInteractableInterface::GetStateForInteractionWithItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.GetStateForInteractionWithItem");
		
		UInteractableInterface_GetStateForInteractionWithItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.GetInteractionsWithItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     User                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FInteractionStruct> UInteractableInterface::GetInteractionsWithItem(class UObject* User, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.GetInteractionsWithItem");
		
		UInteractableInterface_GetInteractionsWithItem_Params params {};
		params.User = User;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.GetInteractions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     User                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     creator                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionQueryParameters                 Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	TArray<struct FInteractionStruct> UInteractableInterface::GetInteractions(class UObject* User, class UObject* creator, const struct FInteractionQueryParameters& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.GetInteractions");
		
		UInteractableInterface_GetInteractions_Params params {};
		params.User = User;
		params.creator = creator;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.GetInteractionHint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     User                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UInteractableInterface::GetInteractionHint(class UObject* User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.GetInteractionHint");
		
		UInteractableInterface_GetInteractionHint_Params params {};
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.GetInteractableName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     User                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UInteractableInterface::GetInteractableName(class UObject* User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.GetInteractableName");
		
		UInteractableInterface_GetInteractableName_Params params {};
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.GetDefaultInteractionForPrisoner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionQueryParameters                 Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	struct FInteractionStruct UInteractableInterface::GetDefaultInteractionForPrisoner(class APrisoner* Prisoner, const struct FInteractionQueryParameters& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.GetDefaultInteractionForPrisoner");
		
		UInteractableInterface_GetDefaultInteractionForPrisoner_Params params {};
		params.Prisoner = Prisoner;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.GetDefaultInteractionForDrone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADrone*                                      Drone                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionQueryParameters                 Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	struct FInteractionStruct UInteractableInterface::GetDefaultInteractionForDrone(class ADrone* Drone, const struct FInteractionQueryParameters& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.GetDefaultInteractionForDrone");
		
		UInteractableInterface_GetDefaultInteractionForDrone_Params params {};
		params.Drone = Drone;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractableInterface.CanInteract
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   User                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UInteractableInterface::CanInteract(class APrisoner* User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractableInterface.CanInteract");
		
		UInteractableInterface_CanInteract_Params params {};
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteractableInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractableInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteractableInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.UseItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Usage                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              usageWeight                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Eat                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::UseItemOnServer(class AItem* Item, int32_t Usage, float usageWeight, bool Eat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.UseItemOnServer");
		
		UInteractionComponent_UseItemOnServer_Params params {};
		params.Item = Item;
		params.Usage = Usage;
		params.usageWeight = usageWeight;
		params.Eat = Eat;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.UpdateItemDataOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::UpdateItemDataOnServer(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.UpdateItemDataOnServer");
		
		UInteractionComponent_UpdateItemDataOnServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.UpdateExistenceOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Exists                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::UpdateExistenceOnClient(bool Exists)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.UpdateExistenceOnClient");
		
		UInteractionComponent_UpdateExistenceOnClient_Params params {};
		params.Exists = Exists;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.UnspawnExaminedItemsOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               destroyItems                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::UnspawnExaminedItemsOnServer(bool destroyItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.UnspawnExaminedItemsOnServer");
		
		UInteractionComponent_UnspawnExaminedItemsOnServer_Params params {};
		params.destroyItems = destroyItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.UnexamineItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::UnexamineItemOnServer(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.UnexamineItemOnServer");
		
		UInteractionComponent_UnexamineItemOnServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.UnexamineItemOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::UnexamineItemOnClient(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.UnexamineItemOnClient");
		
		UInteractionComponent_UnexamineItemOnClient_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.UncraftItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::UncraftItemOnServer(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.UncraftItemOnServer");
		
		UInteractionComponent_UncraftItemOnServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.StopExamining
	 * 		Flags  -> ()
	 */
	void UInteractionComponent::StopExamining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.StopExamining");
		
		UInteractionComponent_StopExamining_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.Server_UpdateLockHPOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Lockpickable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LockHP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::Server_UpdateLockHPOnServer(class UObject* Lockpickable, float LockHP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.Server_UpdateLockHPOnServer");
		
		UInteractionComponent_Server_UpdateLockHPOnServer_Params params {};
		params.Lockpickable = Lockpickable;
		params.LockHP = LockHP;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.Server_RemoveLockOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Lockpickable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::Server_RemoveLockOnServer(class UObject* Lockpickable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.Server_RemoveLockOnServer");
		
		UInteractionComponent_Server_RemoveLockOnServer_Params params {};
		params.Lockpickable = Lockpickable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.PickupItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMeshComponent*                              MeshComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMeshInstanceId                             InstanceId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UStaticMesh*                                 StaticMesh                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     pickupLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EPickupItemOperation                               Operation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::PickupItemOnServer(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId, class UStaticMesh* StaticMesh, const struct FVector& pickupLocation, EPickupItemOperation Operation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.PickupItemOnServer");
		
		UInteractionComponent_PickupItemOnServer_Params params {};
		params.MeshComponent = MeshComponent;
		params.InstanceId = InstanceId;
		params.StaticMesh = StaticMesh;
		params.pickupLocation = pickupLocation;
		params.Operation = Operation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.PickupItemOnClients
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMeshComponent*                              MeshComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMeshInstanceId                             InstanceId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UStaticMesh*                                 StaticMesh                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     pickupLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::PickupItemOnClients(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId, class UStaticMesh* StaticMesh, const struct FVector& pickupLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.PickupItemOnClients");
		
		UInteractionComponent_PickupItemOnClients_Params params {};
		params.MeshComponent = MeshComponent;
		params.InstanceId = InstanceId;
		params.StaticMesh = StaticMesh;
		params.pickupLocation = pickupLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.OpenItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AFoodItem*                                   FoodItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       openingItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::OpenItemOnServer(class AFoodItem* FoodItem, class AItem* openingItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.OpenItemOnServer");
		
		UInteractionComponent_OpenItemOnServer_Params params {};
		params.FoodItem = FoodItem;
		params.openingItem = openingItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.OnRep_PickupSpawnedItem
	 * 		Flags  -> ()
	 */
	void UInteractionComponent::OnRep_PickupSpawnedItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.OnRep_PickupSpawnedItem");
		
		UInteractionComponent_OnRep_PickupSpawnedItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.OnRep_ExamineSpawnedItems
	 * 		Flags  -> ()
	 */
	void UInteractionComponent::OnRep_ExamineSpawnedItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.OnRep_ExamineSpawnedItems");
		
		UInteractionComponent_OnRep_ExamineSpawnedItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.NetMulticast_UpdateLockHPOnClients
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Lockpickable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LockHP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::NetMulticast_UpdateLockHPOnClients(class UObject* Lockpickable, float LockHP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.NetMulticast_UpdateLockHPOnClients");
		
		UInteractionComponent_NetMulticast_UpdateLockHPOnClients_Params params {};
		params.Lockpickable = Lockpickable;
		params.LockHP = LockHP;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.InteractWithBaseElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EInteractionType                                   interactionType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FConZBaseInteractionData                    baseData                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FConZBaseElementInteractionData             elementData                                                (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::InteractWithBaseElement(EInteractionType interactionType, const struct FConZBaseInteractionData& baseData, const struct FConZBaseElementInteractionData& elementData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.InteractWithBaseElement");
		
		UInteractionComponent_InteractWithBaseElement_Params params {};
		params.interactionType = interactionType;
		params.baseData = baseData;
		params.elementData = elementData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.FinishPickupItemOnServer
	 * 		Flags  -> ()
	 */
	void UInteractionComponent::FinishPickupItemOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.FinishPickupItemOnServer");
		
		UInteractionComponent_FinishPickupItemOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.FinishExaminePrisonerOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::FinishExaminePrisonerOnServer(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.FinishExaminePrisonerOnServer");
		
		UInteractionComponent_FinishExaminePrisonerOnServer_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.FinishExamineObjectOnServer
	 * 		Flags  -> ()
	 */
	void UInteractionComponent::FinishExamineObjectOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.FinishExamineObjectOnServer");
		
		UInteractionComponent_FinishExamineObjectOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.FillWaterOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Ratio                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Salinity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ResourceType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::FillWaterOnServer(class AItem* Item, float Ratio, float Salinity, class UClass* ResourceType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.FillWaterOnServer");
		
		UInteractionComponent_FillWaterOnServer_Params params {};
		params.Item = Item;
		params.Ratio = Ratio;
		params.Salinity = Salinity;
		params.ResourceType = ResourceType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.ExecuteInteractionOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       interactionItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInteractionType                                   Interaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FServerCraftableItem                        CraftableItem                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::ExecuteInteractionOnServer(class AItem* interactionItem, EInteractionType Interaction, const struct FServerCraftableItem& CraftableItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.ExecuteInteractionOnServer");
		
		UInteractionComponent_ExecuteInteractionOnServer_Params params {};
		params.interactionItem = interactionItem;
		params.Interaction = Interaction;
		params.CraftableItem = CraftableItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.ExaminePrisonerOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::ExaminePrisonerOnServer(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.ExaminePrisonerOnServer");
		
		UInteractionComponent_ExaminePrisonerOnServer_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.ExamineObjectOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMeshComponent*                              MeshComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMeshInstanceId                             InstanceId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     instanceLocation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::ExamineObjectOnServer(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId, const struct FVector& instanceLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.ExamineObjectOnServer");
		
		UInteractionComponent_ExamineObjectOnServer_Params params {};
		params.MeshComponent = MeshComponent;
		params.InstanceId = InstanceId;
		params.instanceLocation = instanceLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.CutObjectOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UMeshComponent*                              MeshComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMeshInstanceId                             InstanceId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               collectOnly                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::CutObjectOnServer(class AActor* Actor, class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId, const struct FVector& Location, bool collectOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.CutObjectOnServer");
		
		UInteractionComponent_CutObjectOnServer_Params params {};
		params.Actor = Actor;
		params.MeshComponent = MeshComponent;
		params.InstanceId = InstanceId;
		params.Location = Location;
		params.collectOnly = collectOnly;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.CutObjectOnClients
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMeshComponent*                              MeshComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMeshInstanceId                             InstanceId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::CutObjectOnClients(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.CutObjectOnClients");
		
		UInteractionComponent_CutObjectOnClients_Params params {};
		params.MeshComponent = MeshComponent;
		params.InstanceId = InstanceId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.CraftItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FServerCraftableItem                        CraftableItem                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::CraftItemOnServer(const struct FServerCraftableItem& CraftableItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.CraftItemOnServer");
		
		UInteractionComponent_CraftItemOnServer_Params params {};
		params.CraftableItem = CraftableItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.Client_SendGroundSearchLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::Client_SendGroundSearchLocation(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.Client_SendGroundSearchLocation");
		
		UInteractionComponent_Client_SendGroundSearchLocation_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.ChopOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     choppedObject                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::ChopOnServer(class UObject* choppedObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.ChopOnServer");
		
		UInteractionComponent_ChopOnServer_Params params {};
		params.choppedObject = choppedObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionComponent.CheckExistenceOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMeshComponent*                              MeshComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMeshInstanceId                             InstanceId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionComponent::CheckExistenceOnServer(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionComponent.CheckExistenceOnServer");
		
		UInteractionComponent_CheckExistenceOnServer_Params params {};
		params.MeshComponent = MeshComponent;
		params.InstanceId = InstanceId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteractionComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractionComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteractionComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionContainerUserWidget.RemoveActiveInteractionWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionContainerUserWidget::RemoveActiveInteractionWidget(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionContainerUserWidget.RemoveActiveInteractionWidget");
		
		UInteractionContainerUserWidget_RemoveActiveInteractionWidget_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionContainerUserWidget.InteractableDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      interactable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractionContainerUserWidget::InteractableDestroyed(class AActor* interactable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionContainerUserWidget.InteractableDestroyed");
		
		UInteractionContainerUserWidget_InteractableDestroyed_Params params {};
		params.interactable = interactable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteractionContainerUserWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractionContainerUserWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteractionContainerUserWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteractionGroupUserWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractionGroupUserWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteractionGroupUserWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteractionObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractionObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteractionObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InteractionUserWidget.Interact
	 * 		Flags  -> ()
	 */
	void UInteractionUserWidget::Interact()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InteractionUserWidget.Interact");
		
		UInteractionUserWidget_Interact_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteractionUserWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractionUserWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteractionUserWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteriorCharacterSpawnerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteriorCharacterSpawnerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteriorCharacterSpawnerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInteriorStaticMeshComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteriorStaticMeshComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InteriorStaticMeshComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInv2021_InventoryContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInv2021_InventoryContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Inv2021_InventoryContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Inv2021_InventoryContainerClothes.OnRep_ReplicatedData
	 * 		Flags  -> ()
	 */
	void UInv2021_InventoryContainerClothes::OnRep_ReplicatedData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Inv2021_InventoryContainerClothes.OnRep_ReplicatedData");
		
		UInv2021_InventoryContainerClothes_OnRep_ReplicatedData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInv2021_InventoryContainerClothes.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInv2021_InventoryContainerClothes::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Inv2021_InventoryContainerClothes");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInv2021_InventoryElement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInv2021_InventoryElement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Inv2021_InventoryElement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInv2021_ActorInventoryElement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInv2021_ActorInventoryElement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Inv2021_ActorInventoryElement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInv2021_VirtualizedInventoryElement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInv2021_VirtualizedInventoryElement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Inv2021_VirtualizedInventoryElement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInv2021_InventoryPositionObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInv2021_InventoryPositionObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Inv2021_InventoryPositionObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInv2021_InventoryPosition2DObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInv2021_InventoryPosition2DObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Inv2021_InventoryPosition2DObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInv2021_InventoryPositionClothesObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInv2021_InventoryPositionClothesObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Inv2021_InventoryPositionClothesObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInv2021_InventoryStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInv2021_InventoryStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Inv2021_InventoryStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryPositionData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryPositionData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryPositionData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventorySizeData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventorySizeData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventorySizeData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventorySizeData2D.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventorySizeData2D::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventorySizeData2D");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryPositionData2D.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryPositionData2D::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryPositionData2D");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainer2D.OnRep_Parent
	 * 		Flags  -> ()
	 */
	void UInventoryContainer2D::OnRep_Parent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainer2D.OnRep_Parent");
		
		UInventoryContainer2D_OnRep_Parent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainer2D.OnRep_Items
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class UObject*>                             _oldItems                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UInventoryContainer2D::OnRep_Items(TArray<class UObject*> _oldItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainer2D.OnRep_Items");
		
		UInventoryContainer2D_OnRep_Items_Params params {};
		params._oldItems = _oldItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainer2D.OnRep_Data
	 * 		Flags  -> ()
	 */
	void UInventoryContainer2D::OnRep_Data()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainer2D.OnRep_Data");
		
		UInventoryContainer2D_OnRep_Data_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainer2D.OnActorItemDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventoryContainer2D::OnActorItemDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainer2D.OnActorItemDestroyed");
		
		UInventoryContainer2D_OnActorItemDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryContainer2D.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryContainer2D::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryContainer2D");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryContainer2DLight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryContainer2DLight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryContainer2DLight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryPositionDataClothes.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryPositionDataClothes::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryPositionDataClothes");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainerClothes.OnRep_Data
	 * 		Flags  -> ()
	 */
	void UInventoryContainerClothes::OnRep_Data()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainerClothes.OnRep_Data");
		
		UInventoryContainerClothes_OnRep_Data_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryContainerClothes.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryContainerClothes::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryContainerClothes");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryPositionDataHandsHolsters.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryPositionDataHandsHolsters::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryPositionDataHandsHolsters");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainerHandsHolsters.OnRep_Data
	 * 		Flags  -> ()
	 */
	void UInventoryContainerHandsHolsters::OnRep_Data()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainerHandsHolsters.OnRep_Data");
		
		UInventoryContainerHandsHolsters_OnRep_Data_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryContainerHandsHolsters.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryContainerHandsHolsters::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryContainerHandsHolsters");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryPositionDataSelection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryPositionDataSelection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryPositionDataSelection");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainerSelection.OnRep_Parent
	 * 		Flags  -> ()
	 */
	void UInventoryContainerSelection::OnRep_Parent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainerSelection.OnRep_Parent");
		
		UInventoryContainerSelection_OnRep_Parent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainerSelection.OnRep_Items
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class UObject*>                             _oldItems                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UInventoryContainerSelection::OnRep_Items(TArray<class UObject*> _oldItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainerSelection.OnRep_Items");
		
		UInventoryContainerSelection_OnRep_Items_Params params {};
		params._oldItems = _oldItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainerSelection.OnRep_Data
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FInventoryContainerSelectionRepData         OldData                                                    (Parm, NativeAccessSpecifierPublic)
	 */
	void UInventoryContainerSelection::OnRep_Data(const struct FInventoryContainerSelectionRepData& OldData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainerSelection.OnRep_Data");
		
		UInventoryContainerSelection_OnRep_Data_Params params {};
		params.OldData = OldData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryContainerSelection.OnItemDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventoryContainerSelection::OnItemDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryContainerSelection.OnItemDestroyed");
		
		UInventoryContainerSelection_OnItemDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryContainerSelection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryContainerSelection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryContainerSelection");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryItemWidget2Test.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryItemWidget2Test::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryItemWidget2Test");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryContainerWidget2Test.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryContainerWidget2Test::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryContainerWidget2Test");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryPanelWidget2Test.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryPanelWidget2Test::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryPanelWidget2Test");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryGridWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryGridWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryGridWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryItemData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryItemData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryItemData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryItemDataDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryItemDataDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryItemDataDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryItemDataIcon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryItemDataIcon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryItemDataIcon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryItemData2D.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryItemData2D::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryItemData2D");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryItemComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryItemComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryItemComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryItemComponent.OnRep_ReplicatedPages
	 * 		Flags  -> ()
	 */
	void UInventoryItemComponent::OnRep_ReplicatedPages()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryItemComponent.OnRep_ReplicatedPages");
		
		UInventoryItemComponent_OnRep_ReplicatedPages_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryItemComponentReplicatedPage.OnRep_Data
	 * 		Flags  -> ()
	 */
	void UInventoryItemComponentReplicatedPage::OnRep_Data()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryItemComponentReplicatedPage.OnRep_Data");
		
		UInventoryItemComponentReplicatedPage_OnRep_Data_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryItemComponentReplicatedPage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryItemComponentReplicatedPage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryItemComponentReplicatedPage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryNode.IncrementUIDisplayStateVersion
	 * 		Flags  -> ()
	 */
	void UInventoryNode::IncrementUIDisplayStateVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryNode.IncrementUIDisplayStateVersion");
		
		UInventoryNode_IncrementUIDisplayStateVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryNode.GetInventoryNodeName
	 * 		Flags  -> ()
	 */
	class FText UInventoryNode::GetInventoryNodeName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryNode.GetInventoryNodeName");
		
		UInventoryNode_GetInventoryNodeName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryNode.GetInventoryNodeIcon
	 * 		Flags  -> ()
	 */
	class UTexture2D* UInventoryNode::GetInventoryNodeIcon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryNode.GetInventoryNodeIcon");
		
		UInventoryNode_GetInventoryNodeIcon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryNode.GetInventoryNodeDescription
	 * 		Flags  -> ()
	 */
	class FText UInventoryNode::GetInventoryNodeDescription()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryNode.GetInventoryNodeDescription");
		
		UInventoryNode_GetInventoryNodeDescription_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryNode.CanBeEverDropped
	 * 		Flags  -> ()
	 */
	bool UInventoryNode::CanBeEverDropped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryNode.CanBeEverDropped");
		
		UInventoryNode_CanBeEverDropped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryPanelSideLayerWidget.Init
	 * 		Flags  -> ()
	 */
	void UInventoryPanelSideLayerWidget::Init()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryPanelSideLayerWidget.Init");
		
		UInventoryPanelSideLayerWidget_Init_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryPanelSideLayerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryPanelSideLayerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryPanelSideLayerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryPanelThirdIteration.UpdateItemWidgetHighlightings
	 * 		Flags  -> ()
	 */
	void UInventoryPanelThirdIteration::UpdateItemWidgetHighlightings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryPanelThirdIteration.UpdateItemWidgetHighlightings");
		
		UInventoryPanelThirdIteration_UpdateItemWidgetHighlightings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryPanelThirdIteration.UpdateContainerForItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventoryPanelThirdIteration::UpdateContainerForItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryPanelThirdIteration.UpdateContainerForItem");
		
		UInventoryPanelThirdIteration_UpdateContainerForItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryPanelThirdIteration.SetDisplayedCharacterName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventoryPanelThirdIteration::SetDisplayedCharacterName(const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryPanelThirdIteration.SetDisplayedCharacterName");
		
		UInventoryPanelThirdIteration_SetDisplayedCharacterName_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryPanelThirdIteration.RemoveContainerForItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventoryPanelThirdIteration::RemoveContainerForItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryPanelThirdIteration.RemoveContainerForItem");
		
		UInventoryPanelThirdIteration_RemoveContainerForItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventoryPanelThirdIteration.AddContainerForItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventoryPanelThirdIteration::AddContainerForItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventoryPanelThirdIteration.AddContainerForItem");
		
		UInventoryPanelThirdIteration_AddContainerForItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryPanelThirdIteration.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryPanelThirdIteration::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryPanelThirdIteration");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventoryPanelWidget2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventoryPanelWidget2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventoryPanelWidget2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventorySlotUserWidget.OnDraggedItemPreRotated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UItemWidget2*                                Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventorySlotUserWidget::OnDraggedItemPreRotated(class UItemWidget2* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventorySlotUserWidget.OnDraggedItemPreRotated");
		
		UInventorySlotUserWidget_OnDraggedItemPreRotated_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.InventorySlotUserWidget.OnDraggedItemPostRotated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UItemWidget2*                                Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventorySlotUserWidget::OnDraggedItemPostRotated(class UItemWidget2* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.InventorySlotUserWidget.OnDraggedItemPostRotated");
		
		UInventorySlotUserWidget_OnDraggedItemPostRotated_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UInventorySlotUserWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventorySlotUserWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.InventorySlotUserWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIsUnmountedOrMountedOnGroundCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsUnmountedOrMountedOnGroundCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.IsUnmountedOrMountedOnGroundCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemActionDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemActionDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemActionDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemAction.IsStandAloneOrOwningClient
	 * 		Flags  -> ()
	 */
	bool UItemAction::IsStandAloneOrOwningClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemAction.IsStandAloneOrOwningClient");
		
		UItemAction_IsStandAloneOrOwningClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemAction.GetItem
	 * 		Flags  -> ()
	 */
	class AItem* UItemAction::GetItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemAction.GetItem");
		
		UItemAction_GetItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemAction.End
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Regular                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemAction::End(bool Regular)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemAction.End");
		
		UItemAction_End_Params params {};
		params.Regular = Regular;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemAction.CanBeSelected
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UItemActionDescription*                      Description                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UItemAction::CanBeSelected(class UItemActionDescription* Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemAction.CanBeSelected");
		
		UItemAction_CanBeSelected_Params params {};
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemAction.CanBegin
	 * 		Flags  -> ()
	 */
	bool UItemAction::CanBegin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemAction.CanBegin");
		
		UItemAction_CanBegin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemAction.Begin
	 * 		Flags  -> ()
	 */
	float UItemAction::Begin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemAction.Begin");
		
		UItemAction_Begin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemActionSequenceDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemActionSequenceDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemActionSequenceDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.StopAnimation
	 * 		Flags  -> ()
	 */
	void UItemActionSequence::StopAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.StopAnimation");
		
		UItemActionSequence_StopAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.SetNextAnimationSectionFromPrevious
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        previousSection                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NextSection                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemActionSequence::SetNextAnimationSectionFromPrevious(const class FName& previousSection, const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.SetNextAnimationSectionFromPrevious");
		
		UItemActionSequence_SetNextAnimationSectionFromPrevious_Params params {};
		params.previousSection = previousSection;
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.SetNextAnimationSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Section                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               allowLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemActionSequence::SetNextAnimationSection(const class FName& Section, bool allowLoop)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.SetNextAnimationSection");
		
		UItemActionSequence_SetNextAnimationSection_Params params {};
		params.Section = Section;
		params.allowLoop = allowLoop;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.PlayAnimation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PlayRate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        startSection                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               assignCallbacks                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UItemActionSequence::PlayAnimation(class ACharacter* Character, float PlayRate, const class FName& startSection, bool assignCallbacks)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.PlayAnimation");
		
		UItemActionSequence_PlayAnimation_Params params {};
		params.Character = Character;
		params.PlayRate = PlayRate;
		params.startSection = startSection;
		params.assignCallbacks = assignCallbacks;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.OnMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemActionSequence::OnMontageEnded(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.OnMontageEnded");
		
		UItemActionSequence_OnMontageEnded_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.OnMontageBlendingOutStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemActionSequence::OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.OnMontageBlendingOutStarted");
		
		UItemActionSequence_OnMontageBlendingOutStarted_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.OnAnimNotify
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECharacterActionNotifyType                         notifyType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemActionSequence::OnAnimNotify(ECharacterActionNotifyType notifyType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.OnAnimNotify");
		
		UItemActionSequence_OnAnimNotify_Params params {};
		params.notifyType = notifyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.JumpToAnimationSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Section                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemActionSequence::JumpToAnimationSection(const class FName& Section)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.JumpToAnimationSection");
		
		UItemActionSequence_JumpToAnimationSection_Params params {};
		params.Section = Section;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.IsPlayingAnimation
	 * 		Flags  -> ()
	 */
	bool UItemActionSequence::IsPlayingAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.IsPlayingAnimation");
		
		UItemActionSequence_IsPlayingAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.GetPlayingAnimations
	 * 		Flags  -> ()
	 */
	struct FCharacterActionAnimationDescription UItemActionSequence::GetPlayingAnimations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.GetPlayingAnimations");
		
		UItemActionSequence_GetPlayingAnimations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.GetNumberOfPendingNotifiesInCurrentSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECharacterActionNotifyType                         notifyType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UItemActionSequence::GetNumberOfPendingNotifiesInCurrentSection(ECharacterActionNotifyType notifyType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.GetNumberOfPendingNotifiesInCurrentSection");
		
		UItemActionSequence_GetNumberOfPendingNotifiesInCurrentSection_Params params {};
		params.notifyType = notifyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.GetAnimations
	 * 		Flags  -> ()
	 */
	struct FCharacterAndItemAnimation UItemActionSequence::GetAnimations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.GetAnimations");
		
		UItemActionSequence_GetAnimations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.CanEverBeCanceled
	 * 		Flags  -> ()
	 */
	bool UItemActionSequence::CanEverBeCanceled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.CanEverBeCanceled");
		
		UItemActionSequence_CanEverBeCanceled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.Cancel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Regular                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemActionSequence::Cancel(bool Regular)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.Cancel");
		
		UItemActionSequence_Cancel_Params params {};
		params.Regular = Regular;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequence.CanBeCanceled
	 * 		Flags  -> ()
	 */
	bool UItemActionSequence::CanBeCanceled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequence.CanBeCanceled");
		
		UItemActionSequence_CanBeCanceled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemActionSequence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemActionSequence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemActionSequence");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemActionDescriptionLoadMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemActionDescriptionLoadMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemActionDescriptionLoadMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemActionSequenceLoadMagazine.GetEndSectionName
	 * 		Flags  -> ()
	 */
	class FName UItemActionSequenceLoadMagazine::GetEndSectionName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemActionSequenceLoadMagazine.GetEndSectionName");
		
		UItemActionSequenceLoadMagazine_GetEndSectionName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemActionSequenceLoadMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemActionSequenceLoadMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemActionSequenceLoadMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemActionSequenceLoadMagazine_M1Clip.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemActionSequenceLoadMagazine_M1Clip::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemActionSequenceLoadMagazine_M1Clip");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemActionSequenceLoadMagazine_RPKDrum.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemActionSequenceLoadMagazine_RPKDrum::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemActionSequenceLoadMagazine_RPKDrum");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemClassWidget.InteractWith
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemClassWidget::InteractWith(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemClassWidget.InteractWith");
		
		UItemClassWidget_InteractWith_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemClassWidget.Init
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTexture2D*                                  Texture                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemClassWidget::Init(class UClass* ItemClass, class UTexture2D* Texture)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemClassWidget.Init");
		
		UItemClassWidget_Init_Params params {};
		params.ItemClass = ItemClass;
		params.Texture = Texture;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemClassWidget.Examine
	 * 		Flags  -> ()
	 */
	void UItemClassWidget::Examine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemClassWidget.Examine");
		
		UItemClassWidget_Examine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemClassWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemClassWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemClassWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItemContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItemContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemContainerManager.NetMulticast_UpdateItemContainerData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      runtimeId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FItemContainerRepData                       ItemContainerData                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AItemContainerManager::NetMulticast_UpdateItemContainerData(int32_t dataVersion, const class FString& runtimeId, const struct FItemContainerRepData& ItemContainerData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemContainerManager.NetMulticast_UpdateItemContainerData");
		
		AItemContainerManager_NetMulticast_UpdateItemContainerData_Params params {};
		params.dataVersion = dataVersion;
		params.runtimeId = runtimeId;
		params.ItemContainerData = ItemContainerData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItemContainerManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItemContainerManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemContainerManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItemDropPlaceholder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItemDropPlaceholder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemDropPlaceholder");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemGroup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemGroup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemGroup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryDepotWidget2.OnExpandToggleClicked
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               checked                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemInventoryDepotWidget2::OnExpandToggleClicked(bool checked)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryDepotWidget2.OnExpandToggleClicked");
		
		UItemInventoryDepotWidget2_OnExpandToggleClicked_Params params {};
		params.checked = checked;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryDepotWidget2.InitBlueprintFromItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemInventoryDepotWidget2::InitBlueprintFromItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryDepotWidget2.InitBlueprintFromItem");
		
		UItemInventoryDepotWidget2_InitBlueprintFromItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryDepotWidget2.InitBlueprint
	 * 		Flags  -> ()
	 */
	void UItemInventoryDepotWidget2::InitBlueprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryDepotWidget2.InitBlueprint");
		
		UItemInventoryDepotWidget2_InitBlueprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryDepotWidget2.Init
	 * 		Flags  -> ()
	 */
	void UItemInventoryDepotWidget2::Init()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryDepotWidget2.Init");
		
		UItemInventoryDepotWidget2_Init_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryDepotWidget2.Blink
	 * 		Flags  -> ()
	 */
	void UItemInventoryDepotWidget2::Blink()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryDepotWidget2.Blink");
		
		UItemInventoryDepotWidget2_Blink_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemInventoryDepotWidget2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemInventoryDepotWidget2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemInventoryDepotWidget2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryWidget2.OnExpandToggleClicked
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               checked                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemInventoryWidget2::OnExpandToggleClicked(bool checked)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryWidget2.OnExpandToggleClicked");
		
		UItemInventoryWidget2_OnExpandToggleClicked_Params params {};
		params.checked = checked;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryWidget2.InitBlueprintFromItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemInventoryWidget2::InitBlueprintFromItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryWidget2.InitBlueprintFromItem");
		
		UItemInventoryWidget2_InitBlueprintFromItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryWidget2.InitBlueprint
	 * 		Flags  -> ()
	 */
	void UItemInventoryWidget2::InitBlueprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryWidget2.InitBlueprint");
		
		UItemInventoryWidget2_InitBlueprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryWidget2.Init
	 * 		Flags  -> ()
	 */
	void UItemInventoryWidget2::Init()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryWidget2.Init");
		
		UItemInventoryWidget2_Init_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemInventoryWidget2.Blink
	 * 		Flags  -> ()
	 */
	void UItemInventoryWidget2::Blink()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemInventoryWidget2.Blink");
		
		UItemInventoryWidget2_Blink_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemInventoryWidget2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemInventoryWidget2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemInventoryWidget2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemLightDisplay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemLightDisplay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemLightDisplay");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemObstructionTestCapsuleComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemObstructionTestCapsuleComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemObstructionTestCapsuleComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemObstructionStatics.OverlapClosestBlocking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  obstructionTestCapsulesWorldTransform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FItemObstructionTestCapsule>         obstructionTestCapsules                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              PenetrationDepth                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UItemObstructionStatics::OverlapClosestBlocking(class ACharacter* Character, const struct FTransform& obstructionTestCapsulesWorldTransform, TArray<struct FItemObstructionTestCapsule> obstructionTestCapsules, struct FHitResult* HitResult, float* PenetrationDepth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemObstructionStatics.OverlapClosestBlocking");
		
		UItemObstructionStatics_OverlapClosestBlocking_Params params {};
		params.Character = Character;
		params.obstructionTestCapsulesWorldTransform = obstructionTestCapsulesWorldTransform;
		params.obstructionTestCapsules = obstructionTestCapsules;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (HitResult != nullptr)
			*HitResult = params.HitResult;
		if (PenetrationDepth != nullptr)
			*PenetrationDepth = params.PenetrationDepth;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemObstructionStatics.OverlapBlocking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  obstructionTestCapsuleWorldTransform                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FItemObstructionTestCapsule                 obstructionTestCapsule                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              PenetrationDepth                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UItemObstructionStatics::OverlapBlocking(class ACharacter* Character, const struct FTransform& obstructionTestCapsuleWorldTransform, const struct FItemObstructionTestCapsule& obstructionTestCapsule, struct FHitResult* HitResult, float* PenetrationDepth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemObstructionStatics.OverlapBlocking");
		
		UItemObstructionStatics_OverlapBlocking_Params params {};
		params.Character = Character;
		params.obstructionTestCapsuleWorldTransform = obstructionTestCapsuleWorldTransform;
		params.obstructionTestCapsule = obstructionTestCapsule;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (HitResult != nullptr)
			*HitResult = params.HitResult;
		if (PenetrationDepth != nullptr)
			*PenetrationDepth = params.PenetrationDepth;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemObstructionStatics.ChooseItemObstructionSide
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              existingSide                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UItemObstructionStatics::ChooseItemObstructionSide(class ACharacter* Character, float existingSide)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemObstructionStatics.ChooseItemObstructionSide");
		
		UItemObstructionStatics_ChooseItemObstructionSide_Params params {};
		params.Character = Character;
		params.existingSide = existingSide;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemObstructionStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemObstructionStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemObstructionStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemRackSlotComponent.OnRep_PlacedItem
	 * 		Flags  -> ()
	 */
	void UItemRackSlotComponent::OnRep_PlacedItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemRackSlotComponent.OnRep_PlacedItem");
		
		UItemRackSlotComponent_OnRep_PlacedItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemRackSlotComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemRackSlotComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemRackSlotComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemRegistry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemRegistry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemRegistry");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemSelection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemSelection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemSelection");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemSelectionSlotWidget.GetBoxVisibility
	 * 		Flags  -> ()
	 */
	ESlateVisibility UItemSelectionSlotWidget::GetBoxVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemSelectionSlotWidget.GetBoxVisibility");
		
		UItemSelectionSlotWidget_GetBoxVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemSelectionSlotWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemSelectionSlotWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemSelectionSlotWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemSelectionWidget.On_Selection_MouseButtonDown
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGeometry                                   Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FPointerEvent                               MouseEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	struct FEventReply UItemSelectionWidget::On_Selection_MouseButtonDown(const struct FGeometry& Geometry, const struct FPointerEvent& MouseEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemSelectionWidget.On_Selection_MouseButtonDown");
		
		UItemSelectionWidget_On_Selection_MouseButtonDown_Params params {};
		params.Geometry = Geometry;
		params.MouseEvent = MouseEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemSelectionWidget.Get_ItemName_ColorAndOpacity
	 * 		Flags  -> ()
	 */
	struct FSlateColor UItemSelectionWidget::Get_ItemName_ColorAndOpacity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemSelectionWidget.Get_ItemName_ColorAndOpacity");
		
		UItemSelectionWidget_Get_ItemName_ColorAndOpacity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemSelectionWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemSelectionWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemSelectionWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemSpawnerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemSpawnerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemSpawnerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItemSpawnerGroup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItemSpawnerGroup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemSpawnerGroup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItemSpawnerVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItemSpawnerVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemSpawnerVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItemSpawningManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItemSpawningManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemSpawningManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PostItemsSpawnedActions.Execute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AItem*>                               SpawnedItems                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPostItemsSpawnedActions::Execute(TArray<class AItem*> SpawnedItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PostItemsSpawnedActions.Execute");
		
		UPostItemsSpawnedActions_Execute_Params params {};
		params.SpawnedItems = SpawnedItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPostItemsSpawnedActions.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPostItemsSpawnedActions::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PostItemsSpawnedActions");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemSpawnerPreset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemSpawnerPreset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemSpawnerPreset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemSplitWidget.OnStackAmountBoxTextChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        newText                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UItemSplitWidget::OnStackAmountBoxTextChanged(const class FText& newText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemSplitWidget.OnStackAmountBoxTextChanged");
		
		UItemSplitWidget_OnStackAmountBoxTextChanged_Params params {};
		params.newText = newText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemSplitWidget.OnSplitButtonClicked
	 * 		Flags  -> ()
	 */
	void UItemSplitWidget::OnSplitButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemSplitWidget.OnSplitButtonClicked");
		
		UItemSplitWidget_OnSplitButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemSplitWidget.OnSliderValueUpdated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemSplitWidget::OnSliderValueUpdated(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemSplitWidget.OnSliderValueUpdated");
		
		UItemSplitWidget_OnSliderValueUpdated_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemSplitWidget.OnExitRequested
	 * 		Flags  -> ()
	 */
	void UItemSplitWidget::OnExitRequested()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemSplitWidget.OnExitRequested");
		
		UItemSplitWidget_OnExitRequested_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemSplitWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemSplitWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemSplitWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemStatusWidget.SetTitleText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Text                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemStatusWidget::SetTitleText(const class FString& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemStatusWidget.SetTitleText");
		
		UItemStatusWidget_SetTitleText_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemStatusWidget.SetNameText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Text                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemStatusWidget::SetNameText(const class FString& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemStatusWidget.SetNameText");
		
		UItemStatusWidget_SetNameText_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemStatusWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemStatusWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemStatusWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemTooltipTab.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemTooltipTab::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemTooltipTab");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemTooltip.UpdateVisuals
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FInventoryNodeWidgetData>            widgetData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UItemTooltip::UpdateVisuals(TArray<struct FInventoryNodeWidgetData> widgetData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemTooltip.UpdateVisuals");
		
		UItemTooltip_UpdateVisuals_Params params {};
		params.widgetData = widgetData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemTooltip.Init
	 * 		Flags  -> ()
	 */
	void UItemTooltip::Init()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemTooltip.Init");
		
		UItemTooltip_Init_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemTooltip.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemTooltip::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemTooltip");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ExtendedRichTextBlock.SetTextStyle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTextBlockStyle                             Style                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UExtendedRichTextBlock::SetTextStyle(struct FTextBlockStyle* Style)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ExtendedRichTextBlock.SetTextStyle");
		
		UExtendedRichTextBlock_SetTextStyle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Style != nullptr)
			*Style = params.Style;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExtendedRichTextBlock.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExtendedRichTextBlock::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExtendedRichTextBlock");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemTooltipPanelElement.OnTextDataChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Value                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UItemTooltipPanelElement::OnTextDataChanged(const class FText& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemTooltipPanelElement.OnTextDataChanged");
		
		UItemTooltipPanelElement_OnTextDataChanged_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemTooltipPanelElement.OnNumberDataChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemTooltipPanelElement::OnNumberDataChanged(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemTooltipPanelElement.OnNumberDataChanged");
		
		UItemTooltipPanelElement_OnNumberDataChanged_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemTooltipPanelElement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemTooltipPanelElement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemTooltipPanelElement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemTooltipPanel.UpdateVisuals
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FInventoryNodeWidgetData>            widgetData                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UItemTooltipPanel::UpdateVisuals(TArray<struct FInventoryNodeWidgetData> widgetData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemTooltipPanel.UpdateVisuals");
		
		UItemTooltipPanel_UpdateVisuals_Params params {};
		params.widgetData = widgetData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemTooltipPanel.Init
	 * 		Flags  -> ()
	 */
	void UItemTooltipPanel::Init()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemTooltipPanel.Init");
		
		UItemTooltipPanel_Init_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemTooltipPanel.DebugMode
	 * 		Flags  -> ()
	 */
	bool UItemTooltipPanel::DebugMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemTooltipPanel.DebugMode");
		
		UItemTooltipPanel_DebugMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemTooltipPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemTooltipPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemTooltipPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.UpdateHighlightStatus
	 * 		Flags  -> ()
	 */
	void UItemUserWidget::UpdateHighlightStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.UpdateHighlightStatus");
		
		UItemUserWidget_UpdateHighlightStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.SetItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemUserWidget::SetItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.SetItem");
		
		UItemUserWidget_SetItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.SetImage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTexture2D*                                  Image                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemUserWidget::SetImage(class UTexture2D* Image)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.SetImage");
		
		UItemUserWidget_SetImage_Params params {};
		params.Image = Image;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.OnItemSelectionChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Selected                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemUserWidget::OnItemSelectionChanged(bool Selected)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.OnItemSelectionChanged");
		
		UItemUserWidget_OnItemSelectionChanged_Params params {};
		params.Selected = Selected;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.ItemUserWidget.OnClicked__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UItemUserWidget*                             clickedWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemUserWidget::OnClicked__DelegateSignature(class UItemUserWidget* clickedWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.ItemUserWidget.OnClicked__DelegateSignature");
		
		UItemUserWidget_OnClicked__DelegateSignature_Params params {};
		params.clickedWidget = clickedWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.MarkAsWeaponWidget
	 * 		Flags  -> ()
	 */
	void UItemUserWidget::MarkAsWeaponWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.MarkAsWeaponWidget");
		
		UItemUserWidget_MarkAsWeaponWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.ItemPickedUpStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               pickedUp                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemUserWidget::ItemPickedUpStateChanged(class AItem* Item, bool pickedUp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.ItemPickedUpStateChanged");
		
		UItemUserWidget_ItemPickedUpStateChanged_Params params {};
		params.Item = Item;
		params.pickedUp = pickedUp;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.InteractableDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      interactable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemUserWidget::InteractableDestroyed(class AActor* interactable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.InteractableDestroyed");
		
		UItemUserWidget_InteractableDestroyed_Params params {};
		params.interactable = interactable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.GetItem
	 * 		Flags  -> ()
	 */
	class AItem* UItemUserWidget::GetItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.GetItem");
		
		UItemUserWidget_GetItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.CreateFromItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UItemUserWidget* UItemUserWidget::CreateFromItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.CreateFromItem");
		
		UItemUserWidget_CreateFromItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemUserWidget.BlinkItemContainer
	 * 		Flags  -> ()
	 */
	void UItemUserWidget::BlinkItemContainer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemUserWidget.BlinkItemContainer");
		
		UItemUserWidget_BlinkItemContainer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemUserWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemUserWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemUserWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItemVirtualizationManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItemVirtualizationManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemVirtualizationManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWidget2.UpdateVisuals
	 * 		Flags  -> ()
	 */
	void UItemWidget2::UpdateVisuals()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWidget2.UpdateVisuals");
		
		UItemWidget2_UpdateVisuals_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.ItemWidget2.OnRotated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UItemWidget2*                                Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemWidget2::OnRotated__DelegateSignature(class UItemWidget2* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.ItemWidget2.OnRotated__DelegateSignature");
		
		UItemWidget2_OnRotated__DelegateSignature_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.ItemWidget2.OnRightClicked__DelegateSignature
	 * 		Flags  -> ()
	 */
	void UItemWidget2::OnRightClicked__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.ItemWidget2.OnRightClicked__DelegateSignature");
		
		UItemWidget2_OnRightClicked__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWidget2.OnDropOperation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UDragDropOperation*                          Operation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemWidget2::OnDropOperation(class UDragDropOperation* Operation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWidget2.OnDropOperation");
		
		UItemWidget2_OnDropOperation_Params params {};
		params.Operation = Operation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWidget2.OnDragOperationCancelled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UDragDropOperation*                          Operation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemWidget2::OnDragOperationCancelled(class UDragDropOperation* Operation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWidget2.OnDragOperationCancelled");
		
		UItemWidget2_OnDragOperationCancelled_Params params {};
		params.Operation = Operation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWidget2.Init
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               temporary                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemWidget2::Init(bool temporary)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWidget2.Init");
		
		UItemWidget2_Init_Params params {};
		params.temporary = temporary;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWidget2.GetLowerLeftBoxShowAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UItemWidget2::GetLowerLeftBoxShowAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWidget2.GetLowerLeftBoxShowAnimation");
		
		UItemWidget2_GetLowerLeftBoxShowAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWidget2.GetLowerLeftBoxFadeOutAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UItemWidget2::GetLowerLeftBoxFadeOutAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWidget2.GetLowerLeftBoxFadeOutAnimation");
		
		UItemWidget2_GetLowerLeftBoxFadeOutAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWidget2.GetLowerLeftBoxFadeInAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UItemWidget2::GetLowerLeftBoxFadeInAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWidget2.GetLowerLeftBoxFadeInAnimation");
		
		UItemWidget2_GetLowerLeftBoxFadeInAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWidget2.GetAdditionalIconFadeOutAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UItemWidget2::GetAdditionalIconFadeOutAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWidget2.GetAdditionalIconFadeOutAnimation");
		
		UItemWidget2_GetAdditionalIconFadeOutAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWidget2.GetAdditionalIconFadeInAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UItemWidget2::GetAdditionalIconFadeInAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWidget2.GetAdditionalIconFadeInAnimation");
		
		UItemWidget2_GetAdditionalIconFadeInAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemWidget2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemWidget2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemWidget2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItemWithSkeletalMesh.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItemWithSkeletalMesh::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemWithSkeletalMesh");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemWithTextState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemWithTextState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemWithTextState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWithText.OnTextAccepted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   User                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AItemWithText::OnTextAccepted(class APrisoner* User, const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWithText.OnTextAccepted");
		
		AItemWithText_OnTextAccepted_Params params {};
		params.User = User;
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWithText.OnRep_Text
	 * 		Flags  -> ()
	 */
	void AItemWithText::OnRep_Text()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWithText.OnRep_Text");
		
		AItemWithText_OnRep_Text_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ItemWithText.OnLocalPrisonerPanelsClosed_ItemWithText
	 * 		Flags  -> ()
	 */
	void AItemWithText::OnLocalPrisonerPanelsClosed_ItemWithText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ItemWithText.OnLocalPrisonerPanelsClosed_ItemWithText");
		
		AItemWithText_OnLocalPrisonerPanelsClosed_ItemWithText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AItemWithText.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AItemWithText::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemWithText");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UJournalMissionContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UJournalMissionContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.JournalMissionContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UJournalObjectiveContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UJournalObjectiveContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.JournalObjectiveContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.JournalPanelWidget.OnUntrackMissionButton
	 * 		Flags  -> ()
	 */
	void UJournalPanelWidget::OnUntrackMissionButton()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.JournalPanelWidget.OnUntrackMissionButton");
		
		UJournalPanelWidget_OnUntrackMissionButton_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.JournalPanelWidget.OnTutorialButtonClicked
	 * 		Flags  -> ()
	 */
	void UJournalPanelWidget::OnTutorialButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.JournalPanelWidget.OnTutorialButtonClicked");
		
		UJournalPanelWidget_OnTutorialButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.JournalPanelWidget.OnSideStoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UJournalPanelWidget::OnSideStoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.JournalPanelWidget.OnSideStoryButtonClicked");
		
		UJournalPanelWidget_OnSideStoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.JournalPanelWidget.OnRestartMissionButton
	 * 		Flags  -> ()
	 */
	void UJournalPanelWidget::OnRestartMissionButton()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.JournalPanelWidget.OnRestartMissionButton");
		
		UJournalPanelWidget_OnRestartMissionButton_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.JournalPanelWidget.OnResetMissionButton
	 * 		Flags  -> ()
	 */
	void UJournalPanelWidget::OnResetMissionButton()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.JournalPanelWidget.OnResetMissionButton");
		
		UJournalPanelWidget_OnResetMissionButton_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.JournalPanelWidget.OnMissionItemExpanded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMissionItemWidget*                          MissionItemWidget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UJournalPanelWidget::OnMissionItemExpanded(class UMissionItemWidget* MissionItemWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.JournalPanelWidget.OnMissionItemExpanded");
		
		UJournalPanelWidget_OnMissionItemExpanded_Params params {};
		params.MissionItemWidget = MissionItemWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.JournalPanelWidget.OnMissionItemClicked
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMissionItemWidget*                          MissionItemWidget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMissionData                                MissionData                                                (Parm, NativeAccessSpecifierPublic)
	 */
	void UJournalPanelWidget::OnMissionItemClicked(class UMissionItemWidget* MissionItemWidget, const struct FMissionData& MissionData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.JournalPanelWidget.OnMissionItemClicked");
		
		UJournalPanelWidget_OnMissionItemClicked_Params params {};
		params.MissionItemWidget = MissionItemWidget;
		params.MissionData = MissionData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.JournalPanelWidget.OnMainStoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UJournalPanelWidget::OnMainStoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.JournalPanelWidget.OnMainStoryButtonClicked");
		
		UJournalPanelWidget_OnMainStoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.JournalPanelWidget.OnActivateMissionButton
	 * 		Flags  -> ()
	 */
	void UJournalPanelWidget::OnActivateMissionButton()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.JournalPanelWidget.OnActivateMissionButton");
		
		UJournalPanelWidget_OnActivateMissionButton_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UJournalPanelWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UJournalPanelWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.JournalPanelWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KeyboardIllumination.PrintSCUM
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKeyboardIllumination::PrintSCUM(const struct FColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KeyboardIllumination.PrintSCUM");
		
		UKeyboardIllumination_PrintSCUM_Params params {};
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KeyboardIllumination.InitIllumination
	 * 		Flags  -> ()
	 */
	void UKeyboardIllumination::InitIllumination()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KeyboardIllumination.InitIllumination");
		
		UKeyboardIllumination_InitIllumination_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KeyboardIllumination.FlashAllKeys
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Interval                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKeyboardIllumination::FlashAllKeys(const struct FColor& Color, float Duration, float Interval)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KeyboardIllumination.FlashAllKeys");
		
		UKeyboardIllumination_FlashAllKeys_Params params {};
		params.Color = Color;
		params.Duration = Duration;
		params.Interval = Interval;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KeyboardIllumination.DeInitIllumination
	 * 		Flags  -> ()
	 */
	void UKeyboardIllumination::DeInitIllumination()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KeyboardIllumination.DeInitIllumination");
		
		UKeyboardIllumination_DeInitIllumination_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UKeyboardIllumination.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKeyboardIllumination::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.KeyboardIllumination");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AKillBoxC4SpawnPoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AKillBoxC4SpawnPoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.KillBoxC4SpawnPoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.SetPanicbutton
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASwitch*                                     panicButton                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::SetPanicbutton(class ASwitch* panicButton)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.SetPanicbutton");
		
		UKillboxComponent_SetPanicbutton_Params params {};
		params.panicButton = panicButton;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.SetMusicComponent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkComponent*                                musicComponent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::SetMusicComponent(class UAkComponent* musicComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.SetMusicComponent");
		
		UKillboxComponent_SetMusicComponent_Params params {};
		params.musicComponent = musicComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.SetLaserComponent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMovableCollisionFieldComponent*             laserComponent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::SetLaserComponent(class UMovableCollisionFieldComponent* laserComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.SetLaserComponent");
		
		UKillboxComponent_SetLaserComponent_Params params {};
		params.laserComponent = laserComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.SetKillBoxEntrance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       entrance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::SetKillBoxEntrance(class ADoor* entrance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.SetKillBoxEntrance");
		
		UKillboxComponent_SetKillBoxEntrance_Params params {};
		params.entrance = entrance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.SetDetectionField
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AKillBoxDetectionField*                      detectionField                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::SetDetectionField(class AKillBoxDetectionField* detectionField)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.SetDetectionField");
		
		UKillboxComponent_SetDetectionField_Params params {};
		params.detectionField = detectionField;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.OnRep_KillBoxActivation
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::OnRep_KillBoxActivation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.OnRep_KillBoxActivation");
		
		UKillboxComponent_OnRep_KillBoxActivation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.OnKillBoxSetup
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::OnKillBoxSetup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.OnKillBoxSetup");
		
		UKillboxComponent_OnKillBoxSetup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.OnEntranceUnlockedDelegate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       Door                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::OnEntranceUnlockedDelegate(class ADoor* Door)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.OnEntranceUnlockedDelegate");
		
		UKillboxComponent_OnEntranceUnlockedDelegate_Params params {};
		params.Door = Door;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.OnEntranceOpenedDelegate
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::OnEntranceOpenedDelegate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.OnEntranceOpenedDelegate");
		
		UKillboxComponent_OnEntranceOpenedDelegate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.OnEntranceCloseFinishedDelegate
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::OnEntranceCloseFinishedDelegate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.OnEntranceCloseFinishedDelegate");
		
		UKillboxComponent_OnEntranceCloseFinishedDelegate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.OnElectricDoorsDefusedDelegate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       Door                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::OnElectricDoorsDefusedDelegate(class ADoor* Door)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.OnElectricDoorsDefusedDelegate");
		
		UKillboxComponent_OnElectricDoorsDefusedDelegate_Params params {};
		params.Door = Door;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_StopMusic
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::NetMulticast_StopMusic()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_StopMusic");
		
		UKillboxComponent_NetMulticast_StopMusic_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_StopAllQuotes
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::NetMulticast_StopAllQuotes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_StopAllQuotes");
		
		UKillboxComponent_NetMulticast_StopAllQuotes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_ReportKillBoxDeactivation
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::NetMulticast_ReportKillBoxDeactivation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_ReportKillBoxDeactivation");
		
		UKillboxComponent_NetMulticast_ReportKillBoxDeactivation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_ReportKillActivation
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::NetMulticast_ReportKillActivation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_ReportKillActivation");
		
		UKillboxComponent_NetMulticast_ReportKillActivation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_RemoveEntranceHardLock
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::NetMulticast_RemoveEntranceHardLock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_RemoveEntranceHardLock");
		
		UKillboxComponent_NetMulticast_RemoveEntranceHardLock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_QueueHostQuote
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               playOnlyIfInstant                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               stopPreviousQuote                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::NetMulticast_QueueHostQuote(class UAkAudioEvent* Sound, bool playOnlyIfInstant, bool stopPreviousQuote)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_QueueHostQuote");
		
		UKillboxComponent_NetMulticast_QueueHostQuote_Params params {};
		params.Sound = Sound;
		params.playOnlyIfInstant = playOnlyIfInstant;
		params.stopPreviousQuote = stopPreviousQuote;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_PlaySound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::NetMulticast_PlaySound(class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_PlaySound");
		
		UKillboxComponent_NetMulticast_PlaySound_Params params {};
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_HardLockEntrance
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::NetMulticast_HardLockEntrance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_HardLockEntrance");
		
		UKillboxComponent_NetMulticast_HardLockEntrance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_ActivateGasSound
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::NetMulticast_ActivateGasSound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_ActivateGasSound");
		
		UKillboxComponent_NetMulticast_ActivateGasSound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.NetMulticast_ActivateGasParticles
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Activate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::NetMulticast_ActivateGasParticles(bool Activate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.NetMulticast_ActivateGasParticles");
		
		UKillboxComponent_NetMulticast_ActivateGasParticles_Params params {};
		params.Activate = Activate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.InitiatePanicMode
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::InitiatePanicMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.InitiatePanicMode");
		
		UKillboxComponent_InitiatePanicMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.InitiateKillBoxFailure
	 * 		Flags  -> ()
	 */
	void UKillboxComponent::InitiateKillBoxFailure()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.InitiateKillBoxFailure");
		
		UKillboxComponent_InitiateKillBoxFailure_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.AddTimerWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UKillBoxTimerWidget*                         timerWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::AddTimerWidget(class UKillBoxTimerWidget* timerWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.AddTimerWidget");
		
		UKillboxComponent_AddTimerWidget_Params params {};
		params.timerWidget = timerWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.AddSpawnPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       holeDoor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AKillBoxSpawnPoint*                          Spawner                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::AddSpawnPoint(class ADoor* holeDoor, class AKillBoxSpawnPoint* Spawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.AddSpawnPoint");
		
		UKillboxComponent_AddSpawnPoint_Params params {};
		params.holeDoor = holeDoor;
		params.Spawner = Spawner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.AddRoomDefinition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       RoomDoor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UStaticMeshComponent*                        Locker                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AKillBoxC4SpawnPoint*                        C4                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::AddRoomDefinition(class ADoor* RoomDoor, class UStaticMeshComponent* Locker, class AKillBoxC4SpawnPoint* C4)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.AddRoomDefinition");
		
		UKillboxComponent_AddRoomDefinition_Params params {};
		params.RoomDoor = RoomDoor;
		params.Locker = Locker;
		params.C4 = C4;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.AddHardSpawnPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       holeDoor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AKillBoxSpawnPoint*                          Spawner                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::AddHardSpawnPoint(class ADoor* holeDoor, class AKillBoxSpawnPoint* Spawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.AddHardSpawnPoint");
		
		UKillboxComponent_AddHardSpawnPoint_Params params {};
		params.holeDoor = holeDoor;
		params.Spawner = Spawner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.AddGasMist
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UParticleSystemComponent*                    gasMist                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::AddGasMist(class UParticleSystemComponent* gasMist)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.AddGasMist");
		
		UKillboxComponent_AddGasMist_Params params {};
		params.gasMist = gasMist;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.AddGasEmitter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UParticleSystemComponent*                    gasEmitter                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::AddGasEmitter(class UParticleSystemComponent* gasEmitter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.AddGasEmitter");
		
		UKillboxComponent_AddGasEmitter_Params params {};
		params.gasEmitter = gasEmitter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillboxComponent.AddElectricalDoor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       electricalDoor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillboxComponent::AddElectricalDoor(class ADoor* electricalDoor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillboxComponent.AddElectricalDoor");
		
		UKillboxComponent_AddElectricalDoor_Params params {};
		params.electricalDoor = electricalDoor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UKillboxComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillboxComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.KillboxComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APlaceableActorBlocker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APlaceableActorBlocker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableActorBlocker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AKillBoxDetectionField.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AKillBoxDetectionField::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.KillBoxDetectionField");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AKillBoxSpawnPoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AKillBoxSpawnPoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.KillBoxSpawnPoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.KillBoxTimerWidget.SetTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Minutes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Seconds                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillBoxTimerWidget::SetTime(int32_t Minutes, int32_t Seconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.KillBoxTimerWidget.SetTime");
		
		UKillBoxTimerWidget_SetTime_Params params {};
		params.Minutes = Minutes;
		params.Seconds = Seconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UKillBoxTimerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillBoxTimerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.KillBoxTimerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UKillFeedNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillFeedNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.KillFeedNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UKillFeedNotificationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillFeedNotificationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.KillFeedNotificationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULadderMarkersComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULadderMarkersComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LadderMarkersComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ALadderMarkersRegistry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALadderMarkersRegistry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LadderMarkersRegistry");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LadderMarkersReplicator.NetMulticast_UnregisterLadderMarker
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLadderMarker                               marker                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALadderMarkersReplicator::NetMulticast_UnregisterLadderMarker(int32_t dataVersion, const struct FLadderMarker& marker)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LadderMarkersReplicator.NetMulticast_UnregisterLadderMarker");
		
		ALadderMarkersReplicator_NetMulticast_UnregisterLadderMarker_Params params {};
		params.dataVersion = dataVersion;
		params.marker = marker;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LadderMarkersReplicator.NetMulticast_RegisterLadderMarker
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLadderMarker                               marker                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALadderMarkersReplicator::NetMulticast_RegisterLadderMarker(int32_t dataVersion, const struct FLadderMarker& marker)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LadderMarkersReplicator.NetMulticast_RegisterLadderMarker");
		
		ALadderMarkersReplicator_NetMulticast_RegisterLadderMarker_Params params {};
		params.dataVersion = dataVersion;
		params.marker = marker;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ALadderMarkersReplicator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALadderMarkersReplicator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LadderMarkersReplicator");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULandingDamageCustomization.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULandingDamageCustomization::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LandingDamageCustomization");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULandingEffects.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULandingEffects::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LandingEffects");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LargeAquaticAnimal.OnRep_Health
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALargeAquaticAnimal::OnRep_Health(float OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LargeAquaticAnimal.OnRep_Health");
		
		ALargeAquaticAnimal_OnRep_Health_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LargeAquaticAnimal.OnRep_Behavior
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EFishBehavior                                      OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALargeAquaticAnimal::OnRep_Behavior(EFishBehavior OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LargeAquaticAnimal.OnRep_Behavior");
		
		ALargeAquaticAnimal_OnRep_Behavior_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ALargeAquaticAnimal.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALargeAquaticAnimal::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LargeAquaticAnimal");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULargeAquaticAnimalSpeciesData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULargeAquaticAnimalSpeciesData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LargeAquaticAnimalSpeciesData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LaserTriggerComponent.BoxComponent_OnComponentEndOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         activatedComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ULaserTriggerComponent::BoxComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LaserTriggerComponent.BoxComponent_OnComponentEndOverlap");
		
		ULaserTriggerComponent_BoxComponent_OnComponentEndOverlap_Params params {};
		params.activatedComp = activatedComp;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LaserTriggerComponent.BoxComponent_OnComponentBeginOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ULaserTriggerComponent::BoxComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LaserTriggerComponent.BoxComponent_OnComponentBeginOverlap");
		
		ULaserTriggerComponent_BoxComponent_OnComponentBeginOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULaserTriggerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULaserTriggerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LaserTriggerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ALevelMarkers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALevelMarkers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LevelMarkers");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULevelUpNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULevelUpNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LevelUpNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULevelUpNotificationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULevelUpNotificationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LevelUpNotificationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LevelUpNotificationWidget.QueueNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USkill*                                      Skill                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESkillLevel                                        skillLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ULevelUpNotificationWidget::QueueNotification(class USkill* Skill, ESkillLevel skillLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LevelUpNotificationWidget.QueueNotification");
		
		ULevelUpNotificationWidget_QueueNotification_Params params {};
		params.Skill = Skill;
		params.skillLevel = skillLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LevelUpNotificationWidget.GetLevelUpAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* ULevelUpNotificationWidget::GetLevelUpAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LevelUpNotificationWidget.GetLevelUpAnimation");
		
		ULevelUpNotificationWidget_GetLevelUpAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULevelUpNotificationWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULevelUpNotificationWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LevelUpNotificationWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULiftComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULiftComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LiftComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UListUnreferencedAssetsCommandlet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UListUnreferencedAssetsCommandlet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ListUnreferencedAssetsCommandlet");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULoadingIconWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULoadingIconWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LoadingIconWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULoadingScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULoadingScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LoadingScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ALocationMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALocationMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LocationMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LocationObjective.OnRep_LocationMarker
	 * 		Flags  -> ()
	 */
	void ALocationObjective::OnRep_LocationMarker()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LocationObjective.OnRep_LocationMarker");
		
		ALocationObjective_OnRep_LocationMarker_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LocationObjective.OnLocationEnter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      OverlapedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALocationObjective::OnLocationEnter(class AActor* OverlapedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LocationObjective.OnLocationEnter");
		
		ALocationObjective_OnLocationEnter_Params params {};
		params.OverlapedActor = OverlapedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ALocationObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALocationObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LocationObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ALocationTrigger.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALocationTrigger::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LocationTrigger");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULockableItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockableItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockableItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ALockBombDefusalMinigame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALockBombDefusalMinigame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockBombDefusalMinigame");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Lockpickable.OnLockNeutralized
	 * 		Flags  -> ()
	 */
	void ULockpickable::OnLockNeutralized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Lockpickable.OnLockNeutralized");
		
		ULockpickable_OnLockNeutralized_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Lockpickable.HasLocks
	 * 		Flags  -> ()
	 */
	bool ULockpickable::HasLocks()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Lockpickable.HasLocks");
		
		ULockpickable_HasLocks_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Lockpickable.CanInitiateLockpickingFor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ULockpickable::CanInitiateLockpickingFor(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Lockpickable.CanInitiateLockpickingFor");
		
		ULockpickable_CanInitiateLockpickingFor_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULockpickable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockpickable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Lockpickable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULockpickableLocksVisualComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockpickableLocksVisualComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockpickableLocksVisualComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingMinigame.OnTensionToolDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      tensionTool                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALockpickingMinigame::OnTensionToolDestroyed(class AActor* tensionTool)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingMinigame.OnTensionToolDestroyed");
		
		ALockpickingMinigame_OnTensionToolDestroyed_Params params {};
		params.tensionTool = tensionTool;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingMinigame.OnLockpickDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      lockpick                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALockpickingMinigame::OnLockpickDestroyed(class AActor* lockpick)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingMinigame.OnLockpickDestroyed");
		
		ALockpickingMinigame_OnLockpickDestroyed_Params params {};
		params.lockpick = lockpick;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ALockpickingMinigame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALockpickingMinigame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockpickingMinigame");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULockpickingMinigameConfiguration.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockpickingMinigameConfiguration::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockpickingMinigameConfiguration");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUpgradeItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUpgradeItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UpgradeItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULockItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockProtectionTag.SetModifiedDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ULockProtectionTag::SetModifiedDamage(float Damage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockProtectionTag.SetModifiedDamage");
		
		ULockProtectionTag_SetModifiedDamage_Params params {};
		params.Damage = Damage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockProtectionTag.ResetDamage
	 * 		Flags  -> ()
	 */
	void ULockProtectionTag::ResetDamage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockProtectionTag.ResetDamage");
		
		ULockProtectionTag_ResetDamage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockProtectionTag.GetTotalDamage
	 * 		Flags  -> ()
	 */
	float ULockProtectionTag::GetTotalDamage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockProtectionTag.GetTotalDamage");
		
		ULockProtectionTag_GetTotalDamage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockProtectionTag.GetBaseDamage
	 * 		Flags  -> ()
	 */
	float ULockProtectionTag::GetBaseDamage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockProtectionTag.GetBaseDamage");
		
		ULockProtectionTag_GetBaseDamage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULockProtectionTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockProtectionTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockProtectionTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULockpickingTensionToolItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockpickingTensionToolItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockpickingTensionToolItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.ShowInfo
	 * 		Flags  -> ()
	 */
	void ULockpickingWidget::ShowInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.ShowInfo");
		
		ULockpickingWidget_ShowInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.SetLockPickingDifficulty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ELockPickingDifficulty                             Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ULockpickingWidget::SetLockPickingDifficulty(ELockPickingDifficulty Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.SetLockPickingDifficulty");
		
		ULockpickingWidget_SetLockPickingDifficulty_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.OnSuccess
	 * 		Flags  -> ()
	 */
	void ULockpickingWidget::OnSuccess()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.OnSuccess");
		
		ULockpickingWidget_OnSuccess_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.OnFailure
	 * 		Flags  -> ()
	 */
	void ULockpickingWidget::OnFailure()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.OnFailure");
		
		ULockpickingWidget_OnFailure_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.HideInfo
	 * 		Flags  -> ()
	 */
	void ULockpickingWidget::HideInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.HideInfo");
		
		ULockpickingWidget_HideInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.GetTensionToolCount
	 * 		Flags  -> ()
	 */
	int32_t ULockpickingWidget::GetTensionToolCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.GetTensionToolCount");
		
		ULockpickingWidget_GetTensionToolCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.GetRemainingTime
	 * 		Flags  -> ()
	 */
	float ULockpickingWidget::GetRemainingTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.GetRemainingTime");
		
		ULockpickingWidget_GetRemainingTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.GetLockpicksCount
	 * 		Flags  -> ()
	 */
	int32_t ULockpickingWidget::GetLockpicksCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.GetLockpicksCount");
		
		ULockpickingWidget_GetLockpicksCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.GetFamePoints
	 * 		Flags  -> ()
	 */
	int32_t ULockpickingWidget::GetFamePoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.GetFamePoints");
		
		ULockpickingWidget_GetFamePoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.LockpickingWidget.GetDuration
	 * 		Flags  -> ()
	 */
	float ULockpickingWidget::GetDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.LockpickingWidget.GetDuration");
		
		ULockpickingWidget_GetDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULockpickingWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockpickingWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockpickingWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULockpickItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockpickItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LockpickItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMessageBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMessageBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MessageBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ULogoutMessageBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULogoutMessageBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.LogoutMessageBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MainMenu.OnSingleplayerClicked
	 * 		Flags  -> ()
	 */
	void UMainMenu::OnSingleplayerClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MainMenu.OnSingleplayerClicked");
		
		UMainMenu_OnSingleplayerClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MainMenu.OnQuitClicked
	 * 		Flags  -> ()
	 */
	void UMainMenu::OnQuitClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MainMenu.OnQuitClicked");
		
		UMainMenu_OnQuitClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MainMenu.OnOptionsClicked
	 * 		Flags  -> ()
	 */
	void UMainMenu::OnOptionsClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MainMenu.OnOptionsClicked");
		
		UMainMenu_OnOptionsClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MainMenu.OnMultiplayerClicked
	 * 		Flags  -> ()
	 */
	void UMainMenu::OnMultiplayerClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MainMenu.OnMultiplayerClicked");
		
		UMainMenu_OnMultiplayerClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MainMenu.OnContinueClicked
	 * 		Flags  -> ()
	 */
	void UMainMenu::OnContinueClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MainMenu.OnContinueClicked");
		
		UMainMenu_OnContinueClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMainMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMainMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MainMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMenuGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMenuGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MenuGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMainMenuGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMainMenuGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MainMenuGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMalfunctionsContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMalfunctionsContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MalfunctionsContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MalfunctionWidget.ExecuteAction
	 * 		Flags  -> ()
	 */
	void UMalfunctionWidget::ExecuteAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MalfunctionWidget.ExecuteAction");
		
		UMalfunctionWidget_ExecuteAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMalfunctionWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMalfunctionWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MalfunctionWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleMarkersData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleMarkersData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleMarkersData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleMarkersRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleMarkersRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleMarkersRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleMarkersResponse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleMarkersResponse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleMarkersResponse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMasterMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMasterMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MasterMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MathStatics.NormalizeRotator
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRotator                                    Rotator                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	struct FRotator UMathStatics::NormalizeRotator(const struct FRotator& Rotator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MathStatics.NormalizeRotator");
		
		UMathStatics_NormalizeRotator_Params params {};
		params.Rotator = Rotator;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MathStatics.LineBoxIntersection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     HitLocation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBox                                        Box                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Start                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     End                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     startToEnd                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UMathStatics::LineBoxIntersection(struct FVector* HitLocation, const struct FBox& Box, const struct FVector& Start, const struct FVector& End, const struct FVector& startToEnd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MathStatics.LineBoxIntersection");
		
		UMathStatics_LineBoxIntersection_Params params {};
		params.Box = Box;
		params.Start = Start;
		params.End = End;
		params.startToEnd = startToEnd;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (HitLocation != nullptr)
			*HitLocation = params.HitLocation;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MathStatics.IsPointWithinCircle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   circleCenter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              circleRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UMathStatics::IsPointWithinCircle(const struct FVector2D& Point, const struct FVector2D& circleCenter, float circleRadius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MathStatics.IsPointWithinCircle");
		
		UMathStatics_IsPointWithinCircle_Params params {};
		params.Point = Point;
		params.circleCenter = circleCenter;
		params.circleRadius = circleRadius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MathStatics.GetRandomPointWithinTwoCircles
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   centerA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              radiusA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   centerB                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              radiusB                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector2D UMathStatics::GetRandomPointWithinTwoCircles(const struct FVector2D& centerA, float radiusA, const struct FVector2D& centerB, float radiusB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MathStatics.GetRandomPointWithinTwoCircles");
		
		UMathStatics_GetRandomPointWithinTwoCircles_Params params {};
		params.centerA = centerA;
		params.radiusA = radiusA;
		params.centerB = centerB;
		params.radiusB = radiusB;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MathStatics.GetRandomPointWithinCircle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   Center                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector2D UMathStatics::GetRandomPointWithinCircle(const struct FVector2D& Center, float Radius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MathStatics.GetRandomPointWithinCircle");
		
		UMathStatics_GetRandomPointWithinCircle_Params params {};
		params.Center = Center;
		params.Radius = Radius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MathStatics.GetCircleYForX
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              X                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   Center                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Up                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UMathStatics::GetCircleYForX(float X, const struct FVector2D& Center, float Radius, bool Up)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MathStatics.GetCircleYForX");
		
		UMathStatics_GetCircleYForX_Params params {};
		params.X = X;
		params.Center = Center;
		params.Radius = Radius;
		params.Up = Up;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MathStatics.AreCirclesIntersecting
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   centerA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              radiusA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   centerB                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              radiusB                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               onlyEdge                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UMathStatics::AreCirclesIntersecting(const struct FVector2D& centerA, float radiusA, const struct FVector2D& centerB, float radiusB, bool onlyEdge)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MathStatics.AreCirclesIntersecting");
		
		UMathStatics_AreCirclesIntersecting_Params params {};
		params.centerA = centerA;
		params.radiusA = radiusA;
		params.centerB = centerB;
		params.radiusB = radiusB;
		params.onlyEdge = onlyEdge;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMathStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMathStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MathStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MechanoidsManager.Drone_OnDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMechanoidsManager::Drone_OnDestroyed(class AActor* sender)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MechanoidsManager.Drone_OnDestroyed");
		
		AMechanoidsManager_Drone_OnDestroyed_Params params {};
		params.sender = sender;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMechanoidsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMechanoidsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MechanoidsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMedicalItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMedicalItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MedicalItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderService.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderService::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderService");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMedicalService.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMedicalService::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MedicalService");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMedicalSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMedicalSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MedicalSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMedicationItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMedicationItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MedicationItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeleeAttackCollisionCapsule.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeAttackCollisionCapsule::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeleeAttackCollisionCapsule");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeCombatComponent.ToggleCombatMode
	 * 		Flags  -> ()
	 */
	void UMeleeCombatComponent::ToggleCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeCombatComponent.ToggleCombatMode");
		
		UMeleeCombatComponent_ToggleCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeCombatComponent.SetIsInCombatMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMeleeCombatComponent::SetIsInCombatMode(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeCombatComponent.SetIsInCombatMode");
		
		UMeleeCombatComponent_SetIsInCombatMode_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeCombatComponent.Server_StartMeleeAttack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FMeleeAction                                Action                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UMeleeCombatComponent::Server_StartMeleeAttack(const struct FMeleeAction& Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeCombatComponent.Server_StartMeleeAttack");
		
		UMeleeCombatComponent_Server_StartMeleeAttack_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeCombatComponent.Server_EnablePendingBlockOrDodge
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMeleeCombatComponent::Server_EnablePendingBlockOrDodge(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeCombatComponent.Server_EnablePendingBlockOrDodge");
		
		UMeleeCombatComponent_Server_EnablePendingBlockOrDodge_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeCombatComponent.Server_Dodge
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FMeleeAction                                Action                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UMeleeCombatComponent::Server_Dodge(const struct FMeleeAction& Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeCombatComponent.Server_Dodge");
		
		UMeleeCombatComponent_Server_Dodge_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeCombatComponent.NetMulticast_ExecuteMeleeAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FMeleeAction                                Action                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UMeleeCombatComponent::NetMulticast_ExecuteMeleeAction(const struct FMeleeAction& Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeCombatComponent.NetMulticast_ExecuteMeleeAction");
		
		UMeleeCombatComponent_NetMulticast_ExecuteMeleeAction_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeCombatComponent.IsHoldingBlock
	 * 		Flags  -> ()
	 */
	bool UMeleeCombatComponent::IsHoldingBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeCombatComponent.IsHoldingBlock");
		
		UMeleeCombatComponent_IsHoldingBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeCombatComponent.GetIsInCombatMode
	 * 		Flags  -> ()
	 */
	bool UMeleeCombatComponent::GetIsInCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeCombatComponent.GetIsInCombatMode");
		
		UMeleeCombatComponent_GetIsInCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeleeCombatComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeCombatComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeleeCombatComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeleeDetectHitCollisionCapsule.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeDetectHitCollisionCapsule::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeleeDetectHitCollisionCapsule");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeInterface.OnBeingAttackedByMelee
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FAttackedByMeleeData                        Data                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UMeleeInterface::OnBeingAttackedByMelee(const struct FAttackedByMeleeData& Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeInterface.OnBeingAttackedByMelee");
		
		UMeleeInterface_OnBeingAttackedByMelee_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeInterface.CheckMeleeAttackCapsuleCollision
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCheckMeleeAttackCapsuleCollisionData       Data                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UMeleeInterface::CheckMeleeAttackCapsuleCollision(const struct FCheckMeleeAttackCapsuleCollisionData& Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeInterface.CheckMeleeAttackCapsuleCollision");
		
		UMeleeInterface_CheckMeleeAttackCapsuleCollision_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeInterface.CanHoldBlock
	 * 		Flags  -> ()
	 */
	bool UMeleeInterface::CanHoldBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeInterface.CanHoldBlock");
		
		UMeleeInterface_CanHoldBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeleeInterface.CanBeAttackedByMelee
	 * 		Flags  -> ()
	 */
	bool UMeleeInterface::CanBeAttackedByMelee()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeleeInterface.CanBeAttackedByMelee");
		
		UMeleeInterface_CanBeAttackedByMelee_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeleeInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeleeInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeleeSkillAnimationsPreset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeSkillAnimationsPreset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeleeSkillAnimationsPreset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeleeStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeleeStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeleeWeaponItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeWeaponItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeleeWeaponItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeleeWeaponsSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeWeaponsSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeleeWeaponsSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMenuButton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMenuButton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MenuButton");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMenuHelpers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMenuHelpers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MenuHelpers");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MenuPlayerController.InputComponent_MouseReleased
	 * 		Flags  -> ()
	 */
	void AMenuPlayerController::InputComponent_MouseReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MenuPlayerController.InputComponent_MouseReleased");
		
		AMenuPlayerController_InputComponent_MouseReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MenuPlayerController.InputComponent_MousePressed
	 * 		Flags  -> ()
	 */
	void AMenuPlayerController::InputComponent_MousePressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MenuPlayerController.InputComponent_MousePressed");
		
		AMenuPlayerController_InputComponent_MousePressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMenuPlayerController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMenuPlayerController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MenuPlayerController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MeshHitZones.IsHitZoneActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            zoneIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UMeshHitZones::IsHitZoneActive(int32_t zoneIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MeshHitZones.IsHitZoneActive");
		
		UMeshHitZones_IsHitZoneActive_Params params {};
		params.zoneIndex = zoneIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeshHitZones.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeshHitZones::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MeshHitZones");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_GraphWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_GraphWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_GraphWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_GraphWidget_EKG.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_GraphWidget_EKG::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_GraphWidget_EKG");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_GraphWidget_RR.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_GraphWidget_RR::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_GraphWidget_RR");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_GraphWidget_SPO2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_GraphWidget_SPO2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_GraphWidget_SPO2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_GraphWidget_ST.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_GraphWidget_ST::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_GraphWidget_ST");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_GraphWidget_TEMP.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_GraphWidget_TEMP::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_GraphWidget_TEMP");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_BCU_ICU_StatsPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_BCU_ICU_StatsPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_BCU_ICU_StatsPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Metabolism_BCU_ICU_Monitor.OnICUStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isCollapsed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMetabolism_BCU_ICU_Monitor::OnICUStateChanged(bool isCollapsed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Metabolism_BCU_ICU_Monitor.OnICUStateChanged");
		
		UMetabolism_BCU_ICU_Monitor_OnICUStateChanged_Params params {};
		params.isCollapsed = isCollapsed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_BCU_ICU_Monitor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_BCU_ICU_Monitor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_BCU_ICU_Monitor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_Expandable_Stats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_Expandable_Stats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_Expandable_Stats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_EKG_Stats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_EKG_Stats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_EKG_Stats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_ST_Stats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_ST_Stats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_ST_Stats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_SPO2_Stats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_SPO2_Stats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_SPO2_Stats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_RR_Stats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_RR_Stats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_RR_Stats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolism_ICU_TEMP_Stats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolism_ICU_TEMP_Stats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Metabolism_ICU_TEMP_Stats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismAdvancedProgressBar.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismAdvancedProgressBar::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismAdvancedProgressBar");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismBasicInfoPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismBasicInfoPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismBasicInfoPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismBasicInfoPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismBasicInfoPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismBasicInfoPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismBasicInfoPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismBodyEffectProgressBar.OnInteractionButtonClicked
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsChecked                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMetabolismBodyEffectProgressBar::OnInteractionButtonClicked(bool IsChecked)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismBodyEffectProgressBar.OnInteractionButtonClicked");
		
		UMetabolismBodyEffectProgressBar_OnInteractionButtonClicked_Params params {};
		params.IsChecked = IsChecked;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismBodyEffectProgressBar.GetToolTipWidget
	 * 		Flags  -> ()
	 */
	class UWidget* UMetabolismBodyEffectProgressBar::GetToolTipWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismBodyEffectProgressBar.GetToolTipWidget");
		
		UMetabolismBodyEffectProgressBar_GetToolTipWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismBodyEffectProgressBar.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismBodyEffectProgressBar::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismBodyEffectProgressBar");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismBodyOverviewPanel.OnTreat
	 * 		Flags  -> ()
	 */
	void UMetabolismBodyOverviewPanel::OnTreat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismBodyOverviewPanel.OnTreat");
		
		UMetabolismBodyOverviewPanel_OnTreat_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismBodyOverviewPanel.OnClearSelection
	 * 		Flags  -> ()
	 */
	void UMetabolismBodyOverviewPanel::OnClearSelection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismBodyOverviewPanel.OnClearSelection");
		
		UMetabolismBodyOverviewPanel_OnClearSelection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismBodyOverviewPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismBodyOverviewPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismBodyOverviewPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismBodyOverviewPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismBodyOverviewPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismBodyOverviewPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismBodyOverviewPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismBodyReservesPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismBodyReservesPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismBodyReservesPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismBodyReservesPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismBodyReservesPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismBodyReservesPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismBodyReservesPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismBodyStatsPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismBodyStatsPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismBodyStatsPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismBodyStatsPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismBodyStatsPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismBodyStatsPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismBodyStatsPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismContainerSetDisplayPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismContainerSetDisplayPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismContainerSetDisplayPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismCurrentStatDark.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismCurrentStatDark::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismCurrentStatDark");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismCurrentStatLight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismCurrentStatLight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismCurrentStatLight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismDigestionPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismDigestionPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismDigestionPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismDigestionPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismDigestionPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismDigestionPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismDigestionPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHealthPanel.OnResetHealthPanelToSelf
	 * 		Flags  -> ()
	 */
	void UMetabolismHealthPanel::OnResetHealthPanelToSelf()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHealthPanel.OnResetHealthPanelToSelf");
		
		UMetabolismHealthPanel_OnResetHealthPanelToSelf_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismHealthPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismHealthPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismHealthPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_Torso
	 * 		Flags  -> ()
	 */
	void UMetabolismHumanBodyPanel::OnClickRegion_Torso()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_Torso");
		
		UMetabolismHumanBodyPanel_OnClickRegion_Torso_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightLeg
	 * 		Flags  -> ()
	 */
	void UMetabolismHumanBodyPanel::OnClickRegion_RightLeg()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightLeg");
		
		UMetabolismHumanBodyPanel_OnClickRegion_RightLeg_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightArm
	 * 		Flags  -> ()
	 */
	void UMetabolismHumanBodyPanel::OnClickRegion_RightArm()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightArm");
		
		UMetabolismHumanBodyPanel_OnClickRegion_RightArm_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftLeg
	 * 		Flags  -> ()
	 */
	void UMetabolismHumanBodyPanel::OnClickRegion_LeftLeg()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftLeg");
		
		UMetabolismHumanBodyPanel_OnClickRegion_LeftLeg_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftArm
	 * 		Flags  -> ()
	 */
	void UMetabolismHumanBodyPanel::OnClickRegion_LeftArm()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftArm");
		
		UMetabolismHumanBodyPanel_OnClickRegion_LeftArm_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_Head
	 * 		Flags  -> ()
	 */
	void UMetabolismHumanBodyPanel::OnClickRegion_Head()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_Head");
		
		UMetabolismHumanBodyPanel_OnClickRegion_Head_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_EntireBody
	 * 		Flags  -> ()
	 */
	void UMetabolismHumanBodyPanel::OnClickRegion_EntireBody()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_EntireBody");
		
		UMetabolismHumanBodyPanel_OnClickRegion_EntireBody_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_EntireBody
	 * 		Flags  -> ()
	 */
	void UMetabolismHumanBodyPanel::OnAnimationFinished_EntireBody()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_EntireBody");
		
		UMetabolismHumanBodyPanel_OnAnimationFinished_EntireBody_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_BodyRegion
	 * 		Flags  -> ()
	 */
	void UMetabolismHumanBodyPanel::OnAnimationFinished_BodyRegion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_BodyRegion");
		
		UMetabolismHumanBodyPanel_OnAnimationFinished_BodyRegion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismHumanBodyPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismHumanBodyPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismHumanBodyPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismLeftPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismLeftPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismLeftPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismLightItemDisplayPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismLightItemDisplayPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismLightItemDisplayPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismMacronutrientReserve.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismMacronutrientReserve::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismMacronutrientReserve");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismMacronutrientReservesPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismMacronutrientReservesPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismMacronutrientReservesPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismMacronutrientReservesPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismMacronutrientReservesPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismMacronutrientReservesPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismMacronutrientReservesPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismMineralsPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismMineralsPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismMineralsPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismMineralsPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismMineralsPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismMineralsPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismMineralsPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismNutritionPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismNutritionPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismNutritionPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismNutritionPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismNutritionPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismNutritionPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismNutritionPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismPerformanceDataPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismPerformanceDataPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismPerformanceDataPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismPerformanceDataPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismPerformanceDataPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismPerformanceDataPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismPerformanceDataPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismRadialAttributeProgressBar.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismRadialAttributeProgressBar::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismRadialAttributeProgressBar");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismRadialProgressBar.GetToolTipWidget
	 * 		Flags  -> ()
	 */
	class UWidget* UMetabolismRadialProgressBar::GetToolTipWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismRadialProgressBar.GetToolTipWidget");
		
		UMetabolismRadialProgressBar_GetToolTipWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismRadialProgressBar.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismRadialProgressBar::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismRadialProgressBar");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismRightPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismRightPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismRightPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismSave.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismSave::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismSave");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismSegmentedProgressBar.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismSegmentedProgressBar::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismSegmentedProgressBar");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismSkillProgressBar.GetToolTipWidget
	 * 		Flags  -> ()
	 */
	class UWidget* UMetabolismSkillProgressBar::GetToolTipWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismSkillProgressBar.GetToolTipWidget");
		
		UMetabolismSkillProgressBar_GetToolTipWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismSkillProgressBar.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismSkillProgressBar::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismSkillProgressBar");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismSkillProgressionPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismSkillProgressionPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismSkillProgressionPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismSkillProgressionTab.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismSkillProgressionTab::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismSkillProgressionTab");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismStatsPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismStatsPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismStatsPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismStatsPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismStatsPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismStatsPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismStatsPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismSymptomTitle.GetToolTipWidget
	 * 		Flags  -> ()
	 */
	class UWidget* UMetabolismSymptomTitle::GetToolTipWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismSymptomTitle.GetToolTipWidget");
		
		UMetabolismSymptomTitle_GetToolTipWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismSymptomTitle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismSymptomTitle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismSymptomTitle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismTissueGroupCheckbox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismTissueGroupCheckbox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismTissueGroupCheckbox");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismTitleAndAPB.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismTitleAndAPB::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismTitleAndAPB");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismTreatmentItemsPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismTreatmentItemsPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismTreatmentItemsPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismTreatmentPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismTreatmentPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismTreatmentPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismVitaminAndMineralReserve.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismVitaminAndMineralReserve::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismVitaminAndMineralReserve");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetabolismVitaminsPanel.FindOrCreateAttributeTooltip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerUIAttribute                               Attribute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UMetabolismVitaminsPanel::FindOrCreateAttributeTooltip(EPrisonerUIAttribute Attribute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetabolismVitaminsPanel.FindOrCreateAttributeTooltip");
		
		UMetabolismVitaminsPanel_FindOrCreateAttributeTooltip_Params params {};
		params.Attribute = Attribute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMetabolismVitaminsPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMetabolismVitaminsPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetabolismVitaminsPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetalDetector.SetDetectionFactor_OnRep
	 * 		Flags  -> ()
	 */
	void AMetalDetector::SetDetectionFactor_OnRep()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetalDetector.SetDetectionFactor_OnRep");
		
		AMetalDetector_SetDetectionFactor_OnRep_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetalDetector.Server_ToggleTurnedOn
	 * 		Flags  -> ()
	 */
	void AMetalDetector::Server_ToggleTurnedOn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetalDetector.Server_ToggleTurnedOn");
		
		AMetalDetector_Server_ToggleTurnedOn_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetalDetector.Server_SetDetectionFactor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              newDetectionFactor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMetalDetector::Server_SetDetectionFactor(float newDetectionFactor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetalDetector.Server_SetDetectionFactor");
		
		AMetalDetector_Server_SetDetectionFactor_Params params {};
		params.newDetectionFactor = newDetectionFactor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetalDetector.OnResourceComponentDeactivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMetalDetector::OnResourceComponentDeactivated(class UActorComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetalDetector.OnResourceComponentDeactivated");
		
		AMetalDetector_OnResourceComponentDeactivated_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MetalDetector.OnResourceComponentActivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               wasReset                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMetalDetector::OnResourceComponentActivated(class UActorComponent* Component, bool wasReset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MetalDetector.OnResourceComponentActivated");
		
		AMetalDetector_OnResourceComponentActivated_Params params {};
		params.Component = Component;
		params.wasReset = wasReset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMetalDetector.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMetalDetector::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MetalDetector");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MicInputIndicator.IsPushToTalkEnabled
	 * 		Flags  -> ()
	 */
	bool UMicInputIndicator::IsPushToTalkEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MicInputIndicator.IsPushToTalkEnabled");
		
		UMicInputIndicator_IsPushToTalkEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMicInputIndicator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMicInputIndicator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MicInputIndicator");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.StartAttack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APawn*                                       foe                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AZombie2::StartAttack(class APawn* foe)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.StartAttack");
		
		AZombie2_StartAttack_Params params {};
		params.foe = foe;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.SetStance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EZombieStance                                      Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::SetStance(EZombieStance Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.SetStance");
		
		AZombie2_SetStance_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.SetFoe
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APawn*                                       Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::SetFoe(class APawn* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.SetFoe");
		
		AZombie2_SetFoe_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.Server_StartAttack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            attackDescriptionIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::Server_StartAttack(int32_t attackDescriptionIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.Server_StartAttack");
		
		AZombie2_Server_StartAttack_Params params {};
		params.attackDescriptionIndex = attackDescriptionIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.Server_SetStance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EZombieStance                                      Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::Server_SetStance(EZombieStance Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.Server_SetStance");
		
		AZombie2_Server_SetStance_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.Server_PlayTurnMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EZombieTurnMontage                                 turnMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              turnAngle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::Server_PlayTurnMontage(EZombieTurnMontage turnMontage, float turnAngle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.Server_PlayTurnMontage");
		
		AZombie2_Server_PlayTurnMontage_Params params {};
		params.turnMontage = turnMontage;
		params.turnAngle = turnAngle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.Server_PlayMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::Server_PlayMontage(class UAnimMontage* Montage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.Server_PlayMontage");
		
		AZombie2_Server_PlayMontage_Params params {};
		params.Montage = Montage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.RecoverFromRagdoll
	 * 		Flags  -> ()
	 */
	void AZombie2::RecoverFromRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.RecoverFromRagdoll");
		
		AZombie2_RecoverFromRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.OnRep_Stance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EZombieStance                                      OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::OnRep_Stance(EZombieStance OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.OnRep_Stance");
		
		AZombie2_OnRep_Stance_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.OnRep_IsSearched
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::OnRep_IsSearched(bool OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.OnRep_IsSearched");
		
		AZombie2_OnRep_IsSearched_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.OnRep_Health
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::OnRep_Health(float OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.OnRep_Health");
		
		AZombie2_OnRep_Health_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.NetMulticast_StartAttack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            attackDescriptionIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::NetMulticast_StartAttack(int32_t attackDescriptionIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.NetMulticast_StartAttack");
		
		AZombie2_NetMulticast_StartAttack_Params params {};
		params.attackDescriptionIndex = attackDescriptionIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.NetMulticast_PlayTurnMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EZombieTurnMontage                                 turnMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              turnAngle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::NetMulticast_PlayTurnMontage(EZombieTurnMontage turnMontage, float turnAngle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.NetMulticast_PlayTurnMontage");
		
		AZombie2_NetMulticast_PlayTurnMontage_Params params {};
		params.turnMontage = turnMontage;
		params.turnAngle = turnAngle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.NetMulticast_PlaySound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::NetMulticast_PlaySound(class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.NetMulticast_PlaySound");
		
		AZombie2_NetMulticast_PlaySound_Params params {};
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.NetMulticast_PlayMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AZombie2::NetMulticast_PlayMontage(class UAnimMontage* Montage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.NetMulticast_PlayMontage");
		
		AZombie2_NetMulticast_PlayMontage_Params params {};
		params.Montage = Montage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.NetMulticast_HandleLanded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     ImpactVelocity                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AZombie2::NetMulticast_HandleLanded(const struct FVector& ImpactVelocity, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.NetMulticast_HandleLanded");
		
		AZombie2_NetMulticast_HandleLanded_Params params {};
		params.ImpactVelocity = ImpactVelocity;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.IsRagdollAtRest
	 * 		Flags  -> ()
	 */
	bool AZombie2::IsRagdollAtRest()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.IsRagdollAtRest");
		
		AZombie2_IsRagdollAtRest_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.IsInRagdoll
	 * 		Flags  -> ()
	 */
	bool AZombie2::IsInRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.IsInRagdoll");
		
		AZombie2_IsInRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.IsAttacking
	 * 		Flags  -> ()
	 */
	bool AZombie2::IsAttacking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.IsAttacking");
		
		AZombie2_IsAttacking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GoToRagdoll
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FZombieRagdollAutoRecovery                  autoRecovery                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AZombie2::GoToRagdoll(const struct FZombieRagdollAutoRecovery& autoRecovery)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GoToRagdoll");
		
		AZombie2_GoToRagdoll_Params params {};
		params.autoRecovery = autoRecovery;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GetZombieSoundComponent
	 * 		Flags  -> ()
	 */
	class UZombieSoundComponent2* AZombie2::GetZombieSoundComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GetZombieSoundComponent");
		
		AZombie2_GetZombieSoundComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GetZombieMovement
	 * 		Flags  -> ()
	 */
	class UZombieMovementComponent2* AZombie2::GetZombieMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GetZombieMovement");
		
		AZombie2_GetZombieMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GetStance
	 * 		Flags  -> ()
	 */
	EZombieStance AZombie2::GetStance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GetStance");
		
		AZombie2_GetStance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GetMaxHealth
	 * 		Flags  -> ()
	 */
	float AZombie2::GetMaxHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GetMaxHealth");
		
		AZombie2_GetMaxHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GetHitReactComponent
	 * 		Flags  -> ()
	 */
	class UHitReactComponent* AZombie2::GetHitReactComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GetHitReactComponent");
		
		AZombie2_GetHitReactComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GetHealthRatio
	 * 		Flags  -> ()
	 */
	float AZombie2::GetHealthRatio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GetHealthRatio");
		
		AZombie2_GetHealthRatio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GetHealth
	 * 		Flags  -> ()
	 */
	float AZombie2::GetHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GetHealth");
		
		AZombie2_GetHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GetFoe
	 * 		Flags  -> ()
	 */
	class APawn* AZombie2::GetFoe()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GetFoe");
		
		AZombie2_GetFoe_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.GetAimOffset
	 * 		Flags  -> ()
	 */
	struct FRotator AZombie2::GetAimOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.GetAimOffset");
		
		AZombie2_GetAimOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.CanStartAttack
	 * 		Flags  -> ()
	 */
	bool AZombie2::CanStartAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.CanStartAttack");
		
		AZombie2_CanStartAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Zombie2.BaseInteractionComponent_OnBaseInteractionEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBaseInteractionComponent*                   Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBaseInteractionEvent                       BaseInteractionEvent                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AZombie2::BaseInteractionComponent_OnBaseInteractionEvent(class UBaseInteractionComponent* Component, const struct FBaseInteractionEvent& BaseInteractionEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Zombie2.BaseInteractionComponent_OnBaseInteractionEvent");
		
		AZombie2_BaseInteractionComponent_OnBaseInteractionEvent_Params params {};
		params.Component = Component;
		params.BaseInteractionEvent = BaseInteractionEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AZombie2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AZombie2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Zombie2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMiniatureZombie.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMiniatureZombie::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MiniatureZombie");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.UtcToLocalDateTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDateTime                                   utc                                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDateTime UMiscStatics::UtcToLocalDateTime(const struct FDateTime& utc)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.UtcToLocalDateTime");
		
		UMiscStatics_UtcToLocalDateTime_Params params {};
		params.utc = utc;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.SortSkillsByLevelAndExperience
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class USkill*>                              Skills                                                     (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UMiscStatics::SortSkillsByLevelAndExperience(TArray<class USkill*>* Skills)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.SortSkillsByLevelAndExperience");
		
		UMiscStatics_SortSkillsByLevelAndExperience_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Skills != nullptr)
			*Skills = params.Skills;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.SendChatLineToAll
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Text                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMiscStatics::SendChatLineToAll(class UObject* WorldContextObject, const class FString& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.SendChatLineToAll");
		
		UMiscStatics_SendChatLineToAll_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.ResolveObjectPathForPIE
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContext                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSoftObjectPath UMiscStatics::ResolveObjectPathForPIE(class UObject* WorldContext)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.ResolveObjectPathForPIE");
		
		UMiscStatics_ResolveObjectPathForPIE_Params params {};
		params.WorldContext = WorldContext;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.PasteLocationAndRotationFromClipboard
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UMiscStatics::PasteLocationAndRotationFromClipboard(struct FVector* Location, struct FRotator* Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.PasteLocationAndRotationFromClipboard");
		
		UMiscStatics_PasteLocationAndRotationFromClipboard_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Location != nullptr)
			*Location = params.Location;
		if (Rotation != nullptr)
			*Rotation = params.Rotation;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.ParseVectorFromString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      string                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     outVector                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UMiscStatics::ParseVectorFromString(const class FString& string, struct FVector* outVector)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.ParseVectorFromString");
		
		UMiscStatics_ParseVectorFromString_Params params {};
		params.string = string;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (outVector != nullptr)
			*outVector = params.outVector;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.ParseTransformFromString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      string                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  Transform                                                  (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UMiscStatics::ParseTransformFromString(const class FString& string, struct FTransform* Transform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.ParseTransformFromString");
		
		UMiscStatics_ParseTransformFromString_Params params {};
		params.string = string;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Transform != nullptr)
			*Transform = params.Transform;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.LocalToUtcDateTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDateTime                                   Local                                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDateTime UMiscStatics::LocalToUtcDateTime(const struct FDateTime& Local)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.LocalToUtcDateTime");
		
		UMiscStatics_LocalToUtcDateTime_Params params {};
		params.Local = Local;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.IsUserDeveloper
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      UserId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UMiscStatics::IsUserDeveloper(const class FString& UserId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.IsUserDeveloper");
		
		UMiscStatics_IsUserDeveloper_Params params {};
		params.UserId = UserId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.GetLineBatcher
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPersistentLines                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LifeTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDepthIsForeground                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ULineBatchComponent* UMiscStatics::GetLineBatcher(class UObject* WorldContextObject, bool bPersistentLines, float LifeTime, bool bDepthIsForeground)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.GetLineBatcher");
		
		UMiscStatics_GetLineBatcher_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.bPersistentLines = bPersistentLines;
		params.LifeTime = LifeTime;
		params.bDepthIsForeground = bDepthIsForeground;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.GetGameVersion
	 * 		Flags  -> ()
	 */
	class FString UMiscStatics::GetGameVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.GetGameVersion");
		
		UMiscStatics_GetGameVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.GetDeveloperUsers
	 * 		Flags  -> ()
	 */
	void UMiscStatics::GetDeveloperUsers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.GetDeveloperUsers");
		
		UMiscStatics_GetDeveloperUsers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.GetClassDefaultObject
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ObjectClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UObject* UMiscStatics::GetClassDefaultObject(class UClass* ObjectClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.GetClassDefaultObject");
		
		UMiscStatics_GetClassDefaultObject_Params params {};
		params.ObjectClass = ObjectClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.DrawLine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineStart                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineEnd                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               persistentLines                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LifeTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      DepthPriority                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Thickness                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMiscStatics::DrawLine(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Color, bool persistentLines, float LifeTime, unsigned char DepthPriority, float Thickness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.DrawLine");
		
		UMiscStatics_DrawLine_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.LineStart = LineStart;
		params.LineEnd = LineEnd;
		params.Color = Color;
		params.persistentLines = persistentLines;
		params.LifeTime = LifeTime;
		params.DepthPriority = DepthPriority;
		params.Thickness = Thickness;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.DrawDebugNumber
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Number                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Thickness                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               autoSize                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMiscStatics::DrawDebugNumber(class UObject* WorldContextObject, float Number, const struct FVector& Location, const struct FColor& Color, float Size, float Duration, float Thickness, bool autoSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.DrawDebugNumber");
		
		UMiscStatics_DrawDebugNumber_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Number = Number;
		params.Location = Location;
		params.Color = Color;
		params.Size = Size;
		params.Duration = Duration;
		params.Thickness = Thickness;
		params.autoSize = autoSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.DrawDebugDigit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            digit                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Thickness                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMiscStatics::DrawDebugDigit(class UObject* WorldContextObject, int32_t digit, const struct FVector& Location, const struct FRotator& Rotation, const struct FColor& Color, float Size, float Duration, float Thickness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.DrawDebugDigit");
		
		UMiscStatics_DrawDebugDigit_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.digit = digit;
		params.Location = Location;
		params.Rotation = Rotation;
		params.Color = Color;
		params.Size = Size;
		params.Duration = Duration;
		params.Thickness = Thickness;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.DrawCircle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Center                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     X                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Y                                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              numberOfSides                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               persistentLines                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LifeTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      DepthPriority                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Thickness                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMiscStatics::DrawCircle(class UObject* WorldContextObject, const struct FVector& Center, const struct FVector& X, const struct FVector& Y, float Radius, float numberOfSides, const struct FColor& Color, bool persistentLines, float LifeTime, unsigned char DepthPriority, float Thickness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.DrawCircle");
		
		UMiscStatics_DrawCircle_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Center = Center;
		params.X = X;
		params.Y = Y;
		params.Radius = Radius;
		params.numberOfSides = numberOfSides;
		params.Color = Color;
		params.persistentLines = persistentLines;
		params.LifeTime = LifeTime;
		params.DepthPriority = DepthPriority;
		params.Thickness = Thickness;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.CopyLocationAndRotationToClipboard
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UMiscStatics::CopyLocationAndRotationToClipboard(const struct FVector& Location, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.CopyLocationAndRotationToClipboard");
		
		UMiscStatics_CopyLocationAndRotationToClipboard_Params params {};
		params.Location = Location;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MiscStatics.AddChatLine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Text                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMiscStatics::AddChatLine(class UObject* WorldContextObject, const class FString& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MiscStatics.AddChatLine");
		
		UMiscStatics_AddChatLine_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMiscStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMiscStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MiscStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.Server_NotifyObjectiveWidgetInitialized
	 * 		Flags  -> ()
	 */
	void AMission::Server_NotifyObjectiveWidgetInitialized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.Server_NotifyObjectiveWidgetInitialized");
		
		AMission_Server_NotifyObjectiveWidgetInitialized_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.Server_NotifyObjectivesFinished
	 * 		Flags  -> ()
	 */
	void AMission::Server_NotifyObjectivesFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.Server_NotifyObjectivesFinished");
		
		AMission_Server_NotifyObjectivesFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.Server_NotifyObjectiveDone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AObjective*                                  Objective                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EObjectiveState                                    ObjectiveState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMission::Server_NotifyObjectiveDone(class AObjective* Objective, EObjectiveState ObjectiveState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.Server_NotifyObjectiveDone");
		
		AMission_Server_NotifyObjectiveDone_Params params {};
		params.Objective = Objective;
		params.ObjectiveState = ObjectiveState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnRep_MissionStateChanged
	 * 		Flags  -> ()
	 */
	void AMission::OnRep_MissionStateChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnRep_MissionStateChanged");
		
		AMission_OnRep_MissionStateChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnRep_MissionObjectives
	 * 		Flags  -> ()
	 */
	void AMission::OnRep_MissionObjectives()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnRep_MissionObjectives");
		
		AMission_OnRep_MissionObjectives_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnRep_ActiveObjectiveChanged
	 * 		Flags  -> ()
	 */
	void AMission::OnRep_ActiveObjectiveChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnRep_ActiveObjectiveChanged");
		
		AMission_OnRep_ActiveObjectiveChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnMissionUnavailable
	 * 		Flags  -> ()
	 */
	void AMission::OnMissionUnavailable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnMissionUnavailable");
		
		AMission_OnMissionUnavailable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnMissionStarted
	 * 		Flags  -> ()
	 */
	void AMission::OnMissionStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnMissionStarted");
		
		AMission_OnMissionStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnMissionLevelLoaded
	 * 		Flags  -> ()
	 */
	void AMission::OnMissionLevelLoaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnMissionLevelLoaded");
		
		AMission_OnMissionLevelLoaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnMissionFailed
	 * 		Flags  -> ()
	 */
	void AMission::OnMissionFailed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnMissionFailed");
		
		AMission_OnMissionFailed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnMissionCompleted
	 * 		Flags  -> ()
	 */
	void AMission::OnMissionCompleted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnMissionCompleted");
		
		AMission_OnMissionCompleted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnMissionBelated
	 * 		Flags  -> ()
	 */
	void AMission::OnMissionBelated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnMissionBelated");
		
		AMission_OnMissionBelated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mission.OnMissionAvailable
	 * 		Flags  -> ()
	 */
	void AMission::OnMissionAvailable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mission.OnMissionAvailable");
		
		AMission_OnMissionAvailable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMission.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMission::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Mission");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionContainerWidget.StartObjectiveAnimation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EObjectiveAnimationState                           AnimationState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMissionContainerWidget::StartObjectiveAnimation(EObjectiveAnimationState AnimationState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionContainerWidget.StartObjectiveAnimation");
		
		UMissionContainerWidget_StartObjectiveAnimation_Params params {};
		params.AnimationState = AnimationState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionContainerWidget.GetStartObjectiveAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UMissionContainerWidget::GetStartObjectiveAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionContainerWidget.GetStartObjectiveAnimation");
		
		UMissionContainerWidget_GetStartObjectiveAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionContainerWidget.GetCompleteObjectiveAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UMissionContainerWidget::GetCompleteObjectiveAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionContainerWidget.GetCompleteObjectiveAnimation");
		
		UMissionContainerWidget_GetCompleteObjectiveAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMissionContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMissionContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMissionDataGroup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMissionDataGroup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionDataGroup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionDialogueManager.StopAllDialogue
	 * 		Flags  -> ()
	 */
	void AMissionDialogueManager::StopAllDialogue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionDialogueManager.StopAllDialogue");
		
		AMissionDialogueManager_StopAllDialogue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionDialogueManager.PlayNextDialogue
	 * 		Flags  -> ()
	 */
	void AMissionDialogueManager::PlayNextDialogue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionDialogueManager.PlayNextDialogue");
		
		AMissionDialogueManager_PlayNextDialogue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionDialogueManager.OnJournalTabModeOpened
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ETabMode                                           tabMode                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionDialogueManager::OnJournalTabModeOpened(ETabMode tabMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionDialogueManager.OnJournalTabModeOpened");
		
		AMissionDialogueManager_OnJournalTabModeOpened_Params params {};
		params.tabMode = tabMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionDialogueManager.OnJournalTabModeClosed
	 * 		Flags  -> ()
	 */
	void AMissionDialogueManager::OnJournalTabModeClosed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionDialogueManager.OnJournalTabModeClosed");
		
		AMissionDialogueManager_OnJournalTabModeClosed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionDialogueManager.AddToQueue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FDialogueInfo>                       missionDialogue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionDialogueManager::AddToQueue(TArray<struct FDialogueInfo> missionDialogue, bool interrupt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionDialogueManager.AddToQueue");
		
		AMissionDialogueManager_AddToQueue_Params params {};
		params.missionDialogue = missionDialogue;
		params.interrupt = interrupt;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMissionDialogueManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMissionDialogueManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionDialogueManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMissionItemSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMissionItemSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionItemSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionItemWidget.OnExpandButtonClicked
	 * 		Flags  -> ()
	 */
	void UMissionItemWidget::OnExpandButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionItemWidget.OnExpandButtonClicked");
		
		UMissionItemWidget_OnExpandButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMissionItemWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMissionItemWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionItemWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMissionLevelManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMissionLevelManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionLevelManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.UntrackMission
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMissionType                                       MissionType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionManager::UntrackMission(EMissionType MissionType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.UntrackMission");
		
		AMissionManager_UntrackMission_Params params {};
		params.MissionType = MissionType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.SwitchActiveMission
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      missionClass                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionManager::SwitchActiveMission(class UClass* missionClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.SwitchActiveMission");
		
		AMissionManager_SwitchActiveMission_Params params {};
		params.missionClass = missionClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.Server_SendMissionInvitation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AMissionManager*                             Manager                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AMission*                                    Mission                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionManager::Server_SendMissionInvitation(class AMissionManager* Manager, class AMission* Mission)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.Server_SendMissionInvitation");
		
		AMissionManager_Server_SendMissionInvitation_Params params {};
		params.Manager = Manager;
		params.Mission = Mission;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.Server_RewardsAccepted
	 * 		Flags  -> ()
	 */
	void AMissionManager::Server_RewardsAccepted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.Server_RewardsAccepted");
		
		AMissionManager_Server_RewardsAccepted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.Server_DestroyCompletedMission
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AMission*                                    Mission                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionManager::Server_DestroyCompletedMission(class AMission* Mission)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.Server_DestroyCompletedMission");
		
		AMissionManager_Server_DestroyCompletedMission_Params params {};
		params.Mission = Mission;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.Server_AcceptMissionInvitation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AMission*                                    Mission                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               accepted                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionManager::Server_AcceptMissionInvitation(class AMission* Mission, bool accepted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.Server_AcceptMissionInvitation");
		
		AMissionManager_Server_AcceptMissionInvitation_Params params {};
		params.Mission = Mission;
		params.accepted = accepted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.OnRep_MissionManagerStateChanged
	 * 		Flags  -> ()
	 */
	void AMissionManager::OnRep_MissionManagerStateChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.OnRep_MissionManagerStateChanged");
		
		AMissionManager_OnRep_MissionManagerStateChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.OnRep_AvailableMissionChanged
	 * 		Flags  -> ()
	 */
	void AMissionManager::OnRep_AvailableMissionChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.OnRep_AvailableMissionChanged");
		
		AMissionManager_OnRep_AvailableMissionChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.OnRep_ActiveTutorialMissionChanged
	 * 		Flags  -> ()
	 */
	void AMissionManager::OnRep_ActiveTutorialMissionChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.OnRep_ActiveTutorialMissionChanged");
		
		AMissionManager_OnRep_ActiveTutorialMissionChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.OnRep_ActiveSideStoryMissionChanged
	 * 		Flags  -> ()
	 */
	void AMissionManager::OnRep_ActiveSideStoryMissionChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.OnRep_ActiveSideStoryMissionChanged");
		
		AMissionManager_OnRep_ActiveSideStoryMissionChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.OnRep_ActiveMainStoryMissionChanged
	 * 		Flags  -> ()
	 */
	void AMissionManager::OnRep_ActiveMainStoryMissionChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.OnRep_ActiveMainStoryMissionChanged");
		
		AMissionManager_OnRep_ActiveMainStoryMissionChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.IsMissionInvitationReceived
	 * 		Flags  -> ()
	 */
	bool AMissionManager::IsMissionInvitationReceived()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.IsMissionInvitationReceived");
		
		AMissionManager_IsMissionInvitationReceived_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.Client_UpdateMissionsData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      missionClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMissionData                                MissionData                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AMissionManager::Client_UpdateMissionsData(class UClass* missionClass, const struct FMissionData& MissionData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.Client_UpdateMissionsData");
		
		AMissionManager_Client_UpdateMissionsData_Params params {};
		params.missionClass = missionClass;
		params.MissionData = MissionData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.Client_StartTutorial
	 * 		Flags  -> ()
	 */
	void AMissionManager::Client_StartTutorial()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.Client_StartTutorial");
		
		AMissionManager_Client_StartTutorial_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.Client_ShowMissionResultWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AMission*                                    Mission                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Completed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionManager::Client_ShowMissionResultWidget(class AMission* Mission, bool Completed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.Client_ShowMissionResultWidget");
		
		AMissionManager_Client_ShowMissionResultWidget_Params params {};
		params.Mission = Mission;
		params.Completed = Completed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionManager.Client_SendMissionInvitation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AMissionManager*                             Manager                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AMission*                                    Mission                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionManager::Client_SendMissionInvitation(class AMissionManager* Manager, class AMission* Mission)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionManager.Client_SendMissionInvitation");
		
		AMissionManager_Client_SendMissionInvitation_Params params {};
		params.Manager = Manager;
		params.Mission = Mission;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMissionManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMissionManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionPrompt.OnYesClicked
	 * 		Flags  -> ()
	 */
	void UMissionPrompt::OnYesClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionPrompt.OnYesClicked");
		
		UMissionPrompt_OnYesClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionPrompt.OnNoClicked
	 * 		Flags  -> ()
	 */
	void UMissionPrompt::OnNoClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionPrompt.OnNoClicked");
		
		UMissionPrompt_OnNoClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMissionPrompt.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMissionPrompt::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionPrompt");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionResult.PlayShowMissionResultAnimation
	 * 		Flags  -> ()
	 */
	void UMissionResult::PlayShowMissionResultAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionResult.PlayShowMissionResultAnimation");
		
		UMissionResult_PlayShowMissionResultAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMissionResult.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMissionResult::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionResult");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMissionRewardWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMissionRewardWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionRewardWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MissionScheduler.OnLocationEnter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      OverlapedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMissionScheduler::OnLocationEnter(class AActor* OverlapedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MissionScheduler.OnLocationEnter");
		
		AMissionScheduler_OnLocationEnter_Params params {};
		params.OverlapedActor = OverlapedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AMissionScheduler.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMissionScheduler::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionScheduler");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMissionTabWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMissionTabWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MissionTabWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ModularTooltip.PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UModularTooltip::PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ModularTooltip.PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged");
		
		UModularTooltip_PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltip.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltip::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltip");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElement_Title.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElement_Title::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElement_Title");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElement_Value.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElement_Value::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElement_Value");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElement_Timer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElement_Timer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElement_Timer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElement_Modifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElement_Modifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElement_Modifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElement_ValueWithModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElement_ValueWithModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElement_ValueWithModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElement_AffectedBy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElement_AffectedBy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElement_AffectedBy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElement_Affects.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElement_Affects::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElement_Affects");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData_Title.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData_Title::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData_Title");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData_Value.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData_Value::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData_Value");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData_Timer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData_Timer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData_Timer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData_Modifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData_Modifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData_Modifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData_ValueWithModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData_ValueWithModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData_ValueWithModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData_ValueWithModifier_Small.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData_ValueWithModifier_Small::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData_ValueWithModifier_Small");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData_ValueWithModifier_Large.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData_ValueWithModifier_Large::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData_ValueWithModifier_Large");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData_AffectedBy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData_AffectedBy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData_AffectedBy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipElementData_Affects.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipElementData_Affects::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipElementData_Affects");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UModularTooltipSection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UModularTooltipSection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ModularTooltipSection");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMotorcycleSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMotorcycleSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MotorcycleSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountee.WantsAviationHud
	 * 		Flags  -> ()
	 */
	bool UMountee::WantsAviationHud()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountee.WantsAviationHud");
		
		UMountee_WantsAviationHud_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountee.Mount
	 * 		Flags  -> ()
	 */
	bool UMountee::Mount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountee.Mount");
		
		UMountee_Mount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountee.GetMounteeTransform
	 * 		Flags  -> ()
	 */
	struct FTransform UMountee::GetMounteeTransform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountee.GetMounteeTransform");
		
		UMountee_GetMounteeTransform_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountee.GetMounteeMass
	 * 		Flags  -> ()
	 */
	float UMountee::GetMounteeMass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountee.GetMounteeMass");
		
		UMountee_GetMounteeMass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountee.GetMountedSlot
	 * 		Flags  -> ()
	 */
	void UMountee::GetMountedSlot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountee.GetMountedSlot");
		
		UMountee_GetMountedSlot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountee.CanUnmount
	 * 		Flags  -> ()
	 */
	bool UMountee::CanUnmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountee.CanUnmount");
		
		UMountee_CanUnmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Mountee.CanMount
	 * 		Flags  -> ()
	 */
	bool UMountee::CanMount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Mountee.CanMount");
		
		UMountee_CanMount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMountee.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMountee::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Mountee");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.ShouldKeepPrisonerInVehicleOnLogout
	 * 		Flags  -> ()
	 */
	bool UMountSlot::ShouldKeepPrisonerInVehicleOnLogout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.ShouldKeepPrisonerInVehicleOnLogout");
		
		UMountSlot_ShouldKeepPrisonerInVehicleOnLogout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.ShouldHideAttachedItems
	 * 		Flags  -> ()
	 */
	bool UMountSlot::ShouldHideAttachedItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.ShouldHideAttachedItems");
		
		UMountSlot_ShouldHideAttachedItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.Reserve
	 * 		Flags  -> ()
	 */
	bool UMountSlot::Reserve()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.Reserve");
		
		UMountSlot_Reserve_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.IsReachableFromSky
	 * 		Flags  -> ()
	 */
	bool UMountSlot::IsReachableFromSky()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.IsReachableFromSky");
		
		UMountSlot_IsReachableFromSky_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.HandlePreUnmount
	 * 		Flags  -> ()
	 */
	void UMountSlot::HandlePreUnmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.HandlePreUnmount");
		
		UMountSlot_HandlePreUnmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.HandlePreMount
	 * 		Flags  -> ()
	 */
	void UMountSlot::HandlePreMount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.HandlePreMount");
		
		UMountSlot_HandlePreMount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.HandlePostUnmount
	 * 		Flags  -> ()
	 */
	void UMountSlot::HandlePostUnmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.HandlePostUnmount");
		
		UMountSlot_HandlePostUnmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.HandlePostMount
	 * 		Flags  -> ()
	 */
	void UMountSlot::HandlePostMount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.HandlePostMount");
		
		UMountSlot_HandlePostMount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetUnmountSpeedThreshold
	 * 		Flags  -> ()
	 */
	float UMountSlot::GetUnmountSpeedThreshold()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetUnmountSpeedThreshold");
		
		UMountSlot_GetUnmountSpeedThreshold_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetUnmountInputVelocityThreshold
	 * 		Flags  -> ()
	 */
	float UMountSlot::GetUnmountInputVelocityThreshold()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetUnmountInputVelocityThreshold");
		
		UMountSlot_GetUnmountInputVelocityThreshold_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetUnmountingMotionIntensity
	 * 		Flags  -> ()
	 */
	EMotionIntensity UMountSlot::GetUnmountingMotionIntensity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetUnmountingMotionIntensity");
		
		UMountSlot_GetUnmountingMotionIntensity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetUnmountDuration
	 * 		Flags  -> ()
	 */
	float UMountSlot::GetUnmountDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetUnmountDuration");
		
		UMountSlot_GetUnmountDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetUnmountAudioEvent
	 * 		Flags  -> ()
	 */
	class UAkAudioEvent* UMountSlot::GetUnmountAudioEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetUnmountAudioEvent");
		
		UMountSlot_GetUnmountAudioEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetSocketToMount
	 * 		Flags  -> ()
	 */
	class FName UMountSlot::GetSocketToMount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetSocketToMount");
		
		UMountSlot_GetSocketToMount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetSocketOffset
	 * 		Flags  -> ()
	 */
	struct FVector UMountSlot::GetSocketOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetSocketOffset");
		
		UMountSlot_GetSocketOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetSlotIndex
	 * 		Flags  -> ()
	 */
	int32_t UMountSlot::GetSlotIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetSlotIndex");
		
		UMountSlot_GetSlotIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetReservee
	 * 		Flags  -> ()
	 */
	void UMountSlot::GetReservee()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetReservee");
		
		UMountSlot_GetReservee_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetReachableMountSlots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FReachableMountSlot>                 mountSlots                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UMountSlot::GetReachableMountSlots(TArray<struct FReachableMountSlot>* mountSlots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetReachableMountSlots");
		
		UMountSlot_GetReachableMountSlots_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (mountSlots != nullptr)
			*mountSlots = params.mountSlots;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetOwningMountable
	 * 		Flags  -> ()
	 */
	void UMountSlot::GetOwningMountable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetOwningMountable");
		
		UMountSlot_GetOwningMountable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMountSpeedThreshold
	 * 		Flags  -> ()
	 */
	float UMountSlot::GetMountSpeedThreshold()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMountSpeedThreshold");
		
		UMountSlot_GetMountSpeedThreshold_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMountPriority
	 * 		Flags  -> ()
	 */
	int32_t UMountSlot::GetMountPriority()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMountPriority");
		
		UMountSlot_GetMountPriority_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMountingMotionIntensity
	 * 		Flags  -> ()
	 */
	EMotionIntensity UMountSlot::GetMountingMotionIntensity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMountingMotionIntensity");
		
		UMountSlot_GetMountingMotionIntensity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMounteeWeightLoad
	 * 		Flags  -> ()
	 */
	float UMountSlot::GetMounteeWeightLoad()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMounteeWeightLoad");
		
		UMountSlot_GetMounteeWeightLoad_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMounteeFirstPersonViewRotationBase
	 * 		Flags  -> ()
	 */
	struct FRotator UMountSlot::GetMounteeFirstPersonViewRotationBase()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMounteeFirstPersonViewRotationBase");
		
		UMountSlot_GetMounteeFirstPersonViewRotationBase_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMounteeCenterOfMassOffset
	 * 		Flags  -> ()
	 */
	struct FVector UMountSlot::GetMounteeCenterOfMassOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMounteeCenterOfMassOffset");
		
		UMountSlot_GetMounteeCenterOfMassOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMountee
	 * 		Flags  -> ()
	 */
	void UMountSlot::GetMountee()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMountee");
		
		UMountSlot_GetMountee_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMountedAnimation
	 * 		Flags  -> ()
	 */
	class UAnimSequenceBase* UMountSlot::GetMountedAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMountedAnimation");
		
		UMountSlot_GetMountedAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMountDuration
	 * 		Flags  -> ()
	 */
	float UMountSlot::GetMountDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMountDuration");
		
		UMountSlot_GetMountDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMountAudioEvent
	 * 		Flags  -> ()
	 */
	class UAkAudioEvent* UMountSlot::GetMountAudioEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMountAudioEvent");
		
		UMountSlot_GetMountAudioEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMinEffectiveMounteeMass
	 * 		Flags  -> ()
	 */
	float UMountSlot::GetMinEffectiveMounteeMass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMinEffectiveMounteeMass");
		
		UMountSlot_GetMinEffectiveMounteeMass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetMaxEffectiveMounteeMass
	 * 		Flags  -> ()
	 */
	float UMountSlot::GetMaxEffectiveMounteeMass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetMaxEffectiveMounteeMass");
		
		UMountSlot_GetMaxEffectiveMounteeMass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetEntryPoints
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FMountSlotEntryPoint>                entryPoints                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UMountSlot::GetEntryPoints(TArray<struct FMountSlotEntryPoint>* entryPoints)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetEntryPoints");
		
		UMountSlot_GetEntryPoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (entryPoints != nullptr)
			*entryPoints = params.entryPoints;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.GetComponentToMount
	 * 		Flags  -> ()
	 */
	class USceneComponent* UMountSlot::GetComponentToMount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.GetComponentToMount");
		
		UMountSlot_GetComponentToMount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.ClearReservation
	 * 		Flags  -> ()
	 */
	void UMountSlot::ClearReservation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.ClearReservation");
		
		UMountSlot_ClearReservation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.CanUnmount
	 * 		Flags  -> ()
	 */
	bool UMountSlot::CanUnmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.CanUnmount");
		
		UMountSlot_CanUnmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.CanMounteeBeAttackedByMelee
	 * 		Flags  -> ()
	 */
	bool UMountSlot::CanMounteeBeAttackedByMelee()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.CanMounteeBeAttackedByMelee");
		
		UMountSlot_CanMounteeBeAttackedByMelee_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MountSlot.CanMount
	 * 		Flags  -> ()
	 */
	bool UMountSlot::CanMount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MountSlot.CanMount");
		
		UMountSlot_CanMount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MovableCollisionFieldComponent.OnRep_CurrentState
	 * 		Flags  -> ()
	 */
	void UMovableCollisionFieldComponent::OnRep_CurrentState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MovableCollisionFieldComponent.OnRep_CurrentState");
		
		UMovableCollisionFieldComponent_OnRep_CurrentState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MovableCollisionFieldComponent.NetMulticast_DeactivateField
	 * 		Flags  -> ()
	 */
	void UMovableCollisionFieldComponent::NetMulticast_DeactivateField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MovableCollisionFieldComponent.NetMulticast_DeactivateField");
		
		UMovableCollisionFieldComponent_NetMulticast_DeactivateField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MovableCollisionFieldComponent.NetMulticast_ActivateField
	 * 		Flags  -> ()
	 */
	void UMovableCollisionFieldComponent::NetMulticast_ActivateField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MovableCollisionFieldComponent.NetMulticast_ActivateField");
		
		UMovableCollisionFieldComponent_NetMulticast_ActivateField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MovableCollisionFieldComponent.Initialize
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class UStaticMeshComponent*>                movableMeshes                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		TArray<class UStaticMeshComponent*>                collisionMeshes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UMovableCollisionFieldComponent::Initialize(TArray<class UStaticMeshComponent*> movableMeshes, TArray<class UStaticMeshComponent*> collisionMeshes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MovableCollisionFieldComponent.Initialize");
		
		UMovableCollisionFieldComponent_Initialize_Params params {};
		params.movableMeshes = movableMeshes;
		params.collisionMeshes = collisionMeshes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMovableCollisionFieldComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMovableCollisionFieldComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MovableCollisionFieldComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MusicPlayerDisplayWidget.OnTrackNameChange
	 * 		Flags  -> ()
	 */
	void UMusicPlayerDisplayWidget::OnTrackNameChange()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MusicPlayerDisplayWidget.OnTrackNameChange");
		
		UMusicPlayerDisplayWidget_OnTrackNameChange_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MusicPlayerDisplayWidget.OnPreviousTrackIconTimeFinished
	 * 		Flags  -> ()
	 */
	void UMusicPlayerDisplayWidget::OnPreviousTrackIconTimeFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MusicPlayerDisplayWidget.OnPreviousTrackIconTimeFinished");
		
		UMusicPlayerDisplayWidget_OnPreviousTrackIconTimeFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.MusicPlayerDisplayWidget.OnNextTrackIconTimeFinished
	 * 		Flags  -> ()
	 */
	void UMusicPlayerDisplayWidget::OnNextTrackIconTimeFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.MusicPlayerDisplayWidget.OnNextTrackIconTimeFinished");
		
		UMusicPlayerDisplayWidget_OnNextTrackIconTimeFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMusicPlayerDisplayWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMusicPlayerDisplayWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.MusicPlayerDisplayWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNameableItemComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNameableItemComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NameableItemComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NameableItemComponent.OnRep_Name
	 * 		Flags  -> ()
	 */
	void UNameableItemComponent::OnRep_Name()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NameableItemComponent.OnRep_Name");
		
		UNameableItemComponent_OnRep_Name_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NameableItemComponent.OnLocalPrisonerPanelsClosed
	 * 		Flags  -> ()
	 */
	void UNameableItemComponent::OnLocalPrisonerPanelsClosed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NameableItemComponent.OnLocalPrisonerPanelsClosed");
		
		UNameableItemComponent_OnLocalPrisonerPanelsClosed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NameableItemComponent.OnLocalPrisonerHoveredActorChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      hoveredActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UNameableItemComponent::OnLocalPrisonerHoveredActorChanged(class AActor* hoveredActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NameableItemComponent.OnLocalPrisonerHoveredActorChanged");
		
		UNameableItemComponent_OnLocalPrisonerHoveredActorChanged_Params params {};
		params.hoveredActor = hoveredActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NameableItemComponent.OnEditTextWidgetTextAccepted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   User                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UNameableItemComponent::OnEditTextWidgetTextAccepted(class APrisoner* User, const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NameableItemComponent.OnEditTextWidgetTextAccepted");
		
		UNameableItemComponent_OnEditTextWidgetTextAccepted_Params params {};
		params.User = User;
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNameableItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNameableItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NameableItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NativeWindowsContent.TestText
	 * 		Flags  -> ()
	 */
	void UNativeWindowsContent::TestText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NativeWindowsContent.TestText");
		
		UNativeWindowsContent_TestText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NativeWindowsContent.SetParentWindow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserWidget*                                 _parentWindow                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UNativeWindowsContent::SetParentWindow(class UUserWidget* _parentWindow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NativeWindowsContent.SetParentWindow");
		
		UNativeWindowsContent_SetParentWindow_Params params {};
		params._parentWindow = _parentWindow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NativeWindowsContent.GetParentWindow
	 * 		Flags  -> ()
	 */
	class UUserWidget* UNativeWindowsContent::GetParentWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NativeWindowsContent.GetParentWindow");
		
		UNativeWindowsContent_GetParentWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNativeWindowsContent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNativeWindowsContent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NativeWindowsContent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNetworkDataIdAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNetworkDataIdAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NetworkDataIdAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkPredictionComponent.Server_SendTransform
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<unsigned char>                              packedState                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UNetworkPredictionComponent::Server_SendTransform(TArray<unsigned char> packedState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkPredictionComponent.Server_SendTransform");
		
		UNetworkPredictionComponent_Server_SendTransform_Params params {};
		params.packedState = packedState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkPredictionComponent.Multicast_SendTransform
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<unsigned char>                              packedState                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UNetworkPredictionComponent::Multicast_SendTransform(TArray<unsigned char> packedState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkPredictionComponent.Multicast_SendTransform");
		
		UNetworkPredictionComponent_Multicast_SendTransform_Params params {};
		params.packedState = packedState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkPredictionComponent.ForceStateSendNextFrame
	 * 		Flags  -> ()
	 */
	void UNetworkPredictionComponent::ForceStateSendNextFrame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkPredictionComponent.ForceStateSendNextFrame");
		
		UNetworkPredictionComponent_ForceStateSendNextFrame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNetworkPredictionComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNetworkPredictionComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NetworkPredictionComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkStatics.SetComponentNetAddressable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UNetworkStatics::SetComponentNetAddressable(class UActorComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkStatics.SetComponentNetAddressable");
		
		UNetworkStatics_SetComponentNetAddressable_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkStatics.ParseServerIpAndPort
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Text                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Ip                                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Port                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UNetworkStatics::ParseServerIpAndPort(const class FString& Text, class FString* Ip, int32_t* Port)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkStatics.ParseServerIpAndPort");
		
		UNetworkStatics_ParseServerIpAndPort_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Ip != nullptr)
			*Ip = params.Ip;
		if (Port != nullptr)
			*Port = params.Port;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkStatics.MakeAuthTokenForUser
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUser*                                       User                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      password                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UNetworkStatics::MakeAuthTokenForUser(class UUser* User, const class FString& password)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkStatics.MakeAuthTokenForUser");
		
		UNetworkStatics_MakeAuthTokenForUser_Params params {};
		params.User = User;
		params.password = password;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkStatics.MakeAuthTokenForCurrentUser
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      password                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UNetworkStatics::MakeAuthTokenForCurrentUser(class UObject* WorldContextObject, const class FString& password)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkStatics.MakeAuthTokenForCurrentUser");
		
		UNetworkStatics_MakeAuthTokenForCurrentUser_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.password = password;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkStatics.MakeAuthToken
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      UserId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      password                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UNetworkStatics::MakeAuthToken(const class FString& UserId, const class FString& password)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkStatics.MakeAuthToken");
		
		UNetworkStatics_MakeAuthToken_Params params {};
		params.UserId = UserId;
		params.password = password;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkStatics.GetDefaultDedicatedServerResponsePort
	 * 		Flags  -> ()
	 */
	int32_t UNetworkStatics::GetDefaultDedicatedServerResponsePort()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkStatics.GetDefaultDedicatedServerResponsePort");
		
		UNetworkStatics_GetDefaultDedicatedServerResponsePort_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkStatics.GetAuthTokenForUser
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUser*                                       User                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ServerIp                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ServerResponsePort                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UNetworkStatics::GetAuthTokenForUser(class UUser* User, const class FString& ServerIp, int32_t ServerResponsePort)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkStatics.GetAuthTokenForUser");
		
		UNetworkStatics_GetAuthTokenForUser_Params params {};
		params.User = User;
		params.ServerIp = ServerIp;
		params.ServerResponsePort = ServerResponsePort;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NetworkStatics.GetAuthTokenForCurrentUser
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ServerIp                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ServerResponsePort                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UNetworkStatics::GetAuthTokenForCurrentUser(class UObject* WorldContextObject, const class FString& ServerIp, int32_t ServerResponsePort)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NetworkStatics.GetAuthTokenForCurrentUser");
		
		UNetworkStatics_GetAuthTokenForCurrentUser_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ServerIp = ServerIp;
		params.ServerResponsePort = ServerResponsePort;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNetworkStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNetworkStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NetworkStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NightVisionGogglesItem.OnComponentDeactivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ANightVisionGogglesItem::OnComponentDeactivated(class UActorComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NightVisionGogglesItem.OnComponentDeactivated");
		
		ANightVisionGogglesItem_OnComponentDeactivated_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NightVisionGogglesItem.OnComponentActivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               wasReset                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ANightVisionGogglesItem::OnComponentActivated(class UActorComponent* Component, bool wasReset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NightVisionGogglesItem.OnComponentActivated");
		
		ANightVisionGogglesItem_OnComponentActivated_Params params {};
		params.Component = Component;
		params.wasReset = wasReset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.NightVisionGogglesItem.ActivatedChangedEvent__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ANightVisionGogglesItem*                     sender                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ANightVisionGogglesItem::ActivatedChangedEvent__DelegateSignature(class ANightVisionGogglesItem* sender)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.NightVisionGogglesItem.ActivatedChangedEvent__DelegateSignature");
		
		ANightVisionGogglesItem_ActivatedChangedEvent__DelegateSignature_Params params {};
		params.sender = sender;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ANightVisionGogglesItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ANightVisionGogglesItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NightVisionGogglesItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NotificationsManager.OnPlayerReadyToPlay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZPlayerController*                       PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ANotificationsManager::OnPlayerReadyToPlay(class AConZPlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NotificationsManager.OnPlayerReadyToPlay");
		
		ANotificationsManager_OnPlayerReadyToPlay_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NotificationsManager.NetMulticast_RequestNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FNotificationDescriptionReplicationHelper   Description                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ANotificationsManager::NetMulticast_RequestNotification(const struct FNotificationDescriptionReplicationHelper& Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NotificationsManager.NetMulticast_RequestNotification");
		
		ANotificationsManager_NetMulticast_RequestNotification_Params params {};
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ANotificationsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ANotificationsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NotificationsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNotificationChain.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNotificationChain::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NotificationChain");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNotificationWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNotificationWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NotificationWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NotificationPanelWidget.ShowNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UNotificationWidget*                         Notification                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UNotificationPanelWidget::ShowNotification(class UNotificationWidget* Notification)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NotificationPanelWidget.ShowNotification");
		
		UNotificationPanelWidget_ShowNotification_Params params {};
		params.Notification = Notification;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.NotificationPanelWidget.ClearAllNotifications
	 * 		Flags  -> ()
	 */
	void UNotificationPanelWidget::ClearAllNotifications()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.NotificationPanelWidget.ClearAllNotifications");
		
		UNotificationPanelWidget_ClearAllNotifications_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNotificationPanelWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNotificationPanelWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NotificationPanelWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UObjectCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UObjectCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ObjectCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UObjectiveItemWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UObjectiveItemWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ObjectiveItemWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UObjectivesContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UObjectivesContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ObjectivesContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UObjectivesWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UObjectivesWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ObjectivesWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UObjectStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UObjectStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ObjectStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UOpenItemAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOpenItemAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.OpenItemAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPaddleItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPaddleItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PaddleItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UParachuteItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UParachuteItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ParachuteItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USimpleParachuteItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USimpleParachuteItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SimpleParachuteItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PauseMenu.OnStatisticsClicked
	 * 		Flags  -> ()
	 */
	void UPauseMenu::OnStatisticsClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PauseMenu.OnStatisticsClicked");
		
		UPauseMenu_OnStatisticsClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PauseMenu.OnSettingsClicked
	 * 		Flags  -> ()
	 */
	void UPauseMenu::OnSettingsClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PauseMenu.OnSettingsClicked");
		
		UPauseMenu_OnSettingsClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PauseMenu.OnResumeClicked
	 * 		Flags  -> ()
	 */
	void UPauseMenu::OnResumeClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PauseMenu.OnResumeClicked");
		
		UPauseMenu_OnResumeClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PauseMenu.OnQuitGameClicked
	 * 		Flags  -> ()
	 */
	void UPauseMenu::OnQuitGameClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PauseMenu.OnQuitGameClicked");
		
		UPauseMenu_OnQuitGameClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PauseMenu.OnExitToMainMenuClicked
	 * 		Flags  -> ()
	 */
	void UPauseMenu::OnExitToMainMenuClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PauseMenu.OnExitToMainMenuClicked");
		
		UPauseMenu_OnExitToMainMenuClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PauseMenu.OnCommitSuicideClicked
	 * 		Flags  -> ()
	 */
	void UPauseMenu::OnCommitSuicideClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PauseMenu.OnCommitSuicideClicked");
		
		UPauseMenu_OnCommitSuicideClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PauseMenu.OnAdminSettingsClicked
	 * 		Flags  -> ()
	 */
	void UPauseMenu::OnAdminSettingsClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PauseMenu.OnAdminSettingsClicked");
		
		UPauseMenu_OnAdminSettingsClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PauseMenu.OnAddToFavouritesClicked
	 * 		Flags  -> ()
	 */
	void UPauseMenu::OnAddToFavouritesClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PauseMenu.OnAddToFavouritesClicked");
		
		UPauseMenu_OnAddToFavouritesClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPauseMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPauseMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PauseMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPauseMenuUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPauseMenuUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PauseMenuUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PAX_GameEventManager.ForceUnjoinedParticipantsIntoEvent
	 * 		Flags  -> ()
	 */
	void APAX_GameEventManager::ForceUnjoinedParticipantsIntoEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PAX_GameEventManager.ForceUnjoinedParticipantsIntoEvent");
		
		APAX_GameEventManager_ForceUnjoinedParticipantsIntoEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APAX_GameEventManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APAX_GameEventManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PAX_GameEventManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPhoenixTearsComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPhoenixTearsComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PhoenixTearsComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PhotoModeMainPanel.UpdateFrame
	 * 		Flags  -> ()
	 */
	void UPhotoModeMainPanel::UpdateFrame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PhotoModeMainPanel.UpdateFrame");
		
		UPhotoModeMainPanel_UpdateFrame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PhotoModeMainPanel.MoveFocusUp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUINavigation                                      UINavigation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UWidget* UPhotoModeMainPanel::MoveFocusUp(EUINavigation UINavigation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PhotoModeMainPanel.MoveFocusUp");
		
		UPhotoModeMainPanel_MoveFocusUp_Params params {};
		params.UINavigation = UINavigation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PhotoModeMainPanel.MoveFocusDown
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUINavigation                                      UINavigation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UWidget* UPhotoModeMainPanel::MoveFocusDown(EUINavigation UINavigation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PhotoModeMainPanel.MoveFocusDown");
		
		UPhotoModeMainPanel_MoveFocusDown_Params params {};
		params.UINavigation = UINavigation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPhotoModeMainPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPhotoModeMainPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PhotoModeMainPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PhotoModePawn.SetGameAudioPaused
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               paused                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APhotoModePawn::SetGameAudioPaused(bool paused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PhotoModePawn.SetGameAudioPaused");
		
		APhotoModePawn_SetGameAudioPaused_Params params {};
		params.paused = paused;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PhotoModePawn.OnFadeOutFinished
	 * 		Flags  -> ()
	 */
	void APhotoModePawn::OnFadeOutFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PhotoModePawn.OnFadeOutFinished");
		
		APhotoModePawn_OnFadeOutFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PhotoModePawn.Client_Initialize
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APhotoModePawn::Client_Initialize(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PhotoModePawn.Client_Initialize");
		
		APhotoModePawn_Client_Initialize_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APhotoModePawn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APhotoModePawn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PhotoModePawn");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPhysicalSurfacesData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPhysicalSurfacesData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PhysicalSurfacesData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPhysicalSurfacesEffectsData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPhysicalSurfacesEffectsData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PhysicalSurfacesEffectsData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPhysician.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPhysician::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Physician");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPhysicsStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPhysicsStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PhysicsStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPickupItemAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPickupItemAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PickupItemAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPickupItemAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPickupItemAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PickupItemAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlaceableActorBaseReplicatedState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlaceableActorBaseReplicatedState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableActorBaseReplicatedState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.Server_UpdateState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPlaceableActorStateReplicationHelper       State                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void APlaceableActorBase::Server_UpdateState(const struct FPlaceableActorStateReplicationHelper& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.Server_UpdateState");
		
		APlaceableActorBase_Server_UpdateState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.Server_Place
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void APlaceableActorBase::Server_Place(const struct FVector& Location, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.Server_Place");
		
		APlaceableActorBase_Server_Place_Params params {};
		params.Location = Location;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.OnRep_ReplicatedRotation
	 * 		Flags  -> ()
	 */
	void APlaceableActorBase::OnRep_ReplicatedRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.OnRep_ReplicatedRotation");
		
		APlaceableActorBase_OnRep_ReplicatedRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.OnRep_ReplicatedPlacedLocation
	 * 		Flags  -> ()
	 */
	void APlaceableActorBase::OnRep_ReplicatedPlacedLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.OnRep_ReplicatedPlacedLocation");
		
		APlaceableActorBase_OnRep_ReplicatedPlacedLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.OnRep_ReplicatedLocation
	 * 		Flags  -> ()
	 */
	void APlaceableActorBase::OnRep_ReplicatedLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.OnRep_ReplicatedLocation");
		
		APlaceableActorBase_OnRep_ReplicatedLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.OnRep_PlacementState
	 * 		Flags  -> ()
	 */
	void APlaceableActorBase::OnRep_PlacementState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.OnRep_PlacementState");
		
		APlaceableActorBase_OnRep_PlacementState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.OnRep_Ingredients
	 * 		Flags  -> ()
	 */
	void APlaceableActorBase::OnRep_Ingredients()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.OnRep_Ingredients");
		
		APlaceableActorBase_OnRep_Ingredients_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.OnRep_IngredientMultiplier
	 * 		Flags  -> ()
	 */
	void APlaceableActorBase::OnRep_IngredientMultiplier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.OnRep_IngredientMultiplier");
		
		APlaceableActorBase_OnRep_IngredientMultiplier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.OnRep_Id
	 * 		Flags  -> ()
	 */
	void APlaceableActorBase::OnRep_Id()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.OnRep_Id");
		
		APlaceableActorBase_OnRep_Id_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBase.OnRep_CraftingIndex
	 * 		Flags  -> ()
	 */
	void APlaceableActorBase::OnRep_CraftingIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBase.OnRep_CraftingIndex");
		
		APlaceableActorBase_OnRep_CraftingIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APlaceableActorBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APlaceableActorBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableActorBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlaceableActorBaseBuildingReplicatedState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlaceableActorBaseBuildingReplicatedState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableActorBaseBuildingReplicatedState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointRotation
	 * 		Flags  -> ()
	 */
	void APlaceableActorBaseBuilding::OnRep_ReplicatedFirstPointRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointRotation");
		
		APlaceableActorBaseBuilding_OnRep_ReplicatedFirstPointRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointLocation
	 * 		Flags  -> ()
	 */
	void APlaceableActorBaseBuilding::OnRep_ReplicatedFirstPointLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointLocation");
		
		APlaceableActorBaseBuilding_OnRep_ReplicatedFirstPointLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBaseBuilding.OnRep_PlacementSubState
	 * 		Flags  -> ()
	 */
	void APlaceableActorBaseBuilding::OnRep_PlacementSubState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBaseBuilding.OnRep_PlacementSubState");
		
		APlaceableActorBaseBuilding_OnRep_PlacementSubState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APlaceableActorBaseBuilding.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APlaceableActorBaseBuilding::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableActorBaseBuilding");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableActorBaseUpgrade.OnRep_ElementToBeUpgraded
	 * 		Flags  -> ()
	 */
	void APlaceableActorBaseUpgrade::OnRep_ElementToBeUpgraded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableActorBaseUpgrade.OnRep_ElementToBeUpgraded");
		
		APlaceableActorBaseUpgrade_OnRep_ElementToBeUpgraded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APlaceableActorBaseUpgrade.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APlaceableActorBaseUpgrade::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableActorBaseUpgrade");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APlaceableActorFortifications.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APlaceableActorFortifications::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableActorFortifications");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APlaceableActorItems.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APlaceableActorItems::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableActorItems");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableElementWidget.Init
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlaceableActorBase*                         PlaceableActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlaceableElementWidget::Init(class APlaceableActorBase* PlaceableActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableElementWidget.Init");
		
		UPlaceableElementWidget_Init_Params params {};
		params.PlaceableActor = PlaceableActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlaceableElementWidget.DestroyPlaceable
	 * 		Flags  -> ()
	 */
	void UPlaceableElementWidget::DestroyPlaceable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlaceableElementWidget.DestroyPlaceable");
		
		UPlaceableElementWidget_DestroyPlaceable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlaceableElementWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlaceableElementWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableElementWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlaceableOnRackItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlaceableOnRackItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableOnRackItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlaceableOnRackLargeItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlaceableOnRackLargeItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableOnRackLargeItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlaceableOnWallRackItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlaceableOnWallRackItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlaceableOnWallRackItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlacedPlaceableWidget.BP_RemovePlaceable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTexture2D*                                  Icon                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlacedPlaceableWidget::BP_RemovePlaceable(class UTexture2D* Icon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlacedPlaceableWidget.BP_RemovePlaceable");
		
		UPlacedPlaceableWidget_BP_RemovePlaceable_Params params {};
		params.Icon = Icon;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlacedPlaceableWidget.BP_AddPlaceable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTexture2D*                                  Icon                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlacedPlaceableWidget::BP_AddPlaceable(class UTexture2D* Icon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlacedPlaceableWidget.BP_AddPlaceable");
		
		UPlacedPlaceableWidget_BP_AddPlaceable_Params params {};
		params.Icon = Icon;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlacedPlaceableWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlacedPlaceableWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlacedPlaceableWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlantGrowthDisplay.GetPlantGrowthStageString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              growth                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString APlantGrowthDisplay::GetPlantGrowthStageString(float growth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlantGrowthDisplay.GetPlantGrowthStageString");
		
		APlantGrowthDisplay_GetPlantGrowthStageString_Params params {};
		params.growth = growth;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlantGrowthDisplay.GetPlantGrowthStagePercentage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              growth                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float APlantGrowthDisplay::GetPlantGrowthStagePercentage(float growth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlantGrowthDisplay.GetPlantGrowthStagePercentage");
		
		APlantGrowthDisplay_GetPlantGrowthStagePercentage_Params params {};
		params.growth = growth;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlantGrowthDisplay.GetGrowthPercentage
	 * 		Flags  -> ()
	 */
	float APlantGrowthDisplay::GetGrowthPercentage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlantGrowthDisplay.GetGrowthPercentage");
		
		APlantGrowthDisplay_GetGrowthPercentage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APlantGrowthDisplay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APlantGrowthDisplay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlantGrowthDisplay");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlantPestSpecies.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlantPestSpecies::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlantPestSpecies");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlantDiseaseSpecies.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlantDiseaseSpecies::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlantDiseaseSpecies");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlantSpecies.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlantSpecies::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlantSpecies");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTradeableDiscountCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTradeableDiscountCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TradeableDiscountCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlasticSurgeryDiscountCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlasticSurgeryDiscountCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlasticSurgeryDiscountCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlasticSurgeryMugshot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlasticSurgeryMugshot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlasticSurgeryMugshot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlasticSurgeryPanel.OnApplyButtonClicked
	 * 		Flags  -> ()
	 */
	void UPlasticSurgeryPanel::OnApplyButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlasticSurgeryPanel.OnApplyButtonClicked");
		
		UPlasticSurgeryPanel_OnApplyButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlasticSurgeryPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlasticSurgeryPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlasticSurgeryPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlasticSurgeryService.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlasticSurgeryService::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlasticSurgeryService");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayableInstrument.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayableInstrument::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayableInstrument");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayEffectsWhenParticleCollides.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayEffectsWhenParticleCollides::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayEffectsWhenParticleCollides");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.TryInteractDefault
	 * 		Flags  -> ()
	 */
	void APlayerDrone::TryInteractDefault()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.TryInteractDefault");
		
		APlayerDrone_TryInteractDefault_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_TeleportToNextOrPreviousPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Next                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Server_TeleportToNextOrPreviousPlayer(bool Next)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_TeleportToNextOrPreviousPlayer");
		
		APlayerDrone_Server_TeleportToNextOrPreviousPlayer_Params params {};
		params.Next = Next;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_SpawnAndDropItemAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UContainerItemDescriptor*                    Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Server_SpawnAndDropItemAt(class UContainerItemDescriptor* Item, const struct FVector& Location, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_SpawnAndDropItemAt");
		
		APlayerDrone_Server_SpawnAndDropItemAt_Params params {};
		params.Item = Item;
		params.Location = Location;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_SetDroneVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EDroneVisibility                                   Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Server_SetDroneVisibility(EDroneVisibility Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_SetDroneVisibility");
		
		APlayerDrone_Server_SetDroneVisibility_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_ReportUnauthorizedInteractionAttempt
	 * 		Flags  -> ()
	 */
	void APlayerDrone::Server_ReportUnauthorizedInteractionAttempt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_ReportUnauthorizedInteractionAttempt");
		
		APlayerDrone_Server_ReportUnauthorizedInteractionAttempt_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_OpenDoor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       Door                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Server_OpenDoor(class ADoor* Door)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_OpenDoor");
		
		APlayerDrone_Server_OpenDoor_Params params {};
		params.Door = Door;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_InitializeItemVirtualizedInventory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Server_InitializeItemVirtualizedInventory(class UObject* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_InitializeItemVirtualizedInventory");
		
		APlayerDrone_Server_InitializeItemVirtualizedInventory_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_DropItemAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Server_DropItemAt(class AItem* Item, const struct FVector& Location, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_DropItemAt");
		
		APlayerDrone_Server_DropItemAt_Params params {};
		params.Item = Item;
		params.Location = Location;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_DestroyBaseElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Server_DestroyBaseElement(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_DestroyBaseElement");
		
		APlayerDrone_Server_DestroyBaseElement_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_CloseDoor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       Door                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Server_CloseDoor(class ADoor* Door)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_CloseDoor");
		
		APlayerDrone_Server_CloseDoor_Params params {};
		params.Door = Door;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Server_AddInventoryNode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     container                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInventoryPositionDataRepHelper             position                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Server_AddInventoryNode(class UObject* Item, class UObject* container, const struct FInventoryPositionDataRepHelper& position, class UObject* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Server_AddInventoryNode");
		
		APlayerDrone_Server_AddInventoryNode_Params params {};
		params.Item = Item;
		params.container = container;
		params.position = position;
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.OnRepDroneVisibility
	 * 		Flags  -> ()
	 */
	void APlayerDrone::OnRepDroneVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.OnRepDroneVisibility");
		
		APlayerDrone_OnRepDroneVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.OnProgressWidgetFinished
	 * 		Flags  -> ()
	 */
	void APlayerDrone::OnProgressWidgetFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.OnProgressWidgetFinished");
		
		APlayerDrone_OnProgressWidgetFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Client_OnExitPhotoMode
	 * 		Flags  -> ()
	 */
	void APlayerDrone::Client_OnExitPhotoMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Client_OnExitPhotoMode");
		
		APlayerDrone_Client_OnExitPhotoMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Client_OnEnterPhotoMode
	 * 		Flags  -> ()
	 */
	void APlayerDrone::Client_OnEnterPhotoMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Client_OnEnterPhotoMode");
		
		APlayerDrone_Client_OnEnterPhotoMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.Client_DropItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APlayerDrone::Client_DropItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.Client_DropItem");
		
		APlayerDrone_Client_DropItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerDrone.CancelInteractableDragging
	 * 		Flags  -> ()
	 */
	void APlayerDrone::CancelInteractableDragging()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerDrone.CancelInteractableDragging");
		
		APlayerDrone_CancelInteractableDragging_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APlayerDrone.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APlayerDrone::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayerDrone");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayerManagementActivePlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerManagementActivePlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayerManagementActivePlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayerManagementActivePlayersList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerManagementActivePlayersList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayerManagementActivePlayersList");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayerManagementMap.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerManagementMap::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayerManagementMap");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerManagementMenu.CloseMenu
	 * 		Flags  -> ()
	 */
	void UPlayerManagementMenu::CloseMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerManagementMenu.CloseMenu");
		
		UPlayerManagementMenu_CloseMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayerManagementMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerManagementMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayerManagementMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayerManagementUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerManagementUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayerManagementUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.WeaponBow_Server_InsertArrow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeaponBow*                                  bow                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAmmunitionArrow*                            arrow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::WeaponBow_Server_InsertArrow(class AWeaponBow* bow, class AAmmunitionArrow* arrow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.WeaponBow_Server_InsertArrow");
		
		UPlayerRpcChannel_WeaponBow_Server_InsertArrow_Params params {};
		params.bow = bow;
		params.arrow = arrow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Vehicle_Server_DriverShouldBecomeOwner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APawn*                                       Vehicle                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ACharacter*                                  Driver                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsWorldStreamed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Vehicle_Server_DriverShouldBecomeOwner(class APawn* Vehicle, class ACharacter* Driver, bool IsWorldStreamed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Vehicle_Server_DriverShouldBecomeOwner");
		
		UPlayerRpcChannel_Vehicle_Server_DriverShouldBecomeOwner_Params params {};
		params.Vehicle = Vehicle;
		params.Driver = Driver;
		params.IsWorldStreamed = IsWorldStreamed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Vehicle_Server_ApplyImpactDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APawn*                                       Vehicle                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Vehicle_Server_ApplyImpactDamage(class APawn* Vehicle, float Damage, const struct FHitResult& HitResult, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Vehicle_Server_ApplyImpactDamage");
		
		UPlayerRpcChannel_Vehicle_Server_ApplyImpactDamage_Params params {};
		params.Vehicle = Vehicle;
		params.Damage = Damage;
		params.HitResult = HitResult;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.TrapItem_Server_TriggerTrap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ATrapItem*                                   TrapItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTrapTriggerParams                          Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::TrapItem_Server_TriggerTrap(class ATrapItem* TrapItem, const struct FTrapTriggerParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.TrapItem_Server_TriggerTrap");
		
		UPlayerRpcChannel_TrapItem_Server_TriggerTrap_Params params {};
		params.TrapItem = TrapItem;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.TrapItem_Server_SetNumTries
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ATrapItem*                                   TrapItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            numTries                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::TrapItem_Server_SetNumTries(class ATrapItem* TrapItem, int32_t numTries)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.TrapItem_Server_SetNumTries");
		
		UPlayerRpcChannel_TrapItem_Server_SetNumTries_Params params {};
		params.TrapItem = TrapItem;
		params.numTries = numTries;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.TrapItem_Server_DisarmTrap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   disarmer                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATrapItem*                                   TrapItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::TrapItem_Server_DisarmTrap(class APrisoner* disarmer, class ATrapItem* TrapItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.TrapItem_Server_DisarmTrap");
		
		UPlayerRpcChannel_TrapItem_Server_DisarmTrap_Params params {};
		params.disarmer = disarmer;
		params.TrapItem = TrapItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.TrapItem_Server_ClientAuthoritativeTriggerTrap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ATrapItem*                                   TrapItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTrapTriggerParams                          Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::TrapItem_Server_ClientAuthoritativeTriggerTrap(class ATrapItem* TrapItem, const struct FTrapTriggerParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.TrapItem_Server_ClientAuthoritativeTriggerTrap");
		
		UPlayerRpcChannel_TrapItem_Server_ClientAuthoritativeTriggerTrap_Params params {};
		params.TrapItem = TrapItem;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Switch_Server_Press
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASwitch*                                     Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Switch_Server_Press(class ASwitch* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Switch_Server_Press");
		
		UPlayerRpcChannel_Switch_Server_Press_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.SurvivalStats_Server_HandlePlayerLogout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::SurvivalStats_Server_HandlePlayerLogout(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.SurvivalStats_Server_HandlePlayerLogout");
		
		UPlayerRpcChannel_SurvivalStats_Server_HandlePlayerLogout_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.SurvivalStats_Server_HandlePlayerLogin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::SurvivalStats_Server_HandlePlayerLogin(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.SurvivalStats_Server_HandlePlayerLogin");
		
		UPlayerRpcChannel_SurvivalStats_Server_HandlePlayerLogin_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Sledge_Server_SendState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASledge*                                     Sledge                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRigidBodyState                             State                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		uint32_t                                           Controls                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Sledge_Server_SendState(class ASledge* Sledge, const struct FRigidBodyState& State, uint32_t Controls)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Sledge_Server_SendState");
		
		UPlayerRpcChannel_Sledge_Server_SendState_Params params {};
		params.Sledge = Sledge;
		params.State = State;
		params.Controls = Controls;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Skill_Server_IncreaseExperiencePoints
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      skillClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ExperiencePoints                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              famePointsMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Skill_Server_IncreaseExperiencePoints(class APrisoner* Prisoner, class UClass* skillClass, float ExperiencePoints, float famePointsMultiplier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Skill_Server_IncreaseExperiencePoints");
		
		UPlayerRpcChannel_Skill_Server_IncreaseExperiencePoints_Params params {};
		params.Prisoner = Prisoner;
		params.skillClass = skillClass;
		params.ExperiencePoints = ExperiencePoints;
		params.famePointsMultiplier = famePointsMultiplier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_WithdrawMoney
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_WithdrawMoney(class APrisoner* Prisoner, int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_WithdrawMoney");
		
		UPlayerRpcChannel_Server_WithdrawMoney_Params params {};
		params.Prisoner = Prisoner;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_UntrackMission
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMissionType                                       MissionType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_UntrackMission(EMissionType MissionType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_UntrackMission");
		
		UPlayerRpcChannel_Server_UntrackMission_Params params {};
		params.MissionType = MissionType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_UnsubscribePlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPlayerUnsubscribeData                      PlayerUnsubscribeData                                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_UnsubscribePlayer(const struct FPlayerUnsubscribeData& PlayerUnsubscribeData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_UnsubscribePlayer");
		
		UPlayerRpcChannel_Server_UnsubscribePlayer_Params params {};
		params.PlayerUnsubscribeData = PlayerUnsubscribeData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_UnsubscribeFromUnachievedAchievements
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              achievementsIds                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_UnsubscribeFromUnachievedAchievements(class APlayerController* PlayerController, TArray<class FString> achievementsIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_UnsubscribeFromUnachievedAchievements");
		
		UPlayerRpcChannel_Server_UnsubscribeFromUnachievedAchievements_Params params {};
		params.PlayerController = PlayerController;
		params.achievementsIds = achievementsIds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_UnlockedAchievement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AchievementID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_UnlockedAchievement(class APlayerController* PlayerController, const class FString& AchievementID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_UnlockedAchievement");
		
		UPlayerRpcChannel_Server_UnlockedAchievement_Params params {};
		params.PlayerController = PlayerController;
		params.AchievementID = AchievementID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_SwitchActiveMission
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      missionClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_SwitchActiveMission(class UClass* missionClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_SwitchActiveMission");
		
		UPlayerRpcChannel_Server_SwitchActiveMission_Params params {};
		params.missionClass = missionClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_ResetMission
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      missionClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EMissionType                                       MissionType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               restartMission                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_ResetMission(class UClass* missionClass, EMissionType MissionType, bool restartMission)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_ResetMission");
		
		UPlayerRpcChannel_Server_ResetMission_Params params {};
		params.missionClass = missionClass;
		params.MissionType = MissionType;
		params.restartMission = restartMission;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_RequestServerData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            RequestID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPlayerRpcChannelServerDataRequestNetSerializer request                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_RequestServerData(int32_t RequestID, const struct FPlayerRpcChannelServerDataRequestNetSerializer& request)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_RequestServerData");
		
		UPlayerRpcChannel_Server_RequestServerData_Params params {};
		params.RequestID = RequestID;
		params.request = request;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_RequestDoorUpdate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ADoor*                                       Door                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_RequestDoorUpdate(class ADoor* Door)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_RequestDoorUpdate");
		
		UPlayerRpcChannel_Server_RequestDoorUpdate_Params params {};
		params.Door = Door;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_ReportUnachievedAchievements
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              achievementsIds                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_ReportUnachievedAchievements(class APlayerController* PlayerController, TArray<class FString> achievementsIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_ReportUnachievedAchievements");
		
		UPlayerRpcChannel_Server_ReportUnachievedAchievements_Params params {};
		params.PlayerController = PlayerController;
		params.achievementsIds = achievementsIds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_PlayerSellTradeables
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZPlayerController*                       PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UObject*>                             tradeables                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class ATrader*                                     Trader                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               playerWantsCash                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETradeableSellFlags                                Flags                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              clientsidePlayerBasedPriceMultiplier                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_PlayerSellTradeables(class AConZPlayerController* PlayerController, TArray<class UObject*> tradeables, class ATrader* Trader, bool playerWantsCash, ETradeableSellFlags Flags, float clientsidePlayerBasedPriceMultiplier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_PlayerSellTradeables");
		
		UPlayerRpcChannel_Server_PlayerSellTradeables_Params params {};
		params.PlayerController = PlayerController;
		params.tradeables = tradeables;
		params.Trader = Trader;
		params.playerWantsCash = playerWantsCash;
		params.Flags = Flags;
		params.clientsidePlayerBasedPriceMultiplier = clientsidePlayerBasedPriceMultiplier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_PlayerPurchaseTradeable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZPlayerController*                       PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FTradeableClassAndQuantity>          tradeableClassesAndQuantity                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class ATrader*                                     Trader                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               isCashPreferred                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              clientsidePlayerBasedPriceMultiplier                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_PlayerPurchaseTradeable(class AConZPlayerController* PlayerController, TArray<struct FTradeableClassAndQuantity> tradeableClassesAndQuantity, class ATrader* Trader, bool isCashPreferred, float clientsidePlayerBasedPriceMultiplier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_PlayerPurchaseTradeable");
		
		UPlayerRpcChannel_Server_PlayerPurchaseTradeable_Params params {};
		params.PlayerController = PlayerController;
		params.tradeableClassesAndQuantity = tradeableClassesAndQuantity;
		params.Trader = Trader;
		params.isCashPreferred = isCashPreferred;
		params.clientsidePlayerBasedPriceMultiplier = clientsidePlayerBasedPriceMultiplier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_OpenBankAccount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_OpenBankAccount(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_OpenBankAccount");
		
		UPlayerRpcChannel_Server_OpenBankAccount_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_MakeNoise
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      targetActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Loudness                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       Instigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ImpactPoint                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_MakeNoise(class AActor* targetActor, float Loudness, class APawn* Instigator, const struct FVector& ImpactPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_MakeNoise");
		
		UPlayerRpcChannel_Server_MakeNoise_Params params {};
		params.targetActor = targetActor;
		params.Loudness = Loudness;
		params.Instigator = Instigator;
		params.ImpactPoint = ImpactPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_DepositMoney
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_DepositMoney(class APrisoner* Prisoner, int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_DepositMoney");
		
		UPlayerRpcChannel_Server_DepositMoney_Params params {};
		params.Prisoner = Prisoner;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_DealRadialDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      WeaponClass                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     zeroLocation                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InnerRadius                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OuterRadius                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Falloff                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              force                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_DealRadialDamage(class APrisoner* Prisoner, class UClass* WeaponClass, const struct FVector& zeroLocation, float Damage, float InnerRadius, float OuterRadius, float Falloff, float force)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_DealRadialDamage");
		
		UPlayerRpcChannel_Server_DealRadialDamage_Params params {};
		params.Prisoner = Prisoner;
		params.WeaponClass = WeaponClass;
		params.zeroLocation = zeroLocation;
		params.Damage = Damage;
		params.InnerRadius = InnerRadius;
		params.OuterRadius = OuterRadius;
		params.Falloff = Falloff;
		params.force = force;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Server_ApplyBaseDamageInteractionEventToZombie
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AZombie2*                                    Zombie                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Server_ApplyBaseDamageInteractionEventToZombie(class AZombie2* Zombie, float Damage, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Server_ApplyBaseDamageInteractionEventToZombie");
		
		UPlayerRpcChannel_Server_ApplyBaseDamageInteractionEventToZombie_Params params {};
		params.Zombie = Zombie;
		params.Damage = Damage;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.ScopeableItemComponent_Server_SetCurrentZoomLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UScopeableItemComponent*                     comp                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::ScopeableItemComponent_Server_SetCurrentZoomLevel(class UScopeableItemComponent* comp, int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.ScopeableItemComponent_Server_SetCurrentZoomLevel");
		
		UPlayerRpcChannel_ScopeableItemComponent_Server_SetCurrentZoomLevel_Params params {};
		params.comp = comp;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockResource
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FResourceNetworkGUID                        ResourceGUID                                               (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResourceId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::ResourceLockingManager_Server_UnlockResource(const struct FResourceNetworkGUID& ResourceGUID, int32_t ResourceId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockResource");
		
		UPlayerRpcChannel_ResourceLockingManager_Server_UnlockResource_Params params {};
		params.ResourceGUID = ResourceGUID;
		params.ResourceId = ResourceId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockIntersectingAreas
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FBox                                        Area                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::ResourceLockingManager_Server_UnlockIntersectingAreas(const struct FBox& Area)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockIntersectingAreas");
		
		UPlayerRpcChannel_ResourceLockingManager_Server_UnlockIntersectingAreas_Params params {};
		params.Area = Area;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FBox                                        Area                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::ResourceLockingManager_Server_UnlockArea(const struct FBox& Area)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockArea");
		
		UPlayerRpcChannel_ResourceLockingManager_Server_UnlockArea_Params params {};
		params.Area = Area;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_LockResource
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FResourceNetworkGUID                        LockOwnerGUID                                              (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FResourceNetworkGUID                        ResourceGUID                                               (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResourceId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::ResourceLockingManager_Server_LockResource(const struct FResourceNetworkGUID& LockOwnerGUID, const struct FResourceNetworkGUID& ResourceGUID, int32_t ResourceId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_LockResource");
		
		UPlayerRpcChannel_ResourceLockingManager_Server_LockResource_Params params {};
		params.LockOwnerGUID = LockOwnerGUID;
		params.ResourceGUID = ResourceGUID;
		params.ResourceId = ResourceId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_LockArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FResourceNetworkGUID                        LockOwnerGUID                                              (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBox                                        Area                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::ResourceLockingManager_Server_LockArea(const struct FResourceNetworkGUID& LockOwnerGUID, const struct FBox& Area)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_LockArea");
		
		UPlayerRpcChannel_ResourceLockingManager_Server_LockArea_Params params {};
		params.LockOwnerGUID = LockOwnerGUID;
		params.Area = Area;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Prisoner_Server_PushStaminaDrain
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              AmountToDrain                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              drainDuration                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              RecoveryDelay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              RatioToRecover                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              recoveryDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Prisoner_Server_PushStaminaDrain(class APrisoner* Prisoner, float AmountToDrain, float drainDuration, float RecoveryDelay, float RatioToRecover, float recoveryDuration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Prisoner_Server_PushStaminaDrain");
		
		UPlayerRpcChannel_Prisoner_Server_PushStaminaDrain_Params params {};
		params.Prisoner = Prisoner;
		params.AmountToDrain = AmountToDrain;
		params.drainDuration = drainDuration;
		params.RecoveryDelay = RecoveryDelay;
		params.RatioToRecover = RatioToRecover;
		params.recoveryDuration = recoveryDuration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Prisoner_Server_Die
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Prisoner_Server_Die(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Prisoner_Server_Die");
		
		UPlayerRpcChannel_Prisoner_Server_Die_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Placeable_Server_FillWithItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlaceableActorBase*                         placeable                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APrisoner*                                   User                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AItem*>                               Items                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Placeable_Server_FillWithItems(class APlaceableActorBase* placeable, class APrisoner* User, TArray<class AItem*> Items)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Placeable_Server_FillWithItems");
		
		UPlayerRpcChannel_Placeable_Server_FillWithItems_Params params {};
		params.placeable = placeable;
		params.User = User;
		params.Items = Items;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Notifications_RequestNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FNotificationDescriptionReplicationHelper   Description                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Notifications_RequestNotification(const struct FNotificationDescriptionReplicationHelper& Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Notifications_RequestNotification");
		
		UPlayerRpcChannel_Notifications_RequestNotification_Params params {};
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Misc_Server_LogKill
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   victim                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APrisoner*                                   killer                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      killerUserProfileId                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Misc_Server_LogKill(class APrisoner* victim, class APrisoner* killer, const class FString& killerUserProfileId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Misc_Server_LogKill");
		
		UPlayerRpcChannel_Misc_Server_LogKill_Params params {};
		params.victim = victim;
		params.killer = killer;
		params.killerUserProfileId = killerUserProfileId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Misc_Client_PostAudioEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               AudioEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               stopWhenAttachedToDestroyed                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Misc_Client_PostAudioEvent(class UAkAudioEvent* AudioEvent, class AActor* Actor, bool stopWhenAttachedToDestroyed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Misc_Client_PostAudioEvent");
		
		UPlayerRpcChannel_Misc_Client_PostAudioEvent_Params params {};
		params.AudioEvent = AudioEvent;
		params.Actor = Actor;
		params.stopWhenAttachedToDestroyed = stopWhenAttachedToDestroyed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Lockpickable_Server_TriggerFailurePenalty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Lockpickable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APrisoner*                                   triggeringPrisoner                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Lockpickable_Server_TriggerFailurePenalty(class UObject* Lockpickable, class APrisoner* triggeringPrisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Lockpickable_Server_TriggerFailurePenalty");
		
		UPlayerRpcChannel_Lockpickable_Server_TriggerFailurePenalty_Params params {};
		params.Lockpickable = Lockpickable;
		params.triggeringPrisoner = triggeringPrisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Lockpickable_Server_SetNumTries
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Lockpickable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            numTries                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Lockpickable_Server_SetNumTries(class UObject* Lockpickable, int32_t numTries)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Lockpickable_Server_SetNumTries");
		
		UPlayerRpcChannel_Lockpickable_Server_SetNumTries_Params params {};
		params.Lockpickable = Lockpickable;
		params.numTries = numTries;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.ItemContainer_Server_ResetLockTimer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      runtimeId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::ItemContainer_Server_ResetLockTimer(const class FString& runtimeId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.ItemContainer_Server_ResetLockTimer");
		
		UPlayerRpcChannel_ItemContainer_Server_ResetLockTimer_Params params {};
		params.runtimeId = runtimeId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.ItemContainer_Client_TriggerFailurePenalty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      runtimeId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      triggeringActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::ItemContainer_Client_TriggerFailurePenalty(const class FString& runtimeId, class AActor* triggeringActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.ItemContainer_Client_TriggerFailurePenalty");
		
		UPlayerRpcChannel_ItemContainer_Client_TriggerFailurePenalty_Params params {};
		params.runtimeId = runtimeId;
		params.triggeringActor = triggeringActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.InventoryItemComponent_Server_RequestPageReplicationForController
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UInventoryItemComponent*                     inventoryItemComp                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            pageIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::InventoryItemComponent_Server_RequestPageReplicationForController(class UInventoryItemComponent* inventoryItemComp, int32_t pageIndex, class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.InventoryItemComponent_Server_RequestPageReplicationForController");
		
		UPlayerRpcChannel_InventoryItemComponent_Server_RequestPageReplicationForController_Params params {};
		params.inventoryItemComp = inventoryItemComp;
		params.pageIndex = pageIndex;
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Inventory_Server_RemoveStacks
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryElementRepHelper          targetElement                                              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            numStacksToRemove                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Inventory_Server_RemoveStacks(class AConZCharacter* Character, const struct FInv2021_InventoryElementRepHelper& targetElement, int32_t numStacksToRemove)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Inventory_Server_RemoveStacks");
		
		UPlayerRpcChannel_Inventory_Server_RemoveStacks_Params params {};
		params.Character = Character;
		params.targetElement = targetElement;
		params.numStacksToRemove = numStacksToRemove;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Inventory_Server_DropInventoryElementAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryElementRepHelper          Element                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryPositionObjectRepHelper   position                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Inventory_Server_DropInventoryElementAt(class AConZCharacter* Character, const struct FInv2021_InventoryElementRepHelper& Element, const struct FVector& Location, const struct FRotator& Rotation, const struct FInv2021_InventoryPositionObjectRepHelper& position)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Inventory_Server_DropInventoryElementAt");
		
		UPlayerRpcChannel_Inventory_Server_DropInventoryElementAt_Params params {};
		params.Character = Character;
		params.Element = Element;
		params.Location = Location;
		params.Rotation = Rotation;
		params.position = position;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Inventory_Server_DropInventoryElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryElementRepHelper          Element                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryPositionObjectRepHelper   position                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Inventory_Server_DropInventoryElement(class AConZCharacter* Character, const struct FInv2021_InventoryElementRepHelper& Element, const struct FInv2021_InventoryPositionObjectRepHelper& position)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Inventory_Server_DropInventoryElement");
		
		UPlayerRpcChannel_Inventory_Server_DropInventoryElement_Params params {};
		params.Character = Character;
		params.Element = Element;
		params.position = position;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Inventory_Server_AutoAddInventoryElementToContainer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryElementRepHelper          Element                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     destinationContainer                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Inventory_Server_AutoAddInventoryElementToContainer(class AConZCharacter* Character, const struct FInv2021_InventoryElementRepHelper& Element, class UObject* destinationContainer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Inventory_Server_AutoAddInventoryElementToContainer");
		
		UPlayerRpcChannel_Inventory_Server_AutoAddInventoryElementToContainer_Params params {};
		params.Character = Character;
		params.Element = Element;
		params.destinationContainer = destinationContainer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Inventory_Server_AddToStack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryElementRepHelper          elementToAdd                                               (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryElementRepHelper          Destination                                                (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Inventory_Server_AddToStack(class AConZCharacter* Character, const struct FInv2021_InventoryElementRepHelper& elementToAdd, const struct FInv2021_InventoryElementRepHelper& Destination)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Inventory_Server_AddToStack");
		
		UPlayerRpcChannel_Inventory_Server_AddToStack_Params params {};
		params.Character = Character;
		params.elementToAdd = elementToAdd;
		params.Destination = Destination;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Inventory_Server_AddInventoryElementToContainer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryElementRepHelper          Element                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     destinationContainer                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInv2021_InventoryPositionObjectRepHelper   position                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Inventory_Server_AddInventoryElementToContainer(class AConZCharacter* Character, const struct FInv2021_InventoryElementRepHelper& Element, class UObject* destinationContainer, const struct FInv2021_InventoryPositionObjectRepHelper& position)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Inventory_Server_AddInventoryElementToContainer");
		
		UPlayerRpcChannel_Inventory_Server_AddInventoryElementToContainer_Params params {};
		params.Character = Character;
		params.Element = Element;
		params.destinationContainer = destinationContainer;
		params.position = position;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.InteractWithObjectOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     interactable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APrisoner*                                   User                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInteractionType                                   interactionType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInteractionData                            InteractionData                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::InteractWithObjectOnServer(class UObject* interactable, class APrisoner* User, EInteractionType interactionType, const struct FInteractionData& InteractionData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.InteractWithObjectOnServer");
		
		UPlayerRpcChannel_InteractWithObjectOnServer_Params params {};
		params.interactable = interactable;
		params.User = User;
		params.interactionType = interactionType;
		params.InteractionData = InteractionData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.HasOwningUser_Server_RequestStateUpdate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::HasOwningUser_Server_RequestStateUpdate(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.HasOwningUser_Server_RequestStateUpdate");
		
		UPlayerRpcChannel_HasOwningUser_Server_RequestStateUpdate_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.HasOwningUser_Client_UpdateState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ownerString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::HasOwningUser_Client_UpdateState(class UObject* Object, const class FString& ownerString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.HasOwningUser_Client_UpdateState");
		
		UPlayerRpcChannel_HasOwningUser_Client_UpdateState_Params params {};
		params.Object = Object;
		params.ownerString = ownerString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Grapple_Server_EndGrappleAttack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              grappler                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APrisoner*                                   grapplee                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EGrappleEndType                                    grappleEndType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Grapple_Server_EndGrappleAttack(class AConZCharacter* grappler, class APrisoner* grapplee, EGrappleEndType grappleEndType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Grapple_Server_EndGrappleAttack");
		
		UPlayerRpcChannel_Grapple_Server_EndGrappleAttack_Params params {};
		params.grappler = grappler;
		params.grapplee = grapplee;
		params.grappleEndType = grappleEndType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Farming_Server_PlantAPlant
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGarden*                                     Garden                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPlantSpecies*                               species                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Farming_Server_PlantAPlant(class AGarden* Garden, int32_t slot, class UPlantSpecies* species)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Farming_Server_PlantAPlant");
		
		UPlayerRpcChannel_Farming_Server_PlantAPlant_Params params {};
		params.Garden = Garden;
		params.slot = slot;
		params.species = species;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Farming_Server_CreateGarden
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FIntPoint                                   Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Farming_Server_CreateGarden(const struct FVector& Location, const struct FRotator& Rotation, const struct FIntPoint& Size)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Farming_Server_CreateGarden");
		
		UPlayerRpcChannel_Farming_Server_CreateGarden_Params params {};
		params.Location = Location;
		params.Rotation = Rotation;
		params.Size = Size;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Farming_Server_AddWaterToSlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGarden*                                     Garden                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Farming_Server_AddWaterToSlot(class AGarden* Garden, int32_t slot, float Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Farming_Server_AddWaterToSlot");
		
		UPlayerRpcChannel_Farming_Server_AddWaterToSlot_Params params {};
		params.Garden = Garden;
		params.slot = slot;
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Door_Client_TriggerFailurePenalty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      runtimeId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      triggeringActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Door_Client_TriggerFailurePenalty(const class FString& runtimeId, class AActor* triggeringActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Door_Client_TriggerFailurePenalty");
		
		UPlayerRpcChannel_Door_Client_TriggerFailurePenalty_Params params {};
		params.runtimeId = runtimeId;
		params.triggeringActor = triggeringActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.CustomZones_Server_UpdateCustomZoneData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCustomZoneConfiguration                    globalConfiguration                                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCustomZoneConfiguration>            configurations                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCustomZoneRegion>                   Regions                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::CustomZones_Server_UpdateCustomZoneData(const struct FCustomZoneConfiguration& globalConfiguration, TArray<struct FCustomZoneConfiguration> configurations, TArray<struct FCustomZoneRegion> Regions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.CustomZones_Server_UpdateCustomZoneData");
		
		UPlayerRpcChannel_CustomZones_Server_UpdateCustomZoneData_Params params {};
		params.globalConfiguration = globalConfiguration;
		params.configurations = configurations;
		params.Regions = Regions;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.CustomZones_Server_RequestCustomZoneData
	 * 		Flags  -> ()
	 */
	void UPlayerRpcChannel::CustomZones_Server_RequestCustomZoneData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.CustomZones_Server_RequestCustomZoneData");
		
		UPlayerRpcChannel_CustomZones_Server_RequestCustomZoneData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.CustomZones_Client_ReceiveCustomZoneData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCustomZoneConfiguration                    globalConfiguration                                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCustomZoneConfiguration>            configurations                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCustomZoneRegion>                   Regions                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::CustomZones_Client_ReceiveCustomZoneData(const struct FCustomZoneConfiguration& globalConfiguration, TArray<struct FCustomZoneConfiguration> configurations, TArray<struct FCustomZoneRegion> Regions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.CustomZones_Client_ReceiveCustomZoneData");
		
		UPlayerRpcChannel_CustomZones_Client_ReceiveCustomZoneData_Params params {};
		params.globalConfiguration = globalConfiguration;
		params.configurations = configurations;
		params.Regions = Regions;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.CustomZones_Client_NotifyCustomDataUpdateSuccess
	 * 		Flags  -> ()
	 */
	void UPlayerRpcChannel::CustomZones_Client_NotifyCustomDataUpdateSuccess()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.CustomZones_Client_NotifyCustomDataUpdateSuccess");
		
		UPlayerRpcChannel_CustomZones_Client_NotifyCustomDataUpdateSuccess_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Client_UpdateTraderData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPriceUpdateData                            PriceUpdateData                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Client_UpdateTraderData(const struct FPriceUpdateData& PriceUpdateData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Client_UpdateTraderData");
		
		UPlayerRpcChannel_Client_UpdateTraderData_Params params {};
		params.PriceUpdateData = PriceUpdateData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Client_UnlockAchievement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AchievementID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Client_UnlockAchievement(class APlayerController* PlayerController, const class FString& AchievementID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Client_UnlockAchievement");
		
		UPlayerRpcChannel_Client_UnlockAchievement_Params params {};
		params.PlayerController = PlayerController;
		params.AchievementID = AchievementID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Client_SetStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      statId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            StatValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Client_SetStat(class APlayerController* PlayerController, const class FString& statId, int32_t StatValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Client_SetStat");
		
		UPlayerRpcChannel_Client_SetStat_Params params {};
		params.PlayerController = PlayerController;
		params.statId = statId;
		params.StatValue = StatValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Client_SendSellErrorMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZPlayerController*                       PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETradeErrorMessage                                 errorMessage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Client_SendSellErrorMessage(class AConZPlayerController* PlayerController, ETradeErrorMessage errorMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Client_SendSellErrorMessage");
		
		UPlayerRpcChannel_Client_SendSellErrorMessage_Params params {};
		params.PlayerController = PlayerController;
		params.errorMessage = errorMessage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Client_SendBuyErrorMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZPlayerController*                       PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETradeErrorMessage                                 errorMessage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Client_SendBuyErrorMessage(class AConZPlayerController* PlayerController, ETradeErrorMessage errorMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Client_SendBuyErrorMessage");
		
		UPlayerRpcChannel_Client_SendBuyErrorMessage_Params params {};
		params.PlayerController = PlayerController;
		params.errorMessage = errorMessage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Client_ResetSubscriptions
	 * 		Flags  -> ()
	 */
	void UPlayerRpcChannel::Client_ResetSubscriptions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Client_ResetSubscriptions");
		
		UPlayerRpcChannel_Client_ResetSubscriptions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Client_ReceiveServerData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            RequestID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPlayerRpcChannelServerDataResponseNetSerializer Response                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Client_ReceiveServerData(int32_t RequestID, const struct FPlayerRpcChannelServerDataResponseNetSerializer& Response)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Client_ReceiveServerData");
		
		UPlayerRpcChannel_Client_ReceiveServerData_Params params {};
		params.RequestID = RequestID;
		params.Response = Response;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Client_IncreaseStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      statId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            statIncBy                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Client_IncreaseStat(class APlayerController* PlayerController, const class FString& statId, int32_t statIncBy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Client_IncreaseStat");
		
		UPlayerRpcChannel_Client_IncreaseStat_Params params {};
		params.PlayerController = PlayerController;
		params.statId = statId;
		params.statIncBy = statIncBy;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Client_AuthSucceededSync
	 * 		Flags  -> ()
	 */
	void UPlayerRpcChannel::Client_AuthSucceededSync()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Client_AuthSucceededSync");
		
		UPlayerRpcChannel_Client_AuthSucceededSync_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Boat_Server_AnchorBoat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZBoat*                                   Boat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               shouldAnchor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Boat_Server_AnchorBoat(class AConZBoat* Boat, bool shouldAnchor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Boat_Server_AnchorBoat");
		
		UPlayerRpcChannel_Boat_Server_AnchorBoat_Params params {};
		params.Boat = Boat;
		params.shouldAnchor = shouldAnchor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.BaseBuilding_Server_RequestElementStateUpdate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              areaSize                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::BaseBuilding_Server_RequestElementStateUpdate(const struct FVector& Location, float areaSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.BaseBuilding_Server_RequestElementStateUpdate");
		
		UPlayerRpcChannel_BaseBuilding_Server_RequestElementStateUpdate_Params params {};
		params.Location = Location;
		params.areaSize = areaSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.BaseBuilding_Server_OnFlagAreaExited
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::BaseBuilding_Server_OnFlagAreaExited(class AConZCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.BaseBuilding_Server_OnFlagAreaExited");
		
		UPlayerRpcChannel_BaseBuilding_Server_OnFlagAreaExited_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.BaseBuilding_Server_OnFlagAreaEntered
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZCharacter*                              Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::BaseBuilding_Server_OnFlagAreaEntered(class AConZCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.BaseBuilding_Server_OnFlagAreaEntered");
		
		UPlayerRpcChannel_BaseBuilding_Server_OnFlagAreaEntered_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.BaseBuilding_Client_UpdateElementState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              areaSize                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FConZOnDemandElementData>            Data                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::BaseBuilding_Client_UpdateElementState(const struct FVector& Location, float areaSize, TArray<struct FConZOnDemandElementData> Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.BaseBuilding_Client_UpdateElementState");
		
		UPlayerRpcChannel_BaseBuilding_Client_UpdateElementState_Params params {};
		params.Location = Location;
		params.areaSize = areaSize;
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo_Location
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AConZPlayerController*                       Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTeleportRequest                            TeleportRequest                                            (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Admin_Server_TeleportTo_Location(class AConZPlayerController* Controller, const struct FTeleportRequest& TeleportRequest)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo_Location");
		
		UPlayerRpcChannel_Admin_Server_TeleportTo_Location_Params params {};
		params.Controller = Controller;
		params.TeleportRequest = TeleportRequest;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      teleportToUserId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Admin_Server_TeleportTo(class APlayerController* Controller, const class FString& teleportToUserId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo");
		
		UPlayerRpcChannel_Admin_Server_TeleportTo_Params params {};
		params.Controller = Controller;
		params.teleportToUserId = teleportToUserId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PlayerRpcChannel.Admin_Client_ListSpawnedVehicles
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           Controller                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FVehicleSpawnerInfo>                 spawnerInfos                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               shouldCopyToClientClipboard                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerRpcChannel::Admin_Client_ListSpawnedVehicles(class APlayerController* Controller, TArray<struct FVehicleSpawnerInfo> spawnerInfos, bool shouldCopyToClientClipboard)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PlayerRpcChannel.Admin_Client_ListSpawnedVehicles");
		
		UPlayerRpcChannel_Admin_Client_ListSpawnedVehicles_Params params {};
		params.Controller = Controller;
		params.spawnerInfos = spawnerInfos;
		params.shouldCopyToClientClipboard = shouldCopyToClientClipboard;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPlayerRpcChannel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerRpcChannel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PlayerRpcChannel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPowerCableMeshSet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPowerCableMeshSet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PowerCableMeshSet");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APowerNode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APowerNode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PowerNode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APracticeLockpickingItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APracticeLockpickingItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PracticeLockpickingItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APracticeTrapItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APracticeTrapItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PracticeTrapItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PreviousNextSwitchWidget.SwitchToPrevious
	 * 		Flags  -> ()
	 */
	void UPreviousNextSwitchWidget::SwitchToPrevious()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PreviousNextSwitchWidget.SwitchToPrevious");
		
		UPreviousNextSwitchWidget_SwitchToPrevious_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PreviousNextSwitchWidget.SwitchToNext
	 * 		Flags  -> ()
	 */
	void UPreviousNextSwitchWidget::SwitchToNext()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PreviousNextSwitchWidget.SwitchToNext");
		
		UPreviousNextSwitchWidget_SwitchToNext_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.PreviousNextSwitchWidget.OnSwitchClickedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            widgetArrayIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPreviousNextSwitchWidget::OnSwitchClickedDelegate__DelegateSignature(int32_t widgetArrayIndex, int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.PreviousNextSwitchWidget.OnSwitchClickedDelegate__DelegateSignature");
		
		UPreviousNextSwitchWidget_OnSwitchClickedDelegate__DelegateSignature_Params params {};
		params.widgetArrayIndex = widgetArrayIndex;
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPreviousNextSwitchWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPreviousNextSwitchWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PreviousNextSwitchWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionActivateSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionActivateSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionActivateSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionActivateSlotDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionActivateSlotDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionActivateSlotDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionAddWeaponAttachment.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionAddWeaponAttachment::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionAddWeaponAttachment");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionAddWeaponAttachmentDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionAddWeaponAttachmentDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionAddWeaponAttachmentDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionAlignTransform.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionAlignTransform::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionAlignTransform");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionAlignTransformDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionAlignTransformDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionAlignTransformDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionBury.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionBury::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionBury");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionBuryDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionBuryDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionBuryDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChainForExitingVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChainForExitingVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChainForExitingVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChainForExitingVehicleDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChainForExitingVehicleDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChainForExitingVehicleDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChangeStance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChangeStance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeStance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChangeStanceDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChangeStanceDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeStanceDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChangeStanceWaitEndOnOwningClient.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChangeStanceWaitEndOnOwningClient::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClient");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChangeStanceWaitEndOnOwningClientDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChangeStanceWaitEndOnOwningClientDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClientDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChangeVehicleWeaponAimingStance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChangeVehicleWeaponAimingStance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeVehicleWeaponAimingStance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChangeVehicleWeaponAimingStanceDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChangeVehicleWeaponAimingStanceDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeVehicleWeaponAimingStanceDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChangeWeaponFiringMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChangeWeaponFiringMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeWeaponFiringMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChangeWeaponFiringModeModeDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChangeWeaponFiringModeModeDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChangeWeaponFiringModeModeDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChargeVehicleBattery.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChargeVehicleBattery::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChargeVehicleBattery");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChargeVehicleBatteryDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChargeVehicleBatteryDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChargeVehicleBatteryDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckChainsawFuelStatus.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckChainsawFuelStatus::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckChainsawFuelStatus");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckChainsawFuelStatusDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckChainsawFuelStatusDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckChainsawFuelStatusDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckThermalSensor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckThermalSensor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckThermalSensor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckThermalSensorDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckThermalSensorDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckThermalSensorDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckTime.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckTime::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckTime");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckTimeDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckTimeDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckTimeDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckWeaponAmmo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckWeaponAmmo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckWeaponAmmo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckWeaponAmmoDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckWeaponAmmoDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckWeaponAmmoDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckWeaponFiringMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckWeaponFiringMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckWeaponFiringMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCheckWeaponFiringModeDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCheckWeaponFiringModeDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCheckWeaponFiringModeDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChopBaseElement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChopBaseElement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChopBaseElement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerActionChopBaseElementDescription.GetBaseElementStaticMesh
	 * 		Flags  -> ()
	 */
	class UStaticMesh* UPrisonerActionChopBaseElementDescription::GetBaseElementStaticMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerActionChopBaseElementDescription.GetBaseElementStaticMesh");
		
		UPrisonerActionChopBaseElementDescription_GetBaseElementStaticMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChopBaseElementDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChopBaseElementDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChopBaseElementDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChopItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChopItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChopItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionChopItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionChopItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionChopItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionClaimKill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionClaimKill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionClaimKill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionClaimKillDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionClaimKillDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionClaimKillDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionClean.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionClean::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionClean");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUPrisonerActionCleanDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUPrisonerActionCleanDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UPrisonerActionCleanDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionClearWeaponMalfunction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionClearWeaponMalfunction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionClearWeaponMalfunction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionClearWeaponMalfunctionDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionClearWeaponMalfunctionDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionClearWeaponMalfunctionDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionClimbOntoLadder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionClimbOntoLadder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionClimbOntoLadder");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionClimbOntoLadderDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionClimbOntoLadderDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionClimbOntoLadderDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCommitSuicide.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCommitSuicide::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCommitSuicide");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCommitSuicideDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCommitSuicideDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCommitSuicideDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCraftItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCraftItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCraftItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCraftItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCraftItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCraftItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCutHair.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCutHair::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCutHair");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCutHairDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCutHairDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCutHairDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCutObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCutObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCutObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionCutObjectDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionCutObjectDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionCutObjectDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDefecate.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDefecate::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDefecate");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDefecateDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDefecateDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDefecateDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDismountWeaponFromVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDismountWeaponFromVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDismountWeaponFromVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDismountWeaponFromVehicleDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDismountWeaponFromVehicleDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDismountWeaponFromVehicleDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDrainVehicleFuelIntoItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDrainVehicleFuelIntoItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDrainVehicleFuelIntoItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDrainVehicleFuelIntoItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDrainVehicleFuelIntoItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDrainVehicleFuelIntoItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDrinkFromReplenishableResource.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDrinkFromReplenishableResource::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDrinkFromReplenishableResource");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDrinkFromReplenishableResourceDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDrinkFromReplenishableResourceDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDrinkFromReplenishableResourceDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDrinkInteraction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDrinkInteraction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDrinkInteraction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionDrinkInteractionDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionDrinkInteractionDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionDrinkInteractionDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionEatItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionEatItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionEatItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionEatItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionEatItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionEatItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionEnterCombatMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionEnterCombatMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionEnterCombatMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionEnterCombatModeDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionEnterCombatModeDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionEnterCombatModeDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionEnterVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionEnterVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionEnterVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionEnterVehicleDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionEnterVehicleDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionEnterVehicleDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionExecuteBodyConditionInteraction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionExecuteBodyConditionInteraction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionExecuteBodyConditionInteraction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionExecuteBodyConditionInteractionDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionExecuteBodyConditionInteractionDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionExecuteBodyConditionInteractionDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionExecuteInteraction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionExecuteInteraction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionExecuteInteraction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionExecuteInteractionDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionExecuteInteractionDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionExecuteInteractionDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionExitVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionExitVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionExitVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionExitVehicleDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionExitVehicleDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionExitVehicleDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionExtinguishFire.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionExtinguishFire::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionExtinguishFire");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionExtinguishFireDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionExtinguishFireDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionExtinguishFireDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillGameResourceContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillGameResourceContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillGameResourceContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillGameResourceContainerDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillGameResourceContainerDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillGameResourceContainerDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillGameResourceContainerWithReplenishableResourceDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillGameResourceContainerWithReplenishableResourceDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillGameResourceContainerWithReplenishableResourceDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillGameResourceContainerWithInfiniteResourceDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillGameResourceContainerWithInfiniteResourceDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillGameResourceContainerWithInfiniteResourceDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillVehicleFuelWithItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillVehicleFuelWithItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillVehicleFuelWithItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillVehicleFuelWithItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillVehicleFuelWithItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillVehicleFuelWithItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillVehicleFuelWithReplenishableResource.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillVehicleFuelWithReplenishableResource::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResource");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillVehicleFuelWithReplenishableResourceDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillVehicleFuelWithReplenishableResourceDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResourceDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillWater.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillWater::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillWater");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFillWaterDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFillWaterDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFillWaterDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFishing.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFishing::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFishing");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFishingDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFishingDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFishingDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFixTire.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFixTire::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFixTire");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFixTireDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFixTireDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFixTireDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionForceUnlock.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionForceUnlock::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionForceUnlock");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionForceUnlockDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionForceUnlockDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionForceUnlockDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFuelFire.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFuelFire::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFuelFire");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionFuelFireDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionFuelFireDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionFuelFireDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionGesture.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionGesture::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionGesture");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionGestureDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionGestureDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionGestureDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionIgniteFlare.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionIgniteFlare::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionIgniteFlare");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionLightFlareDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionLightFlareDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionLightFlareDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionInjectSubstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionInjectSubstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionInjectSubstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionInjectSubstanceDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionInjectSubstanceDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionInjectSubstanceDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionInsertArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionInsertArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionInsertArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionInsertArrowDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionInsertArrowDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionInsertArrowDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionLoadAmmoIntoMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionLoadAmmoIntoMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionLoadAmmoIntoMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionLoadAmmoIntoMagazineDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionLoadAmmoIntoMagazineDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionLoadAmmoIntoMagazineDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionLootCorpse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionLootCorpse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionLootCorpse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionLootCorpseDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionLootCorpseDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionLootCorpseDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionLootPrisoner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionLootPrisoner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionLootPrisoner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionLootPrisonerDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionLootPrisonerDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionLootPrisonerDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionManipulateTrap.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionManipulateTrap::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionManipulateTrap");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionManipulateTrapDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionManipulateTrapDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionManipulateTrapDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionMinigame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionMinigame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionMinigame");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionMinigameDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionMinigameDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionMinigameDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionMountWeaponToVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionMountWeaponToVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionMountWeaponToVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionMountWeaponToVehicleDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionMountWeaponToVehicleDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionMountWeaponToVehicleDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionMoveToLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionMoveToLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionMoveToLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionMoveToLocationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionMoveToLocationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionMoveToLocationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionOpenItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionOpenItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionOpenItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionOpenItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionOpenItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionOpenItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionOpenOrCloseVehicleDoor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionOpenOrCloseVehicleDoor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionOpenOrCloseVehicleDoor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionOpenOrCloseVehicleDoorDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionOpenOrCloseVehicleDoorDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionOpenOrCloseVehicleDoorDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionOperateBondage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionOperateBondage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionOperateBondage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionOperateBondageDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionOperateBondageDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionOperateBondageDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionPairRemoteKeyAndSensor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionPairRemoteKeyAndSensor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionPairRemoteKeyAndSensor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionPairRemoteKeyAndSensorDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionPairRemoteKeyAndSensorDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionPairRemoteKeyAndSensorDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionPickUpVehicle2W.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionPickUpVehicle2W::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionPickUpVehicle2W");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionPickUpVehicle2WDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionPickUpVehicle2WDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionPickUpVehicle2WDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionPlaceItemOnRack.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionPlaceItemOnRack::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionPlaceItemOnRack");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionPlaceItemOnRackDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionPlaceItemOnRackDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionPlaceItemOnRackDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionReloadWeapon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionReloadWeapon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionReloadWeapon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionReloadWeaponDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionReloadWeaponDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionReloadWeaponDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRemoveItemFromHands.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRemoveItemFromHands::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRemoveItemFromHands");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRemoveItemFromHandsDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRemoveItemFromHandsDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRemoveItemFromHandsDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRemoveWeaponAttachment.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRemoveWeaponAttachment::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRemoveWeaponAttachment");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRemoveWeaponAttachmentDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRemoveWeaponAttachmentDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRemoveWeaponAttachmentDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRepair.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRepair::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRepair");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRepairDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRepairDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRepairBaseElement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRepairBaseElement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairBaseElement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRepairBaseElementDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRepairBaseElementDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairBaseElementDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRepairItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRepairItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRepairItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRepairItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRepairVehicle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRepairVehicle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairVehicle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRepairVehicleDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRepairVehicleDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRepairVehicleDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionResuscitate.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionResuscitate::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionResuscitate");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionResuscitateDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionResuscitateDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionResuscitateDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRollRevolverDrum.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRollRevolverDrum::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRollRevolverDrum");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRollRevolverDrumDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRollRevolverDrumDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRollRevolverDrumDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRussianRoulette.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRussianRoulette::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRussianRoulette");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionRussianRouletteDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionRussianRouletteDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionRussianRouletteDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSearchGround.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSearchGround::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchGround");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSearchGroundDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSearchGroundDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchGroundDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSearchObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSearchObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSearchObjectDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSearchObjectDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchObjectDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSearchPrisoner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSearchPrisoner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchPrisoner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSearchPrisonerDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSearchPrisonerDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSearchPrisonerDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSpill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSpill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSpill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSpillDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSpillDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSpillDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStartCarryingItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStartCarryingItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStartCarryingItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStartCarryingItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStartCarryingItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStartCarryingItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStartChainsawEngine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStartChainsawEngine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStartChainsawEngine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStartChainsawEngineDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStartChainsawEngineDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStartChainsawEngineDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStartPlayingInstrument.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStartPlayingInstrument::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStartPlayingInstrument");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStartPlayingInstrumentDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStartPlayingInstrumentDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStartPlayingInstrumentDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStartResting.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStartResting::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStartResting");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStartRestingDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStartRestingDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStartRestingDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStopResting.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStopResting::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStopResting");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionStopRestingDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionStopRestingDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionStopRestingDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSwitchVehicleSeat.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSwitchVehicleSeat::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSwitchVehicleSeat");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionSwitchVehicleSeatDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionSwitchVehicleSeatDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionSwitchVehicleSeatDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionTakeItemInHands.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionTakeItemInHands::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionTakeItemInHands");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionTakeItemInHandsDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionTakeItemInHandsDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionTakeItemInHandsDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionThrowItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionThrowItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionThrowItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionThrowItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionThrowItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionThrowItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionTreatPatient.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionTreatPatient::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionTreatPatient");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionTreatPatientDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionTreatPatientDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionTreatPatientDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionTriggerRemoteKey.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionTriggerRemoteKey::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionTriggerRemoteKey");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionTriggerRemoteKeyDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionTriggerRemoteKeyDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionTriggerRemoteKeyDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionTuneBow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionTuneBow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionTuneBow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionTuneBowDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionTuneBowDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionTuneBowDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionUncraftItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionUncraftItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionUncraftItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionUncraftItemDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionUncraftItemDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionUncraftItemDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionUnequipWeapon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionUnequipWeapon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionUnequipWeapon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionUnequipWeaponDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionUnequipWeaponDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionUnequipWeaponDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionUnloadAmmoFromWeapon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionUnloadAmmoFromWeapon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionUnloadAmmoFromWeapon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionUnloadAmmoFromWeaponDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionUnloadAmmoFromWeaponDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionUnloadAmmoFromWeaponDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionUrinate.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionUrinate::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionUrinate");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionUrinateDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionUrinateDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionUrinateDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionVoiceline.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionVoiceline::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionVoiceline");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionVoicelineDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionVoicelineDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionVoicelineDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionVomit.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionVomit::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionVomit");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionVomitDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionVomitDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionVomitDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionWashCloth.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionWashCloth::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionWashCloth");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUPrisonerActionWashClothDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUPrisonerActionWashClothDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UPrisonerActionWashClothDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionWashWithReplenishableResource.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionWashWithReplenishableResource::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionWashWithReplenishableResource");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionWashWithReplenishableResourceDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionWashWithReplenishableResourceDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionWashWithReplenishableResourceDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionWhistle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionWhistle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionWhistle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerActionWhistleDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerActionWhistleDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerActionWhistleDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerAIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerAIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.TakePenis
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance::TakePenis()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.TakePenis");
		
		UPrisonerAnimInstance_TakePenis_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.ReleasePenis
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance::ReleasePenis()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.ReleasePenis");
		
		UPrisonerAnimInstance_ReleasePenis_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.OnIdleStateExit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FAnimNode_StateMachine                      Machine                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		int32_t                                            prevStateIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            nextStateIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAnimInstance::OnIdleStateExit(const struct FAnimNode_StateMachine& Machine, int32_t prevStateIndex, int32_t nextStateIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.OnIdleStateExit");
		
		UPrisonerAnimInstance_OnIdleStateExit_Params params {};
		params.Machine = Machine;
		params.prevStateIndex = prevStateIndex;
		params.nextStateIndex = nextStateIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.OnIdleStateEntry
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FAnimNode_StateMachine                      Machine                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		int32_t                                            prevStateIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            nextStateIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAnimInstance::OnIdleStateEntry(const struct FAnimNode_StateMachine& Machine, int32_t prevStateIndex, int32_t nextStateIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.OnIdleStateEntry");
		
		UPrisonerAnimInstance_OnIdleStateEntry_Params params {};
		params.Machine = Machine;
		params.prevStateIndex = prevStateIndex;
		params.nextStateIndex = nextStateIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.IsCourseAngleSupportedByStartAndStopAnimations
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              courseAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerAnimInstance::IsCourseAngleSupportedByStartAndStopAnimations(float courseAngle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.IsCourseAngleSupportedByStartAndStopAnimations");
		
		UPrisonerAnimInstance_IsCourseAngleSupportedByStartAndStopAnimations_Params params {};
		params.courseAngle = courseAngle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.IsAnyStanceTransitionActive
	 * 		Flags  -> ()
	 */
	bool UPrisonerAnimInstance::IsAnyStanceTransitionActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.IsAnyStanceTransitionActive");
		
		UPrisonerAnimInstance_IsAnyStanceTransitionActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread");
		
		UPrisonerAnimInstance_GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetWeaponAnimationPoseOnWorkerThread
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponAnimationPose                               animationPose                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EPrisonerStance                                    stance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAnimSequenceBase* UPrisonerAnimInstance::GetWeaponAnimationPoseOnWorkerThread(EWeaponAnimationPose animationPose, EPrisonerStance stance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetWeaponAnimationPoseOnWorkerThread");
		
		UPrisonerAnimInstance_GetWeaponAnimationPoseOnWorkerThread_Params params {};
		params.animationPose = animationPose;
		params.stance = stance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetWeaponAimOffsetOnGameThread
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerAimOffsetType                             prisonerAimOffsetType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UBlendSpace* UPrisonerAnimInstance::GetWeaponAimOffsetOnGameThread(EPrisonerAimOffsetType prisonerAimOffsetType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetWeaponAimOffsetOnGameThread");
		
		UPrisonerAnimInstance_GetWeaponAimOffsetOnGameThread_Params params {};
		params.prisonerAimOffsetType = prisonerAimOffsetType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetWeaponAimingNoisePlayRateOnGameThread
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetWeaponAimingNoisePlayRateOnGameThread()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetWeaponAimingNoisePlayRateOnGameThread");
		
		UPrisonerAnimInstance_GetWeaponAimingNoisePlayRateOnGameThread_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetWeaponAimingNoiseBlendValueOnGameThread
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetWeaponAimingNoiseBlendValueOnGameThread()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetWeaponAimingNoiseBlendValueOnGameThread");
		
		UPrisonerAnimInstance_GetWeaponAimingNoiseBlendValueOnGameThread_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetVehicleThrottleAmount
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetVehicleThrottleAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetVehicleThrottleAmount");
		
		UPrisonerAnimInstance_GetVehicleThrottleAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetVehicleSteerAmount
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetVehicleSteerAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetVehicleSteerAmount");
		
		UPrisonerAnimInstance_GetVehicleSteerAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetVehicleSpeedKph
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetVehicleSpeedKph()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetVehicleSpeedKph");
		
		UPrisonerAnimInstance_GetVehicleSpeedKph_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetVehicleSpeed
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetVehicleSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetVehicleSpeed");
		
		UPrisonerAnimInstance_GetVehicleSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetVehiclePassengerIdleAnimation
	 * 		Flags  -> ()
	 */
	class UBlendSpace* UPrisonerAnimInstance::GetVehiclePassengerIdleAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetVehiclePassengerIdleAnimation");
		
		UPrisonerAnimInstance_GetVehiclePassengerIdleAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetVehicleHandbrakeAmount
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetVehicleHandbrakeAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetVehicleHandbrakeAmount");
		
		UPrisonerAnimInstance_GetVehicleHandbrakeAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetVehicleDriverForwardIdleAnimation
	 * 		Flags  -> ()
	 */
	class UBlendSpace* UPrisonerAnimInstance::GetVehicleDriverForwardIdleAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetVehicleDriverForwardIdleAnimation");
		
		UPrisonerAnimInstance_GetVehicleDriverForwardIdleAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetVehicleBumpiness
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetVehicleBumpiness()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetVehicleBumpiness");
		
		UPrisonerAnimInstance_GetVehicleBumpiness_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetVehicleBrakeAmount
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetVehicleBrakeAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetVehicleBrakeAmount");
		
		UPrisonerAnimInstance_GetVehicleBrakeAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetUpperEyelidRotationDelta
	 * 		Flags  -> ()
	 */
	struct FRotator UPrisonerAnimInstance::GetUpperEyelidRotationDelta()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetUpperEyelidRotationDelta");
		
		UPrisonerAnimInstance_GetUpperEyelidRotationDelta_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetStandLookBlendAlpha
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetStandLookBlendAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetStandLookBlendAlpha");
		
		UPrisonerAnimInstance_GetStandLookBlendAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetPlayRateFromSpeed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              speedInAnimation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MinPlayRate                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxPlayRate                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::GetPlayRateFromSpeed(float speedInAnimation, float MinPlayRate, float MaxPlayRate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetPlayRateFromSpeed");
		
		UPrisonerAnimInstance_GetPlayRateFromSpeed_Params params {};
		params.speedInAnimation = speedInAnimation;
		params.MinPlayRate = MinPlayRate;
		params.MaxPlayRate = MaxPlayRate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetPenisSize
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetPenisSize()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetPenisSize");
		
		UPrisonerAnimInstance_GetPenisSize_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetLowerEyelidRotationDelta
	 * 		Flags  -> ()
	 */
	struct FRotator UPrisonerAnimInstance::GetLowerEyelidRotationDelta()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetLowerEyelidRotationDelta");
		
		UPrisonerAnimInstance_GetLowerEyelidRotationDelta_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetLocomotionStateWeight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerAnimationState                            State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::GetLocomotionStateWeight(EPrisonerAnimationState State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetLocomotionStateWeight");
		
		UPrisonerAnimInstance_GetLocomotionStateWeight_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetLeanBlendWeights
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Left                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Right                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Multiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCurveFloat*                                 strengthBySpeedCurve                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAnimInstance::GetLeanBlendWeights(float* Left, float* Right, float Multiplier, class UCurveFloat* strengthBySpeedCurve)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetLeanBlendWeights");
		
		UPrisonerAnimInstance_GetLeanBlendWeights_Params params {};
		params.Multiplier = Multiplier;
		params.strengthBySpeedCurve = strengthBySpeedCurve;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Left != nullptr)
			*Left = params.Left;
		if (Right != nullptr)
			*Right = params.Right;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetKnownCurveValueOnWorkerThread
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerAnimationCurve                            Curve                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::GetKnownCurveValueOnWorkerThread(EPrisonerAnimationCurve Curve)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetKnownCurveValueOnWorkerThread");
		
		UPrisonerAnimInstance_GetKnownCurveValueOnWorkerThread_Params params {};
		params.Curve = Curve;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetIsVehicleDriver
	 * 		Flags  -> ()
	 */
	bool UPrisonerAnimInstance::GetIsVehicleDriver()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetIsVehicleDriver");
		
		UPrisonerAnimInstance_GetIsVehicleDriver_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeRight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerStance                                    stance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::GetInPlaceTurningElapsedTimeRight(EPrisonerStance stance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeRight");
		
		UPrisonerAnimInstance_GetInPlaceTurningElapsedTimeRight_Params params {};
		params.stance = stance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeLeft
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerStance                                    stance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::GetInPlaceTurningElapsedTimeLeft(EPrisonerStance stance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeLeft");
		
		UPrisonerAnimInstance_GetInPlaceTurningElapsedTimeLeft_Params params {};
		params.stance = stance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetInPlaceTurningDirectionBlendAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerStance                                    stance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::GetInPlaceTurningDirectionBlendAlpha(EPrisonerStance stance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetInPlaceTurningDirectionBlendAlpha");
		
		UPrisonerAnimInstance_GetInPlaceTurningDirectionBlendAlpha_Params params {};
		params.stance = stance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetInPlaceTurningBlendAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerStance                                    stance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::GetInPlaceTurningBlendAlpha(EPrisonerStance stance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetInPlaceTurningBlendAlpha");
		
		UPrisonerAnimInstance_GetInPlaceTurningBlendAlpha_Params params {};
		params.stance = stance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetIKLegsRootOffsetVectorFromCardinalDirection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECardinalDirection                                 Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UPrisonerAnimInstance::GetIKLegsRootOffsetVectorFromCardinalDirection(ECardinalDirection Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetIKLegsRootOffsetVectorFromCardinalDirection");
		
		UPrisonerAnimInstance_GetIKLegsRootOffsetVectorFromCardinalDirection_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnWorkerThread
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerFacialExpression                          facialExpression                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::GetFacialExpressionBlendWeightOnWorkerThread(EPrisonerFacialExpression facialExpression)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnWorkerThread");
		
		UPrisonerAnimInstance_GetFacialExpressionBlendWeightOnWorkerThread_Params params {};
		params.facialExpression = facialExpression;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnGameThread
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerFacialExpression                          facialExpression                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::GetFacialExpressionBlendWeightOnGameThread(EPrisonerFacialExpression facialExpression)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnGameThread");
		
		UPrisonerAnimInstance_GetFacialExpressionBlendWeightOnGameThread_Params params {};
		params.facialExpression = facialExpression;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetCurrentLocomotionStateElapsedTime
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetCurrentLocomotionStateElapsedTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetCurrentLocomotionStateElapsedTime");
		
		UPrisonerAnimInstance_GetCurrentLocomotionStateElapsedTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetCurrentLocomotionState
	 * 		Flags  -> ()
	 */
	EPrisonerAnimationState UPrisonerAnimInstance::GetCurrentLocomotionState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetCurrentLocomotionState");
		
		UPrisonerAnimInstance_GetCurrentLocomotionState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetCardinalDirectionFromCourseAngle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	ECardinalDirection UPrisonerAnimInstance::GetCardinalDirectionFromCourseAngle(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetCardinalDirectionFromCourseAngle");
		
		UPrisonerAnimInstance_GetCardinalDirectionFromCourseAngle_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetBoxingTurnAngle
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetBoxingTurnAngle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetBoxingTurnAngle");
		
		UPrisonerAnimInstance_GetBoxingTurnAngle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeRight
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetBoxingInPlaceTurningElapsedTimeRight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeRight");
		
		UPrisonerAnimInstance_GetBoxingInPlaceTurningElapsedTimeRight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeLeft
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetBoxingInPlaceTurningElapsedTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeLeft");
		
		UPrisonerAnimInstance_GetBoxingInPlaceTurningElapsedTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningDirectionBlendAlpha
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetBoxingInPlaceTurningDirectionBlendAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningDirectionBlendAlpha");
		
		UPrisonerAnimInstance_GetBoxingInPlaceTurningDirectionBlendAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningBlendAlpha
	 * 		Flags  -> ()
	 */
	float UPrisonerAnimInstance::GetBoxingInPlaceTurningBlendAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningBlendAlpha");
		
		UPrisonerAnimInstance_GetBoxingInPlaceTurningBlendAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.GetBowArmsShakeAnimationOnGameThread
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerStance                                    stance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAnimSequenceBase* UPrisonerAnimInstance::GetBowArmsShakeAnimationOnGameThread(EPrisonerStance stance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.GetBowArmsShakeAnimationOnGameThread");
		
		UPrisonerAnimInstance_GetBowArmsShakeAnimationOnGameThread_Params params {};
		params.stance = stance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.FindTimeBeforeJumpApex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimSequenceBase*                           AnimSequence                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              distanceToApex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::FindTimeBeforeJumpApex(class UAnimSequenceBase* AnimSequence, float distanceToApex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.FindTimeBeforeJumpApex");
		
		UPrisonerAnimInstance_FindTimeBeforeJumpApex_Params params {};
		params.AnimSequence = AnimSequence;
		params.distanceToApex = distanceToApex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.FindTimeAtStoppingDistance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimSequenceBase*                           AnimSequence                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              stoppingDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::FindTimeAtStoppingDistance(class UAnimSequenceBase* AnimSequence, float stoppingDistance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.FindTimeAtStoppingDistance");
		
		UPrisonerAnimInstance_FindTimeAtStoppingDistance_Params params {};
		params.AnimSequence = AnimSequence;
		params.stoppingDistance = stoppingDistance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.FindTimeAfterJumpApex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimSequenceBase*                           AnimSequence                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              distanceToApex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance::FindTimeAfterJumpApex(class UAnimSequenceBase* AnimSequence, float distanceToApex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.FindTimeAfterJumpApex");
		
		UPrisonerAnimInstance_FindTimeAfterJumpApex_Params params {};
		params.AnimSequence = AnimSequence;
		params.distanceToApex = distanceToApex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.DeactivateFacialExpressionOnGameThread
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerFacialExpression                          facialExpression                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAnimInstance::DeactivateFacialExpressionOnGameThread(EPrisonerFacialExpression facialExpression)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.DeactivateFacialExpressionOnGameThread");
		
		UPrisonerAnimInstance_DeactivateFacialExpressionOnGameThread_Params params {};
		params.facialExpression = facialExpression;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.DeactivateAllFacialExpressionsOnGameThread
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance::DeactivateAllFacialExpressionsOnGameThread()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.DeactivateAllFacialExpressionsOnGameThread");
		
		UPrisonerAnimInstance_DeactivateAllFacialExpressionsOnGameThread_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.Blink
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance::Blink()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.Blink");
		
		UPrisonerAnimInstance_Blink_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.AnimNotify_TakePenis
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance::AnimNotify_TakePenis()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.AnimNotify_TakePenis");
		
		UPrisonerAnimInstance_AnimNotify_TakePenis_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.AnimNotify_TakeItemInHands
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimNotify*                                 Notify                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAnimInstance::AnimNotify_TakeItemInHands(class UAnimNotify* Notify)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.AnimNotify_TakeItemInHands");
		
		UPrisonerAnimInstance_AnimNotify_TakeItemInHands_Params params {};
		params.Notify = Notify;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.AnimNotify_RFootDown
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance::AnimNotify_RFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.AnimNotify_RFootDown");
		
		UPrisonerAnimInstance_AnimNotify_RFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.AnimNotify_RemoveItemFromHands
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimNotify*                                 Notify                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAnimInstance::AnimNotify_RemoveItemFromHands(class UAnimNotify* Notify)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.AnimNotify_RemoveItemFromHands");
		
		UPrisonerAnimInstance_AnimNotify_RemoveItemFromHands_Params params {};
		params.Notify = Notify;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.AnimNotify_ReleasePenis
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance::AnimNotify_ReleasePenis()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.AnimNotify_ReleasePenis");
		
		UPrisonerAnimInstance_AnimNotify_ReleasePenis_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.AnimNotify_LFootDown
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance::AnimNotify_LFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.AnimNotify_LFootDown");
		
		UPrisonerAnimInstance_AnimNotify_LFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.AnimNotify_EnableCapsuleCollision
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimNotify*                                 Notify                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAnimInstance::AnimNotify_EnableCapsuleCollision(class UAnimNotify* Notify)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.AnimNotify_EnableCapsuleCollision");
		
		UPrisonerAnimInstance_AnimNotify_EnableCapsuleCollision_Params params {};
		params.Notify = Notify;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.AnimNotify_DisableCapsuleCollision
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimNotify*                                 Notify                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAnimInstance::AnimNotify_DisableCapsuleCollision(class UAnimNotify* Notify)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.AnimNotify_DisableCapsuleCollision");
		
		UPrisonerAnimInstance_AnimNotify_DisableCapsuleCollision_Params params {};
		params.Notify = Notify;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance.ActivateFacialExpressionOnGameThread
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerFacialExpression                          facialExpression                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              blendInDuration                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              blendOutDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              blendWeightMultiplier                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAnimInstance::ActivateFacialExpressionOnGameThread(EPrisonerFacialExpression facialExpression, float blendInDuration, float Duration, float blendOutDuration, float blendWeightMultiplier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance.ActivateFacialExpressionOnGameThread");
		
		UPrisonerAnimInstance_ActivateFacialExpressionOnGameThread_Params params {};
		params.facialExpression = facialExpression;
		params.blendInDuration = blendInDuration;
		params.Duration = Duration;
		params.blendOutDuration = blendOutDuration;
		params.blendWeightMultiplier = blendWeightMultiplier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance_Aerial.FindJumpTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimSequenceBase*                           AnimSequence                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              distanceToApex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               afterApex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerAnimInstance_Aerial::FindJumpTime(class UAnimSequenceBase* AnimSequence, float distanceToApex, bool afterApex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance_Aerial.FindJumpTime");
		
		UPrisonerAnimInstance_Aerial_FindJumpTime_Params params {};
		params.AnimSequence = AnimSequence;
		params.distanceToApex = distanceToApex;
		params.afterApex = afterApex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance_Aerial.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance_Aerial::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance_Aerial");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance_Airplane.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance_Airplane::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance_Airplane");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance_Boat.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance_Boat::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance_Boat");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance_Fishing.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance_Fishing::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance_Fishing");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance_Grappled.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance_Grappled::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance_Grappled");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance_Parachute.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance_Parachute::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance_Parachute");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance_Vehicle2W.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance_Vehicle2W::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance_Vehicle2W");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance_WeightLoad.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance_WeightLoad::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance_WeightLoad");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_RFootDown
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance_WheelBarrow::AnimNotify_RFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_RFootDown");
		
		UPrisonerAnimInstance_WheelBarrow_AnimNotify_RFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_LFootDown
	 * 		Flags  -> ()
	 */
	void UPrisonerAnimInstance_WheelBarrow::AnimNotify_LFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_LFootDown");
		
		UPrisonerAnimInstance_WheelBarrow_AnimNotify_LFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimInstance_WheelBarrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimInstance_WheelBarrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimInstance_WheelBarrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimNotify_PlayGearSound.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimNotify_PlayGearSound::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimNotify_PlayGearSound");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAnimStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAnimStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAnimStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAppearanceComponent.OnRep_RepData
	 * 		Flags  -> ()
	 */
	void UPrisonerAppearanceComponent::OnRep_RepData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAppearanceComponent.OnRep_RepData");
		
		UPrisonerAppearanceComponent_OnRep_RepData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateRepData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           RepData                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAppearanceComponent::NetMulticast_UpdateRepData(uint32_t RepData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateRepData");
		
		UPrisonerAppearanceComponent_NetMulticast_UpdateRepData_Params params {};
		params.RepData = RepData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateHair
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      hairParams                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerAppearanceComponent::NetMulticast_UpdateHair(unsigned char hairParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateHair");
		
		UPrisonerAppearanceComponent_NetMulticast_UpdateHair_Params params {};
		params.hairParams = hairParams;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAppearanceComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAppearanceComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAppearanceComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAppearanceDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAppearanceDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAppearanceDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAppearanceSetDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAppearanceSetDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAppearanceSetDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerAppearanceUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerAppearanceUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerAppearanceUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_Damage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_Damage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Damage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySimulationUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySimulationUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySimulationUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyEffectUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyEffectUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyEffectUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_Damage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_Damage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_Damage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_MaxMovementPace.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_MaxMovementPace::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_MaxMovementPace");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_AbstractModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_StrengthModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_StrengthModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_StrengthModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_StrengthModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_StrengthModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_StrengthModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_ConstitutionModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_ConstitutionModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_ConstitutionModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_ConstitutionModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_ConstitutionModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_ConstitutionModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_DexterityModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_DexterityModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_DexterityModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_DexterityModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_DexterityModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_DexterityModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_IntelligenceModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_IntelligenceModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_IntelligenceModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_IntelligenceModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_IntelligenceModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_IntelligenceModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_HealingSpeedModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_HealingSpeedModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_HealingSpeedModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_HealingSpeedModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_HealingSpeedModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_HealingSpeedModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_ImmuneSystemEfficiencyModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_ImmuneSystemEfficiencyModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_ImmuneSystemEfficiencyModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_ImmuneSystemEfficiencyModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_ImmuneSystemEfficiencyModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_ImmuneSystemEfficiencyModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_PerformanceScoreModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_PerformanceScoreModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_PerformanceScoreModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_PerformanceScoreModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_PerformanceScoreModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_PerformanceScoreModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffectUIData_GroundMovementSpeedModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffectUIData_GroundMovementSpeedModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_GroundMovementSpeedModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyEffect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyEffect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyEffect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptom.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptom::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptom");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_BandagesTreatment.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_BandagesTreatment::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_BandagesTreatment");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_Injury.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_Injury::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_Injury");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_BasicInjury.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_BasicInjury::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_BasicInjury");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_BladderFull.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_BladderFull::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_BladderFull");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_BleedingInjury.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_BleedingInjury::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_BleedingInjury");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_BleedingInjury.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_BleedingInjury::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_BleedingInjury");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_Choking.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_Choking::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_Choking");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_ColonFull.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_ColonFull::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_ColonFull");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_Drunkenness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_Drunkenness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_Drunkenness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_EnergyDeficiency.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_EnergyDeficiency::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_EnergyDeficiency");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_EnergyDeficiency.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_EnergyDeficiency::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_EnergyDeficiency");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_FoodDisgust.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_FoodDisgust::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_FoodDisgust");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_FoodDisgust.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_FoodDisgust::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_FoodDisgust");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerConsumableDigestionHandler_FoodDisgust.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerConsumableDigestionHandler_FoodDisgust::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerConsumableDigestionHandler_FoodDisgust");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerConsumableDigestionHandler_FoodDisgustAntidote.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerConsumableDigestionHandler_FoodDisgustAntidote::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerConsumableDigestionHandler_FoodDisgustAntidote");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_FootAbrasions.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_FootAbrasions::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_FootAbrasions");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_FootAbrasions.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_FootAbrasions::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_FootAbrasions");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_ForeignSubstancePoisoning.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_ForeignSubstancePoisoning::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_ForeignSubstancePoisoning");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_ForeignSubstancePoisoning.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_ForeignSubstancePoisoning::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_ForeignSubstancePoisoning");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_HealthLow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_HealthLow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_HealthLow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_HeavyInjuries.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_HeavyInjuries::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_HeavyInjuries");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_Hyperthermia.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_Hyperthermia::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_Hyperthermia");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_Hyperthermia.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_Hyperthermia::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_Hyperthermia");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_Hypothermia.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_Hypothermia::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_Hypothermia");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_Hypothermia.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_Hypothermia::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_Hypothermia");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_Infection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_Infection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_Infection");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_Infection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_Infection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_Infection");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBodyCondition_KillBoxGasPoisoning.Client_TriggerDamagedEffect
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Intensity                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerBodyCondition_KillBoxGasPoisoning::Client_TriggerDamagedEffect(float Duration, float Intensity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBodyCondition_KillBoxGasPoisoning.Client_TriggerDamagedEffect");
		
		UPrisonerBodyCondition_KillBoxGasPoisoning_Client_TriggerDamagedEffect_Params params {};
		params.Duration = Duration;
		params.Intensity = Intensity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_KillBoxGasPoisoning.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_KillBoxGasPoisoning::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_KillBoxGasPoisoning");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_KillBoxGasPoisoning.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_KillBoxGasPoisoning::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_KillBoxGasPoisoning");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_Knockout.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_Knockout::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_Knockout");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_NutrientDeficiency.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_NutrientDeficiency::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_NutrientDeficiency");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_NutrientDeficiency.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_NutrientDeficiency::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_NutrientDeficiency");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionWithCauses.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionWithCauses::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionWithCauses");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_Sepsis.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_Sepsis::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_Sepsis");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionWithCausesUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionWithCausesUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionWithCausesUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_Sepsis.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_Sepsis::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_Sepsis");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_StomachEmpty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_StomachEmpty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_StomachEmpty");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_StomachFull.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_StomachFull::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_StomachFull");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_Test.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_Test::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_Test");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyCondition_TrenchFoot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyCondition_TrenchFoot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyCondition_TrenchFoot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionUIData_TrenchFoot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionUIData_TrenchFoot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionUIData_TrenchFoot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionCause.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionCause::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionCause");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionCause_Sepsis.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionCause_Sepsis::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionCause_Sepsis");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionCauseUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionCauseUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionCauseUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionCauseUIData_Sepsis.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionCauseUIData_Sepsis::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionCauseUIData_Sepsis");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionInteraction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionInteraction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionInteraction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionInteraction_RemoveBandages.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionInteraction_RemoveBandages::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionInteraction_RemoveBandages");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionInteractionQueryResults.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionInteractionQueryResults::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionInteractionQueryResults");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionInteractionItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionInteractionItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionInteractionItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionTreatInteractionItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionTreatInteractionItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionTreatInteractionItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPBCTIIT_ApplyBandagesOrDisinfect_Disinfect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPBCTIIT_ApplyBandagesOrDisinfect_Disinfect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PBCTIIT_ApplyBandagesOrDisinfect_Disinfect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPBCIQR_ApplyBandagesOrDisinfect_Disinfect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPBCIQR_ApplyBandagesOrDisinfect_Disinfect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PBCIQR_ApplyBandagesOrDisinfect_Disinfect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPBCIQR_ApplyBandagesOrDisinfect_ApplyBandages.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPBCIQR_ApplyBandagesOrDisinfect_ApplyBandages::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PBCIQR_ApplyBandagesOrDisinfect_ApplyBandages");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionTreatInteraction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionTreatInteraction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionTreatInteraction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionTreatInteraction_ApplyBandagesOrDisinfect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionTreatInteraction_ApplyBandagesOrDisinfect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionTreatInteraction_ApplyBandagesOrDisinfect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyEffect_AntibioticsReaction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyEffect_AntibioticsReaction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyEffect_AntibioticsReaction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyEffectUIData_AntibioticsReaction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyEffectUIData_AntibioticsReaction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyEffectUIData_AntibioticsReaction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyEffect_Coma.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyEffect_Coma::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyEffect_Coma");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyEffect_Death.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyEffect_Death::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyEffect_Death");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyEffect_InfectionController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyEffect_InfectionController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyEffect_InfectionController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyEffect_Limping.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyEffect_Limping::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyEffect_Limping");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyEffect_NotificationCooldown.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyEffect_NotificationCooldown::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyEffect_NotificationCooldown");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyMuscleGroupToInfectionClassMappings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyMuscleGroupToInfectionClassMappings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyMuscleGroupToInfectionClassMappings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAsepsisItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAsepsisItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AsepsisItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyInfectionStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyInfectionStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyInfectionStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBodySimulationComponent.OnRep_State5
	 * 		Flags  -> ()
	 */
	void UPrisonerBodySimulationComponent::OnRep_State5()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBodySimulationComponent.OnRep_State5");
		
		UPrisonerBodySimulationComponent_OnRep_State5_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBodySimulationComponent.OnRep_State4
	 * 		Flags  -> ()
	 */
	void UPrisonerBodySimulationComponent::OnRep_State4()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBodySimulationComponent.OnRep_State4");
		
		UPrisonerBodySimulationComponent_OnRep_State4_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBodySimulationComponent.OnRep_State3
	 * 		Flags  -> ()
	 */
	void UPrisonerBodySimulationComponent::OnRep_State3()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBodySimulationComponent.OnRep_State3");
		
		UPrisonerBodySimulationComponent_OnRep_State3_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBodySimulationComponent.OnRep_State2
	 * 		Flags  -> ()
	 */
	void UPrisonerBodySimulationComponent::OnRep_State2()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBodySimulationComponent.OnRep_State2");
		
		UPrisonerBodySimulationComponent_OnRep_State2_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBodySimulationComponent.OnRep_State1
	 * 		Flags  -> ()
	 */
	void UPrisonerBodySimulationComponent::OnRep_State1()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBodySimulationComponent.OnRep_State1");
		
		UPrisonerBodySimulationComponent_OnRep_State1_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBodySimulationComponent.OnRep_BodyEffects
	 * 		Flags  -> ()
	 */
	void UPrisonerBodySimulationComponent::OnRep_BodyEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBodySimulationComponent.OnRep_BodyEffects");
		
		UPrisonerBodySimulationComponent_OnRep_BodyEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySimulationComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySimulationComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySimulationComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySimulationData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySimulationData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySimulationData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySimulationSave.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySimulationSave::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySimulationSave");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySimulationStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySimulationStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySimulationStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUIDataController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUIDataController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUIDataController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySimulationUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySimulationUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySimulationUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySimulationUIDataImpl.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySimulationUIDataImpl::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySimulationUIDataImpl");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySimulationUIStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySimulationUIStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySimulationUIStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Bleeding.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Bleeding::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Bleeding");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Bleeding.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Bleeding::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Bleeding");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_Bleeding.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_Bleeding::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_Bleeding");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_BlurredVision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_BlurredVision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_BlurredVision");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_BlurredVision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_BlurredVision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_BlurredVision");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_BlurredVision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_BlurredVision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_BlurredVision");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_BlurredVision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_BlurredVision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_BlurredVision");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_BoostOfEnergy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_BoostOfEnergy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_BoostOfEnergy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_BoostOfEnergy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_BoostOfEnergy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_BoostOfEnergy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_BreathingObstructed.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_BreathingObstructed::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_BreathingObstructed");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_BreathingObstructed.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_BreathingObstructed::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_BreathingObstructed");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_PeriodicSound.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_PeriodicSound::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_PeriodicSound");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Burping.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Burping::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Burping");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBodySymptom_PeriodicSound.NetMulticast_PlaySound
	 * 		Flags  -> ()
	 */
	void UPrisonerBodySymptom_PeriodicSound::NetMulticast_PlaySound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBodySymptom_PeriodicSound.NetMulticast_PlaySound");
		
		UPrisonerBodySymptom_PeriodicSound_NetMulticast_PlaySound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_PeriodicSound.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_PeriodicSound::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_PeriodicSound");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Burping.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Burping::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Burping");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_PeriodicAffect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_PeriodicAffect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_PeriodicAffect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Diarrhea.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Diarrhea::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Diarrhea");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBodySymptom_PeriodicAffect.Client_PendAffect
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Intensity                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerBodySymptom_PeriodicAffect::Client_PendAffect(float Duration, float Intensity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBodySymptom_PeriodicAffect.Client_PendAffect");
		
		UPrisonerBodySymptom_PeriodicAffect_Client_PendAffect_Params params {};
		params.Duration = Duration;
		params.Intensity = Intensity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_PeriodicAffect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_PeriodicAffect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_PeriodicAffect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Diarrhea.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Diarrhea::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Diarrhea");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Disorientation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Disorientation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Disorientation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Disorientation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Disorientation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Disorientation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_Disorientation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_Disorientation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Disorientation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Dizziness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Dizziness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Dizziness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Dizziness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Dizziness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Dizziness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_DoubleVision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_DoubleVision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_DoubleVision");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_DoubleVision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_DoubleVision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_DoubleVision");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_DoubleVision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_DoubleVision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_DoubleVision");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Farting.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Farting::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Farting");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Farting.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Farting::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Farting");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Fatigue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Fatigue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Fatigue");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Fatigue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Fatigue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Fatigue");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_Fatigue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_Fatigue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Fatigue");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_Fatigue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_Fatigue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_Fatigue");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCauseUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCauseUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCauseUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCauseUIData_Fatigue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCauseUIData_Fatigue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCauseUIData_Fatigue");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_FeelingCold.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_FeelingCold::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_FeelingCold");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_FeelingCold.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_FeelingCold::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_FeelingCold");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_FeelingHot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_FeelingHot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_FeelingHot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_FeelingHot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_FeelingHot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_FeelingHot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Hallucinations.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Hallucinations::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Hallucinations");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Hallucinations.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Hallucinations::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Hallucinations");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_Hallucinations.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_Hallucinations::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Hallucinations");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerHallucinationEpisode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerHallucinationEpisode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerHallucinationEpisode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Hunger.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Hunger::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Hunger");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Nausea.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Nausea::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Nausea");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Nausea.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Nausea::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Nausea");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_Nausea.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_Nausea::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_Nausea");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_NeedToDefecate.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_NeedToDefecate::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_NeedToDefecate");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_NeedToUrinate.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_NeedToUrinate::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_NeedToUrinate");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Pain.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Pain::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Pain");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Pain.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Pain::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Pain");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_Pain.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_Pain::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_Pain");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_PhoenixTearsPresence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_PhoenixTearsPresence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_PhoenixTearsPresence");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_PhoenixTearsPresence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_PhoenixTearsPresence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_PhoenixTearsPresence");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_PhoenixTearsPresence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_PhoenixTearsPresence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_PhoenixTearsPresence");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_StomachFullness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_StomachFullness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_StomachFullness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_StomachFullness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_StomachFullness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_StomachFullness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_StomachGrowling.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_StomachGrowling::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_StomachGrowling");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_StomachGrowling.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_StomachGrowling::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_StomachGrowling");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Thirst.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Thirst::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Thirst");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Unconsciousness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Unconsciousness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Unconsciousness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Unconsciousness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Unconsciousness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Unconsciousness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCause_Weakness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCause_Weakness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCause_Weakness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_Weakness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_Weakness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_Weakness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodyConditionOrSymptomSideEffect_Weakness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodyConditionOrSymptomSideEffect_Weakness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Weakness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_Weakness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_Weakness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_Weakness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomCauseUIData_Weakness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomCauseUIData_Weakness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomCauseUIData_Weakness");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptom_WetFeet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptom_WetFeet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptom_WetFeet");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomUIData_WetFeet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomUIData_WetFeet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomUIData_WetFeet");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBodySymptomNotifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBodySymptomNotifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBodySymptomNotifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBasicPrisonerBodySymptomNotifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBasicPrisonerBodySymptomNotifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.BasicPrisonerBodySymptomNotifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerBuryComponent.OnRep_BuryState
	 * 		Flags  -> ()
	 */
	void UPrisonerBuryComponent::OnRep_BuryState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerBuryComponent.OnRep_BuryState");
		
		UPrisonerBuryComponent_OnRep_BuryState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerBuryComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerBuryComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerBuryComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerCommonData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerCommonData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerCommonData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerConsumableUserData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerConsumableUserData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerConsumableUserData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerCorpse.UpdateWetnessFromPrisoner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisonerCorpse::UpdateWetnessFromPrisoner(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerCorpse.UpdateWetnessFromPrisoner");
		
		APrisonerCorpse_UpdateWetnessFromPrisoner_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerCorpse.UpdateHair
	 * 		Flags  -> ()
	 */
	void APrisonerCorpse::UpdateHair()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerCorpse.UpdateHair");
		
		APrisonerCorpse_UpdateHair_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerCorpse.OnRep_PenisShowing
	 * 		Flags  -> ()
	 */
	void APrisonerCorpse::OnRep_PenisShowing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerCorpse.OnRep_PenisShowing");
		
		APrisonerCorpse_OnRep_PenisShowing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerCorpse.OnRep_BreastsShowing
	 * 		Flags  -> ()
	 */
	void APrisonerCorpse::OnRep_BreastsShowing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerCorpse.OnRep_BreastsShowing");
		
		APrisonerCorpse_OnRep_BreastsShowing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerCorpse.GetHairMeshComponent
	 * 		Flags  -> ()
	 */
	class USkeletalMeshComponent* APrisonerCorpse::GetHairMeshComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerCorpse.GetHairMeshComponent");
		
		APrisonerCorpse_GetHairMeshComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerCorpse.GetHairLength
	 * 		Flags  -> ()
	 */
	float APrisonerCorpse::GetHairLength()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerCorpse.GetHairLength");
		
		APrisonerCorpse_GetHairLength_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerCorpse.GetFacialHairMeshComponent
	 * 		Flags  -> ()
	 */
	class USkeletalMeshComponent* APrisonerCorpse::GetFacialHairMeshComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerCorpse.GetFacialHairMeshComponent");
		
		APrisonerCorpse_GetFacialHairMeshComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerCorpse.GetFacialHairLength
	 * 		Flags  -> ()
	 */
	float APrisonerCorpse::GetFacialHairLength()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerCorpse.GetFacialHairLength");
		
		APrisonerCorpse_GetFacialHairLength_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerCorpse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerCorpse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerCorpse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUIDebugData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUIDebugData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUIDebugData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerDebugUI_SkillItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerDebugUI_SkillItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerDebugUI_SkillItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerDebugUI_SkillEntryWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerDebugUI_SkillEntryWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerDebugUI_SkillEntryWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerDebugUI_BodyConditionItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerDebugUI_BodyConditionItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerDebugUI_BodyConditionItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerDebugUI_BodyStateItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerDebugUI_BodyStateItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerDebugUI_BodyStateItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerDebugUI_BodyEffectItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerDebugUI_BodyEffectItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerDebugUI_BodyEffectItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerDebugUI_BodyConditionEntryWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerDebugUI_BodyConditionEntryWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerDebugUI_BodyConditionEntryWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerDebugUI_MainWidget.PrisonersComboBox_SelectionChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      SelectedItem                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESelectInfo                                        SelectionType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerDebugUI_MainWidget::PrisonersComboBox_SelectionChanged(const class FString& SelectedItem, ESelectInfo SelectionType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerDebugUI_MainWidget.PrisonersComboBox_SelectionChanged");
		
		UPrisonerDebugUI_MainWidget_PrisonersComboBox_SelectionChanged_Params params {};
		params.SelectedItem = SelectedItem;
		params.SelectionType = SelectionType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerDebugUI_MainWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerDebugUI_MainWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerDebugUI_MainWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerExcretionUserData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerExcretionUserData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerExcretionUserData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerFirstPersonSubviewComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerFirstPersonSubviewComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerFirstPersonSubviewComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerFirstPersonVehicleAimingSubviewComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerFirstPersonVehicleAimingSubviewComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerFirstPersonVehicleAimingSubviewComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerViewComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerViewComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerViewComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerFirstPersonViewComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerFirstPersonViewComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerFirstPersonViewComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerFishingComponent.OnRep_FishingState
	 * 		Flags  -> ()
	 */
	void UPrisonerFishingComponent::OnRep_FishingState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerFishingComponent.OnRep_FishingState");
		
		UPrisonerFishingComponent_OnRep_FishingState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerFishingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerFishingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerFishingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerForeignSubstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerForeignSubstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerForeignSubstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerForeignSubstance_Antibiotics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerForeignSubstance_Antibiotics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerForeignSubstance_Antibiotics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerForeignSubstance_Painkillers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerForeignSubstance_Painkillers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerForeignSubstance_Painkillers");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerForeignSubstance_Toxins.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerForeignSubstance_Toxins::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerForeignSubstance_Toxins");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerForeignSubstanceStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerForeignSubstanceStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerForeignSubstanceStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerHallucinationIllusion.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerHallucinationIllusion::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerHallucinationIllusion");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerHallucinationIllusion_SeeFirearmsAsSticksAndBananas.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerHallucinationIllusion_SeeFirearmsAsSticksAndBananas::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerHallucinationIllusion_SeeFirearmsAsSticksAndBananas");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerHallucinationIllusion_SeeOtherPlayersExtremelyFatOrSkinny.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerHallucinationIllusion_SeeOtherPlayersExtremelyFatOrSkinny::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerHallucinationIllusion_SeeOtherPlayersExtremelyFatOrSkinny");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerHallucinationIllusion_SeeOtherPlayersWithWeirdMasks.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerHallucinationIllusion_SeeOtherPlayersWithWeirdMasks::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerHallucinationIllusion_SeeOtherPlayersWithWeirdMasks");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerHallucinationIllusion_SpawnCompanionCrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerHallucinationIllusion_SpawnCompanionCrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerHallucinationIllusion_SpawnCompanionCrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerHallucinationIllusion_SpawnFakeItemsThatDisappearOnPickup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerHallucinationIllusion_SpawnFakeItemsThatDisappearOnPickup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerHallucinationIllusion_SpawnFakeItemsThatDisappearOnPickup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerHallucinationIllusion_SpawnMiniatureZombies.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerHallucinationIllusion_SpawnMiniatureZombies::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerHallucinationIllusion_SpawnMiniatureZombies");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltipChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               ShouldShowExtendedWidgetTooltip                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisonerHUD::ShouldShowExtendedWidgetTooltipChanged__DelegateSignature(bool ShouldShowExtendedWidgetTooltip)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltipChanged__DelegateSignature");
		
		APrisonerHUD_ShouldShowExtendedWidgetTooltipChanged__DelegateSignature_Params params {};
		params.ShouldShowExtendedWidgetTooltip = ShouldShowExtendedWidgetTooltip;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltip
	 * 		Flags  -> ()
	 */
	bool APrisonerHUD::ShouldShowExtendedWidgetTooltip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltip");
		
		APrisonerHUD_ShouldShowExtendedWidgetTooltip_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerHUD.SetHUDMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerHUDMode                                   NewMode                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisonerHUD::SetHUDMode(EPrisonerHUDMode NewMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerHUD.SetHUDMode");
		
		APrisonerHUD_SetHUDMode_Params params {};
		params.NewMode = NewMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerHUD.SendVehicleMarkerDataDataRequest
	 * 		Flags  -> ()
	 */
	void APrisonerHUD::SendVehicleMarkerDataDataRequest()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerHUD.SendVehicleMarkerDataDataRequest");
		
		APrisonerHUD_SendVehicleMarkerDataDataRequest_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerHUD.ReciveVehicleMarkerData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UVehicleMarkersData*                         Data                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APrisonerHUD::ReciveVehicleMarkerData(class UVehicleMarkersData* Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerHUD.ReciveVehicleMarkerData");
		
		APrisonerHUD_ReciveVehicleMarkerData_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerHUD.IsShowingSpawnScreen
	 * 		Flags  -> ()
	 */
	bool APrisonerHUD::IsShowingSpawnScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerHUD.IsShowingSpawnScreen");
		
		APrisonerHUD_IsShowingSpawnScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerHUD.IsShowingLoading
	 * 		Flags  -> ()
	 */
	bool APrisonerHUD::IsShowingLoading()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerHUD.IsShowingLoading");
		
		APrisonerHUD_IsShowingLoading_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerHUD.GetWaypointScreenWidget
	 * 		Flags  -> ()
	 */
	class UWaypointScreenWidget* APrisonerHUD::GetWaypointScreenWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerHUD.GetWaypointScreenWidget");
		
		APrisonerHUD_GetWaypointScreenWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerHUD.GetHudWidgetCanvasPanel
	 * 		Flags  -> ()
	 */
	class UCanvasPanel* APrisonerHUD::GetHudWidgetCanvasPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerHUD.GetHudWidgetCanvasPanel");
		
		APrisonerHUD_GetHudWidgetCanvasPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerHUD.GetHUDMode
	 * 		Flags  -> ()
	 */
	EPrisonerHUDMode APrisonerHUD::GetHUDMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerHUD.GetHUDMode");
		
		APrisonerHUD_GetHUDMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction APrisonerHUD.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APrisonerHUD::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerHUD");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.UnEquipStolenClothesItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   stolenPrisoner                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AClothesItem*                                Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::UnEquipStolenClothesItemOnServer(class APrisoner* stolenPrisoner, class AClothesItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.UnEquipStolenClothesItemOnServer");
		
		UPrisonerInventoryComponent_UnEquipStolenClothesItemOnServer_Params params {};
		params.stolenPrisoner = stolenPrisoner;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.UnEquipClothesItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AClothesItem*                                Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               placeInInventory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               shouldEverDrop                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::UnEquipClothesItemOnServer(class AClothesItem* Item, bool placeInInventory, bool shouldEverDrop)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.UnEquipClothesItemOnServer");
		
		UPrisonerInventoryComponent_UnEquipClothesItemOnServer_Params params {};
		params.Item = Item;
		params.placeInInventory = placeInInventory;
		params.shouldEverDrop = shouldEverDrop;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.UnEquipClothesItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AClothesItem*                                Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               placeInInventory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               shouldEverDrop                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::UnEquipClothesItem(class AClothesItem* Item, bool placeInInventory, bool shouldEverDrop)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.UnEquipClothesItem");
		
		UPrisonerInventoryComponent_UnEquipClothesItem_Params params {};
		params.Item = Item;
		params.placeInInventory = placeInInventory;
		params.shouldEverDrop = shouldEverDrop;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.SpawnAndDropItemAtOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UContainerItemDescriptor*                    Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::SpawnAndDropItemAtOnServer(class UContainerItemDescriptor* Item, const struct FVector& Location, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.SpawnAndDropItemAtOnServer");
		
		UPrisonerInventoryComponent_SpawnAndDropItemAtOnServer_Params params {};
		params.Item = Item;
		params.Location = Location;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Server_SetQuickAccessSlotInThrowingMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Server_SetQuickAccessSlotInThrowingMode(int32_t Index, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Server_SetQuickAccessSlotInThrowingMode");
		
		UPrisonerInventoryComponent_Server_SetQuickAccessSlotInThrowingMode_Params params {};
		params.Index = Index;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Server_SetQuickAccessItemClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Server_SetQuickAccessItemClass(int32_t Index, class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Server_SetQuickAccessItemClass");
		
		UPrisonerInventoryComponent_Server_SetQuickAccessItemClass_Params params {};
		params.Index = Index;
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Server_SendQuickAccessState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FQuickAccessSlotData>                Data                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Server_SendQuickAccessState(TArray<struct FQuickAccessSlotData> Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Server_SendQuickAccessState");
		
		UPrisonerInventoryComponent_Server_SendQuickAccessState_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Server_RemoveItemFromQuickAccess
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Server_RemoveItemFromQuickAccess(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Server_RemoveItemFromQuickAccess");
		
		UPrisonerInventoryComponent_Server_RemoveItemFromQuickAccess_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Server_PickupCorpse
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACorpse*                                     Corpse                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Server_PickupCorpse(class ACorpse* Corpse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Server_PickupCorpse");
		
		UPrisonerInventoryComponent_Server_PickupCorpse_Params params {};
		params.Corpse = Corpse;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Server_InitializeItemVirtualizedInventory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     container                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Server_InitializeItemVirtualizedInventory(class UObject* Item, class UObject* container)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Server_InitializeItemVirtualizedInventory");
		
		UPrisonerInventoryComponent_Server_InitializeItemVirtualizedInventory_Params params {};
		params.Item = Item;
		params.container = container;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Server_AddItemToQuickAccess
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               throwingMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Server_AddItemToQuickAccess(class AItem* Item, int32_t Index, bool throwingMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Server_AddItemToQuickAccess");
		
		UPrisonerInventoryComponent_Server_AddItemToQuickAccess_Params params {};
		params.Item = Item;
		params.Index = Index;
		params.throwingMode = throwingMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.RemoveStolenItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   stolenPrisoner                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::RemoveStolenItemOnServer(class APrisoner* stolenPrisoner, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.RemoveStolenItemOnServer");
		
		UPrisonerInventoryComponent_RemoveStolenItemOnServer_Params params {};
		params.stolenPrisoner = stolenPrisoner;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.RemoveStacks
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            stacksToSplit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::RemoveStacks(int32_t stacksToSplit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.RemoveStacks");
		
		UPrisonerInventoryComponent_RemoveStacks_Params params {};
		params.stacksToSplit = stacksToSplit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.RemoveSelectionItemsOnClients
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AItem*>                               Items                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               allClients                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::RemoveSelectionItemsOnClients(TArray<class AItem*> Items, bool allClients)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.RemoveSelectionItemsOnClients");
		
		UPrisonerInventoryComponent_RemoveSelectionItemsOnClients_Params params {};
		params.Items = Items;
		params.allClients = allClients;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.RemoveSelectionItemsOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AItem*>                               Items                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::RemoveSelectionItemsOnClient(TArray<class AItem*> Items)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.RemoveSelectionItemsOnClient");
		
		UPrisonerInventoryComponent_RemoveSelectionItemsOnClient_Params params {};
		params.Items = Items;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.RemoveItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::RemoveItemOnServer(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.RemoveItemOnServer");
		
		UPrisonerInventoryComponent_RemoveItemOnServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.OnEquippedClothesDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::OnEquippedClothesDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.OnEquippedClothesDestroyed");
		
		UPrisonerInventoryComponent_OnEquippedClothesDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.PrisonerInventoryComponent.ItemUnequippedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrisonerInventoryComponent*                 sender                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::ItemUnequippedDelegate__DelegateSignature(class UPrisonerInventoryComponent* sender, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.PrisonerInventoryComponent.ItemUnequippedDelegate__DelegateSignature");
		
		UPrisonerInventoryComponent_ItemUnequippedDelegate__DelegateSignature_Params params {};
		params.sender = sender;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction ConZ.PrisonerInventoryComponent.ItemEquippedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrisonerInventoryComponent*                 sender                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::ItemEquippedDelegate__DelegateSignature(class UPrisonerInventoryComponent* sender, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction ConZ.PrisonerInventoryComponent.ItemEquippedDelegate__DelegateSignature");
		
		UPrisonerInventoryComponent_ItemEquippedDelegate__DelegateSignature_Params params {};
		params.sender = sender;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.IsClothesItemEquipped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AClothesItem*                                Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerInventoryComponent::IsClothesItemEquipped(class AClothesItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.IsClothesItemEquipped");
		
		UPrisonerInventoryComponent_IsClothesItemEquipped_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.HasSelectionItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerInventoryComponent::HasSelectionItem(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.HasSelectionItem");
		
		UPrisonerInventoryComponent_HasSelectionItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.GetStacksCount
	 * 		Flags  -> ()
	 */
	int32_t UPrisonerInventoryComponent::GetStacksCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.GetStacksCount");
		
		UPrisonerInventoryComponent_GetStacksCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.GetMaxHairLength
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EConZGender                                        Gender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerInventoryComponent::GetMaxHairLength(EConZGender Gender)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.GetMaxHairLength");
		
		UPrisonerInventoryComponent_GetMaxHairLength_Params params {};
		params.Gender = Gender;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.GetMaxFacialHairLength
	 * 		Flags  -> ()
	 */
	float UPrisonerInventoryComponent::GetMaxFacialHairLength()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.GetMaxFacialHairLength");
		
		UPrisonerInventoryComponent_GetMaxFacialHairLength_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.GetGearWeightFast
	 * 		Flags  -> ()
	 */
	float UPrisonerInventoryComponent::GetGearWeightFast()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.GetGearWeightFast");
		
		UPrisonerInventoryComponent_GetGearWeightFast_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.GetGearWeight
	 * 		Flags  -> ()
	 */
	float UPrisonerInventoryComponent::GetGearWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.GetGearWeight");
		
		UPrisonerInventoryComponent_GetGearWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.GetEquippedClothes
	 * 		Flags  -> ()
	 */
	TArray<class AClothesItem*> UPrisonerInventoryComponent::GetEquippedClothes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.GetEquippedClothes");
		
		UPrisonerInventoryComponent_GetEquippedClothes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.GetBodySlotForBodyPart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EBodyPart                                          bodyPart                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EBodySlot UPrisonerInventoryComponent::GetBodySlotForBodyPart(EBodyPart bodyPart)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.GetBodySlotForBodyPart");
		
		UPrisonerInventoryComponent_GetBodySlotForBodyPart_Params params {};
		params.bodyPart = bodyPart;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.FinishAddSelectionItemOnServer
	 * 		Flags  -> ()
	 */
	void UPrisonerInventoryComponent::FinishAddSelectionItemOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.FinishAddSelectionItemOnServer");
		
		UPrisonerInventoryComponent_FinishAddSelectionItemOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.EquipItemInHandsOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::EquipItemInHandsOnServer(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.EquipItemInHandsOnServer");
		
		UPrisonerInventoryComponent_EquipItemInHandsOnServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.EquipClothesItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AClothesItem*                                Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::EquipClothesItemOnServer(class AClothesItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.EquipClothesItemOnServer");
		
		UPrisonerInventoryComponent_EquipClothesItemOnServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.EquipClothesItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AClothesItem*                                Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::EquipClothesItem(class AClothesItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.EquipClothesItem");
		
		UPrisonerInventoryComponent_EquipClothesItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.DropItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::DropItemOnServer(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.DropItemOnServer");
		
		UPrisonerInventoryComponent_DropItemOnServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.DropItemOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::DropItemOnClient(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.DropItemOnClient");
		
		UPrisonerInventoryComponent_DropItemOnClient_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.DropItemAtOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::DropItemAtOnServer(class AItem* Item, const struct FVector& Location, const struct FRotator& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.DropItemAtOnServer");
		
		UPrisonerInventoryComponent_DropItemAtOnServer_Params params {};
		params.Item = Item;
		params.Location = Location;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.DropAllItemsOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AItem*>                               Items                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               removeSelection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::DropAllItemsOnServer(TArray<class AItem*> Items, bool removeSelection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.DropAllItemsOnServer");
		
		UPrisonerInventoryComponent_DropAllItemsOnServer_Params params {};
		params.Items = Items;
		params.removeSelection = removeSelection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Client_SetQuickAccessSlotInThrowingMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Client_SetQuickAccessSlotInThrowingMode(int32_t Index, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Client_SetQuickAccessSlotInThrowingMode");
		
		UPrisonerInventoryComponent_Client_SetQuickAccessSlotInThrowingMode_Params params {};
		params.Index = Index;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Client_SetQuickAccessItemClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Client_SetQuickAccessItemClass(int32_t Index, class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Client_SetQuickAccessItemClass");
		
		UPrisonerInventoryComponent_Client_SetQuickAccessItemClass_Params params {};
		params.Index = Index;
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Client_SendQuickAccessState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FQuickAccessClientSyncData>          Data                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               enableSendingState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Client_SendQuickAccessState(TArray<struct FQuickAccessClientSyncData> Data, bool enableSendingState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Client_SendQuickAccessState");
		
		UPrisonerInventoryComponent_Client_SendQuickAccessState_Params params {};
		params.Data = Data;
		params.enableSendingState = enableSendingState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Client_ClearQuickAccessItems
	 * 		Flags  -> ()
	 */
	void UPrisonerInventoryComponent::Client_ClearQuickAccessItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Client_ClearQuickAccessItems");
		
		UPrisonerInventoryComponent_Client_ClearQuickAccessItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.Client_AddItemToQuickAccess
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGuid                                       itemUniqueId                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::Client_AddItemToQuickAccess(class AItem* Item, const struct FGuid& itemUniqueId, int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.Client_AddItemToQuickAccess");
		
		UPrisonerInventoryComponent_Client_AddItemToQuickAccess_Params params {};
		params.Item = Item;
		params.itemUniqueId = itemUniqueId;
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.CanStackWith
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerInventoryComponent::CanStackWith(class UObject* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.CanStackWith");
		
		UPrisonerInventoryComponent_CanStackWith_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.CanStack
	 * 		Flags  -> ()
	 */
	bool UPrisonerInventoryComponent::CanStack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.CanStack");
		
		UPrisonerInventoryComponent_CanStack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.CanEquipClothesItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AClothesItem*                                Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerInventoryComponent::CanEquipClothesItem(class AClothesItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.CanEquipClothesItem");
		
		UPrisonerInventoryComponent_CanEquipClothesItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.CanAddItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               tryToJoinItems                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerInventoryComponent::CanAddItem(class AItem* Item, bool tryToJoinItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.CanAddItem");
		
		UPrisonerInventoryComponent_CanAddItem_Params params {};
		params.Item = Item;
		params.tryToJoinItems = tryToJoinItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.AutoAddItemOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               tryToJoinItems                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::AutoAddItemOnServer(class AItem* Item, bool tryToJoinItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.AutoAddItemOnServer");
		
		UPrisonerInventoryComponent_AutoAddItemOnServer_Params params {};
		params.Item = Item;
		params.tryToJoinItems = tryToJoinItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.AutoAddAllItemsOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AItem*>                               Items                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               removeSelection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::AutoAddAllItemsOnServer(TArray<class AItem*> Items, bool removeSelection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.AutoAddAllItemsOnServer");
		
		UPrisonerInventoryComponent_AutoAddAllItemsOnServer_Params params {};
		params.Items = Items;
		params.removeSelection = removeSelection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.AddStack
	 * 		Flags  -> ()
	 */
	void UPrisonerInventoryComponent::AddStack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.AddStack");
		
		UPrisonerInventoryComponent_AddStack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.AddSelectionItemOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerInventoryComponent::AddSelectionItemOnClient(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.AddSelectionItemOnClient");
		
		UPrisonerInventoryComponent_AddSelectionItemOnClient_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerInventoryComponent.AddDefaultEquipment
	 * 		Flags  -> ()
	 */
	void UPrisonerInventoryComponent::AddDefaultEquipment()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerInventoryComponent.AddDefaultEquipment");
		
		UPrisonerInventoryComponent_AddDefaultEquipment_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerInventoryComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerInventoryComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerInventoryComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.SetNoiseBarPercent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerLifeIndicatorsSprite::SetNoiseBarPercent(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.SetNoiseBarPercent");
		
		UPrisonerLifeIndicatorsSprite_SetNoiseBarPercent_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.SetAIDetectionBarPercent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerLifeIndicatorsSprite::SetAIDetectionBarPercent(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.SetAIDetectionBarPercent");
		
		UPrisonerLifeIndicatorsSprite_SetAIDetectionBarPercent_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.ResetAIDetectionTimer
	 * 		Flags  -> ()
	 */
	void UPrisonerLifeIndicatorsSprite::ResetAIDetectionTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.ResetAIDetectionTimer");
		
		UPrisonerLifeIndicatorsSprite_ResetAIDetectionTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.OnNoiseInstigated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              noisePercent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerLifeIndicatorsSprite::OnNoiseInstigated(float noisePercent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.OnNoiseInstigated");
		
		UPrisonerLifeIndicatorsSprite_OnNoiseInstigated_Params params {};
		params.noisePercent = noisePercent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.OnAIDetectionTimerChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              detectionTimer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerLifeIndicatorsSprite::OnAIDetectionTimerChanged(float detectionTimer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.OnAIDetectionTimerChanged");
		
		UPrisonerLifeIndicatorsSprite_OnAIDetectionTimerChanged_Params params {};
		params.detectionTimer = detectionTimer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.IsBodyPartAfflicted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EBodyPart                                          bodyPart                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerLifeIndicatorsSprite::IsBodyPartAfflicted(EBodyPart bodyPart)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.IsBodyPartAfflicted");
		
		UPrisonerLifeIndicatorsSprite_IsBodyPartAfflicted_Params params {};
		params.bodyPart = bodyPart;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.IsBleedingFromAnyBodyPart
	 * 		Flags  -> ()
	 */
	bool UPrisonerLifeIndicatorsSprite::IsBleedingFromAnyBodyPart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.IsBleedingFromAnyBodyPart");
		
		UPrisonerLifeIndicatorsSprite_IsBleedingFromAnyBodyPart_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.GetNoiseBarPercent
	 * 		Flags  -> ()
	 */
	float UPrisonerLifeIndicatorsSprite::GetNoiseBarPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.GetNoiseBarPercent");
		
		UPrisonerLifeIndicatorsSprite_GetNoiseBarPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.GetBreathingBarLungsWidget
	 * 		Flags  -> ()
	 */
	class UBreathingBarLungsWidget* UPrisonerLifeIndicatorsSprite::GetBreathingBarLungsWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.GetBreathingBarLungsWidget");
		
		UPrisonerLifeIndicatorsSprite_GetBreathingBarLungsWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLifeIndicatorsSprite.GetAIDetectionBarPercent
	 * 		Flags  -> ()
	 */
	float UPrisonerLifeIndicatorsSprite::GetAIDetectionBarPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLifeIndicatorsSprite.GetAIDetectionBarPercent");
		
		UPrisonerLifeIndicatorsSprite_GetAIDetectionBarPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerLifeIndicatorsSprite.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerLifeIndicatorsSprite::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerLifeIndicatorsSprite");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerLoadout.EquipPrisoner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AItem*>                               givenItems                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		bool                                               ClearEquipment                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               applyOutfit                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               applyItems                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerLoadout::EquipPrisoner(class APrisoner* Prisoner, TArray<class AItem*>* givenItems, bool ClearEquipment, bool applyOutfit, bool applyItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerLoadout.EquipPrisoner");
		
		UPrisonerLoadout_EquipPrisoner_Params params {};
		params.Prisoner = Prisoner;
		params.ClearEquipment = ClearEquipment;
		params.applyOutfit = applyOutfit;
		params.applyItems = applyItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (givenItems != nullptr)
			*givenItems = params.givenItems;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerLoadout.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerLoadout::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerLoadout");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerMeshManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerMeshManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerMeshManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerMetabolismUIData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerMetabolismUIData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerMetabolismUIData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerMetabolismUIDataImpl.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerMetabolismUIDataImpl::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerMetabolismUIDataImpl");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.Server_SetFallingControlRepData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      RepData                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerMovementComponent::Server_SetFallingControlRepData(unsigned char RepData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.Server_SetFallingControlRepData");
		
		UPrisonerMovementComponent_Server_SetFallingControlRepData_Params params {};
		params.RepData = RepData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.Server_SetDivingState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerDivingState                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerMovementComponent::Server_SetDivingState(EPrisonerDivingState Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.Server_SetDivingState");
		
		UPrisonerMovementComponent_Server_SetDivingState_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.Server_SetDesiredFallingPose
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerFallingPose                               Pose                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               force                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerMovementComponent::Server_SetDesiredFallingPose(EPrisonerFallingPose Pose, bool force)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.Server_SetDesiredFallingPose");
		
		UPrisonerMovementComponent_Server_SetDesiredFallingPose_Params params {};
		params.Pose = Pose;
		params.force = force;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.Server_ClimbOffLadder
	 * 		Flags  -> ()
	 */
	void UPrisonerMovementComponent::Server_ClimbOffLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.Server_ClimbOffLadder");
		
		UPrisonerMovementComponent_Server_ClimbOffLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.OnRep_FallingPoseBlend
	 * 		Flags  -> ()
	 */
	void UPrisonerMovementComponent::OnRep_FallingPoseBlend()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.OnRep_FallingPoseBlend");
		
		UPrisonerMovementComponent_OnRep_FallingPoseBlend_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.OnRep_FallingControl
	 * 		Flags  -> ()
	 */
	void UPrisonerMovementComponent::OnRep_FallingControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.OnRep_FallingControl");
		
		UPrisonerMovementComponent_OnRep_FallingControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.OnRep_Buoyancy
	 * 		Flags  -> ()
	 */
	void UPrisonerMovementComponent::OnRep_Buoyancy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.OnRep_Buoyancy");
		
		UPrisonerMovementComponent_OnRep_Buoyancy_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.OnRep_AccelerationNormal
	 * 		Flags  -> ()
	 */
	void UPrisonerMovementComponent::OnRep_AccelerationNormal()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.OnRep_AccelerationNormal");
		
		UPrisonerMovementComponent_OnRep_AccelerationNormal_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.NetMulticast_SetDesiredFallingPose
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPrisonerFallingPose                               Pose                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               force                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerMovementComponent::NetMulticast_SetDesiredFallingPose(EPrisonerFallingPose Pose, bool force)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.NetMulticast_SetDesiredFallingPose");
		
		UPrisonerMovementComponent_NetMulticast_SetDesiredFallingPose_Params params {};
		params.Pose = Pose;
		params.force = force;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.NetMulticast_SetBodyRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FQuat                                       Rotation                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     AngularVelocity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerMovementComponent::NetMulticast_SetBodyRotation(const struct FQuat& Rotation, const struct FVector& AngularVelocity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.NetMulticast_SetBodyRotation");
		
		UPrisonerMovementComponent_NetMulticast_SetBodyRotation_Params params {};
		params.Rotation = Rotation;
		params.AngularVelocity = AngularVelocity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.NetMulticast_PlayAnimMontageIfSimulatedProxy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PlayRate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerMovementComponent::NetMulticast_PlayAnimMontageIfSimulatedProxy(class UAnimMontage* Montage, float PlayRate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.NetMulticast_PlayAnimMontageIfSimulatedProxy");
		
		UPrisonerMovementComponent_NetMulticast_PlayAnimMontageIfSimulatedProxy_Params params {};
		params.Montage = Montage;
		params.PlayRate = PlayRate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.NetMulticast_FinishAnchoring
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               anchoringSucceded                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerMovementComponent::NetMulticast_FinishAnchoring(bool anchoringSucceded)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.NetMulticast_FinishAnchoring");
		
		UPrisonerMovementComponent_NetMulticast_FinishAnchoring_Params params {};
		params.anchoringSucceded = anchoringSucceded;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.JumpOffLadder
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     jumpVelocity                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerMovementComponent::JumpOffLadder(const struct FVector& jumpVelocity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.JumpOffLadder");
		
		UPrisonerMovementComponent_JumpOffLadder_Params params {};
		params.jumpVelocity = jumpVelocity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.IsFlyingOrFalling
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::IsFlyingOrFalling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.IsFlyingOrFalling");
		
		UPrisonerMovementComponent_IsFlyingOrFalling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.IsDiving
	 * 		Flags  -> ()
	 */
	bool UPrisonerMovementComponent::IsDiving()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.IsDiving");
		
		UPrisonerMovementComponent_IsDiving_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.IsClimbingWindow
	 * 		Flags  -> ()
	 */
	bool UPrisonerMovementComponent::IsClimbingWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.IsClimbingWindow");
		
		UPrisonerMovementComponent_IsClimbingWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.IsClimbingLadder
	 * 		Flags  -> ()
	 */
	bool UPrisonerMovementComponent::IsClimbingLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.IsClimbingLadder");
		
		UPrisonerMovementComponent_IsClimbingLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.IsClimbing
	 * 		Flags  -> ()
	 */
	bool UPrisonerMovementComponent::IsClimbing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.IsClimbing");
		
		UPrisonerMovementComponent_IsClimbing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetWindowInfo
	 * 		Flags  -> ()
	 */
	struct FWindowInfo UPrisonerMovementComponent::GetWindowInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetWindowInfo");
		
		UPrisonerMovementComponent_GetWindowInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetWaterImmersionDepth
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetWaterImmersionDepth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetWaterImmersionDepth");
		
		UPrisonerMovementComponent_GetWaterImmersionDepth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetTimeSpentInAir
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetTimeSpentInAir()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetTimeSpentInAir");
		
		UPrisonerMovementComponent_GetTimeSpentInAir_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetTimeSpentFalling
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetTimeSpentFalling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetTimeSpentFalling");
		
		UPrisonerMovementComponent_GetTimeSpentFalling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetMaxAllowedPace
	 * 		Flags  -> ()
	 */
	EPrisonerMovementPace UPrisonerMovementComponent::GetMaxAllowedPace()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetMaxAllowedPace");
		
		UPrisonerMovementComponent_GetMaxAllowedPace_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetLadderInfo
	 * 		Flags  -> ()
	 */
	struct FLadderInfo UPrisonerMovementComponent::GetLadderInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetLadderInfo");
		
		UPrisonerMovementComponent_GetLadderInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngleSmoothed
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetGroundSlopeAngleSmoothed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngleSmoothed");
		
		UPrisonerMovementComponent_GetGroundSlopeAngleSmoothed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngleForSpeedScaling
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetGroundSlopeAngleForSpeedScaling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngleForSpeedScaling");
		
		UPrisonerMovementComponent_GetGroundSlopeAngleForSpeedScaling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngle
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetGroundSlopeAngle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngle");
		
		UPrisonerMovementComponent_GetGroundSlopeAngle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetDivingDepth
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetDivingDepth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetDivingDepth");
		
		UPrisonerMovementComponent_GetDivingDepth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetDesiredCoursePitchAngle
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetDesiredCoursePitchAngle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetDesiredCoursePitchAngle");
		
		UPrisonerMovementComponent_GetDesiredCoursePitchAngle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetDesiredCourseAngle
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetDesiredCourseAngle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetDesiredCourseAngle");
		
		UPrisonerMovementComponent_GetDesiredCourseAngle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetCustomMovementMode
	 * 		Flags  -> ()
	 */
	EPrisonerMovementMode UPrisonerMovementComponent::GetCustomMovementMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetCustomMovementMode");
		
		UPrisonerMovementComponent_GetCustomMovementMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetClimbableObstacleInfo
	 * 		Flags  -> ()
	 */
	struct FClimbableObstacleInfo UPrisonerMovementComponent::GetClimbableObstacleInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetClimbableObstacleInfo");
		
		UPrisonerMovementComponent_GetClimbableObstacleInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetAnticipatedLandingSpot
	 * 		Flags  -> ()
	 */
	struct FHitResult UPrisonerMovementComponent::GetAnticipatedLandingSpot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetAnticipatedLandingSpot");
		
		UPrisonerMovementComponent_GetAnticipatedLandingSpot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.GetActualCourseAngle
	 * 		Flags  -> ()
	 */
	float UPrisonerMovementComponent::GetActualCourseAngle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.GetActualCourseAngle");
		
		UPrisonerMovementComponent_GetActualCourseAngle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.DetectWindow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWindowInfo                                 Result                                                     (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerMovementComponent::DetectWindow(struct FWindowInfo* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.DetectWindow");
		
		UPrisonerMovementComponent_DetectWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Result != nullptr)
			*Result = params.Result;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.DetectLadderDisembarkLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLadderInfo                                 LadderInfo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     newCapsuleLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    newCapsuleRotation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerMovementComponent::DetectLadderDisembarkLocation(const struct FLadderInfo& LadderInfo, struct FVector* newCapsuleLocation, struct FRotator* newCapsuleRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.DetectLadderDisembarkLocation");
		
		UPrisonerMovementComponent_DetectLadderDisembarkLocation_Params params {};
		params.LadderInfo = LadderInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (newCapsuleLocation != nullptr)
			*newCapsuleLocation = params.newCapsuleLocation;
		if (newCapsuleRotation != nullptr)
			*newCapsuleRotation = params.newCapsuleRotation;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.DetectLadder
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLadderInfo                                 Result                                                     (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerMovementComponent::DetectLadder(struct FLadderInfo* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.DetectLadder");
		
		UPrisonerMovementComponent_DetectLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Result != nullptr)
			*Result = params.Result;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.DetectClimbableObstacle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FClimbableObstacleInfo                      Result                                                     (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerMovementComponent::DetectClimbableObstacle(struct FClimbableObstacleInfo* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.DetectClimbableObstacle");
		
		UPrisonerMovementComponent_DetectClimbableObstacle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Result != nullptr)
			*Result = params.Result;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.ClimbWindow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWindowInfo                                 WindowInfo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerMovementComponent::ClimbWindow(const struct FWindowInfo& WindowInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.ClimbWindow");
		
		UPrisonerMovementComponent_ClimbWindow_Params params {};
		params.WindowInfo = WindowInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.ClimbOntoLadder
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLadderInfo                                 LadderInfo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerMovementComponent::ClimbOntoLadder(const struct FLadderInfo& LadderInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.ClimbOntoLadder");
		
		UPrisonerMovementComponent_ClimbOntoLadder_Params params {};
		params.LadderInfo = LadderInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.ClimbOffLadder
	 * 		Flags  -> ()
	 */
	bool UPrisonerMovementComponent::ClimbOffLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.ClimbOffLadder");
		
		UPrisonerMovementComponent_ClimbOffLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.Climb
	 * 		Flags  -> ()
	 */
	bool UPrisonerMovementComponent::Climb()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.Climb");
		
		UPrisonerMovementComponent_Climb_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.CanClimbWindow
	 * 		Flags  -> ()
	 */
	bool UPrisonerMovementComponent::CanClimbWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.CanClimbWindow");
		
		UPrisonerMovementComponent_CanClimbWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.CanClimbOntoLadder
	 * 		Flags  -> ()
	 */
	bool UPrisonerMovementComponent::CanClimbOntoLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.CanClimbOntoLadder");
		
		UPrisonerMovementComponent_CanClimbOntoLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMovementComponent.CanClimb
	 * 		Flags  -> ()
	 */
	bool UPrisonerMovementComponent::CanClimb()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMovementComponent.CanClimb");
		
		UPrisonerMovementComponent_CanClimb_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerMovementComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerMovementComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerMovementComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerMovementSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerMovementSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerMovementSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMusicPlayerComponent.OnResult
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class URuntimeAudioImporterLibrary*                RuntimeAudioImporterObjectRef                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UImportedSoundWave*                          SoundWaveRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETranscodingStatus                                 Status                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerMusicPlayerComponent::OnResult(class URuntimeAudioImporterLibrary* RuntimeAudioImporterObjectRef, class UImportedSoundWave* SoundWaveRef, ETranscodingStatus Status)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMusicPlayerComponent.OnResult");
		
		UPrisonerMusicPlayerComponent_OnResult_Params params {};
		params.RuntimeAudioImporterObjectRef = RuntimeAudioImporterObjectRef;
		params.SoundWaveRef = SoundWaveRef;
		params.Status = Status;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMusicPlayerComponent.OnRadioTrackStarted
	 * 		Flags  -> ()
	 */
	void UPrisonerMusicPlayerComponent::OnRadioTrackStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMusicPlayerComponent.OnRadioTrackStarted");
		
		UPrisonerMusicPlayerComponent_OnRadioTrackStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerMusicPlayerComponent.OnAudioPlaybackFinished
	 * 		Flags  -> ()
	 */
	void UPrisonerMusicPlayerComponent::OnAudioPlaybackFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerMusicPlayerComponent.OnAudioPlaybackFinished");
		
		UPrisonerMusicPlayerComponent_OnAudioPlaybackFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerMusicPlayerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerMusicPlayerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerMusicPlayerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerPhotoModeAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerPhotoModeAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerPhotoModeAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerPrisonWalletComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerPrisonWalletComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerPrisonWalletComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerResponseIdle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerResponseIdle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerResponseIdle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerResponseIdle_StaminaInRange.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerResponseIdle_StaminaInRange::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerResponseIdle_StaminaInRange");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerResponseIdle_BodyConditionOrSymptomPresence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerResponseIdle_BodyConditionOrSymptomPresence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerResponseIdle_BodyConditionOrSymptomPresence");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerResponseIdle_NeedToUrinate.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerResponseIdle_NeedToUrinate::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerResponseIdle_NeedToUrinate");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerResponseIdle_NeedToDefecate.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerResponseIdle_NeedToDefecate::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerResponseIdle_NeedToDefecate");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerRestingComponent.OnRep_RestingDataAutonomous
	 * 		Flags  -> ()
	 */
	void UPrisonerRestingComponent::OnRep_RestingDataAutonomous()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerRestingComponent.OnRep_RestingDataAutonomous");
		
		UPrisonerRestingComponent_OnRep_RestingDataAutonomous_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerRestingComponent.OnRep_RestingData
	 * 		Flags  -> ()
	 */
	void UPrisonerRestingComponent::OnRep_RestingData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerRestingComponent.OnRep_RestingData");
		
		UPrisonerRestingComponent_OnRep_RestingData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerRestingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerRestingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerRestingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTeleportUserData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeleportUserData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeleportUserData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerTeleportUserData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerTeleportUserData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerTeleportUserData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerShotsFiredTrackerComponent.OnRep_NumShotsFired
	 * 		Flags  -> ()
	 */
	void UPrisonerShotsFiredTrackerComponent::OnRep_NumShotsFired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerShotsFiredTrackerComponent.OnRep_NumShotsFired");
		
		UPrisonerShotsFiredTrackerComponent_OnRep_NumShotsFired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerShotsFiredTrackerComponent.Client_SetWidgetVisibilityAndReset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Visibility                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerShotsFiredTrackerComponent::Client_SetWidgetVisibilityAndReset(bool Visibility)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerShotsFiredTrackerComponent.Client_SetWidgetVisibilityAndReset");
		
		UPrisonerShotsFiredTrackerComponent_Client_SetWidgetVisibilityAndReset_Params params {};
		params.Visibility = Visibility;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerShotsFiredTrackerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerShotsFiredTrackerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerShotsFiredTrackerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.UpdateIsInFocusModeOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isInFocus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSkillComponent::UpdateIsInFocusModeOnServer(bool isInFocus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.UpdateIsInFocusModeOnServer");
		
		UPrisonerSkillComponent_UpdateIsInFocusModeOnServer_Params params {};
		params.isInFocus = isInFocus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.ShowWatchingWarningOnClient
	 * 		Flags  -> ()
	 */
	void UPrisonerSkillComponent::ShowWatchingWarningOnClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.ShowWatchingWarningOnClient");
		
		UPrisonerSkillComponent_ShowWatchingWarningOnClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.SetSkillStaminaConsumptionOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USkill*                                      Skill                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              consumption                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSkillComponent::SetSkillStaminaConsumptionOnServer(class USkill* Skill, float consumption)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.SetSkillStaminaConsumptionOnServer");
		
		UPrisonerSkillComponent_SetSkillStaminaConsumptionOnServer_Params params {};
		params.Skill = Skill;
		params.consumption = consumption;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.Server_UpdateNearbyFoliageCoverage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      nearbyFoliageCoveragePackedData                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSkillComponent::Server_UpdateNearbyFoliageCoverage(unsigned char nearbyFoliageCoveragePackedData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.Server_UpdateNearbyFoliageCoverage");
		
		UPrisonerSkillComponent_Server_UpdateNearbyFoliageCoverage_Params params {};
		params.nearbyFoliageCoveragePackedData = nearbyFoliageCoveragePackedData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.Server_UpdateDetectablePrisoners
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class APrisoner*>                           deltaToAdd                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class APrisoner*>                           deltaToRemove                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSkillComponent::Server_UpdateDetectablePrisoners(TArray<class APrisoner*> deltaToAdd, TArray<class APrisoner*> deltaToRemove)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.Server_UpdateDetectablePrisoners");
		
		UPrisonerSkillComponent_Server_UpdateDetectablePrisoners_Params params {};
		params.deltaToAdd = deltaToAdd;
		params.deltaToRemove = deltaToRemove;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.Server_IncreaseSkillExperiencePoints
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESkillReplicationID                                skillReplicationID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Points                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSkillComponent::Server_IncreaseSkillExperiencePoints(ESkillReplicationID skillReplicationID, float Points)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.Server_IncreaseSkillExperiencePoints");
		
		UPrisonerSkillComponent_Server_IncreaseSkillExperiencePoints_Params params {};
		params.skillReplicationID = skillReplicationID;
		params.Points = Points;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.SendVisiblePrisoners
	 * 		Flags  -> ()
	 */
	void UPrisonerSkillComponent::SendVisiblePrisoners()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.SendVisiblePrisoners");
		
		UPrisonerSkillComponent_SendVisiblePrisoners_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.RequestNearbyFoliageUpdateOnClient
	 * 		Flags  -> ()
	 */
	void UPrisonerSkillComponent::RequestNearbyFoliageUpdateOnClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.RequestNearbyFoliageUpdateOnClient");
		
		UPrisonerSkillComponent_RequestNearbyFoliageUpdateOnClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.OnRep_Skills
	 * 		Flags  -> ()
	 */
	void UPrisonerSkillComponent::OnRep_Skills()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.OnRep_Skills");
		
		UPrisonerSkillComponent_OnRep_Skills_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.HighlightNearbyItems
	 * 		Flags  -> ()
	 */
	void UPrisonerSkillComponent::HighlightNearbyItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.HighlightNearbyItems");
		
		UPrisonerSkillComponent_HighlightNearbyItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.HighlightItemOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSkillComponent::HighlightItemOnClient(class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.HighlightItemOnClient");
		
		UPrisonerSkillComponent_HighlightItemOnClient_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.GetSkills
	 * 		Flags  -> ()
	 */
	TArray<class USkill*> UPrisonerSkillComponent::GetSkills()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.GetSkills");
		
		UPrisonerSkillComponent_GetSkills_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSkillComponent.ForceSkillsReplicationOnServer
	 * 		Flags  -> ()
	 */
	void UPrisonerSkillComponent::ForceSkillsReplicationOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSkillComponent.ForceSkillsReplicationOnServer");
		
		UPrisonerSkillComponent_ForceSkillsReplicationOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerSkillComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerSkillComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerSkillComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerSkillComponentUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerSkillComponentUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerSkillComponentUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerSkillsUIDataImpl.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerSkillsUIDataImpl::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerSkillsUIDataImpl");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSoundComponent.UpdateMovingThroughFoliageSounds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PlayingID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EMotionIntensity                                   motionIntensity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerSoundComponent::UpdateMovingThroughFoliageSounds(int32_t PlayingID, EMotionIntensity motionIntensity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSoundComponent.UpdateMovingThroughFoliageSounds");
		
		UPrisonerSoundComponent_UpdateMovingThroughFoliageSounds_Params params {};
		params.PlayingID = PlayingID;
		params.motionIntensity = motionIntensity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSoundComponent.StopMovingThroughFoliageSounds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PlayingID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerSoundComponent::StopMovingThroughFoliageSounds(int32_t PlayingID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSoundComponent.StopMovingThroughFoliageSounds");
		
		UPrisonerSoundComponent_StopMovingThroughFoliageSounds_Params params {};
		params.PlayingID = PlayingID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSoundComponent.StopAllMovingThroughFoliageSounds
	 * 		Flags  -> ()
	 */
	void UPrisonerSoundComponent::StopAllMovingThroughFoliageSounds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSoundComponent.StopAllMovingThroughFoliageSounds");
		
		UPrisonerSoundComponent_StopAllMovingThroughFoliageSounds_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSoundComponent.PlayMovingThroughFoliageSounds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               StartAudioEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               StopAudioEvent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EMotionIntensity                                   motionIntensity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UPrisonerSoundComponent::PlayMovingThroughFoliageSounds(class UAkAudioEvent* StartAudioEvent, class UAkAudioEvent* StopAudioEvent, EMotionIntensity motionIntensity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSoundComponent.PlayMovingThroughFoliageSounds");
		
		UPrisonerSoundComponent_PlayMovingThroughFoliageSounds_Params params {};
		params.StartAudioEvent = StartAudioEvent;
		params.StopAudioEvent = StopAudioEvent;
		params.motionIntensity = motionIntensity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSoundComponent.PlayGearSounds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMotionIntensity                                   motionIntensity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSoundComponent::PlayGearSounds(EMotionIntensity motionIntensity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSoundComponent.PlayGearSounds");
		
		UPrisonerSoundComponent_PlayGearSounds_Params params {};
		params.motionIntensity = motionIntensity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSoundComponent.PlayFootstepSounds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPhysicalSurface                                   inPhysicalSurface                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSoundComponent::PlayFootstepSounds(EPhysicalSurface inPhysicalSurface)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSoundComponent.PlayFootstepSounds");
		
		UPrisonerSoundComponent_PlayFootstepSounds_Params params {};
		params.inPhysicalSurface = inPhysicalSurface;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSoundComponent.OnOutOfBoundsSoundPercentChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USoundWave*                                  PlayingSoundWave                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PlaybackPercent                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSoundComponent::OnOutOfBoundsSoundPercentChanged(class USoundWave* PlayingSoundWave, float PlaybackPercent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSoundComponent.OnOutOfBoundsSoundPercentChanged");
		
		UPrisonerSoundComponent_OnOutOfBoundsSoundPercentChanged_Params params {};
		params.PlayingSoundWave = PlayingSoundWave;
		params.PlaybackPercent = PlaybackPercent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerSoundComponent.OnBorderCrossingStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EPrisonerBorderCrossingPenalty                     penalty                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerSoundComponent::OnBorderCrossingStateChanged(class APrisoner* Prisoner, EPrisonerBorderCrossingPenalty penalty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerSoundComponent.OnBorderCrossingStateChanged");
		
		UPrisonerSoundComponent_OnBorderCrossingStateChanged_Params params {};
		params.Prisoner = Prisoner;
		params.penalty = penalty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerSoundComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerSoundComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerSoundComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerStatics.GetAdditionalPenisInchesBasedOnTotalPlayTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrisonerCommonData*                         commonData                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UPrisonerStatics::GetAdditionalPenisInchesBasedOnTotalPlayTime(class UPrisonerCommonData* commonData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerStatics.GetAdditionalPenisInchesBasedOnTotalPlayTime");
		
		UPrisonerStatics_GetAdditionalPenisInchesBasedOnTotalPlayTime_Params params {};
		params.commonData = commonData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerSubview.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerSubview::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerSubview");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerThirdPersonAerialSubviewComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerThirdPersonAerialSubviewComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerThirdPersonAerialSubviewComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerThirdPersonSubviewComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerThirdPersonSubviewComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerThirdPersonSubviewComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerThirdPersonViewComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerThirdPersonViewComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerThirdPersonViewComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerThrowComponent.OnRep_ThrowState
	 * 		Flags  -> ()
	 */
	void UPrisonerThrowComponent::OnRep_ThrowState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerThrowComponent.OnRep_ThrowState");
		
		UPrisonerThrowComponent_OnRep_ThrowState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerThrowComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerThrowComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerThrowComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerTradingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerTradingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerTradingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerTreatmentUIController.OnInventoryContainerAddedOrRemoved
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrisonerInventoryComponent*                 sender                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPrisonerTreatmentUIController::OnInventoryContainerAddedOrRemoved(class UPrisonerInventoryComponent* sender, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerTreatmentUIController.OnInventoryContainerAddedOrRemoved");
		
		UPrisonerTreatmentUIController_OnInventoryContainerAddedOrRemoved_Params params {};
		params.sender = sender;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerTreatmentUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerTreatmentUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerTreatmentUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUIDataImpl.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUIDataImpl::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUIDataImpl");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUIDataRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUIDataRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUIDataRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUIDataResponse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUIDataResponse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUIDataResponse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUIDebugDataRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUIDebugDataRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUIDebugDataRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUIDebugDataResponse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUIDebugDataResponse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUIDebugDataResponse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.ShouldPrisonerHaveDiarrhea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPrisonerUIStatics::ShouldPrisonerHaveDiarrhea(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.ShouldPrisonerHaveDiarrhea");
		
		UPrisonerUIStatics_ShouldPrisonerHaveDiarrhea_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerWeight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerWeight(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerWeight");
		
		UPrisonerUIStatics_GetPrisonerWeight_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerStrengthRatio
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerStrengthRatio(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerStrengthRatio");
		
		UPrisonerUIStatics_GetPrisonerStrengthRatio_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerStrength
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerStrength(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerStrength");
		
		UPrisonerUIStatics_GetPrisonerStrength_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerStaminaRatio
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerStaminaRatio(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerStaminaRatio");
		
		UPrisonerUIStatics_GetPrisonerStaminaRatio_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerSkinniness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerSkinniness(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerSkinniness");
		
		UPrisonerUIStatics_GetPrisonerSkinniness_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerOxygenSaturation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerOxygenSaturation(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerOxygenSaturation");
		
		UPrisonerUIStatics_GetPrisonerOxygenSaturation_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerIntelligenceRatio
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerIntelligenceRatio(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerIntelligenceRatio");
		
		UPrisonerUIStatics_GetPrisonerIntelligenceRatio_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerIntelligence
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerIntelligence(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerIntelligence");
		
		UPrisonerUIStatics_GetPrisonerIntelligence_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerHydration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerHydration(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerHydration");
		
		UPrisonerUIStatics_GetPrisonerHydration_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerHealthRatio
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerHealthRatio(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerHealthRatio");
		
		UPrisonerUIStatics_GetPrisonerHealthRatio_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerFatness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerFatness(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerFatness");
		
		UPrisonerUIStatics_GetPrisonerFatness_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerEnergy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerEnergy(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerEnergy");
		
		UPrisonerUIStatics_GetPrisonerEnergy_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerDexterityRatio
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerDexterityRatio(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerDexterityRatio");
		
		UPrisonerUIStatics_GetPrisonerDexterityRatio_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerDexterity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerDexterity(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerDexterity");
		
		UPrisonerUIStatics_GetPrisonerDexterity_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerConstitutionRatio
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerConstitutionRatio(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerConstitutionRatio");
		
		UPrisonerUIStatics_GetPrisonerConstitutionRatio_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.PrisonerUIStatics.GetPrisonerConstitution
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPrisonerUIStatics::GetPrisonerConstitution(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.PrisonerUIStatics.GetPrisonerConstitution");
		
		UPrisonerUIStatics_GetPrisonerConstitution_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUIStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUIStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUIStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerUITooltipCache.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerUITooltipCache::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerUITooltipCache");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Projectile.OnStop
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AProjectile::OnStop(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Projectile.OnStop");
		
		AProjectile_OnStop_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AProjectile.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AProjectile::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Projectile");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UAmmunitionArrowSpawningParams.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAmmunitionArrowSpawningParams::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.AmmunitionArrowSpawningParams");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ProjectileArrow.UpdateParameters
	 * 		Flags  -> ()
	 */
	void AProjectileArrow::UpdateParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ProjectileArrow.UpdateParameters");
		
		AProjectileArrow_UpdateParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AProjectileArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AProjectileArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ProjectileArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UExplosiveAmmunitionArrowSpawningParams.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UExplosiveAmmunitionArrowSpawningParams::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ExplosiveAmmunitionArrowSpawningParams");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AProjectileExplosiveArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AProjectileExplosiveArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ProjectileExplosiveArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AProjectileFlare.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AProjectileFlare::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ProjectileFlare");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AProjectileGrenade.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AProjectileGrenade::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ProjectileGrenade");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UProjectileImpactEffects.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UProjectileImpactEffects::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ProjectileImpactEffects");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AProjectileShotgun.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AProjectileShotgun::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ProjectileShotgun");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UProjectileStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UProjectileStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ProjectileStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UQuickAccessBarWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UQuickAccessBarWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.QuickAccessBarWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemSwitcher3.ThrowingModePressed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsChecked                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UQuickAccessItemSwitcher3::ThrowingModePressed(bool IsChecked)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemSwitcher3.ThrowingModePressed");
		
		UQuickAccessItemSwitcher3_ThrowingModePressed_Params params {};
		params.IsChecked = IsChecked;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemSwitcher3.SetItemOpacity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Invalidate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UQuickAccessItemSwitcher3::SetItemOpacity(float Value, bool Invalidate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemSwitcher3.SetItemOpacity");
		
		UQuickAccessItemSwitcher3_SetItemOpacity_Params params {};
		params.Value = Value;
		params.Invalidate = Invalidate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UQuickAccessItemSwitcher3.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UQuickAccessItemSwitcher3::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.QuickAccessItemSwitcher3");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.OnQuickAccessItemPickedUpStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               PickedUpState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UQuickAccessItemWidget::OnQuickAccessItemPickedUpStateChanged(class AItem* Item, bool PickedUpState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.OnQuickAccessItemPickedUpStateChanged");
		
		UQuickAccessItemWidget_OnQuickAccessItemPickedUpStateChanged_Params params {};
		params.Item = Item;
		params.PickedUpState = PickedUpState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.OnItemDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      itemActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UQuickAccessItemWidget::OnItemDestroyed(class AActor* itemActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.OnItemDestroyed");
		
		UQuickAccessItemWidget_OnItemDestroyed_Params params {};
		params.itemActor = itemActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.OnItemAddedToInventory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UQuickAccessItemWidget::OnItemAddedToInventory(class APrisoner* Prisoner, class AItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.OnItemAddedToInventory");
		
		UQuickAccessItemWidget_OnItemAddedToInventory_Params params {};
		params.Prisoner = Prisoner;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.GetLowerLeftBoxShowAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UQuickAccessItemWidget::GetLowerLeftBoxShowAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.GetLowerLeftBoxShowAnimation");
		
		UQuickAccessItemWidget_GetLowerLeftBoxShowAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.GetLowerLeftBoxFadeOutAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UQuickAccessItemWidget::GetLowerLeftBoxFadeOutAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.GetLowerLeftBoxFadeOutAnimation");
		
		UQuickAccessItemWidget_GetLowerLeftBoxFadeOutAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.GetLowerLeftBoxFadeInAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UQuickAccessItemWidget::GetLowerLeftBoxFadeInAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.GetLowerLeftBoxFadeInAnimation");
		
		UQuickAccessItemWidget_GetLowerLeftBoxFadeInAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.GetBlinkingBackgroundAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UQuickAccessItemWidget::GetBlinkingBackgroundAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.GetBlinkingBackgroundAnimation");
		
		UQuickAccessItemWidget_GetBlinkingBackgroundAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.GetAdditionalIconShowAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UQuickAccessItemWidget::GetAdditionalIconShowAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.GetAdditionalIconShowAnimation");
		
		UQuickAccessItemWidget_GetAdditionalIconShowAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.GetAdditionalIconFadeOutAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UQuickAccessItemWidget::GetAdditionalIconFadeOutAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.GetAdditionalIconFadeOutAnimation");
		
		UQuickAccessItemWidget_GetAdditionalIconFadeOutAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.QuickAccessItemWidget.GetAdditionalIconFadeInAnimation
	 * 		Flags  -> ()
	 */
	class UWidgetAnimation* UQuickAccessItemWidget::GetAdditionalIconFadeInAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.QuickAccessItemWidget.GetAdditionalIconFadeInAnimation");
		
		UQuickAccessItemWidget_GetAdditionalIconFadeInAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UQuickAccessItemWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UQuickAccessItemWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.QuickAccessItemWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UQuickAccessManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UQuickAccessManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.QuickAccessManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AQuiver.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AQuiver::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Quiver");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARabbit2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARabbit2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Rabbit2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SimpleAnimalAIController.UpdatePerception
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AActor*>                              actorsPercepted                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASimpleAnimalAIController::UpdatePerception(TArray<class AActor*> actorsPercepted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SimpleAnimalAIController.UpdatePerception");
		
		ASimpleAnimalAIController_UpdatePerception_Params params {};
		params.actorsPercepted = actorsPercepted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SimpleAnimalAIController.StartAlert
	 * 		Flags  -> ()
	 */
	void ASimpleAnimalAIController::StartAlert()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SimpleAnimalAIController.StartAlert");
		
		ASimpleAnimalAIController_StartAlert_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SimpleAnimalAIController.OnTakeDamageHandler
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      damageActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       eventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASimpleAnimalAIController::OnTakeDamageHandler(class AActor* damageActor, float Damage, const struct FVector& HitLocation, class APawn* eventInstigator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SimpleAnimalAIController.OnTakeDamageHandler");
		
		ASimpleAnimalAIController_OnTakeDamageHandler_Params params {};
		params.damageActor = damageActor;
		params.Damage = Damage;
		params.HitLocation = HitLocation;
		params.eventInstigator = eventInstigator;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASimpleAnimalAIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASimpleAnimalAIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SimpleAnimalAIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Rabbit2AIController.Wander
	 * 		Flags  -> ()
	 */
	void ARabbit2AIController::Wander()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Rabbit2AIController.Wander");
		
		ARabbit2AIController_Wander_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARabbit2AIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARabbit2AIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Rabbit2AIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARackItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARackItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RackItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioComponent.PlayTrackFromRadioStation
	 * 		Flags  -> ()
	 */
	void URadioComponent::PlayTrackFromRadioStation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioComponent.PlayTrackFromRadioStation");
		
		URadioComponent_PlayTrackFromRadioStation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioComponent.OnTrackStarted
	 * 		Flags  -> ()
	 */
	void URadioComponent::OnTrackStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioComponent.OnTrackStarted");
		
		URadioComponent_OnTrackStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioComponent.OnTrackEnded
	 * 		Flags  -> ()
	 */
	void URadioComponent::OnTrackEnded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioComponent.OnTrackEnded");
		
		URadioComponent_OnTrackEnded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioComponent.OnRep_Volume
	 * 		Flags  -> ()
	 */
	void URadioComponent::OnRep_Volume()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioComponent.OnRep_Volume");
		
		URadioComponent_OnRep_Volume_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioComponent.OnRep_TurnedOn
	 * 		Flags  -> ()
	 */
	void URadioComponent::OnRep_TurnedOn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioComponent.OnRep_TurnedOn");
		
		URadioComponent_OnRep_TurnedOn_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioComponent.OnRep_StationIndex
	 * 		Flags  -> ()
	 */
	void URadioComponent::OnRep_StationIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioComponent.OnRep_StationIndex");
		
		URadioComponent_OnRep_StationIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URadioComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URadioComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RadioComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioItem.OnComponentDeactivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ARadioItem::OnComponentDeactivated(class UActorComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioItem.OnComponentDeactivated");
		
		ARadioItem_OnComponentDeactivated_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioItem.OnComponentActivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               wasReset                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ARadioItem::OnComponentActivated(class UActorComponent* Component, bool wasReset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioItem.OnComponentActivated");
		
		ARadioItem_OnComponentActivated_Params params {};
		params.Component = Component;
		params.wasReset = wasReset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARadioItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARadioItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RadioItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URadioTrack.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URadioTrack::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RadioTrack");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioCategory.ProvideNextRadioTrack
	 * 		Flags  -> ()
	 */
	class URadioTrack* URadioCategory::ProvideNextRadioTrack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioCategory.ProvideNextRadioTrack");
		
		URadioCategory_ProvideNextRadioTrack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URadioCategory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URadioCategory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RadioCategory");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URadioCategoryShuffle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URadioCategoryShuffle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RadioCategoryShuffle");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioProgram.ProvideNextRadioCategory
	 * 		Flags  -> ()
	 */
	class URadioCategory* URadioProgram::ProvideNextRadioCategory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioProgram.ProvideNextRadioCategory");
		
		URadioProgram_ProvideNextRadioCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URadioProgram.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URadioProgram::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RadioProgram");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioStation.StartTrack
	 * 		Flags  -> ()
	 */
	void ARadioStation::StartTrack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioStation.StartTrack");
		
		ARadioStation_StartTrack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioStation.OnTrackEnded
	 * 		Flags  -> ()
	 */
	void ARadioStation::OnTrackEnded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioStation.OnTrackEnded");
		
		ARadioStation_OnTrackEnded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioStation.OnRep_Playlist
	 * 		Flags  -> ()
	 */
	void ARadioStation::OnRep_Playlist()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioStation.OnRep_Playlist");
		
		ARadioStation_OnRep_Playlist_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RadioStation.Multicast_SendNextTrack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class URadioTrack*                                 Track                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ARadioStation::Multicast_SendNextTrack(class URadioTrack* Track)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RadioStation.Multicast_SendNextTrack");
		
		ARadioStation_Multicast_SendNextTrack_Params params {};
		params.Track = Track;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARadioStation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARadioStation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RadioStation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URainCollectionManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URainCollectionManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RainCollectionManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RainCollectorComponent.OnResourceAmountChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBasicGameResourceContainerComponent*        containerComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              newAmount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URainCollectorComponent::OnResourceAmountChanged(class UBasicGameResourceContainerComponent* containerComponent, float newAmount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RainCollectorComponent.OnResourceAmountChanged");
		
		URainCollectorComponent_OnResourceAmountChanged_Params params {};
		params.containerComponent = containerComponent;
		params.newAmount = newAmount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RainCollectorComponent.OnRep_CollectorID
	 * 		Flags  -> ()
	 */
	void URainCollectorComponent::OnRep_CollectorID()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RainCollectorComponent.OnRep_CollectorID");
		
		URainCollectorComponent_OnRep_CollectorID_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URainCollectorComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URainCollectorComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RainCollectorComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARecastNavMesh_Humanoids.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARecastNavMesh_Humanoids::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RecastNavMesh_Humanoids");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARecastNavMesh_LargeAnimals.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARecastNavMesh_LargeAnimals::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RecastNavMesh_LargeAnimals");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARecastNavMesh_Sentries.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARecastNavMesh_Sentries::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RecastNavMesh_Sentries");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARecastNavMesh_SmallAnimals.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARecastNavMesh_SmallAnimals::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RecastNavMesh_SmallAnimals");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARegularDoorStatic.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARegularDoorStatic::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RegularDoorStatic");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URemoteKeyItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URemoteKeyItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoteKeyItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RemoteKeyItem.OnResourceAmountChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBasicGameResourceContainerComponent*        containerComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              newAmount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ARemoteKeyItem::OnResourceAmountChanged(class UBasicGameResourceContainerComponent* containerComponent, float newAmount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RemoteKeyItem.OnResourceAmountChanged");
		
		ARemoteKeyItem_OnResourceAmountChanged_Params params {};
		params.containerComponent = containerComponent;
		params.newAmount = newAmount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARemoteKeyItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARemoteKeyItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoteKeyItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URemoteSensorItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URemoteSensorItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoteSensorItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RemoteSensorItem.OnResourceAmountChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBasicGameResourceContainerComponent*        containerComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              newAmount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ARemoteSensorItem::OnResourceAmountChanged(class UBasicGameResourceContainerComponent* containerComponent, float newAmount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RemoteSensorItem.OnResourceAmountChanged");
		
		ARemoteSensorItem_OnResourceAmountChanged_Params params {};
		params.containerComponent = containerComponent;
		params.newAmount = newAmount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ARemoteSensorItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARemoteSensorItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoteSensorItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URemoteSensorRegistry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URemoteSensorRegistry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoteSensorRegistry");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSectionFromPrevious
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        previousSection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionUnloadAmmoSequence::SetNextMontageSectionFromPrevious(const class FName& previousSection, const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSectionFromPrevious");
		
		UWeaponActionUnloadAmmoSequence_SetNextMontageSectionFromPrevious_Params params {};
		params.previousSection = previousSection;
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionUnloadAmmoSequence::SetNextMontageSection(const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSection");
		
		UWeaponActionUnloadAmmoSequence_SetNextMontageSection_Params params {};
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.OnMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionUnloadAmmoSequence::OnMontageEnded(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.OnMontageEnded");
		
		UWeaponActionUnloadAmmoSequence_OnMontageEnded_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.OnMontageBlendingOutStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               interrupted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionUnloadAmmoSequence::OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.OnMontageBlendingOutStarted");
		
		UWeaponActionUnloadAmmoSequence_OnMontageBlendingOutStarted_Params params {};
		params.Montage = Montage;
		params.interrupted = interrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.GetAmmoCount
	 * 		Flags  -> ()
	 */
	int32_t UWeaponActionUnloadAmmoSequence::GetAmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.GetAmmoCount");
		
		UWeaponActionUnloadAmmoSequence_GetAmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationWeapon
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UWeaponActionUnloadAmmoSequence::GetActiveAnimationWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationWeapon");
		
		UWeaponActionUnloadAmmoSequence_GetActiveAnimationWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationBody
	 * 		Flags  -> ()
	 */
	class UAnimMontage* UWeaponActionUnloadAmmoSequence::GetActiveAnimationBody()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationBody");
		
		UWeaponActionUnloadAmmoSequence_GetActiveAnimationBody_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.Execute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AmmoCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UWeaponActionUnloadAmmoSequence::Execute(int32_t AmmoCount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.Execute");
		
		UWeaponActionUnloadAmmoSequence_Execute_Params params {};
		params.AmmoCount = AmmoCount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.End
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Regular                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponActionUnloadAmmoSequence::End(bool Regular)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.End");
		
		UWeaponActionUnloadAmmoSequence_End_Params params {};
		params.Regular = Regular;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.CanInterrupt
	 * 		Flags  -> ()
	 */
	bool UWeaponActionUnloadAmmoSequence::CanInterrupt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.CanInterrupt");
		
		UWeaponActionUnloadAmmoSequence_CanInterrupt_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionUnloadAmmoSequence.CanExecute
	 * 		Flags  -> ()
	 */
	bool UWeaponActionUnloadAmmoSequence::CanExecute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionUnloadAmmoSequence.CanExecute");
		
		UWeaponActionUnloadAmmoSequence_CanExecute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponActionUnloadAmmoSequence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponActionUnloadAmmoSequence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponActionUnloadAmmoSequence");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URemoveCartridge.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URemoveCartridge::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoveCartridge");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URemoveMagazineInsertCartridge.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URemoveMagazineInsertCartridge::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoveMagazineInsertCartridge");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URemoveMagazineInsertMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URemoveMagazineInsertMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoveMagazineInsertMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URemoveMagazineInsertMagazineInsertCartridge.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URemoveMagazineInsertMagazineInsertCartridge::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoveMagazineInsertMagazineInsertCartridge");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URemoveMagazineRemoveCartridge.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URemoveMagazineRemoveCartridge::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RemoveMagazineRemoveCartridge");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URepairableItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URepairableItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RepairableItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URepairStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URepairStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RepairStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URepairToolItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URepairToolItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RepairToolItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UReplenishableResourceComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UReplenishableResourceComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ReplenishableResourceComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ReplenishableResourceManager.NetMulticast_SetReplenishableResourceAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPackedLocation                             ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UReplenishableResourceManager::NetMulticast_SetReplenishableResourceAmount(int32_t dataVersion, const struct FPackedLocation& ID, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ReplenishableResourceManager.NetMulticast_SetReplenishableResourceAmount");
		
		UReplenishableResourceManager_NetMulticast_SetReplenishableResourceAmount_Params params {};
		params.dataVersion = dataVersion;
		params.ID = ID;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ReplenishableResourceManager.NetMulticast_ReserveReplenishableResourceSlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPackedLocation                             ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            SlotIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UReplenishableResourceManager::NetMulticast_ReserveReplenishableResourceSlot(int32_t dataVersion, const struct FPackedLocation& ID, int32_t SlotIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ReplenishableResourceManager.NetMulticast_ReserveReplenishableResourceSlot");
		
		UReplenishableResourceManager_NetMulticast_ReserveReplenishableResourceSlot_Params params {};
		params.dataVersion = dataVersion;
		params.ID = ID;
		params.SlotIndex = SlotIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ReplenishableResourceManager.NetMulticast_ReleaseReplenishableResourceSlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPackedLocation                             ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            SlotIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UReplenishableResourceManager::NetMulticast_ReleaseReplenishableResourceSlot(int32_t dataVersion, const struct FPackedLocation& ID, int32_t SlotIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ReplenishableResourceManager.NetMulticast_ReleaseReplenishableResourceSlot");
		
		UReplenishableResourceManager_NetMulticast_ReleaseReplenishableResourceSlot_Params params {};
		params.dataVersion = dataVersion;
		params.ID = ID;
		params.SlotIndex = SlotIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ReplenishableResourceManager.NetMulticast_DestroyReplenishableResource
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPackedLocation                             ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UReplenishableResourceManager::NetMulticast_DestroyReplenishableResource(int32_t dataVersion, const struct FPackedLocation& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ReplenishableResourceManager.NetMulticast_DestroyReplenishableResource");
		
		UReplenishableResourceManager_NetMulticast_DestroyReplenishableResource_Params params {};
		params.dataVersion = dataVersion;
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ReplenishableResourceManager.NetMulticast_CreateReplenishableResource
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FReplenishableResourceDescription           Description                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UReplenishableResourceManager::NetMulticast_CreateReplenishableResource(int32_t dataVersion, const struct FReplenishableResourceDescription& Description)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ReplenishableResourceManager.NetMulticast_CreateReplenishableResource");
		
		UReplenishableResourceManager_NetMulticast_CreateReplenishableResource_Params params {};
		params.dataVersion = dataVersion;
		params.Description = Description;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UReplenishableResourceManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UReplenishableResourceManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ReplenishableResourceManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AReplicatedEffectsActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AReplicatedEffectsActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ReplicatedEffectsActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AReplicatedExplosionEffectsActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AReplicatedExplosionEffectsActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ReplicatedExplosionEffectsActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AReportingManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AReportingManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ReportingManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UResistanceSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UResistanceSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ResistanceSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceIndicatorWidget.GetResourceAmountRatio
	 * 		Flags  -> ()
	 */
	float UResourceIndicatorWidget::GetResourceAmountRatio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceIndicatorWidget.GetResourceAmountRatio");
		
		UResourceIndicatorWidget_GetResourceAmountRatio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UResourceIndicatorWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UResourceIndicatorWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ResourceIndicatorWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceLockingManager.OnResourceDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      resource                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UResourceLockingManager::OnResourceDestroyed(class AActor* resource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceLockingManager.OnResourceDestroyed");
		
		UResourceLockingManager_OnResourceDestroyed_Params params {};
		params.resource = resource;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceLockingManager.OnLockOwnerDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      lockOwner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UResourceLockingManager::OnLockOwnerDestroyed(class AActor* lockOwner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceLockingManager.OnLockOwnerDestroyed");
		
		UResourceLockingManager_OnLockOwnerDestroyed_Params params {};
		params.lockOwner = lockOwner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceLockingManager.NetMulticast_UnlockResource
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FResourceNetworkGUID                        ResourceGUID                                               (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResourceId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UResourceLockingManager::NetMulticast_UnlockResource(int32_t dataVersion, const struct FResourceNetworkGUID& ResourceGUID, int32_t ResourceId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceLockingManager.NetMulticast_UnlockResource");
		
		UResourceLockingManager_NetMulticast_UnlockResource_Params params {};
		params.dataVersion = dataVersion;
		params.ResourceGUID = ResourceGUID;
		params.ResourceId = ResourceId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceLockingManager.NetMulticast_UnlockIntersectingAreas
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBox                                        Area                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UResourceLockingManager::NetMulticast_UnlockIntersectingAreas(int32_t dataVersion, const struct FBox& Area)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceLockingManager.NetMulticast_UnlockIntersectingAreas");
		
		UResourceLockingManager_NetMulticast_UnlockIntersectingAreas_Params params {};
		params.dataVersion = dataVersion;
		params.Area = Area;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceLockingManager.NetMulticast_UnlockArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBox                                        Area                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UResourceLockingManager::NetMulticast_UnlockArea(int32_t dataVersion, const struct FBox& Area)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceLockingManager.NetMulticast_UnlockArea");
		
		UResourceLockingManager_NetMulticast_UnlockArea_Params params {};
		params.dataVersion = dataVersion;
		params.Area = Area;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceLockingManager.NetMulticast_RemoveAreaLocks
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FAreaResourceLockNetwork>            Locks                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UResourceLockingManager::NetMulticast_RemoveAreaLocks(int32_t dataVersion, TArray<struct FAreaResourceLockNetwork> Locks)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceLockingManager.NetMulticast_RemoveAreaLocks");
		
		UResourceLockingManager_NetMulticast_RemoveAreaLocks_Params params {};
		params.dataVersion = dataVersion;
		params.Locks = Locks;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceLockingManager.NetMulticast_RemoveActorLocks
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FActorResourceLockNetwork>           Locks                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UResourceLockingManager::NetMulticast_RemoveActorLocks(int32_t dataVersion, TArray<struct FActorResourceLockNetwork> Locks)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceLockingManager.NetMulticast_RemoveActorLocks");
		
		UResourceLockingManager_NetMulticast_RemoveActorLocks_Params params {};
		params.dataVersion = dataVersion;
		params.Locks = Locks;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceLockingManager.NetMulticast_LockResource
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FResourceNetworkGUID                        LockOwnerGUID                                              (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FResourceNetworkGUID                        ResourceGUID                                               (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResourceId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UResourceLockingManager::NetMulticast_LockResource(int32_t dataVersion, const struct FResourceNetworkGUID& LockOwnerGUID, const struct FResourceNetworkGUID& ResourceGUID, int32_t ResourceId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceLockingManager.NetMulticast_LockResource");
		
		UResourceLockingManager_NetMulticast_LockResource_Params params {};
		params.dataVersion = dataVersion;
		params.LockOwnerGUID = LockOwnerGUID;
		params.ResourceGUID = ResourceGUID;
		params.ResourceId = ResourceId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ResourceLockingManager.NetMulticast_LockArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FResourceNetworkGUID                        LockOwnerGUID                                              (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBox                                        Area                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UResourceLockingManager::NetMulticast_LockArea(int32_t dataVersion, const struct FResourceNetworkGUID& LockOwnerGUID, const struct FBox& Area)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ResourceLockingManager.NetMulticast_LockArea");
		
		UResourceLockingManager_NetMulticast_LockArea_Params params {};
		params.dataVersion = dataVersion;
		params.LockOwnerGUID = LockOwnerGUID;
		params.Area = Area;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UResourceLockingManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UResourceLockingManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ResourceLockingManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URespawnSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URespawnSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RespawnSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URestAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URestAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RestAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RestorableMeshInstancesManager.NetMulticast_RestoreRemovedMeshInstance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRestorableMeshInstanceId                   InstanceId                                                 (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URestorableMeshInstancesManager::NetMulticast_RestoreRemovedMeshInstance(int32_t dataVersion, const struct FRestorableMeshInstanceId& InstanceId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RestorableMeshInstancesManager.NetMulticast_RestoreRemovedMeshInstance");
		
		URestorableMeshInstancesManager_NetMulticast_RestoreRemovedMeshInstance_Params params {};
		params.dataVersion = dataVersion;
		params.InstanceId = InstanceId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.RestorableMeshInstancesManager.NetMulticast_RemoveMeshInstance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInstancedStaticMeshComponent*               Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRestorableMeshInstanceId                   InstanceId                                                 (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  InstanceTransform                                          (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void URestorableMeshInstancesManager::NetMulticast_RemoveMeshInstance(int32_t dataVersion, class UInstancedStaticMeshComponent* Component, const struct FRestorableMeshInstanceId& InstanceId, const struct FTransform& InstanceTransform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.RestorableMeshInstancesManager.NetMulticast_RemoveMeshInstance");
		
		URestorableMeshInstancesManager_NetMulticast_RemoveMeshInstance_Params params {};
		params.dataVersion = dataVersion;
		params.Component = Component;
		params.InstanceId = InstanceId;
		params.InstanceTransform = InstanceTransform;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URestorableMeshInstancesManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URestorableMeshInstancesManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RestorableMeshInstancesManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URewardItemWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URewardItemWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RewardItemWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URichTextInlineTextDecorator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URichTextInlineTextDecorator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RichTextInlineTextDecorator");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URiflesSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URiflesSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RiflesSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URunningSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URunningSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.RunningSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UPrisonerSkillUIData_Running.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPrisonerSkillUIData_Running::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.PrisonerSkillUIData_Running");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UScopeableItemComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UScopeableItemComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ScopeableItemComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UScopeableItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UScopeableItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ScopeableItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ScreenSpaceHealthWidget.SetMaxHealthPercentage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UScreenSpaceHealthWidget::SetMaxHealthPercentage(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ScreenSpaceHealthWidget.SetMaxHealthPercentage");
		
		UScreenSpaceHealthWidget_SetMaxHealthPercentage_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ScreenSpaceHealthWidget.SetHealthPercentage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UScreenSpaceHealthWidget::SetHealthPercentage(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ScreenSpaceHealthWidget.SetHealthPercentage");
		
		UScreenSpaceHealthWidget_SetHealthPercentage_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UScreenSpaceHealthWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UScreenSpaceHealthWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ScreenSpaceHealthWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SearchBox.TextChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USearchBox::TextChanged(const class FText& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SearchBox.TextChanged");
		
		USearchBox_TextChanged_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USearchBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USearchBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SearchBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USearchItemDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USearchItemDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SearchItemDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USearchForItemsAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USearchForItemsAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SearchForItemsAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASearchGroundObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASearchGroundObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SearchGroundObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USedentaryNPCAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USedentaryNPCAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SedentaryNPCAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SedentaryNPCBackgroundInteraction.NetMulticast_PlayBackgroundInteraction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            animationAudioPairIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EBackgroundInteractionPlayType                     playType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USedentaryNPCBackgroundInteraction::NetMulticast_PlayBackgroundInteraction(int32_t animationAudioPairIndex, EBackgroundInteractionPlayType playType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SedentaryNPCBackgroundInteraction.NetMulticast_PlayBackgroundInteraction");
		
		USedentaryNPCBackgroundInteraction_NetMulticast_PlayBackgroundInteraction_Params params {};
		params.animationAudioPairIndex = animationAudioPairIndex;
		params.playType = playType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USedentaryNPCBackgroundInteraction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USedentaryNPCBackgroundInteraction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SedentaryNPCBackgroundInteraction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USedentaryNPCHeadAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USedentaryNPCHeadAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SedentaryNPCHeadAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USelectionOverlayWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USelectionOverlayWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SelectionOverlayWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.SetFoe
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APawn*                                       Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASentry2::SetFoe(class APawn* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.SetFoe");
		
		ASentry2_SetFoe_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.OnRep_SpottingPercentage
	 * 		Flags  -> ()
	 */
	void ASentry2::OnRep_SpottingPercentage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.OnRep_SpottingPercentage");
		
		ASentry2_OnRep_SpottingPercentage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.OnRep_ShouldDrawLongRangeWeaponLaser
	 * 		Flags  -> ()
	 */
	void ASentry2::OnRep_ShouldDrawLongRangeWeaponLaser()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.OnRep_ShouldDrawLongRangeWeaponLaser");
		
		ASentry2_OnRep_ShouldDrawLongRangeWeaponLaser_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.OnRep_SentryStance
	 * 		Flags  -> ()
	 */
	void ASentry2::OnRep_SentryStance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.OnRep_SentryStance");
		
		ASentry2_OnRep_SentryStance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.ObstacleCapsuleBeginOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ASentry2::ObstacleCapsuleBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.ObstacleCapsuleBeginOverlap");
		
		ASentry2_ObstacleCapsuleBeginOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_StopShotEffectsLongRangeWeapon
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_StopShotEffectsLongRangeWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_StopShotEffectsLongRangeWeapon");
		
		ASentry2_NetMulticast_StopShotEffectsLongRangeWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_StartHighSpreadAttackAudioEvent
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_StartHighSpreadAttackAudioEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_StartHighSpreadAttackAudioEvent");
		
		ASentry2_NetMulticast_StartHighSpreadAttackAudioEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_PlayWalkAwaySound
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_PlayWalkAwaySound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_PlayWalkAwaySound");
		
		ASentry2_NetMulticast_PlayWalkAwaySound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_PlayReloadMontageLongRangeWeapon
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_PlayReloadMontageLongRangeWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_PlayReloadMontageLongRangeWeapon");
		
		ASentry2_NetMulticast_PlayReloadMontageLongRangeWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_PlayMeleeAttackMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            kickIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASentry2::NetMulticast_PlayMeleeAttackMontage(int32_t kickIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_PlayMeleeAttackMontage");
		
		ASentry2_NetMulticast_PlayMeleeAttackMontage_Params params {};
		params.kickIndex = kickIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_PlayFreezeWarningSound
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_PlayFreezeWarningSound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_PlayFreezeWarningSound");
		
		ASentry2_NetMulticast_PlayFreezeWarningSound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_PlayDropWeaponsRaiseHandsSound
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_PlayDropWeaponsRaiseHandsSound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_PlayDropWeaponsRaiseHandsSound");
		
		ASentry2_NetMulticast_PlayDropWeaponsRaiseHandsSound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_PlayBeginCombatSound
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_PlayBeginCombatSound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_PlayBeginCombatSound");
		
		ASentry2_NetMulticast_PlayBeginCombatSound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_OnSentryDeath
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_OnSentryDeath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_OnSentryDeath");
		
		ASentry2_NetMulticast_OnSentryDeath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_FireShotEffectsLongRangeWeapon
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_FireShotEffectsLongRangeWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_FireShotEffectsLongRangeWeapon");
		
		ASentry2_NetMulticast_FireShotEffectsLongRangeWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_FireShotEffectsHighSpread
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_FireShotEffectsHighSpread()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_FireShotEffectsHighSpread");
		
		ASentry2_NetMulticast_FireShotEffectsHighSpread_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.NetMulticast_EndHighSpreadAttackAudioEvent
	 * 		Flags  -> ()
	 */
	void ASentry2::NetMulticast_EndHighSpreadAttackAudioEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.NetMulticast_EndHighSpreadAttackAudioEvent");
		
		ASentry2_NetMulticast_EndHighSpreadAttackAudioEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.GetMuzzleLocationLongRangeWeapon
	 * 		Flags  -> ()
	 */
	struct FVector ASentry2::GetMuzzleLocationLongRangeWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.GetMuzzleLocationLongRangeWeapon");
		
		ASentry2_GetMuzzleLocationLongRangeWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.GetMuzzleDirectionLongRangeWeapon
	 * 		Flags  -> ()
	 */
	struct FVector ASentry2::GetMuzzleDirectionLongRangeWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.GetMuzzleDirectionLongRangeWeapon");
		
		ASentry2_GetMuzzleDirectionLongRangeWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sentry2.GetFoe
	 * 		Flags  -> ()
	 */
	class APawn* ASentry2::GetFoe()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sentry2.GetFoe");
		
		ASentry2_GetFoe_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASentry2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASentry2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Sentry2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SentryAIController2.SensingComponent_OnSensePawn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AActor*>                              actorsPercepted                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASentryAIController2::SensingComponent_OnSensePawn(TArray<class AActor*> actorsPercepted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SentryAIController2.SensingComponent_OnSensePawn");
		
		ASentryAIController2_SensingComponent_OnSensePawn_Params params {};
		params.actorsPercepted = actorsPercepted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASentryAIController2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASentryAIController2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SentryAIController2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeRight
	 * 		Flags  -> ()
	 */
	float USentryAnimInstance2::GetTurnInPlaceElapsedTimeRight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeRight");
		
		USentryAnimInstance2_GetTurnInPlaceElapsedTimeRight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeLeft
	 * 		Flags  -> ()
	 */
	float USentryAnimInstance2::GetTurnInPlaceElapsedTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeLeft");
		
		USentryAnimInstance2_GetTurnInPlaceElapsedTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SentryAnimInstance2.GetTurnInPlaceDirectionBlendAlpha
	 * 		Flags  -> ()
	 */
	float USentryAnimInstance2::GetTurnInPlaceDirectionBlendAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SentryAnimInstance2.GetTurnInPlaceDirectionBlendAlpha");
		
		USentryAnimInstance2_GetTurnInPlaceDirectionBlendAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SentryAnimInstance2.GetTurnInPlaceBlendAlpha
	 * 		Flags  -> ()
	 */
	float USentryAnimInstance2::GetTurnInPlaceBlendAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SentryAnimInstance2.GetTurnInPlaceBlendAlpha");
		
		USentryAnimInstance2_GetTurnInPlaceBlendAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SentryAnimInstance2.FindTimeAtStoppingDistance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimSequenceBase*                           AnimSequence                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              stoppingDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float USentryAnimInstance2::FindTimeAtStoppingDistance(class UAnimSequenceBase* AnimSequence, float stoppingDistance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SentryAnimInstance2.FindTimeAtStoppingDistance");
		
		USentryAnimInstance2_FindTimeAtStoppingDistance_Params params {};
		params.AnimSequence = AnimSequence;
		params.stoppingDistance = stoppingDistance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SentryAnimInstance2.AnimNotify_SentryJump
	 * 		Flags  -> ()
	 */
	void USentryAnimInstance2::AnimNotify_SentryJump()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SentryAnimInstance2.AnimNotify_SentryJump");
		
		USentryAnimInstance2_AnimNotify_SentryJump_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SentryAnimInstance2.AnimNotify_RFootDown
	 * 		Flags  -> ()
	 */
	void USentryAnimInstance2::AnimNotify_RFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SentryAnimInstance2.AnimNotify_RFootDown");
		
		USentryAnimInstance2_AnimNotify_RFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SentryAnimInstance2.AnimNotify_LFootDown
	 * 		Flags  -> ()
	 */
	void USentryAnimInstance2::AnimNotify_LFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SentryAnimInstance2.AnimNotify_LFootDown");
		
		USentryAnimInstance2_AnimNotify_LFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USentryAnimInstance2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USentryAnimInstance2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SentryAnimInstance2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USentryFirstPersonViewComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USentryFirstPersonViewComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SentryFirstPersonViewComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASentryGuardVolume2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASentryGuardVolume2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SentryGuardVolume2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USentryMovementComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USentryMovementComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SentryMovementComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASentrySpawner2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASentrySpawner2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SentrySpawner2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USentryThirdPersonViewComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USentryThirdPersonViewComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SentryThirdPersonViewComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SerializableLayoutWidgetInterface.SaveLayout
	 * 		Flags  -> ()
	 */
	void USerializableLayoutWidgetInterface::SaveLayout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SerializableLayoutWidgetInterface.SaveLayout");
		
		USerializableLayoutWidgetInterface_SaveLayout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SerializableLayoutWidgetInterface.ResetLayout
	 * 		Flags  -> ()
	 */
	void USerializableLayoutWidgetInterface::ResetLayout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SerializableLayoutWidgetInterface.ResetLayout");
		
		USerializableLayoutWidgetInterface_ResetLayout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SerializableLayoutWidgetInterface.LoadLayout
	 * 		Flags  -> ()
	 */
	void USerializableLayoutWidgetInterface::LoadLayout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SerializableLayoutWidgetInterface.LoadLayout");
		
		USerializableLayoutWidgetInterface_LoadLayout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USerializableLayoutWidgetInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USerializableLayoutWidgetInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SerializableLayoutWidgetInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AServerAnalyticsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AServerAnalyticsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ServerAnalyticsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.UpdateSorting
	 * 		Flags  -> ()
	 */
	void UServerBrowser::UpdateSorting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.UpdateSorting");
		
		UServerBrowser_UpdateSorting_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.UpdatePreviewPrisonersInternal
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserProfile*                                profile                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::UpdatePreviewPrisonersInternal(class UUserProfile* profile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.UpdatePreviewPrisonersInternal");
		
		UServerBrowser_UpdatePreviewPrisonersInternal_Params params {};
		params.profile = profile;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.UpdateList
	 * 		Flags  -> ()
	 */
	void UServerBrowser::UpdateList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.UpdateList");
		
		UServerBrowser_UpdateList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.UpdateFilter
	 * 		Flags  -> ()
	 */
	void UServerBrowser::UpdateFilter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.UpdateFilter");
		
		UServerBrowser_UpdateFilter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.StartNewMultiplayerGame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Ip                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameplayPort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResponsePort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AuthToken                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::StartNewMultiplayerGame(const class FString& Ip, int32_t GameplayPort, int32_t ResponsePort, const class FString& AuthToken)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.StartNewMultiplayerGame");
		
		UServerBrowser_StartNewMultiplayerGame_Params params {};
		params.Ip = Ip;
		params.GameplayPort = GameplayPort;
		params.ResponsePort = ResponsePort;
		params.AuthToken = AuthToken;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.ShowRentAServerPage
	 * 		Flags  -> ()
	 */
	void UServerBrowser::ShowRentAServerPage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.ShowRentAServerPage");
		
		UServerBrowser_ShowRentAServerPage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.ShowErrorDialog
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Message                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::ShowErrorDialog(const class FText& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.ShowErrorDialog");
		
		UServerBrowser_ShowErrorDialog_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.SetSortType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESortType                                          Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ascending                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::SetSortType(ESortType Type, bool ascending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.SetSortType");
		
		UServerBrowser_SetSortType_Params params {};
		params.Type = Type;
		params.ascending = ascending;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.SetFilter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filter                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::SetFilter(const class FString& Filter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.SetFilter");
		
		UServerBrowser_SetFilter_Params params {};
		params.Filter = Filter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.RequestServerList
	 * 		Flags  -> ()
	 */
	void UServerBrowser::RequestServerList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.RequestServerList");
		
		UServerBrowser_RequestServerList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.RemoveInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::RemoveInfo(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.RemoveInfo");
		
		UServerBrowser_RemoveInfo_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.RemoveFavoriteServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Context                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Host                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResponsePort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::RemoveFavoriteServer(class AActor* Context, const class FString& Host, int32_t ResponsePort)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.RemoveFavoriteServer");
		
		UServerBrowser_RemoveFavoriteServer_Params params {};
		params.Context = Context;
		params.Host = Host;
		params.ResponsePort = ResponsePort;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.RefreshServerInfosPing
	 * 		Flags  -> ()
	 */
	void UServerBrowser::RefreshServerInfosPing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.RefreshServerInfosPing");
		
		UServerBrowser_RefreshServerInfosPing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.OpenContinueOrNewDialog
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Ip                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameplayPort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResponsePort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AuthToken                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::OpenContinueOrNewDialog(const class FString& Ip, int32_t GameplayPort, int32_t ResponsePort, const class FString& AuthToken)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.OpenContinueOrNewDialog");
		
		UServerBrowser_OpenContinueOrNewDialog_Params params {};
		params.Ip = Ip;
		params.GameplayPort = GameplayPort;
		params.ResponsePort = ResponsePort;
		params.AuthToken = AuthToken;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.OnLastPlayedServersTabOpened
	 * 		Flags  -> ()
	 */
	void UServerBrowser::OnLastPlayedServersTabOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.OnLastPlayedServersTabOpened");
		
		UServerBrowser_OnLastPlayedServersTabOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.OnInternetTabOpened
	 * 		Flags  -> ()
	 */
	void UServerBrowser::OnInternetTabOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.OnInternetTabOpened");
		
		UServerBrowser_OnInternetTabOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.OnFavoriteServersTabOpened
	 * 		Flags  -> ()
	 */
	void UServerBrowser::OnFavoriteServersTabOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.OnFavoriteServersTabOpened");
		
		UServerBrowser_OnFavoriteServersTabOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.EnterPassword
	 * 		Flags  -> ()
	 */
	void UServerBrowser::EnterPassword()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.EnterPassword");
		
		UServerBrowser_EnterPassword_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.EndWaitingOnServerResponse
	 * 		Flags  -> ()
	 */
	void UServerBrowser::EndWaitingOnServerResponse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.EndWaitingOnServerResponse");
		
		UServerBrowser_EndWaitingOnServerResponse_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.DoesServerInfoSatisfyFilter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FServerInfo                                 ServerInfo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UServerBrowser::DoesServerInfoSatisfyFilter(const struct FServerInfo& ServerInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.DoesServerInfoSatisfyFilter");
		
		UServerBrowser_DoesServerInfoSatisfyFilter_Params params {};
		params.ServerInfo = ServerInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.DisconnectFromServer
	 * 		Flags  -> ()
	 */
	void UServerBrowser::DisconnectFromServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.DisconnectFromServer");
		
		UServerBrowser_DisconnectFromServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.ContinueMultiplayerGame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Ip                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            GameplayPort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResponsePort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AuthToken                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::ContinueMultiplayerGame(const class FString& Ip, int32_t GameplayPort, int32_t ResponsePort, const class FString& AuthToken)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.ContinueMultiplayerGame");
		
		UServerBrowser_ContinueMultiplayerGame_Params params {};
		params.Ip = Ip;
		params.GameplayPort = GameplayPort;
		params.ResponsePort = ResponsePort;
		params.AuthToken = AuthToken;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.ConnectToServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Ip                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ResponsePort                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      AuthToken                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UServerBrowser::ConnectToServer(const class FString& Ip, int32_t ResponsePort, const class FString& AuthToken)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.ConnectToServer");
		
		UServerBrowser_ConnectToServer_Params params {};
		params.Ip = Ip;
		params.ResponsePort = ResponsePort;
		params.AuthToken = AuthToken;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.CloseSocketAndPingingThreads
	 * 		Flags  -> ()
	 */
	void UServerBrowser::CloseSocketAndPingingThreads()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.CloseSocketAndPingingThreads");
		
		UServerBrowser_CloseSocketAndPingingThreads_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.CloseServerBrowser
	 * 		Flags  -> ()
	 */
	void UServerBrowser::CloseServerBrowser()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.CloseServerBrowser");
		
		UServerBrowser_CloseServerBrowser_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.CloseConnection
	 * 		Flags  -> ()
	 */
	void UServerBrowser::CloseConnection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.CloseConnection");
		
		UServerBrowser_CloseConnection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.CancelWaitingOnServerResponse
	 * 		Flags  -> ()
	 */
	void UServerBrowser::CancelWaitingOnServerResponse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.CancelWaitingOnServerResponse");
		
		UServerBrowser_CancelWaitingOnServerResponse_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.BeginWaitingOnServerResponse
	 * 		Flags  -> ()
	 */
	void UServerBrowser::BeginWaitingOnServerResponse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.BeginWaitingOnServerResponse");
		
		UServerBrowser_BeginWaitingOnServerResponse_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ServerBrowser.AddNewInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FServerInfo                                 ServerInfo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UServerBrowser::AddNewInfo(const struct FServerInfo& ServerInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ServerBrowser.AddNewInfo");
		
		UServerBrowser_AddNewInfo_Params params {};
		params.ServerInfo = ServerInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UServerBrowser.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UServerBrowser::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ServerBrowser");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UServerPriceCache.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UServerPriceCache::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ServerPriceCache");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UServerSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UServerSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ServerSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AShark.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AShark::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Shark");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SharkAIController.SetReadyForNextPrimaryTarget
	 * 		Flags  -> ()
	 */
	void ASharkAIController::SetReadyForNextPrimaryTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SharkAIController.SetReadyForNextPrimaryTarget");
		
		ASharkAIController_SetReadyForNextPrimaryTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASharkAIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASharkAIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SharkAIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SharkAnimInstance.IsAlive
	 * 		Flags  -> ()
	 */
	bool USharkAnimInstance::IsAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SharkAnimInstance.IsAlive");
		
		USharkAnimInstance_IsAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USharkAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USharkAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SharkAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UShelterItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UShelterItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ShelterItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AShelterItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AShelterItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ShelterItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UShotsFiredTrackerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UShotsFiredTrackerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ShotsFiredTrackerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SilentAlarmTrapItem.Detonate
	 * 		Flags  -> ()
	 */
	void ASilentAlarmTrapItem::Detonate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SilentAlarmTrapItem.Detonate");
		
		ASilentAlarmTrapItem_Detonate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASilentAlarmTrapItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASilentAlarmTrapItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SilentAlarmTrapItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SingletonStatics.GetDataSingleton
	 * 		Flags  -> ()
	 */
	class UDataSingleton* USingletonStatics::GetDataSingleton()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SingletonStatics.GetDataSingleton");
		
		USingletonStatics_GetDataSingleton_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USingletonStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USingletonStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SingletonStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USkillClasses.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USkillClasses::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SkillClasses");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USkillEventHandler.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USkillEventHandler::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SkillEventHandler");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USkillLevelCraftingCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USkillLevelCraftingCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SkillLevelCraftingCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USkydivingHUD.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USkydivingHUD::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SkydivingHUD");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sledge.OnRep_Controls
	 * 		Flags  -> ()
	 */
	void ASledge::OnRep_Controls()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sledge.OnRep_Controls");
		
		ASledge_OnRep_Controls_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sledge.GetWaterImmersionDepthSlow
	 * 		Flags  -> ()
	 */
	float ASledge::GetWaterImmersionDepthSlow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sledge.GetWaterImmersionDepthSlow");
		
		ASledge_GetWaterImmersionDepthSlow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sledge.GetWaterImmersionDepth
	 * 		Flags  -> ()
	 */
	float ASledge::GetWaterImmersionDepth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sledge.GetWaterImmersionDepth");
		
		ASledge_GetWaterImmersionDepth_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sledge.GetNumMountees
	 * 		Flags  -> ()
	 */
	int32_t ASledge::GetNumMountees()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sledge.GetNumMountees");
		
		ASledge_GetNumMountees_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sledge.CanBeInteractedWith
	 * 		Flags  -> ()
	 */
	bool ASledge::CanBeInteractedWith()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sledge.CanBeInteractedWith");
		
		ASledge_CanBeInteractedWith_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Sledge.CanBeBoardedBy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPhysicalMaterial*                           interactionZone                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASledge::CanBeBoardedBy(class ACharacter* Character, class UPhysicalMaterial* interactionZone)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Sledge.CanBeBoardedBy");
		
		ASledge_CanBeBoardedBy_Params params {};
		params.Character = Character;
		params.interactionZone = interactionZone;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASledge.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASledge::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Sledge");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USledgeMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USledgeMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SledgeMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USledgeDriverMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USledgeDriverMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SledgeDriverMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USledgePassengerMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USledgePassengerMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SledgePassengerMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USledgeSpringArmComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USledgeSpringArmComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SledgeSpringArmComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USliderWithLabelAndNumber.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USliderWithLabelAndNumber::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SliderWithLabelAndNumber");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASlidingDoorStatic.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASlidingDoorStatic::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SlidingDoorStatic");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASmokeGrenadeItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASmokeGrenadeItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SmokeGrenadeItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USnipingSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USnipingSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SnipingSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASoundEmitter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASoundEmitter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SoundEmitter");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USoundNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USoundNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SoundNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USoundNotificationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USoundNotificationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SoundNotificationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USoundReducingItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USoundReducingItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SoundReducingItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASpline.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASpline::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Spline");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASoundSpline.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASoundSpline::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SoundSpline");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnChoiceWidget.Update
	 * 		Flags  -> ()
	 */
	void USpawnChoiceWidget::Update()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnChoiceWidget.Update");
		
		USpawnChoiceWidget_Update_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnChoiceWidget.OnChoiceButtonClicked
	 * 		Flags  -> ()
	 */
	void USpawnChoiceWidget::OnChoiceButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnChoiceWidget.OnChoiceButtonClicked");
		
		USpawnChoiceWidget_OnChoiceButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnChoiceWidget.GetVisibilitySelectArrow
	 * 		Flags  -> ()
	 */
	ESlateVisibility USpawnChoiceWidget::GetVisibilitySelectArrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnChoiceWidget.GetVisibilitySelectArrow");
		
		USpawnChoiceWidget_GetVisibilitySelectArrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnChoiceWidget.GetVisibilityProgressBar
	 * 		Flags  -> ()
	 */
	ESlateVisibility USpawnChoiceWidget::GetVisibilityProgressBar()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnChoiceWidget.GetVisibilityProgressBar");
		
		USpawnChoiceWidget_GetVisibilityProgressBar_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnChoiceWidget.GetVisibilityDisabled
	 * 		Flags  -> ()
	 */
	ESlateVisibility USpawnChoiceWidget::GetVisibilityDisabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnChoiceWidget.GetVisibilityDisabled");
		
		USpawnChoiceWidget_GetVisibilityDisabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnChoiceWidget.GetPriceText
	 * 		Flags  -> ()
	 */
	class FText USpawnChoiceWidget::GetPriceText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnChoiceWidget.GetPriceText");
		
		USpawnChoiceWidget_GetPriceText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USpawnChoiceWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnChoiceWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SpawnChoiceWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USpawnDecalWhenParticleCollides.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnDecalWhenParticleCollides::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SpawnDecalWhenParticleCollides");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.SelectLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USpawnChoiceWidget*                          Button                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpawnMenuWidget::SelectLocation(class USpawnChoiceWidget* Button)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.SelectLocation");
		
		USpawnMenuWidget_SelectLocation_Params params {};
		params.Button = Button;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.Prisoner_GetHealthRatio
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float USpawnMenuWidget::Prisoner_GetHealthRatio(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.Prisoner_GetHealthRatio");
		
		USpawnMenuWidget_Prisoner_GetHealthRatio_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.Prisoner_GetComaDuration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float USpawnMenuWidget::Prisoner_GetComaDuration(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.Prisoner_GetComaDuration");
		
		USpawnMenuWidget_Prisoner_GetComaDuration_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.Prisoner_Die
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpawnMenuWidget::Prisoner_Die(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.Prisoner_Die");
		
		USpawnMenuWidget_Prisoner_Die_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.OnWakeUpButtonClicked
	 * 		Flags  -> ()
	 */
	void USpawnMenuWidget::OnWakeUpButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.OnWakeUpButtonClicked");
		
		USpawnMenuWidget_OnWakeUpButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.GetTotalPriceText
	 * 		Flags  -> ()
	 */
	class FText USpawnMenuWidget::GetTotalPriceText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.GetTotalPriceText");
		
		USpawnMenuWidget_GetTotalPriceText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.GetSectorSelectorVisibility
	 * 		Flags  -> ()
	 */
	ESlateVisibility USpawnMenuWidget::GetSectorSelectorVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.GetSectorSelectorVisibility");
		
		USpawnMenuWidget_GetSectorSelectorVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.GetSectorId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            X                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Y                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSectorId USpawnMenuWidget::GetSectorId(int32_t X, int32_t Y)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.GetSectorId");
		
		USpawnMenuWidget_GetSectorId_Params params {};
		params.X = X;
		params.Y = Y;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.GetRemainingFPTextColorAndOpacity
	 * 		Flags  -> ()
	 */
	struct FSlateColor USpawnMenuWidget::GetRemainingFPTextColorAndOpacity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.GetRemainingFPTextColorAndOpacity");
		
		USpawnMenuWidget_GetRemainingFPTextColorAndOpacity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.GetRemainingFPText
	 * 		Flags  -> ()
	 */
	class FText USpawnMenuWidget::GetRemainingFPText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.GetRemainingFPText");
		
		USpawnMenuWidget_GetRemainingFPText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.GetCurrentFPTextColorAndOpacity
	 * 		Flags  -> ()
	 */
	struct FSlateColor USpawnMenuWidget::GetCurrentFPTextColorAndOpacity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.GetCurrentFPTextColorAndOpacity");
		
		USpawnMenuWidget_GetCurrentFPTextColorAndOpacity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnMenuWidget.GetCurrentFPText
	 * 		Flags  -> ()
	 */
	class FText USpawnMenuWidget::GetCurrentFPText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnMenuWidget.GetCurrentFPText");
		
		USpawnMenuWidget_GetCurrentFPText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USpawnMenuWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnMenuWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SpawnMenuWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnScreen.OnSpawnAccept
	 * 		Flags  -> ()
	 */
	void USpawnScreen::OnSpawnAccept()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnScreen.OnSpawnAccept");
		
		USpawnScreen_OnSpawnAccept_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnScreen.OnScoreBoardButtonClicked
	 * 		Flags  -> ()
	 */
	void USpawnScreen::OnScoreBoardButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnScreen.OnScoreBoardButtonClicked");
		
		USpawnScreen_OnScoreBoardButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnScreen.OnExitToMainMenuClicked
	 * 		Flags  -> ()
	 */
	void USpawnScreen::OnExitToMainMenuClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnScreen.OnExitToMainMenuClicked");
		
		USpawnScreen_OnExitToMainMenuClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnScreen.GetWaitTimeText
	 * 		Flags  -> ()
	 */
	class FText USpawnScreen::GetWaitTimeText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnScreen.GetWaitTimeText");
		
		USpawnScreen_GetWaitTimeText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnScreen.GetWaitTimeInSeconds
	 * 		Flags  -> ()
	 */
	int32_t USpawnScreen::GetWaitTimeInSeconds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnScreen.GetWaitTimeInSeconds");
		
		USpawnScreen_GetWaitTimeInSeconds_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnScreen.GetRespawnButtonVisibility
	 * 		Flags  -> ()
	 */
	ESlateVisibility USpawnScreen::GetRespawnButtonVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnScreen.GetRespawnButtonVisibility");
		
		USpawnScreen_GetRespawnButtonVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnScreen.GetPenaltyCountdownVisibility
	 * 		Flags  -> ()
	 */
	ESlateVisibility USpawnScreen::GetPenaltyCountdownVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnScreen.GetPenaltyCountdownVisibility");
		
		USpawnScreen_GetPenaltyCountdownVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnScreen.GetOtherButtonVisibility
	 * 		Flags  -> ()
	 */
	ESlateVisibility USpawnScreen::GetOtherButtonVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnScreen.GetOtherButtonVisibility");
		
		USpawnScreen_GetOtherButtonVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnScreen.CanSpawn
	 * 		Flags  -> ()
	 */
	bool USpawnScreen::CanSpawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnScreen.CanSpawn");
		
		USpawnScreen_CanSpawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USpawnScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SpawnScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SpawnSectorSelectorWidget.SelectSector
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UButton*                                     Button                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpawnSectorSelectorWidget::SelectSector(class UButton* Button)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SpawnSectorSelectorWidget.SelectSector");
		
		USpawnSectorSelectorWidget_SelectSector_Params params {};
		params.Button = Button;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USpawnSectorSelectorWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnSectorSelectorWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SpawnSectorSelectorWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentEndOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         activatedComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USphereMotionTriggerComponent::SphereComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentEndOverlap");
		
		USphereMotionTriggerComponent_SphereComponent_OnComponentEndOverlap_Params params {};
		params.activatedComp = activatedComp;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentBeginOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USphereMotionTriggerComponent::SphereComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentBeginOverlap");
		
		USphereMotionTriggerComponent_SphereComponent_OnComponentBeginOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USphereMotionTriggerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USphereMotionTriggerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SphereMotionTriggerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASplineZone.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASplineZone::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SplineZone");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SquadPanelWidget.UpdateSquadTopData
	 * 		Flags  -> ()
	 */
	void USquadPanelWidget::UpdateSquadTopData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SquadPanelWidget.UpdateSquadTopData");
		
		USquadPanelWidget_UpdateSquadTopData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SquadPanelWidget.UpdateSquadRankingData
	 * 		Flags  -> ()
	 */
	void USquadPanelWidget::UpdateSquadRankingData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SquadPanelWidget.UpdateSquadRankingData");
		
		USquadPanelWidget_UpdateSquadRankingData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SquadPanelWidget.UpdateSquadMemberInfo
	 * 		Flags  -> ()
	 */
	void USquadPanelWidget::UpdateSquadMemberInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SquadPanelWidget.UpdateSquadMemberInfo");
		
		USquadPanelWidget_UpdateSquadMemberInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SquadPanelWidget.Update
	 * 		Flags  -> ()
	 */
	void USquadPanelWidget::Update()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SquadPanelWidget.Update");
		
		USquadPanelWidget_Update_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SquadPanelWidget.RequestSquadTopData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USquadPanelWidget::RequestSquadTopData(int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SquadPanelWidget.RequestSquadTopData");
		
		USquadPanelWidget_RequestSquadTopData_Params params {};
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SquadPanelWidget.RequestSquadRankingData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USquadPanelWidget::RequestSquadRankingData(int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SquadPanelWidget.RequestSquadRankingData");
		
		USquadPanelWidget_RequestSquadRankingData_Params params {};
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.SquadPanelWidget.RequestSquadMemberInfo
	 * 		Flags  -> ()
	 */
	void USquadPanelWidget::RequestSquadMemberInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.SquadPanelWidget.RequestSquadMemberInfo");
		
		USquadPanelWidget_RequestSquadMemberInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USquadPanelWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USquadPanelWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SquadPanelWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AStartLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AStartLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StartLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AStartLocationManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AStartLocationManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StartLocationManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StaticDoorReplicator.NetMulticast_OnDoorRepDataChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            dataVersion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     doorLocationZeroOrigin                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDoorRepData                                RepData                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UStaticDoorReplicator::NetMulticast_OnDoorRepDataChanged(int32_t dataVersion, const struct FVector& doorLocationZeroOrigin, const struct FDoorRepData& RepData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StaticDoorReplicator.NetMulticast_OnDoorRepDataChanged");
		
		UStaticDoorReplicator_NetMulticast_OnDoorRepDataChanged_Params params {};
		params.dataVersion = dataVersion;
		params.doorLocationZeroOrigin = doorLocationZeroOrigin;
		params.RepData = RepData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UStaticDoorReplicator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStaticDoorReplicator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StaticDoorReplicator");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AStaticRadioItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AStaticRadioItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StaticRadioItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsDetailsWidget.OnTravelSubcategoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UStatisticsDetailsWidget::OnTravelSubcategoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsDetailsWidget.OnTravelSubcategoryButtonClicked");
		
		UStatisticsDetailsWidget_OnTravelSubcategoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsDetailsWidget.OnMetabolismSubcategoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UStatisticsDetailsWidget::OnMetabolismSubcategoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsDetailsWidget.OnMetabolismSubcategoryButtonClicked");
		
		UStatisticsDetailsWidget_OnMetabolismSubcategoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsDetailsWidget.OnHuntingSubcategoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UStatisticsDetailsWidget::OnHuntingSubcategoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsDetailsWidget.OnHuntingSubcategoryButtonClicked");
		
		UStatisticsDetailsWidget_OnHuntingSubcategoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsDetailsWidget.OnGeneralSubcategoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UStatisticsDetailsWidget::OnGeneralSubcategoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsDetailsWidget.OnGeneralSubcategoryButtonClicked");
		
		UStatisticsDetailsWidget_OnGeneralSubcategoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsDetailsWidget.OnFoodSubcategoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UStatisticsDetailsWidget::OnFoodSubcategoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsDetailsWidget.OnFoodSubcategoryButtonClicked");
		
		UStatisticsDetailsWidget_OnFoodSubcategoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsDetailsWidget.OnFishingSubcategoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UStatisticsDetailsWidget::OnFishingSubcategoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsDetailsWidget.OnFishingSubcategoryButtonClicked");
		
		UStatisticsDetailsWidget_OnFishingSubcategoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsDetailsWidget.OnEventsSubcategoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UStatisticsDetailsWidget::OnEventsSubcategoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsDetailsWidget.OnEventsSubcategoryButtonClicked");
		
		UStatisticsDetailsWidget_OnEventsSubcategoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsDetailsWidget.OnCraftingSubcategoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UStatisticsDetailsWidget::OnCraftingSubcategoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsDetailsWidget.OnCraftingSubcategoryButtonClicked");
		
		UStatisticsDetailsWidget_OnCraftingSubcategoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsDetailsWidget.OnCombatSubcategoryButtonClicked
	 * 		Flags  -> ()
	 */
	void UStatisticsDetailsWidget::OnCombatSubcategoryButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsDetailsWidget.OnCombatSubcategoryButtonClicked");
		
		UStatisticsDetailsWidget_OnCombatSubcategoryButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UStatisticsDetailsWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStatisticsDetailsWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StatisticsDetailsWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UStatisticsListRow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStatisticsListRow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StatisticsListRow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UStatisticsListWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStatisticsListWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StatisticsListWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.StatisticsPanelWidget.CloseMenu
	 * 		Flags  -> ()
	 */
	void UStatisticsPanelWidget::CloseMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.StatisticsPanelWidget.CloseMenu");
		
		UStatisticsPanelWidget_CloseMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UStatisticsPanelWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStatisticsPanelWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StatisticsPanelWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UStatisticsSubcategoryTab.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStatisticsSubcategoryTab::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StatisticsSubcategoryTab");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UStealthSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStealthSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.StealthSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USubtitleWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USubtitleWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SubtitleWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USurfaceHardnessData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USurfaceHardnessData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SurfaceHardnessData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USurvivalSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USurvivalSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SurvivalSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASurvivalStatsHandler.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASurvivalStatsHandler::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SurvivalStatsHandler");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USwimmingSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USwimmingSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.SwimmingSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASwitch.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASwitch::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Switch");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TabButton.OnClick
	 * 		Flags  -> ()
	 */
	void UTabButton::OnClick()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TabButton.OnClick");
		
		UTabButton_OnClick_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTabButton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTabButton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TabButton");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTabButtonAlertable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTabButtonAlertable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TabButtonAlertable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTabButtonInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTabButtonInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TabButtonInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTabContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTabContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TabContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TabElement.Update
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Up                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTabElement::Update(bool Up, const struct FVector2D& Offset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TabElement.Update");
		
		UTabElement_Update_Params params {};
		params.Up = Up;
		params.Offset = Offset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TabElement.GetNextIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Up                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UTabElement::GetNextIndex(bool Up)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TabElement.GetNextIndex");
		
		UTabElement_GetNextIndex_Params params {};
		params.Up = Up;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTabElement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTabElement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TabElement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTabGroup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTabGroup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TabGroup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TacticsSkill.ShouldDetectPrisoner
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTacticsSkill::ShouldDetectPrisoner(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TacticsSkill.ShouldDetectPrisoner");
		
		UTacticsSkill_ShouldDetectPrisoner_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TacticsSkill.IsPrisonerDetected
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTacticsSkill::IsPrisonerDetected(class APrisoner* Prisoner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TacticsSkill.IsPrisonerDetected");
		
		UTacticsSkill_IsPrisonerDetected_Params params {};
		params.Prisoner = Prisoner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTacticsSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTacticsSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TacticsSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UHandsCorrectionsData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHandsCorrectionsData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.HandsCorrectionsData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemFirstPersonAnimationsDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemFirstPersonAnimationsDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemFirstPersonAnimationsDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTakeInHandsAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTakeInHandsAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TakeInHandsAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATargetObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATargetObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TargetObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTeamDeathmatchParticipantStats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeamDeathmatchParticipantStats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeamDeathmatchParticipantStats");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TeamDeathmatchGameEvent.SetTeamDeathmatchParameters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTeamDeathmatchParameters                   Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATeamDeathmatchGameEvent::SetTeamDeathmatchParameters(const struct FTeamDeathmatchParameters& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TeamDeathmatchGameEvent.SetTeamDeathmatchParameters");
		
		ATeamDeathmatchGameEvent_SetTeamDeathmatchParameters_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TeamDeathmatchGameEvent.RestrictGameEventArea
	 * 		Flags  -> ()
	 */
	void ATeamDeathmatchGameEvent::RestrictGameEventArea()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TeamDeathmatchGameEvent.RestrictGameEventArea");
		
		ATeamDeathmatchGameEvent_RestrictGameEventArea_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TeamDeathmatchGameEvent.GetTeamDeathmatchParameters
	 * 		Flags  -> ()
	 */
	struct FTeamDeathmatchParameters ATeamDeathmatchGameEvent::GetTeamDeathmatchParameters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TeamDeathmatchGameEvent.GetTeamDeathmatchParameters");
		
		ATeamDeathmatchGameEvent_GetTeamDeathmatchParameters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATeamDeathmatchGameEvent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATeamDeathmatchGameEvent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeamDeathmatchGameEvent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATeamDeathmatchLocationMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATeamDeathmatchLocationMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeamDeathmatchLocationMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTeamInfoWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeamInfoWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeamInfoWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TeamInvitationWidget.StartTimer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Timeout                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamInvitationWidget::StartTimer(float Timeout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TeamInvitationWidget.StartTimer");
		
		UTeamInvitationWidget_StartTimer_Params params {};
		params.Timeout = Timeout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTeamInvitationWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeamInvitationWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeamInvitationWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTeammateNameWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeammateNameWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeammateNameWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TeleportComponent.Server_ReportClientReadyToFinishTeleport
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      RequestID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeleportComponent::Server_ReportClientReadyToFinishTeleport(unsigned char RequestID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TeleportComponent.Server_ReportClientReadyToFinishTeleport");
		
		UTeleportComponent_Server_ReportClientReadyToFinishTeleport_Params params {};
		params.RequestID = RequestID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TeleportComponent.OnRep_Data
	 * 		Flags  -> ()
	 */
	void UTeleportComponent::OnRep_Data()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TeleportComponent.OnRep_Data");
		
		UTeleportComponent_OnRep_Data_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTeleportComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeleportComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeleportComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTeleportComponentOwner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeleportComponentOwner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeleportComponentOwner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATeleportStagingLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATeleportStagingLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeleportStagingLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTeleportSubject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeleportSubject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TeleportSubject");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATempPlayerStart.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATempPlayerStart::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TempPlayerStart");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTextOnlyTooltip.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTextOnlyTooltip::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TextOnlyTooltip");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTextStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTextStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TextStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ThermalSensorComponent.OnRep_Temperature
	 * 		Flags  -> ()
	 */
	void UThermalSensorComponent::OnRep_Temperature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ThermalSensorComponent.OnRep_Temperature");
		
		UThermalSensorComponent_OnRep_Temperature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UThermalSensorComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UThermalSensorComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ThermalSensorComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AThermometer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AThermometer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Thermometer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UThieverySkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UThieverySkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ThieverySkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UThrowableItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UThrowableItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ThrowableItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ThrowingComponent.OnProjectileStopped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  ImpactResult                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UThrowingComponent::OnProjectileStopped(const struct FHitResult& ImpactResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ThrowingComponent.OnProjectileStopped");
		
		UThrowingComponent_OnProjectileStopped_Params params {};
		params.ImpactResult = ImpactResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ThrowingComponent.OnProjectileBounced
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  ImpactResult                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ImpactVelocity                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UThrowingComponent::OnProjectileBounced(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ThrowingComponent.OnProjectileBounced");
		
		UThrowingComponent_OnProjectileBounced_Params params {};
		params.ImpactResult = ImpactResult;
		params.ImpactVelocity = ImpactVelocity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ThrowingComponent.Multicast_PierceHitObject
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     ImpactVelocity                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  ZeroBasedImpactResult                                      (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UThrowingComponent::Multicast_PierceHitObject(const struct FVector& ImpactVelocity, const struct FHitResult& ZeroBasedImpactResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ThrowingComponent.Multicast_PierceHitObject");
		
		UThrowingComponent_Multicast_PierceHitObject_Params params {};
		params.ImpactVelocity = ImpactVelocity;
		params.ZeroBasedImpactResult = ZeroBasedImpactResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UThrowingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UThrowingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ThrowingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ThrowingQuickAccessItemWidget.OnThrowingQuickAccessItemPickedUpStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AItem*                                       Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               PickedUpState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UThrowingQuickAccessItemWidget::OnThrowingQuickAccessItemPickedUpStateChanged(class AItem* Item, bool PickedUpState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ThrowingQuickAccessItemWidget.OnThrowingQuickAccessItemPickedUpStateChanged");
		
		UThrowingQuickAccessItemWidget_OnThrowingQuickAccessItemPickedUpStateChanged_Params params {};
		params.Item = Item;
		params.PickedUpState = PickedUpState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UThrowingQuickAccessItemWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UThrowingQuickAccessItemWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ThrowingQuickAccessItemWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UThrowingSkill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UThrowingSkill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ThrowingSkill");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TimeControllableLight.OnTimeOfDayChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeatherController2*                         sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATimeControllableLight::OnTimeOfDayChanged(class AWeatherController2* sender)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TimeControllableLight.OnTimeOfDayChanged");
		
		ATimeControllableLight_OnTimeOfDayChanged_Params params {};
		params.sender = sender;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATimeControllableLight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATimeControllableLight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TimeControllableLight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TimeControllableSpotLight.OnTimeOfDayChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeatherController2*                         sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATimeControllableSpotLight::OnTimeOfDayChanged(class AWeatherController2* sender)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TimeControllableSpotLight.OnTimeOfDayChanged");
		
		ATimeControllableSpotLight_OnTimeOfDayChanged_Params params {};
		params.sender = sender;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATimeControllableSpotLight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATimeControllableSpotLight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TimeControllableSpotLight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATimedGiftSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATimedGiftSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TimedGiftSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTriggerComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTriggerComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TriggerComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTimedTriggerComponentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTimedTriggerComponentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TimedTriggerComponentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TimedTriggerComponent.OnCountdownTimer
	 * 		Flags  -> ()
	 */
	void UTimedTriggerComponent::OnCountdownTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TimedTriggerComponent.OnCountdownTimer");
		
		UTimedTriggerComponent_OnCountdownTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTimedTriggerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTimedTriggerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TimedTriggerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTireToSurfaceAudioData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTireToSurfaceAudioData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TireToSurfaceAudioData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UToggleCamouflageAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UToggleCamouflageAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ToggleCamouflageAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Tournament.OnRep_Stats
	 * 		Flags  -> ()
	 */
	void ATournament::OnRep_Stats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Tournament.OnRep_Stats");
		
		ATournament_OnRep_Stats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Tournament.Multicast_PlayAnnouncement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               AudioEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATournament::Multicast_PlayAnnouncement(class UAkAudioEvent* AudioEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Tournament.Multicast_PlayAnnouncement");
		
		ATournament_Multicast_PlayAnnouncement_Params params {};
		params.AudioEvent = AudioEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Tournament.IsInSuddenDeath
	 * 		Flags  -> ()
	 */
	bool ATournament::IsInSuddenDeath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Tournament.IsInSuddenDeath");
		
		ATournament_IsInSuddenDeath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Tournament.IsInProgress
	 * 		Flags  -> ()
	 */
	bool ATournament::IsInProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Tournament.IsInProgress");
		
		ATournament_IsInProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Tournament.HasEnded
	 * 		Flags  -> ()
	 */
	bool ATournament::HasEnded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Tournament.HasEnded");
		
		ATournament_HasEnded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Tournament.GetStatsOrderedByDeath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FTournamentStats>                    stats                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void ATournament::GetStatsOrderedByDeath(TArray<struct FTournamentStats>* stats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Tournament.GetStatsOrderedByDeath");
		
		ATournament_GetStatsOrderedByDeath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (stats != nullptr)
			*stats = params.stats;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Tournament.GetStats
	 * 		Flags  -> ()
	 */
	TArray<struct FTournamentStats> ATournament::GetStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Tournament.GetStats");
		
		ATournament_GetStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Tournament.GetScoreboardWidget
	 * 		Flags  -> ()
	 */
	class UTournamentScoreboardWidget* ATournament::GetScoreboardWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Tournament.GetScoreboardWidget");
		
		ATournament_GetScoreboardWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATournament.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATournament::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Tournament");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTournamentScoreboardRowWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTournamentScoreboardRowWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TournamentScoreboardRowWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTournamentScoreboardWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTournamentScoreboardWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TournamentScoreboardWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATrackingMarker2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATrackingMarker2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrackingMarker2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTractor4WAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTractor4WAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Tractor4WAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTradeable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTradeable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Tradeable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UNPCInteractionBoxComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNPCInteractionBoxComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.NPCInteractionBoxComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATradeOutpostBuilding.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATradeOutpostBuilding::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TradeOutpostBuilding");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATradeOutpostManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATradeOutpostManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TradeOutpostManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleSpawnBoxComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleSpawnBoxComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleSpawnBoxComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATradePost.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATradePost::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TradePost");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderBuyPanel.OnExitButtonClicked
	 * 		Flags  -> ()
	 */
	void UTraderBuyPanel::OnExitButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderBuyPanel.OnExitButtonClicked");
		
		UTraderBuyPanel_OnExitButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderBuyPanel.OnCartButtonClicked
	 * 		Flags  -> ()
	 */
	void UTraderBuyPanel::OnCartButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderBuyPanel.OnCartButtonClicked");
		
		UTraderBuyPanel_OnCartButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderBuyPanel.OnBuyButtonClicked
	 * 		Flags  -> ()
	 */
	void UTraderBuyPanel::OnBuyButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderBuyPanel.OnBuyButtonClicked");
		
		UTraderBuyPanel_OnBuyButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderBuyPanel.OnBackButtonClicked
	 * 		Flags  -> ()
	 */
	void UTraderBuyPanel::OnBackButtonClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderBuyPanel.OnBackButtonClicked");
		
		UTraderBuyPanel_OnBackButtonClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderBuyPanel.OnAnyButtonHovered
	 * 		Flags  -> ()
	 */
	void UTraderBuyPanel::OnAnyButtonHovered()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderBuyPanel.OnAnyButtonHovered");
		
		UTraderBuyPanel_OnAnyButtonHovered_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderBuyPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderBuyPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderBuyPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderBuyUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderBuyUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderBuyUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderForPlayerAndDepotItemRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderForPlayerAndDepotItemRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderForPlayerAndDepotItemRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderForPlayerAndDepotItemResponse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderForPlayerAndDepotItemResponse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderForPlayerAndDepotItemResponse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderDepotPanel.OnExitClicked
	 * 		Flags  -> ()
	 */
	void UTraderDepotPanel::OnExitClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderDepotPanel.OnExitClicked");
		
		UTraderDepotPanel_OnExitClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderDepotPanel.OnAnyButtonHover
	 * 		Flags  -> ()
	 */
	void UTraderDepotPanel::OnAnyButtonHover()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderDepotPanel.OnAnyButtonHover");
		
		UTraderDepotPanel_OnAnyButtonHover_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderDepotPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderDepotPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderDepotPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderDropdownMenu.OnComboBoXSelectionChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SelectedIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTraderDropdownMenu::OnComboBoXSelectionChanged(int32_t SelectedIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderDropdownMenu.OnComboBoXSelectionChanged");
		
		UTraderDropdownMenu_OnComboBoXSelectionChanged_Params params {};
		params.SelectedIndex = SelectedIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderDropdownMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderDropdownMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderDropdownMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderItemButton.OnClick
	 * 		Flags  -> ()
	 */
	void UTraderItemButton::OnClick()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderItemButton.OnClick");
		
		UTraderItemButton_OnClick_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderItemButton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderItemButton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderItemButton");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderItemCategoryButton.UpdateIconTexture
	 * 		Flags  -> ()
	 */
	void UTraderItemCategoryButton::UpdateIconTexture()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderItemCategoryButton.UpdateIconTexture");
		
		UTraderItemCategoryButton_UpdateIconTexture_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderItemCategoryButton.OnClick
	 * 		Flags  -> ()
	 */
	void UTraderItemCategoryButton::OnClick()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderItemCategoryButton.OnClick");
		
		UTraderItemCategoryButton_OnClick_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderItemCategoryButton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderItemCategoryButton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderItemCategoryButton");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderMainPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderMainPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderMainPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderMainUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderMainUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderMainUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderManagingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderManagingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderManagingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderPersonalityDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderPersonalityDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderPersonalityDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderSellListEntry.OnCancelClicked
	 * 		Flags  -> ()
	 */
	void UTraderSellListEntry::OnCancelClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderSellListEntry.OnCancelClicked");
		
		UTraderSellListEntry_OnCancelClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderSellListEntry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderSellListEntry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderSellListEntry");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderSellPanel.OnSellClicked
	 * 		Flags  -> ()
	 */
	void UTraderSellPanel::OnSellClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderSellPanel.OnSellClicked");
		
		UTraderSellPanel_OnSellClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderSellPanel.OnExitClicked
	 * 		Flags  -> ()
	 */
	void UTraderSellPanel::OnExitClicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderSellPanel.OnExitClicked");
		
		UTraderSellPanel_OnExitClicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TraderSellPanel.OnAnyButtonHovered
	 * 		Flags  -> ()
	 */
	void UTraderSellPanel::OnAnyButtonHovered()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TraderSellPanel.OnAnyButtonHovered");
		
		UTraderSellPanel_OnAnyButtonHovered_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderSellPanel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderSellPanel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderSellPanel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTraderSellUIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTraderSellUIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TraderSellUIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEconomyManagerResponseData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEconomyManagerResponseData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.EconomyManagerResponseData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTradeStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTradeStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TradeStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTradingOutpostDescriptionDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTradingOutpostDescriptionDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TradingOutpostDescriptionDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTrapData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrapData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrapData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTrapItemUserData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrapItemUserData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrapItemUserData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTrapItemState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrapItemState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrapItemState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTrapRefuelItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrapRefuelItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrapRefuelItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashCarouselWidget.OnValueChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTrashCarouselWidget::OnValueChanged(int32_t NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashCarouselWidget.OnValueChanged");
		
		UTrashCarouselWidget_OnValueChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashCarouselWidget.ClickRight
	 * 		Flags  -> ()
	 */
	void UTrashCarouselWidget::ClickRight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashCarouselWidget.ClickRight");
		
		UTrashCarouselWidget_ClickRight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashCarouselWidget.ClickLeft
	 * 		Flags  -> ()
	 */
	void UTrashCarouselWidget::ClickLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashCarouselWidget.ClickLeft");
		
		UTrashCarouselWidget_ClickLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTrashCarouselWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrashCarouselWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrashCarouselWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTrashMenuButton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrashMenuButton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrashMenuButton");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedCarouselWidget.SetValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTrashNamedCarouselWidget::SetValue(int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedCarouselWidget.SetValue");
		
		UTrashNamedCarouselWidget_SetValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedCarouselWidget.SetName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Name                                                       (Parm, NativeAccessSpecifierPublic)
	 */
	void UTrashNamedCarouselWidget::SetName(const class FText& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedCarouselWidget.SetName");
		
		UTrashNamedCarouselWidget_SetName_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedCarouselWidget.OnValueChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTrashNamedCarouselWidget::OnValueChanged(int32_t NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedCarouselWidget.OnValueChanged");
		
		UTrashNamedCarouselWidget_OnValueChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedCarouselWidget.GetValue
	 * 		Flags  -> ()
	 */
	int32_t UTrashNamedCarouselWidget::GetValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedCarouselWidget.GetValue");
		
		UTrashNamedCarouselWidget_GetValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTrashNamedCarouselWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrashNamedCarouselWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrashNamedCarouselWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedSliderWidget.SetValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTrashNamedSliderWidget::SetValue(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedSliderWidget.SetValue");
		
		UTrashNamedSliderWidget_SetValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedSliderWidget.SetName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        Name                                                       (Parm, NativeAccessSpecifierPublic)
	 */
	void UTrashNamedSliderWidget::SetName(const class FText& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedSliderWidget.SetName");
		
		UTrashNamedSliderWidget_SetName_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedSliderWidget.SetLimits
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              MinValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            stepCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTrashNamedSliderWidget::SetLimits(float MinValue, float MaxValue, int32_t stepCount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedSliderWidget.SetLimits");
		
		UTrashNamedSliderWidget_SetLimits_Params params {};
		params.MinValue = MinValue;
		params.MaxValue = MaxValue;
		params.stepCount = stepCount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedSliderWidget.OnValueChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTrashNamedSliderWidget::OnValueChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedSliderWidget.OnValueChanged");
		
		UTrashNamedSliderWidget_OnValueChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedSliderWidget.GetValue
	 * 		Flags  -> ()
	 */
	float UTrashNamedSliderWidget::GetValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedSliderWidget.GetValue");
		
		UTrashNamedSliderWidget_GetValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedSliderWidget.GetMinValue
	 * 		Flags  -> ()
	 */
	float UTrashNamedSliderWidget::GetMinValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedSliderWidget.GetMinValue");
		
		UTrashNamedSliderWidget_GetMinValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashNamedSliderWidget.GetMaxValue
	 * 		Flags  -> ()
	 */
	float UTrashNamedSliderWidget::GetMaxValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashNamedSliderWidget.GetMaxValue");
		
		UTrashNamedSliderWidget_GetMaxValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTrashNamedSliderWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrashNamedSliderWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrashNamedSliderWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashSliderWidget.SetValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTrashSliderWidget::SetValue(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashSliderWidget.SetValue");
		
		UTrashSliderWidget_SetValue_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashSliderWidget.OnValueChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTrashSliderWidget::OnValueChanged(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashSliderWidget.OnValueChanged");
		
		UTrashSliderWidget_OnValueChanged_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.TrashSliderWidget.GetValue
	 * 		Flags  -> ()
	 */
	float UTrashSliderWidget::GetValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.TrashSliderWidget.GetValue");
		
		UTrashSliderWidget_GetValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTrashSliderWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrashSliderWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TrashSliderWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTriggerFailurePenalty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTriggerFailurePenalty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TriggerFailurePenalty");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTriggerItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTriggerItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.TriggerItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.ProjectWorldToScreen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     WorldPosition                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   Size                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ScreenPosition                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UUIStatics::ProjectWorldToScreen(class APlayerController* Controller, struct FVector* WorldPosition, struct FVector2D* Size, struct FVector2D* ScreenPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.ProjectWorldToScreen");
		
		UUIStatics_ProjectWorldToScreen_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (WorldPosition != nullptr)
			*WorldPosition = params.WorldPosition;
		if (Size != nullptr)
			*Size = params.Size;
		if (ScreenPosition != nullptr)
			*ScreenPosition = params.ScreenPosition;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.GetWidgetParentOfType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWidget*                                     Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               includeUserWidgets                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UWidget* UUIStatics::GetWidgetParentOfType(class UWidget* Widget, class UClass* Type, bool includeUserWidgets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.GetWidgetParentOfType");
		
		UUIStatics_GetWidgetParentOfType_Params params {};
		params.Widget = Widget;
		params.Type = Type;
		params.includeUserWidgets = includeUserWidgets;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.GetMuscleLeanFatFactorsFromCoordinates
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   Coordinates                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UUIStatics::GetMuscleLeanFatFactorsFromCoordinates(const struct FVector2D& Coordinates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.GetMuscleLeanFatFactorsFromCoordinates");
		
		UUIStatics_GetMuscleLeanFatFactorsFromCoordinates_Params params {};
		params.Coordinates = Coordinates;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.GetDesiredWidgetClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWidgetType                                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* UUIStatics::GetDesiredWidgetClass(EWidgetType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.GetDesiredWidgetClass");
		
		UUIStatics_GetDesiredWidgetClass_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.GetDataForFieldName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UStruct*                                     str                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UStruct*                                     Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UUIStatics::GetDataForFieldName(const class FName& Name, class UStruct* str, class UStruct* Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.GetDataForFieldName");
		
		UUIStatics_GetDataForFieldName_Params params {};
		params.Name = Name;
		params.str = str;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.GetAttributesFromMuscularAndFatFactors
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              muscular                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Fat                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector4 UUIStatics::GetAttributesFromMuscularAndFatFactors(float muscular, float Fat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.GetAttributesFromMuscularAndFatFactors");
		
		UUIStatics_GetAttributesFromMuscularAndFatFactors_Params params {};
		params.muscular = muscular;
		params.Fat = Fat;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.GetAgeModifiersFromAge
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Age                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector4 UUIStatics::GetAgeModifiersFromAge(int32_t Age)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.GetAgeModifiersFromAge");
		
		UUIStatics_GetAgeModifiersFromAge_Params params {};
		params.Age = Age;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.FilterNonNumbersFromString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      string                                                     (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UUIStatics::FilterNonNumbersFromString(class FString* string)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.FilterNonNumbersFromString");
		
		UUIStatics_FilterNonNumbersFromString_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (string != nullptr)
			*string = params.string;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.ColorToHex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSlateColor                                 Color                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Text                                                       (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void UUIStatics::ColorToHex(const struct FSlateColor& Color, class FText* Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.ColorToHex");
		
		UUIStatics_ColorToHex_Params params {};
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Text != nullptr)
			*Text = params.Text;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UIStatics.CanDropIfDraggingItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     draggedObject                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       draggingPlayerPawn                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UUIStatics::CanDropIfDraggingItem(class UObject* draggedObject, class APawn* draggingPlayerPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UIStatics.CanDropIfDraggingItem");
		
		UUIStatics_CanDropIfDraggingItem_Params params {};
		params.draggedObject = draggedObject;
		params.draggingPlayerPawn = draggingPlayerPawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUIStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUIStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UIStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUnarmedCombatInputRedirector.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUnarmedCombatInputRedirector::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UnarmedCombatInputRedirector");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AUnderwaterPostProcessVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AUnderwaterPostProcessVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UnderwaterPostProcessVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUpdateableNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUpdateableNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UpdateableNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUpdateableNotificationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUpdateableNotificationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UpdateableNotificationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AUseItemObjective.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AUseItemObjective::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UseItemObjective");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserManager.FindUserProfile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserProfile* UUserManager::FindUserProfile(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserManager.FindUserProfile");
		
		UUserManager_FindUserProfile_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserManager.FindUser
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ID                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUser* UUserManager::FindUser(const class FString& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserManager.FindUser");
		
		UUserManager_FindUser_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserManager.FindOrCreateUser
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ID                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUser* UUserManager::FindOrCreateUser(const class FString& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserManager.FindOrCreateUser");
		
		UUserManager_FindOrCreateUser_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserManager.DeleteUser
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ID                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UUserManager::DeleteUser(const class FString& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserManager.DeleteUser");
		
		UUserManager_DeleteUser_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUserManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUserManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UserManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.SetRecentServers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FUserServerHistoryItem>              Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UUser::SetRecentServers(TArray<struct FUserServerHistoryItem> Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.SetRecentServers");
		
		UUser_SetRecentServers_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.SetProvider
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUser::SetProvider(const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.SetProvider");
		
		UUser_SetProvider_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.SetName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUser::SetName(const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.SetName");
		
		UUser_SetName_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.SetLastLoginTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDateTime                                   Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUser::SetLastLoginTime(const struct FDateTime& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.SetLastLoginTime");
		
		UUser_SetLastLoginTime_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.SetLastDirectConnectionAddress
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUser::SetLastDirectConnectionAddress(const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.SetLastDirectConnectionAddress");
		
		UUser_SetLastDirectConnectionAddress_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.SetIsBanned
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUser::SetIsBanned(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.SetIsBanned");
		
		UUser_SetIsBanned_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.SetFavoriteServers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FUserServerHistoryItem>              Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UUser::SetFavoriteServers(TArray<struct FUserServerHistoryItem> Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.SetFavoriteServers");
		
		UUser_SetFavoriteServers_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.RemoveRecentServerAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUser::RemoveRecentServerAt(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.RemoveRecentServerAt");
		
		UUser_RemoveRecentServerAt_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.RemoveRecentServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FUserServerHistoryItem                      Item                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UUser::RemoveRecentServer(const struct FUserServerHistoryItem& Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.RemoveRecentServer");
		
		UUser_RemoveRecentServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.RemoveFavoriteServerAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUser::RemoveFavoriteServerAt(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.RemoveFavoriteServerAt");
		
		UUser_RemoveFavoriteServerAt_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.RemoveFavoriteServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FUserServerHistoryItem                      Item                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UUser::RemoveFavoriteServer(const struct FUserServerHistoryItem& Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.RemoveFavoriteServer");
		
		UUser_RemoveFavoriteServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.HasProfileWithName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUserProfileType                                   Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UUser::HasProfileWithName(EUserProfileType Type, const class FString& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.HasProfileWithName");
		
		UUser_HasProfileWithName_Params params {};
		params.Type = Type;
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.GetRecentServers
	 * 		Flags  -> ()
	 */
	TArray<struct FUserServerHistoryItem> UUser::GetRecentServers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.GetRecentServers");
		
		UUser_GetRecentServers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.GetProvider
	 * 		Flags  -> ()
	 */
	class FString UUser::GetProvider()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.GetProvider");
		
		UUser_GetProvider_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.GetProfileNames
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUserProfileType                                   Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class FString> UUser::GetProfileNames(EUserProfileType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.GetProfileNames");
		
		UUser_GetProfileNames_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.GetName
	 * 		Flags  -> ()
	 */
	class FString UUser::GetName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.GetName");
		
		UUser_GetName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.GetLastLoginTime
	 * 		Flags  -> ()
	 */
	struct FDateTime UUser::GetLastLoginTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.GetLastLoginTime");
		
		UUser_GetLastLoginTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.GetLastDirectConnectionAddress
	 * 		Flags  -> ()
	 */
	class FString UUser::GetLastDirectConnectionAddress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.GetLastDirectConnectionAddress");
		
		UUser_GetLastDirectConnectionAddress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.GetIsBanned
	 * 		Flags  -> ()
	 */
	bool UUser::GetIsBanned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.GetIsBanned");
		
		UUser_GetIsBanned_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.GetId
	 * 		Flags  -> ()
	 */
	class FString UUser::GetId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.GetId");
		
		UUser_GetId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.GetFavoriteServers
	 * 		Flags  -> ()
	 */
	TArray<struct FUserServerHistoryItem> UUser::GetFavoriteServers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.GetFavoriteServers");
		
		UUser_GetFavoriteServers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.FindProfiles
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUserProfileType                                   Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class UUserProfile*> UUser::FindProfiles(EUserProfileType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.FindProfiles");
		
		UUser_FindProfiles_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.FindProfile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserProfile* UUser::FindProfile(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.FindProfile");
		
		UUser_FindProfile_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.FindMultiplayerCacheProfile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ServerIp                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ServerResponsePort                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserProfile* UUser::FindMultiplayerCacheProfile(const class FString& ServerIp, int32_t ServerResponsePort)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.FindMultiplayerCacheProfile");
		
		UUser_FindMultiplayerCacheProfile_Params params {};
		params.ServerIp = ServerIp;
		params.ServerResponsePort = ServerResponsePort;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.DeleteProfile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                ID                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UUser::DeleteProfile(const struct FDbIntegerId& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.DeleteProfile");
		
		UUser_DeleteProfile_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.CreateProfileFromTemplate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUserProfileType                                   Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCharacterTemplate                          Value                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UUserProfile* UUser::CreateProfileFromTemplate(EUserProfileType Type, const struct FCharacterTemplate& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.CreateProfileFromTemplate");
		
		UUser_CreateProfileFromTemplate_Params params {};
		params.Type = Type;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.CreateEmptyProfile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUserProfileType                                   Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserProfile* UUser::CreateEmptyProfile(EUserProfileType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.CreateEmptyProfile");
		
		UUser_CreateEmptyProfile_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.CreateDefaultProfile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUserProfileType                                   Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserProfile* UUser::CreateDefaultProfile(EUserProfileType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.CreateDefaultProfile");
		
		UUser_CreateDefaultProfile_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.ClearRecentServers
	 * 		Flags  -> ()
	 */
	void UUser::ClearRecentServers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.ClearRecentServers");
		
		UUser_ClearRecentServers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.ClearFavoriteServers
	 * 		Flags  -> ()
	 */
	void UUser::ClearFavoriteServers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.ClearFavoriteServers");
		
		UUser_ClearFavoriteServers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.AddRecentServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FUserServerHistoryItem                      Item                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UUser::AddRecentServer(const struct FUserServerHistoryItem& Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.AddRecentServer");
		
		UUser_AddRecentServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.User.AddFavoriteServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FUserServerHistoryItem                      Item                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UUser::AddFavoriteServer(const struct FUserServerHistoryItem& Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.User.AddFavoriteServer");
		
		UUser_AddFavoriteServer_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUser.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUser::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.User");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.SetPrisonerId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDbIntegerId                                Value                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUserProfile::SetPrisonerId(const struct FDbIntegerId& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.SetPrisonerId");
		
		UUserProfile_SetPrisonerId_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.SetName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUserProfile::SetName(const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.SetName");
		
		UUserProfile_SetName_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.SetMoneyBalance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int64_t                                            moneyBalance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUserProfile::SetMoneyBalance(int64_t moneyBalance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.SetMoneyBalance");
		
		UUserProfile_SetMoneyBalance_Params params {};
		params.moneyBalance = moneyBalance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.SetLastLogoutTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDateTime                                   Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUserProfile::SetLastLogoutTime(const struct FDateTime& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.SetLastLogoutTime");
		
		UUserProfile_SetLastLogoutTime_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.SetLastLoginTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDateTime                                   Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUserProfile::SetLastLoginTime(const struct FDateTime& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.SetLastLoginTime");
		
		UUserProfile_SetLastLoginTime_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.SetFamePoints
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUserProfile::SetFamePoints(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.SetFamePoints");
		
		UUserProfile_SetFamePoints_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.SetCreationTemplateXml
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUserProfile::SetCreationTemplateXml(const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.SetCreationTemplateXml");
		
		UUserProfile_SetCreationTemplateXml_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.SetAuthorityInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FUserProfileAuthorityInfo                   Value                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UUserProfile::SetAuthorityInfo(const struct FUserProfileAuthorityInfo& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.SetAuthorityInfo");
		
		UUserProfile_SetAuthorityInfo_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.MakeCharacterTemplate
	 * 		Flags  -> ()
	 */
	struct FCharacterTemplate UUserProfile::MakeCharacterTemplate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.MakeCharacterTemplate");
		
		UUserProfile_MakeCharacterTemplate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.LoadCharacterTemplate
	 * 		Flags  -> ()
	 */
	struct FCharacterTemplate UUserProfile::LoadCharacterTemplate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.LoadCharacterTemplate");
		
		UUserProfile_LoadCharacterTemplate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetUser
	 * 		Flags  -> ()
	 */
	class UUser* UUserProfile::GetUser()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetUser");
		
		UUserProfile_GetUser_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetType
	 * 		Flags  -> ()
	 */
	EUserProfileType UUserProfile::GetType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetType");
		
		UUserProfile_GetType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetPrisonerId
	 * 		Flags  -> ()
	 */
	struct FDbIntegerId UUserProfile::GetPrisonerId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetPrisonerId");
		
		UUserProfile_GetPrisonerId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetName
	 * 		Flags  -> ()
	 */
	class FString UUserProfile::GetName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetName");
		
		UUserProfile_GetName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetMoneyBalance
	 * 		Flags  -> ()
	 */
	int64_t UUserProfile::GetMoneyBalance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetMoneyBalance");
		
		UUserProfile_GetMoneyBalance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetLastLogoutTime
	 * 		Flags  -> ()
	 */
	struct FDateTime UUserProfile::GetLastLogoutTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetLastLogoutTime");
		
		UUserProfile_GetLastLogoutTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetLastLoginTime
	 * 		Flags  -> ()
	 */
	struct FDateTime UUserProfile::GetLastLoginTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetLastLoginTime");
		
		UUserProfile_GetLastLoginTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetId
	 * 		Flags  -> ()
	 */
	struct FDbIntegerId UUserProfile::GetId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetId");
		
		UUserProfile_GetId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetFamePoints
	 * 		Flags  -> ()
	 */
	float UUserProfile::GetFamePoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetFamePoints");
		
		UUserProfile_GetFamePoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetCreationTemplateXml
	 * 		Flags  -> ()
	 */
	class FString UUserProfile::GetCreationTemplateXml()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetCreationTemplateXml");
		
		UUserProfile_GetCreationTemplateXml_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetCreationTemplate
	 * 		Flags  -> ()
	 */
	struct FCharacterTemplate UUserProfile::GetCreationTemplate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetCreationTemplate");
		
		UUserProfile_GetCreationTemplate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.UserProfile.GetAuthorityInfo
	 * 		Flags  -> ()
	 */
	struct FUserProfileAuthorityInfo UUserProfile::GetAuthorityInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.UserProfile.GetAuthorityInfo");
		
		UUserProfile_GetAuthorityInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUserProfile.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUserProfile::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.UserProfile");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UValueProvider.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UValueProvider::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ValueProvider");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.WarnAboutMounteeEvictionIfInWater
	 * 		Flags  -> ()
	 */
	void AVehicle2W::WarnAboutMounteeEvictionIfInWater()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.WarnAboutMounteeEvictionIfInWater");
		
		AVehicle2W_WarnAboutMounteeEvictionIfInWater_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_UnmountAllMountees
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUnmountFlags                                      Flags                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::Server_UnmountAllMountees(EUnmountFlags Flags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_UnmountAllMountees");
		
		AVehicle2W_Server_UnmountAllMountees_Params params {};
		params.Flags = Flags;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_StopEngineViaStall
	 * 		Flags  -> ()
	 */
	void AVehicle2W::Server_StopEngineViaStall()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_StopEngineViaStall");
		
		AVehicle2W_Server_StopEngineViaStall_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_StopEngineViaIgnition
	 * 		Flags  -> ()
	 */
	void AVehicle2W::Server_StopEngineViaIgnition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_StopEngineViaIgnition");
		
		AVehicle2W_Server_StopEngineViaIgnition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_StopEngineViaBeingBroken
	 * 		Flags  -> ()
	 */
	void AVehicle2W::Server_StopEngineViaBeingBroken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_StopEngineViaBeingBroken");
		
		AVehicle2W_Server_StopEngineViaBeingBroken_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_StopEngineStalling
	 * 		Flags  -> ()
	 */
	void AVehicle2W::Server_StopEngineStalling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_StopEngineStalling");
		
		AVehicle2W_Server_StopEngineStalling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_StartEngineViaMotion
	 * 		Flags  -> ()
	 */
	void AVehicle2W::Server_StartEngineViaMotion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_StartEngineViaMotion");
		
		AVehicle2W_Server_StartEngineViaMotion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_StartEngineViaIgnition
	 * 		Flags  -> ()
	 */
	void AVehicle2W::Server_StartEngineViaIgnition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_StartEngineViaIgnition");
		
		AVehicle2W_Server_StartEngineViaIgnition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_StartEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVehicleEngineStallingParameters            parameters                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::Server_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_StartEngineStalling");
		
		AVehicle2W_Server_StartEngineStalling_Params params {};
		params.parameters = parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_SetLightsActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::Server_SetLightsActive(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_SetLightsActive");
		
		AVehicle2W_Server_SetLightsActive_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_SetHornActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::Server_SetHornActive(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_SetHornActive");
		
		AVehicle2W_Server_SetHornActive_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_RepairEngineBlock
	 * 		Flags  -> ()
	 */
	void AVehicle2W::Server_RepairEngineBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_RepairEngineBlock");
		
		AVehicle2W_Server_RepairEngineBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.Server_ApplyImpactDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::Server_ApplyImpactDamage(float Damage, const struct FHitResult& HitResult, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.Server_ApplyImpactDamage");
		
		AVehicle2W_Server_ApplyImpactDamage_Params params {};
		params.Damage = Damage;
		params.HitResult = HitResult;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.ReceiveBeginHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         MyComp                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               selfMoved                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitNormal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::ReceiveBeginHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool selfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.ReceiveBeginHit");
		
		AVehicle2W_ReceiveBeginHit_Params params {};
		params.MyComp = MyComp;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.selfMoved = selfMoved;
		params.HitLocation = HitLocation;
		params.HitNormal = HitNormal;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.OnRep_VehiclePartsStateFlags
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           Previous                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::OnRep_VehiclePartsStateFlags(uint32_t Previous)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.OnRep_VehiclePartsStateFlags");
		
		AVehicle2W_OnRep_VehiclePartsStateFlags_Params params {};
		params.Previous = Previous;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.OnRep_LightsActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::OnRep_LightsActive(bool OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.OnRep_LightsActive");
		
		AVehicle2W_OnRep_LightsActive_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.OnRep_ItemContainer
	 * 		Flags  -> ()
	 */
	void AVehicle2W::OnRep_ItemContainer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.OnRep_ItemContainer");
		
		AVehicle2W_OnRep_ItemContainer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.OnRep_HornActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::OnRep_HornActive(bool OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.OnRep_HornActive");
		
		AVehicle2W_OnRep_HornActive_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.OnRep_HealthFuelBatteryAmount
	 * 		Flags  -> ()
	 */
	void AVehicle2W::OnRep_HealthFuelBatteryAmount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.OnRep_HealthFuelBatteryAmount");
		
		AVehicle2W_OnRep_HealthFuelBatteryAmount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.OnRep_EngineState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EVehicleEngineState                                OldValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::OnRep_EngineState(EVehicleEngineState OldValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.OnRep_EngineState");
		
		AVehicle2W_OnRep_EngineState_Params params {};
		params.OldValue = OldValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.NetMulticast_StopEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               skipLocallyControlled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::NetMulticast_StopEngineStalling(bool skipLocallyControlled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.NetMulticast_StopEngineStalling");
		
		AVehicle2W_NetMulticast_StopEngineStalling_Params params {};
		params.skipLocallyControlled = skipLocallyControlled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.NetMulticast_StartEngineStalling
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVehicleEngineStallingParameters            parameters                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               skipLocallyControlled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVehicle2W::NetMulticast_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters, bool skipLocallyControlled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.NetMulticast_StartEngineStalling");
		
		AVehicle2W_NetMulticast_StartEngineStalling_Params params {};
		params.parameters = parameters;
		params.skipLocallyControlled = skipLocallyControlled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Vehicle2W.GetNumMountees
	 * 		Flags  -> ()
	 */
	int32_t AVehicle2W::GetNumMountees()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Vehicle2W.GetNumMountees");
		
		AVehicle2W_GetNumMountees_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AVehicle2W.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AVehicle2W::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Vehicle2W");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicle2WAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicle2WAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Vehicle2WAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicle2WMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicle2WMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Vehicle2WMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicle2WDriverMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicle2WDriverMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Vehicle2WDriverMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicle2WPassengerMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicle2WPassengerMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Vehicle2WPassengerMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleCameraStabilizerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleCameraStabilizerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleCameraStabilizerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleCorpse.GetMesh
	 * 		Flags  -> ()
	 */
	class UStaticMeshComponent* AVehicleCorpse::GetMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleCorpse.GetMesh");
		
		AVehicleCorpse_GetMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AVehicleCorpse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AVehicleCorpse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleCorpse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleCraftedItem.SpawnVehicle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      vehicleClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AActor* AVehicleCraftedItem::SpawnVehicle(class UClass* vehicleClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleCraftedItem.SpawnVehicle");
		
		AVehicleCraftedItem_SpawnVehicle_Params params {};
		params.vehicleClass = vehicleClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AVehicleCraftedItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AVehicleCraftedItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleCraftedItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHitZoneManager.SetVehicleDoorWindowHitMeshAttached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            DoorIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicleHitZoneManager::SetVehicleDoorWindowHitMeshAttached(int32_t DoorIndex, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHitZoneManager.SetVehicleDoorWindowHitMeshAttached");
		
		UVehicleHitZoneManager_SetVehicleDoorWindowHitMeshAttached_Params params {};
		params.DoorIndex = DoorIndex;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHitZoneManager.SetVehicleDoorHitMeshAttached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            DoorIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVehicleHitZoneManager::SetVehicleDoorHitMeshAttached(int32_t DoorIndex, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHitZoneManager.SetVehicleDoorHitMeshAttached");
		
		UVehicleHitZoneManager_SetVehicleDoorHitMeshAttached_Params params {};
		params.DoorIndex = DoorIndex;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHitZoneManager.GetWheelTires
	 * 		Flags  -> ()
	 */
	TArray<struct FVehicleHitZoneData> UVehicleHitZoneManager::GetWheelTires()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHitZoneManager.GetWheelTires");
		
		UVehicleHitZoneManager_GetWheelTires_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHitZoneManager.GetVehicleHitMeshName
	 * 		Flags  -> ()
	 */
	class FName UVehicleHitZoneManager::GetVehicleHitMeshName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHitZoneManager.GetVehicleHitMeshName");
		
		UVehicleHitZoneManager_GetVehicleHitMeshName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHitZoneManager.GetDoorWindows
	 * 		Flags  -> ()
	 */
	TArray<struct FVehicleHitZoneData> UVehicleHitZoneManager::GetDoorWindows()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHitZoneManager.GetDoorWindows");
		
		UVehicleHitZoneManager_GetDoorWindows_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHitZoneManager.GetDoors
	 * 		Flags  -> ()
	 */
	TArray<struct FVehicleHitZoneData> UVehicleHitZoneManager::GetDoors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHitZoneManager.GetDoors");
		
		UVehicleHitZoneManager_GetDoors_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHitZoneManager.GetAirplaneWings
	 * 		Flags  -> ()
	 */
	TArray<struct FAirplaneWingHitZoneData> UVehicleHitZoneManager::GetAirplaneWings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHitZoneManager.GetAirplaneWings");
		
		UVehicleHitZoneManager_GetAirplaneWings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleHitZoneManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleHitZoneManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleHitZoneManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.VehicleHasEngine
	 * 		Flags  -> ()
	 */
	bool UVehicleHudWidget::VehicleHasEngine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.VehicleHasEngine");
		
		UVehicleHudWidget_VehicleHasEngine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.ShouldShowVehicleSpeedIndicator
	 * 		Flags  -> ()
	 */
	bool UVehicleHudWidget::ShouldShowVehicleSpeedIndicator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.ShouldShowVehicleSpeedIndicator");
		
		UVehicleHudWidget_ShouldShowVehicleSpeedIndicator_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.ShouldShowVehicleHud
	 * 		Flags  -> ()
	 */
	bool UVehicleHudWidget::ShouldShowVehicleHud()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.ShouldShowVehicleHud");
		
		UVehicleHudWidget_ShouldShowVehicleHud_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.ShouldShowVehicleFuelAmountIndicator
	 * 		Flags  -> ()
	 */
	bool UVehicleHudWidget::ShouldShowVehicleFuelAmountIndicator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.ShouldShowVehicleFuelAmountIndicator");
		
		UVehicleHudWidget_ShouldShowVehicleFuelAmountIndicator_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.ShouldShowVehicleBatteryAmountIndicator
	 * 		Flags  -> ()
	 */
	bool UVehicleHudWidget::ShouldShowVehicleBatteryAmountIndicator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.ShouldShowVehicleBatteryAmountIndicator");
		
		UVehicleHudWidget_ShouldShowVehicleBatteryAmountIndicator_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.ShouldShowAviationHud
	 * 		Flags  -> ()
	 */
	bool UVehicleHudWidget::ShouldShowAviationHud()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.ShouldShowAviationHud");
		
		UVehicleHudWidget_ShouldShowAviationHud_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.IsVehicleEngineBroken
	 * 		Flags  -> ()
	 */
	bool UVehicleHudWidget::IsVehicleEngineBroken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.IsVehicleEngineBroken");
		
		UVehicleHudWidget_IsVehicleEngineBroken_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.HasVehicle
	 * 		Flags  -> ()
	 */
	bool UVehicleHudWidget::HasVehicle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.HasVehicle");
		
		UVehicleHudWidget_HasVehicle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.GetVehicleSpeed
	 * 		Flags  -> ()
	 */
	float UVehicleHudWidget::GetVehicleSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.GetVehicleSpeed");
		
		UVehicleHudWidget_GetVehicleSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.GetVehicleHealthRatio
	 * 		Flags  -> ()
	 */
	float UVehicleHudWidget::GetVehicleHealthRatio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.GetVehicleHealthRatio");
		
		UVehicleHudWidget_GetVehicleHealthRatio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.GetVehicleHealthBarCaption
	 * 		Flags  -> ()
	 */
	class FText UVehicleHudWidget::GetVehicleHealthBarCaption()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.GetVehicleHealthBarCaption");
		
		UVehicleHudWidget_GetVehicleHealthBarCaption_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.GetVehicleGear
	 * 		Flags  -> ()
	 */
	int32_t UVehicleHudWidget::GetVehicleGear()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.GetVehicleGear");
		
		UVehicleHudWidget_GetVehicleGear_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.GetVehicleFuelAmountRatio
	 * 		Flags  -> ()
	 */
	float UVehicleHudWidget::GetVehicleFuelAmountRatio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.GetVehicleFuelAmountRatio");
		
		UVehicleHudWidget_GetVehicleFuelAmountRatio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleHudWidget.GetVehicleBatteryAmountRatio
	 * 		Flags  -> ()
	 */
	float UVehicleHudWidget::GetVehicleBatteryAmountRatio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleHudWidget.GetVehicleBatteryAmountRatio");
		
		UVehicleHudWidget_GetVehicleBatteryAmountRatio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleHudWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleHudWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleHudWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleItemContainer.GetOwningVehicle
	 * 		Flags  -> ()
	 */
	void AVehicleItemContainer::GetOwningVehicle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleItemContainer.GetOwningVehicle");
		
		AVehicleItemContainer_GetOwningVehicle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AVehicleItemContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AVehicleItemContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleItemContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleMountSlotIndicators.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleMountSlotIndicators::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleMountSlotIndicators");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleMountSlotsWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleMountSlotsWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleMountSlotsWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleMountSlotWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleMountSlotWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleMountSlotWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehiclePartDescriptionComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehiclePartDescriptionComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehiclePartDescriptionComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleQueryComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleQueryComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleQueryComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleWeaponAimingParameters.CanPrisonerTakeItemInHands
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EVehicleWeaponAimingStance                         stance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVehicleWeaponAimingParameters::CanPrisonerTakeItemInHands(class APrisoner* Prisoner, class AItem* Item, EVehicleWeaponAimingStance stance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleWeaponAimingParameters.CanPrisonerTakeItemInHands");
		
		UVehicleWeaponAimingParameters_CanPrisonerTakeItemInHands_Params params {};
		params.Prisoner = Prisoner;
		params.Item = Item;
		params.stance = stance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleWeaponAimingParameters.CanPrisonerEnterCombatModeUsingItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AItem*                                       Item                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EVehicleWeaponAimingStance                         stance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVehicleWeaponAimingParameters::CanPrisonerEnterCombatModeUsingItem(class APrisoner* Prisoner, class AItem* Item, EVehicleWeaponAimingStance stance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleWeaponAimingParameters.CanPrisonerEnterCombatModeUsingItem");
		
		UVehicleWeaponAimingParameters_CanPrisonerEnterCombatModeUsingItem_Params params {};
		params.Prisoner = Prisoner;
		params.Item = Item;
		params.stance = stance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VehicleWeaponAimingParameters.CanExecutePrisonerAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APrisoner*                                   Prisoner                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrisonerActionDescription*                  desc                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVehicleWeaponAimingParameters::CanExecutePrisonerAction(class APrisoner* Prisoner, class UPrisonerActionDescription* desc)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VehicleWeaponAimingParameters.CanExecutePrisonerAction");
		
		UVehicleWeaponAimingParameters_CanExecutePrisonerAction_Params params {};
		params.Prisoner = Prisoner;
		params.desc = desc;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleWeaponAimingParameters.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleWeaponAimingParameters::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleWeaponAimingParameters");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AVehicleSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AVehicleSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleSpawnerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleSpawnerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleSpawnerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AVehicleSpawningManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AVehicleSpawningManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleSpawningManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleSpawnerPreset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleSpawnerPreset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleSpawnerPreset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVehicleUIDataController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVehicleUIDataController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VehicleUIDataController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVerificationStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVerificationStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VerificationStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VicinityContainer3.OnContainerScrollBoxScrolled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              CurrentOffset                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVicinityContainer3::OnContainerScrollBoxScrolled(float CurrentOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VicinityContainer3.OnContainerScrollBoxScrolled");
		
		UVicinityContainer3_OnContainerScrollBoxScrolled_Params params {};
		params.CurrentOffset = CurrentOffset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVicinityContainer3.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVicinityContainer3::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VicinityContainer3");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVicinityContainerRowItemWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVicinityContainerRowItemWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VicinityContainerRowItemWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VicinityPanel3.OnVicinityContainerInitialized
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UItemWidget2*                                Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVicinityPanel3::OnVicinityContainerInitialized(class UItemWidget2* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VicinityPanel3.OnVicinityContainerInitialized");
		
		UVicinityPanel3_OnVicinityContainerInitialized_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VicinityPanel3.OnVicinityContainerClosed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UItemWidget2*                                Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVicinityPanel3::OnVicinityContainerClosed(class UItemWidget2* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VicinityPanel3.OnVicinityContainerClosed");
		
		UVicinityPanel3_OnVicinityContainerClosed_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VicinityPanel3.OnItemActorDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVicinityPanel3::OnItemActorDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VicinityPanel3.OnItemActorDestroyed");
		
		UVicinityPanel3_OnItemActorDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VicinityPanel3.OnCheckBoxCheckedChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               checked                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVicinityPanel3::OnCheckBoxCheckedChanged(bool checked)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VicinityPanel3.OnCheckBoxCheckedChanged");
		
		UVicinityPanel3_OnCheckBoxCheckedChanged_Params params {};
		params.checked = checked;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVicinityPanel3.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVicinityPanel3::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VicinityPanel3");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVideoSettingsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVideoSettingsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VideoSettingsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVisionEffectsComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVisionEffectsComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VisionEffectsComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVisualOverlayItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVisualOverlayItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VisualOverlayItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VoiceAudioComponent.QueueVoiceData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<unsigned char>                              CompressedVoiceData                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UVoiceAudioComponent::QueueVoiceData(TArray<unsigned char> CompressedVoiceData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VoiceAudioComponent.QueueVoiceData");
		
		UVoiceAudioComponent_QueueVoiceData_Params params {};
		params.CompressedVoiceData = CompressedVoiceData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VoiceAudioComponent.InitializeVoiceAudioComponent
	 * 		Flags  -> ()
	 */
	void UVoiceAudioComponent::InitializeVoiceAudioComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VoiceAudioComponent.InitializeVoiceAudioComponent");
		
		UVoiceAudioComponent_InitializeVoiceAudioComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVoiceAudioComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVoiceAudioComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VoiceAudioComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VoiceChatComponent.ServerProcessVoiceChatData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<unsigned char>                              compressedVoiceDataBuffer                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UVoiceChatComponent::ServerProcessVoiceChatData(TArray<unsigned char> compressedVoiceDataBuffer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VoiceChatComponent.ServerProcessVoiceChatData");
		
		UVoiceChatComponent_ServerProcessVoiceChatData_Params params {};
		params.compressedVoiceDataBuffer = compressedVoiceDataBuffer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VoiceChatComponent.GetIsActiveTalker
	 * 		Flags  -> ()
	 */
	bool UVoiceChatComponent::GetIsActiveTalker()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VoiceChatComponent.GetIsActiveTalker");
		
		UVoiceChatComponent_GetIsActiveTalker_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VoiceChatComponent.GetCompressedVoiceData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<unsigned char>                              OutBuffer                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool UVoiceChatComponent::GetCompressedVoiceData(TArray<unsigned char>* OutBuffer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VoiceChatComponent.GetCompressedVoiceData");
		
		UVoiceChatComponent_GetCompressedVoiceData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBuffer != nullptr)
			*OutBuffer = params.OutBuffer;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VoiceChatComponent.GetAllVoiceChatComponentsInRange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class UVoiceChatComponent*>                 pawnList                                                   (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UVoiceChatComponent::GetAllVoiceChatComponentsInRange(TArray<class UVoiceChatComponent*>* pawnList)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VoiceChatComponent.GetAllVoiceChatComponentsInRange");
		
		UVoiceChatComponent_GetAllVoiceChatComponentsInRange_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (pawnList != nullptr)
			*pawnList = params.pawnList;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VoiceChatComponent.ClientReceiveVoiceData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UVoiceChatComponent*                         from                                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              compressedVoiceDataBuffer                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UVoiceChatComponent::ClientReceiveVoiceData(class UVoiceChatComponent* from, TArray<unsigned char> compressedVoiceDataBuffer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VoiceChatComponent.ClientReceiveVoiceData");
		
		UVoiceChatComponent_ClientReceiveVoiceData_Params params {};
		params.from = from;
		params.compressedVoiceDataBuffer = compressedVoiceDataBuffer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVoiceChatComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVoiceChatComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VoiceChatComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VoiceDecoder.DecompressVoiceData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<unsigned char>                              InCompressedVoiceData                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		int32_t                                            InCompressedVoiceBytes                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              OutDecompressedVoiceData                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutDecompressedVoiceBytes                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVoiceDecoder::DecompressVoiceData(TArray<unsigned char> InCompressedVoiceData, int32_t InCompressedVoiceBytes, TArray<unsigned char>* OutDecompressedVoiceData, int32_t* OutDecompressedVoiceBytes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VoiceDecoder.DecompressVoiceData");
		
		UVoiceDecoder_DecompressVoiceData_Params params {};
		params.InCompressedVoiceData = InCompressedVoiceData;
		params.InCompressedVoiceBytes = InCompressedVoiceBytes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutDecompressedVoiceData != nullptr)
			*OutDecompressedVoiceData = params.OutDecompressedVoiceData;
		if (OutDecompressedVoiceBytes != nullptr)
			*OutDecompressedVoiceBytes = params.OutDecompressedVoiceBytes;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.VoiceDecoder.CreateVoiceDecoder
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     Owner                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UVoiceDecoder* UVoiceDecoder::CreateVoiceDecoder(class UObject* Owner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.VoiceDecoder.CreateVoiceDecoder");
		
		UVoiceDecoder_CreateVoiceDecoder_Params params {};
		params.Owner = Owner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVoiceDecoder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVoiceDecoder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VoiceDecoder");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AVolumeZone.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AVolumeZone::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VolumeZone");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AVoteSystemManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AVoteSystemManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VoteSystemManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVoteTopic.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVoteTopic::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VoteTopic");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVoteTopic_InitiateCargoDrop.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVoteTopic_InitiateCargoDrop::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VoteTopic_InitiateCargoDrop");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVoteTopic_SetTimeOfDay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVoteTopic_SetTimeOfDay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VoteTopic_SetTimeOfDay");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UVoteTopic_SetWeather.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVoteTopic_SetWeather::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.VoteTopic_SetWeather");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWarningNotification.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWarningNotification::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WarningNotification");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWarningNotificationDescription.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWarningNotificationDescription::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WarningNotificationDescription");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWashClothesData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWashClothesData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WashClothesData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWaterSurfaceAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWaterSurfaceAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WaterSurfaceAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointGroup.GetWaypointLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            waypointIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector AWaypointGroup::GetWaypointLocation(int32_t waypointIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointGroup.GetWaypointLocation");
		
		AWaypointGroup_GetWaypointLocation_Params params {};
		params.waypointIndex = waypointIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWaypointGroup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWaypointGroup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WaypointGroup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointScreenWidget.UpdateWaypoints
	 * 		Flags  -> ()
	 */
	void UWaypointScreenWidget::UpdateWaypoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointScreenWidget.UpdateWaypoints");
		
		UWaypointScreenWidget_UpdateWaypoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointScreenWidget.RemoveWaypointWidgetFromScreen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWaypointWidget*                             Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWaypointScreenWidget::RemoveWaypointWidgetFromScreen(class UWaypointWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointScreenWidget.RemoveWaypointWidgetFromScreen");
		
		UWaypointScreenWidget_RemoveWaypointWidgetFromScreen_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointScreenWidget.RemoveWaypoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWaypointWidget*                             Waypoint                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWaypointScreenWidget::RemoveWaypoint(class UWaypointWidget* Waypoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointScreenWidget.RemoveWaypoint");
		
		UWaypointScreenWidget_RemoveWaypoint_Params params {};
		params.Waypoint = Waypoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointScreenWidget.RemoveAllWaypoints
	 * 		Flags  -> ()
	 */
	void UWaypointScreenWidget::RemoveAllWaypoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointScreenWidget.RemoveAllWaypoints");
		
		UWaypointScreenWidget_RemoveAllWaypoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointScreenWidget.AddWaypointWidgetToScreen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWaypointWidget*                             Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWaypointScreenWidget::AddWaypointWidgetToScreen(class UWaypointWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointScreenWidget.AddWaypointWidgetToScreen");
		
		UWaypointScreenWidget_AddWaypointWidgetToScreen_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WaypointScreenWidget.AddWaypoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UWaypointWidget* UWaypointScreenWidget::AddWaypoint(class UClass* WidgetClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WaypointScreenWidget.AddWaypoint");
		
		UWaypointScreenWidget_AddWaypoint_Params params {};
		params.WidgetClass = WidgetClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWaypointScreenWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWaypointScreenWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WaypointScreenWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UItemWeaponState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemWeaponState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ItemWeaponState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponAccuracyGroup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponAccuracyGroup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAccuracyGroup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponActionWornOutFiringConditions.CanExecuteForWeapon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponActionWornOutFiringConditions::CanExecuteForWeapon(class AWeapon* Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponActionWornOutFiringConditions.CanExecuteForWeapon");
		
		UWeaponActionWornOutFiringConditions_CanExecuteForWeapon_Params params {};
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponActionWornOutFiringConditions.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponActionWornOutFiringConditions::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponActionWornOutFiringConditions");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAmmoDisplayContainerWidget.OnTabModeOpened
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ETabMode                                           tabMode                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponAmmoDisplayContainerWidget::OnTabModeOpened(ETabMode tabMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAmmoDisplayContainerWidget.OnTabModeOpened");
		
		UWeaponAmmoDisplayContainerWidget_OnTabModeOpened_Params params {};
		params.tabMode = tabMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAmmoDisplayContainerWidget.OnTabModeClosed
	 * 		Flags  -> ()
	 */
	void UWeaponAmmoDisplayContainerWidget::OnTabModeClosed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAmmoDisplayContainerWidget.OnTabModeClosed");
		
		UWeaponAmmoDisplayContainerWidget_OnTabModeClosed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAmmoDisplayContainerWidget.Init
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              onScreenDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               displayOnCenter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTexture2D*                                  iconOverride                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponAmmoDisplayContainerWidget::Init(class AWeapon* Weapon, float onScreenDuration, bool displayOnCenter, class UTexture2D* iconOverride)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAmmoDisplayContainerWidget.Init");
		
		UWeaponAmmoDisplayContainerWidget_Init_Params params {};
		params.Weapon = Weapon;
		params.onScreenDuration = onScreenDuration;
		params.displayOnCenter = displayOnCenter;
		params.iconOverride = iconOverride;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponAmmoDisplayContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponAmmoDisplayContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAmmoDisplayContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponAmmoDisplayWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponAmmoDisplayWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAmmoDisplayWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponAttachmentState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponAttachmentState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.UpdateAmmunitionMeshes
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<int32_t>                                    ammoIndices                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               showReversed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentMagazine::UpdateAmmunitionMeshes(TArray<int32_t> ammoIndices, bool showReversed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.UpdateAmmunitionMeshes");
		
		AWeaponAttachmentMagazine_UpdateAmmunitionMeshes_Params params {};
		params.ammoIndices = ammoIndices;
		params.showReversed = showReversed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.SetAmmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FAmmunitionData>                     ammo                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentMagazine::SetAmmo(TArray<struct FAmmunitionData> ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.SetAmmo");
		
		AWeaponAttachmentMagazine_SetAmmo_Params params {};
		params.ammo = ammo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.Server_InsertCartridgeIntoMagazine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionItem*                             ammo                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentMagazine::Server_InsertCartridgeIntoMagazine(class AAmmunitionItem* ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.Server_InsertCartridgeIntoMagazine");
		
		AWeaponAttachmentMagazine_Server_InsertCartridgeIntoMagazine_Params params {};
		params.ammo = ammo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.Server_InsertAmmoSingle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionItem*                             ammoItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentMagazine::Server_InsertAmmoSingle(class AAmmunitionItem* ammoItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.Server_InsertAmmoSingle");
		
		AWeaponAttachmentMagazine_Server_InsertAmmoSingle_Params params {};
		params.ammoItem = ammoItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.Server_EmptyAmmo
	 * 		Flags  -> ()
	 */
	void AWeaponAttachmentMagazine::Server_EmptyAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.Server_EmptyAmmo");
		
		AWeaponAttachmentMagazine_Server_EmptyAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.RemoveAmmo
	 * 		Flags  -> ()
	 */
	struct FAmmunitionData AWeaponAttachmentMagazine::RemoveAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.RemoveAmmo");
		
		AWeaponAttachmentMagazine_RemoveAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.OnRep_AmmoOwnerHelper
	 * 		Flags  -> ()
	 */
	void AWeaponAttachmentMagazine::OnRep_AmmoOwnerHelper()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.OnRep_AmmoOwnerHelper");
		
		AWeaponAttachmentMagazine_OnRep_AmmoOwnerHelper_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.OnRep_AmmoData
	 * 		Flags  -> ()
	 */
	void AWeaponAttachmentMagazine::OnRep_AmmoData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.OnRep_AmmoData");
		
		AWeaponAttachmentMagazine_OnRep_AmmoData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.OnAmmoChangedEvent
	 * 		Flags  -> ()
	 */
	void AWeaponAttachmentMagazine::OnAmmoChangedEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.OnAmmoChangedEvent");
		
		AWeaponAttachmentMagazine_OnAmmoChangedEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.Multicast_SetLoadedVariables
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FAmmunitionData>                     ammo                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentMagazine::Multicast_SetLoadedVariables(TArray<struct FAmmunitionData> ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.Multicast_SetLoadedVariables");
		
		AWeaponAttachmentMagazine_Multicast_SetLoadedVariables_Params params {};
		params.ammo = ammo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.IsAmmoSupported
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionItem*                             ammo                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AWeaponAttachmentMagazine::IsAmmoSupported(class AAmmunitionItem* ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.IsAmmoSupported");
		
		AWeaponAttachmentMagazine_IsAmmoSupported_Params params {};
		params.ammo = ammo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.GetTopmostProjectileClass
	 * 		Flags  -> ()
	 */
	class UClass* AWeaponAttachmentMagazine::GetTopmostProjectileClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.GetTopmostProjectileClass");
		
		AWeaponAttachmentMagazine_GetTopmostProjectileClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.GetTopmostAmmunitionData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FAmmunitionData                             Data                                                       (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool AWeaponAttachmentMagazine::GetTopmostAmmunitionData(struct FAmmunitionData* Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.GetTopmostAmmunitionData");
		
		AWeaponAttachmentMagazine_GetTopmostAmmunitionData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Data != nullptr)
			*Data = params.Data;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.GetCapacity
	 * 		Flags  -> ()
	 */
	int32_t AWeaponAttachmentMagazine::GetCapacity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.GetCapacity");
		
		AWeaponAttachmentMagazine_GetCapacity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.GetAmmoCount
	 * 		Flags  -> ()
	 */
	int32_t AWeaponAttachmentMagazine::GetAmmoCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.GetAmmoCount");
		
		AWeaponAttachmentMagazine_GetAmmoCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.GetAmmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FAmmunitionData>                     ammo                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentMagazine::GetAmmo(TArray<struct FAmmunitionData>* ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.GetAmmo");
		
		AWeaponAttachmentMagazine_GetAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ammo != nullptr)
			*ammo = params.ammo;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.FillWithDefaultAmmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentMagazine::FillWithDefaultAmmo(int32_t Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.FillWithDefaultAmmo");
		
		AWeaponAttachmentMagazine_FillWithDefaultAmmo_Params params {};
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.EmptyAmmo
	 * 		Flags  -> ()
	 */
	void AWeaponAttachmentMagazine::EmptyAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.EmptyAmmo");
		
		AWeaponAttachmentMagazine_EmptyAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.DestroyAmmunitionMeshes
	 * 		Flags  -> ()
	 */
	void AWeaponAttachmentMagazine::DestroyAmmunitionMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.DestroyAmmunitionMeshes");
		
		AWeaponAttachmentMagazine_DestroyAmmunitionMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.CreateAmmunitionMeshes
	 * 		Flags  -> ()
	 */
	void AWeaponAttachmentMagazine::CreateAmmunitionMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.CreateAmmunitionMeshes");
		
		AWeaponAttachmentMagazine_CreateAmmunitionMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.AddAmmoSingle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FAmmunitionData                             ammo                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentMagazine::AddAmmoSingle(const struct FAmmunitionData& ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.AddAmmoSingle");
		
		AWeaponAttachmentMagazine_AddAmmoSingle_Params params {};
		params.ammo = ammo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentMagazine.AddAmmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FAmmunitionData>                     ammo                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentMagazine::AddAmmo(TArray<struct FAmmunitionData> ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentMagazine.AddAmmo");
		
		AWeaponAttachmentMagazine_AddAmmo_Params params {};
		params.ammo = ammo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentAutoCrossbowMagazine.GetFollowerBoneLocationOffset
	 * 		Flags  -> ()
	 */
	float AWeaponAttachmentAutoCrossbowMagazine::GetFollowerBoneLocationOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentAutoCrossbowMagazine.GetFollowerBoneLocationOffset");
		
		AWeaponAttachmentAutoCrossbowMagazine_GetFollowerBoneLocationOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentAutoCrossbowMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentAutoCrossbowMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentAutoCrossbowMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentBayonet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentBayonet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentBayonet");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentFlashlight.Server_SetTurnedOn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentFlashlight::Server_SetTurnedOn(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentFlashlight.Server_SetTurnedOn");
		
		AWeaponAttachmentFlashlight_Server_SetTurnedOn_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentFlashlight.OnComponentDeactivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentFlashlight::OnComponentDeactivated(class UActorComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentFlashlight.OnComponentDeactivated");
		
		AWeaponAttachmentFlashlight_OnComponentDeactivated_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAttachmentFlashlight.OnComponentActivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               wasReset                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAttachmentFlashlight::OnComponentActivated(class UActorComponent* Component, bool wasReset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAttachmentFlashlight.OnComponentActivated");
		
		AWeaponAttachmentFlashlight_OnComponentActivated_Params params {};
		params.Component = Component;
		params.wasReset = wasReset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentFlashlight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentFlashlight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentFlashlight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentGhillie.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentGhillie::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentGhillie");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponAttachmentMagazineState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponAttachmentMagazineState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentMagazineState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentSight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentSight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentSight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentScope.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentScope::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentScope");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentScopeRail.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentScopeRail::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentScopeRail");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentSuppressor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentSuppressor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentSuppressor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAttachmentUniversalFlashlight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAttachmentUniversalFlashlight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAttachmentUniversalFlashlight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAutoCrossbow.SetFollowerBoneLocationOffset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              LocationOffset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAutoCrossbow::SetFollowerBoneLocationOffset(float LocationOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAutoCrossbow.SetFollowerBoneLocationOffset");
		
		AWeaponAutoCrossbow_SetFollowerBoneLocationOffset_Params params {};
		params.LocationOffset = LocationOffset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAutoCrossbow.Server_PlayLaughingSoundEffect
	 * 		Flags  -> ()
	 */
	void AWeaponAutoCrossbow::Server_PlayLaughingSoundEffect()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAutoCrossbow.Server_PlayLaughingSoundEffect");
		
		AWeaponAutoCrossbow_Server_PlayLaughingSoundEffect_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAutoCrossbow.Server_HandleFiringEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Active                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAutoCrossbow::Server_HandleFiringEffects(bool Active)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAutoCrossbow.Server_HandleFiringEffects");
		
		AWeaponAutoCrossbow_Server_HandleFiringEffects_Params params {};
		params.Active = Active;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAutoCrossbow.Multicast_PlayLaughingSoundEffect
	 * 		Flags  -> ()
	 */
	void AWeaponAutoCrossbow::Multicast_PlayLaughingSoundEffect()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAutoCrossbow.Multicast_PlayLaughingSoundEffect");
		
		AWeaponAutoCrossbow_Multicast_PlayLaughingSoundEffect_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponAutoCrossbow.Multicast_HandleFiringEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Active                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponAutoCrossbow::Multicast_HandleFiringEffects(bool Active)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponAutoCrossbow.Multicast_HandleFiringEffects");
		
		AWeaponAutoCrossbow_Multicast_HandleFiringEffects_Params params {};
		params.Active = Active;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponAutoCrossbow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponAutoCrossbow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAutoCrossbow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponAutoCrossbowAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponAutoCrossbowAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponAutoCrossbowAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.SetDrawWeight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              drawWeight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponBow::SetDrawWeight(float drawWeight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.SetDrawWeight");
		
		AWeaponBow_SetDrawWeight_Params params {};
		params.drawWeight = drawWeight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.Server_SetPendingArrow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionArrow*                            arrow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponBow::Server_SetPendingArrow(class AAmmunitionArrow* arrow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.Server_SetPendingArrow");
		
		AWeaponBow_Server_SetPendingArrow_Params params {};
		params.arrow = arrow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.Server_SetDrawAmount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              drawAmount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponBow::Server_SetDrawAmount(float drawAmount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.Server_SetDrawAmount");
		
		AWeaponBow_Server_SetDrawAmount_Params params {};
		params.drawAmount = drawAmount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.Server_SetBowStateData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWeaponBowStateDataReplicated               State                                                      (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AWeaponBow::Server_SetBowStateData(const struct FWeaponBowStateDataReplicated& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.Server_SetBowStateData");
		
		AWeaponBow_Server_SetBowStateData_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.Server_SetBowState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWeaponBowState                                    State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponBow::Server_SetBowState(EWeaponBowState State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.Server_SetBowState");
		
		AWeaponBow_Server_SetBowState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.Server_RemoveArrow
	 * 		Flags  -> ()
	 */
	void AWeaponBow::Server_RemoveArrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.Server_RemoveArrow");
		
		AWeaponBow_Server_RemoveArrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.Server_InsertArrow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionArrow*                            arrow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponBow::Server_InsertArrow(class AAmmunitionArrow* arrow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.Server_InsertArrow");
		
		AWeaponBow_Server_InsertArrow_Params params {};
		params.arrow = arrow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.ReloadArrow
	 * 		Flags  -> ()
	 */
	void AWeaponBow::ReloadArrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.ReloadArrow");
		
		AWeaponBow_ReloadArrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.OnRep_BowStateData
	 * 		Flags  -> ()
	 */
	void AWeaponBow::OnRep_BowStateData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.OnRep_BowStateData");
		
		AWeaponBow_OnRep_BowStateData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.OnRep_BowState
	 * 		Flags  -> ()
	 */
	void AWeaponBow::OnRep_BowState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.OnRep_BowState");
		
		AWeaponBow_OnRep_BowState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.OnRep_Arrow
	 * 		Flags  -> ()
	 */
	void AWeaponBow::OnRep_Arrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.OnRep_Arrow");
		
		AWeaponBow_OnRep_Arrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.GotoInsertArrowState
	 * 		Flags  -> ()
	 */
	void AWeaponBow::GotoInsertArrowState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.GotoInsertArrowState");
		
		AWeaponBow_GotoInsertArrowState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.GetPendingArrow
	 * 		Flags  -> ()
	 */
	class AAmmunitionArrow* AWeaponBow::GetPendingArrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.GetPendingArrow");
		
		AWeaponBow_GetPendingArrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.GetOwnersTotalDrawWeight
	 * 		Flags  -> ()
	 */
	float AWeaponBow::GetOwnersTotalDrawWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.GetOwnersTotalDrawWeight");
		
		AWeaponBow_GetOwnersTotalDrawWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.GetOwnersDrawWeightByStrength
	 * 		Flags  -> ()
	 */
	float AWeaponBow::GetOwnersDrawWeightByStrength()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.GetOwnersDrawWeightByStrength");
		
		AWeaponBow_GetOwnersDrawWeightByStrength_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.GetOwnersDrawWeightBySkill
	 * 		Flags  -> ()
	 */
	float AWeaponBow::GetOwnersDrawWeightBySkill()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.GetOwnersDrawWeightBySkill");
		
		AWeaponBow_GetOwnersDrawWeightBySkill_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.GetDrawWeightDefaultsByStrength
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Strength                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AWeaponBow::GetDrawWeightDefaultsByStrength(float Strength)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.GetDrawWeightDefaultsByStrength");
		
		AWeaponBow_GetDrawWeightDefaultsByStrength_Params params {};
		params.Strength = Strength;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.GetDrawWeight
	 * 		Flags  -> ()
	 */
	float AWeaponBow::GetDrawWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.GetDrawWeight");
		
		AWeaponBow_GetDrawWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.GetDrawPercentageDefaultsForParameters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              characterDrawWeight                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              bowDrawWeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AWeaponBow::GetDrawPercentageDefaultsForParameters(float characterDrawWeight, float bowDrawWeight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.GetDrawPercentageDefaultsForParameters");
		
		AWeaponBow_GetDrawPercentageDefaultsForParameters_Params params {};
		params.characterDrawWeight = characterDrawWeight;
		params.bowDrawWeight = bowDrawWeight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.EquipArrow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionArrow*                            arrow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponBow::EquipArrow(class AAmmunitionArrow* arrow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.EquipArrow");
		
		AWeaponBow_EquipArrow_Params params {};
		params.arrow = arrow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponBow.CanInsertArrow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AAmmunitionArrow*                            arrowItem                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AWeaponBow::CanInsertArrow(class AAmmunitionArrow* arrowItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponBow.CanInsertArrow");
		
		AWeaponBow_CanInsertArrow_Params params {};
		params.arrowItem = arrowItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponBow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponBow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponBow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponBowAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponBowAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponBowAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponCrossbow.SetIsCocked
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponCrossbow::SetIsCocked(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponCrossbow.SetIsCocked");
		
		AWeaponCrossbow_SetIsCocked_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponCrossbow.Server_HandleFiringEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               shotFired                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponCrossbow::Server_HandleFiringEffects(bool shotFired)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponCrossbow.Server_HandleFiringEffects");
		
		AWeaponCrossbow_Server_HandleFiringEffects_Params params {};
		params.shotFired = shotFired;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponCrossbow.NetMulticast_SetLoadedVariablesForCrossbow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               isCocked                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponCrossbow::NetMulticast_SetLoadedVariablesForCrossbow(bool isCocked)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponCrossbow.NetMulticast_SetLoadedVariablesForCrossbow");
		
		AWeaponCrossbow_NetMulticast_SetLoadedVariablesForCrossbow_Params params {};
		params.isCocked = isCocked;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponCrossbow.Multicast_HandleFiringEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               shotFired                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponCrossbow::Multicast_HandleFiringEffects(bool shotFired)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponCrossbow.Multicast_HandleFiringEffects");
		
		AWeaponCrossbow_Multicast_HandleFiringEffects_Params params {};
		params.shotFired = shotFired;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponCrossbow.GetIsCocked
	 * 		Flags  -> ()
	 */
	bool AWeaponCrossbow::GetIsCocked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponCrossbow.GetIsCocked");
		
		AWeaponCrossbow_GetIsCocked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponCrossbow.GetDrawCategory
	 * 		Flags  -> ()
	 */
	EWeaponCrossbowDrawCategory AWeaponCrossbow::GetDrawCategory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponCrossbow.GetDrawCategory");
		
		AWeaponCrossbow_GetDrawCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponCrossbow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponCrossbow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponCrossbow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponCrossbowAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponCrossbowAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponCrossbowAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponDamageGroup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponDamageGroup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponDamageGroup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponDamageStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponDamageStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponDamageStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponDisassemblyToolItemTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponDisassemblyToolItemTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponDisassemblyToolItemTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponHolsterItem.OnRep_HolsteredWeapon
	 * 		Flags  -> ()
	 */
	void AWeaponHolsterItem::OnRep_HolsteredWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponHolsterItem.OnRep_HolsteredWeapon");
		
		AWeaponHolsterItem_OnRep_HolsteredWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponHolsterItem.HolsterWeapon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AWeapon*                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AWeaponHolsterItem::HolsterWeapon(class AWeapon* Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponHolsterItem.HolsterWeapon");
		
		AWeaponHolsterItem_HolsterWeapon_Params params {};
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponHolsterItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponHolsterItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponHolsterItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponRecoilGroup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponRecoilGroup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponRecoilGroup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponRevolver.Server_UseAmmoAtIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponRevolver::Server_UseAmmoAtIndex(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponRevolver.Server_UseAmmoAtIndex");
		
		AWeaponRevolver_Server_UseAmmoAtIndex_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponRevolver.Server_RollDrum
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponRevolver::Server_RollDrum(int32_t Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponRevolver.Server_RollDrum");
		
		AWeaponRevolver_Server_RollDrum_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponRevolver.Server_PlayFiringAnimation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ammoIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               dryFire                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponRevolver::Server_PlayFiringAnimation(int32_t ammoIndex, bool dryFire)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponRevolver.Server_PlayFiringAnimation");
		
		AWeaponRevolver_Server_PlayFiringAnimation_Params params {};
		params.ammoIndex = ammoIndex;
		params.dryFire = dryFire;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponRevolver.NetMulticast_SetLoadedVariablesForRevolver
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ammoIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponRevolver::NetMulticast_SetLoadedVariablesForRevolver(int32_t ammoIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponRevolver.NetMulticast_SetLoadedVariablesForRevolver");
		
		AWeaponRevolver_NetMulticast_SetLoadedVariablesForRevolver_Params params {};
		params.ammoIndex = ammoIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponRevolver.NetMulticast_PlayFiringAnimation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ammoIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               dryFire                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWeaponRevolver::NetMulticast_PlayFiringAnimation(int32_t ammoIndex, bool dryFire)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponRevolver.NetMulticast_PlayFiringAnimation");
		
		AWeaponRevolver_NetMulticast_PlayFiringAnimation_Params params {};
		params.ammoIndex = ammoIndex;
		params.dryFire = dryFire;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeaponRevolver.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeaponRevolver::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponRevolver");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponRevolverAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponRevolverAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponRevolverAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponScopeItemComponent.Server_SetWindage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Windage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponScopeItemComponent::Server_SetWindage(int32_t Windage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponScopeItemComponent.Server_SetWindage");
		
		UWeaponScopeItemComponent_Server_SetWindage_Params params {};
		params.Windage = Windage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponScopeItemComponent.Server_SetDisplayBrightnessMultiplier
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponScopeItemComponent::Server_SetDisplayBrightnessMultiplier(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponScopeItemComponent.Server_SetDisplayBrightnessMultiplier");
		
		UWeaponScopeItemComponent_Server_SetDisplayBrightnessMultiplier_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponScopeItemComponent.Client_SetLoadedVariables
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Windage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              displayBrightnessMultiplier                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponScopeItemComponent::Client_SetLoadedVariables(int32_t Windage, float displayBrightnessMultiplier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponScopeItemComponent.Client_SetLoadedVariables");
		
		UWeaponScopeItemComponent_Client_SetLoadedVariables_Params params {};
		params.Windage = Windage;
		params.displayBrightnessMultiplier = displayBrightnessMultiplier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponScopeItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponScopeItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponScopeItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponScopeWidget.OnShowElements
	 * 		Flags  -> ()
	 */
	void UWeaponScopeWidget::OnShowElements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponScopeWidget.OnShowElements");
		
		UWeaponScopeWidget_OnShowElements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponScopeWidget.OnHideElements
	 * 		Flags  -> ()
	 */
	void UWeaponScopeWidget::OnHideElements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponScopeWidget.OnHideElements");
		
		UWeaponScopeWidget_OnHideElements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponScopeWidget.OnFadeOutComplete
	 * 		Flags  -> ()
	 */
	void UWeaponScopeWidget::OnFadeOutComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponScopeWidget.OnFadeOutComplete");
		
		UWeaponScopeWidget_OnFadeOutComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponScopeWidget.OnFadeInComplete
	 * 		Flags  -> ()
	 */
	void UWeaponScopeWidget::OnFadeInComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponScopeWidget.OnFadeInComplete");
		
		UWeaponScopeWidget_OnFadeInComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponScopeWidget.OnConstructFinished
	 * 		Flags  -> ()
	 */
	void UWeaponScopeWidget::OnConstructFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponScopeWidget.OnConstructFinished");
		
		UWeaponScopeWidget_OnConstructFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeaponScopeWidget.BeginFadeIn
	 * 		Flags  -> ()
	 */
	void UWeaponScopeWidget::BeginFadeIn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeaponScopeWidget.BeginFadeIn");
		
		UWeaponScopeWidget_BeginFadeIn_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponScopeWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponScopeWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponScopeWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponFirstPersonAnimationsDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponFirstPersonAnimationsDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponFirstPersonAnimationsDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponSightItemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponSightItemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponSightItemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateActive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateActive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateActive");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateActiveManualFiring.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateActiveManualFiring::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateActiveManualFiring");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateAutoCrossbowActive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateAutoCrossbowActive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateAutoCrossbowActive");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateFiring.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateFiring::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateFiring");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateAutoCrossbowFire.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateAutoCrossbowFire::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateAutoCrossbowFire");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowActive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowActive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowActive");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowAnticipateDraw.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowAnticipateDraw::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowAnticipateDraw");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowAnticipateFiring.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowAnticipateFiring::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowAnticipateFiring");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowCancelFiring.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowCancelFiring::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowCancelFiring");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowDraw.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowDraw::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowDraw");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowFire.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowFire::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowFire");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowFireAndInsertArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowFireAndInsertArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowFireAndInsertArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowFiring.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowFiring::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowFiring");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowInsertArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowInsertArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowInsertArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateBowRemoveArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateBowRemoveArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateBowRemoveArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateChamberBullet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateChamberBullet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateChamberBullet");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateCheckAmmo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateCheckAmmo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateCheckAmmo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateClearMalfunction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateClearMalfunction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateClearMalfunction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateCrossbowActive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateCrossbowActive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateCrossbowActive");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateCrossbowFire.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateCrossbowFire::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateCrossbowFire");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateCrossbowFireAndInsertArrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateCrossbowFireAndInsertArrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateCrossbowFireAndInsertArrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateEquipping.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateEquipping::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateEquipping");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateFiringAutomatic.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateFiringAutomatic::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateFiringAutomatic");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateFiringBurst.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateFiringBurst::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateFiringBurst");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateFiringManual.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateFiringManual::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateFiringManual");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateFiringSemiAutomatic.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateFiringSemiAutomatic::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateFiringSemiAutomatic");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateInactive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateInactive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateInactive");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateReload.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateReload::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateReload");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateRevolverActive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateRevolverActive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateRevolverActive");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateRevolverFire.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateRevolverFire::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateRevolverFire");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateUnEquipping.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateUnEquipping::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateUnEquipping");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWeaponStateUnloadAmmo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponStateUnloadAmmo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeaponStateUnloadAmmo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeatherAmbientSounds.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeatherAmbientSounds::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeatherAmbientSounds");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeatherController2.OnRep_NighttimeDarkness
	 * 		Flags  -> ()
	 */
	void AWeatherController2::OnRep_NighttimeDarkness()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeatherController2.OnRep_NighttimeDarkness");
		
		AWeatherController2_OnRep_NighttimeDarkness_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeatherController2.NetMulticast_SendStateSnapshot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWeatherReplicatedStateSnapshot             Snapshot                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AWeatherController2::NetMulticast_SendStateSnapshot(const struct FWeatherReplicatedStateSnapshot& Snapshot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeatherController2.NetMulticast_SendStateSnapshot");
		
		AWeatherController2_NetMulticast_SendStateSnapshot_Params params {};
		params.Snapshot = Snapshot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WeatherController2.NetMulticast_ResetStateSnapshots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FWeatherReplicatedStateSnapshot             Snapshot                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AWeatherController2::NetMulticast_ResetStateSnapshots(const struct FWeatherReplicatedStateSnapshot& Snapshot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WeatherController2.NetMulticast_ResetStateSnapshots");
		
		AWeatherController2_NetMulticast_ResetStateSnapshots_Params params {};
		params.Snapshot = Snapshot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWeatherController2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWeatherController2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WeatherController2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWetnessManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWetnessManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WetnessManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WetnessStatics.SetMaterialsWetness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Wetness                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWetnessStatics::SetMaterialsWetness(class UPrimitiveComponent* Component, float Wetness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WetnessStatics.SetMaterialsWetness");
		
		UWetnessStatics_SetMaterialsWetness_Params params {};
		params.Component = Component;
		params.Wetness = Wetness;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWetnessStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWetnessStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WetnessStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Wettable.SetWaterWeight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWettable::SetWaterWeight(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Wettable.SetWaterWeight");
		
		UWettable_SetWaterWeight_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Wettable.GetWaterWeight
	 * 		Flags  -> ()
	 */
	float UWettable::GetWaterWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Wettable.GetWaterWeight");
		
		UWettable_GetWaterWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Wettable.GetMaxWaterWeight
	 * 		Flags  -> ()
	 */
	float UWettable::GetMaxWaterWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Wettable.GetMaxWaterWeight");
		
		UWettable_GetMaxWaterWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWettable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWettable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Wettable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.Server_SendState_Unreliable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRigidBodyState                             meshState                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FRigidBodyState                             driverState                                                (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		uint32_t                                           packedControls                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWheelBarrow::Server_SendState_Unreliable(const struct FRigidBodyState& meshState, const struct FRigidBodyState& driverState, uint32_t packedControls)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.Server_SendState_Unreliable");
		
		AWheelBarrow_Server_SendState_Unreliable_Params params {};
		params.meshState = meshState;
		params.driverState = driverState;
		params.packedControls = packedControls;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.Server_SendState_Reliable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRigidBodyState                             meshState                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FRigidBodyState                             driverState                                                (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		uint32_t                                           packedControls                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWheelBarrow::Server_SendState_Reliable(const struct FRigidBodyState& meshState, const struct FRigidBodyState& driverState, uint32_t packedControls)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.Server_SendState_Reliable");
		
		AWheelBarrow_Server_SendState_Reliable_Params params {};
		params.meshState = meshState;
		params.driverState = driverState;
		params.packedControls = packedControls;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.OnRep_State1
	 * 		Flags  -> ()
	 */
	void AWheelBarrow::OnRep_State1()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.OnRep_State1");
		
		AWheelBarrow_OnRep_State1_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.NetMulticast_PlayDamagedByHitEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWheelBarrow::NetMulticast_PlayDamagedByHitEffects(float Damage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.NetMulticast_PlayDamagedByHitEffects");
		
		AWheelBarrow_NetMulticast_PlayDamagedByHitEffects_Params params {};
		params.Damage = Damage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.MeshComponent_OnComponentWake
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWheelBarrow::MeshComponent_OnComponentWake(class UPrimitiveComponent* Component, const class FName& BoneName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.MeshComponent_OnComponentWake");
		
		AWheelBarrow_MeshComponent_OnComponentWake_Params params {};
		params.Component = Component;
		params.BoneName = BoneName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.MeshComponent_OnComponentSleep
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWheelBarrow::MeshComponent_OnComponentSleep(class UPrimitiveComponent* Component, const class FName& BoneName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.MeshComponent_OnComponentSleep");
		
		AWheelBarrow_MeshComponent_OnComponentSleep_Params params {};
		params.Component = Component;
		params.BoneName = BoneName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.GetNumMountees
	 * 		Flags  -> ()
	 */
	int32_t AWheelBarrow::GetNumMountees()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.GetNumMountees");
		
		AWheelBarrow_GetNumMountees_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.GetMesh
	 * 		Flags  -> ()
	 */
	class UStaticMeshComponent* AWheelBarrow::GetMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.GetMesh");
		
		AWheelBarrow_GetMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.GetItemContainer
	 * 		Flags  -> ()
	 */
	class AVehicleItemContainer* AWheelBarrow::GetItemContainer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.GetItemContainer");
		
		AWheelBarrow_GetItemContainer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WheelBarrow.GetDriverPhysicsCapsuleComponent
	 * 		Flags  -> ()
	 */
	class UWheelBarrowDriverCapsuleComponent* AWheelBarrow::GetDriverPhysicsCapsuleComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WheelBarrow.GetDriverPhysicsCapsuleComponent");
		
		AWheelBarrow_GetDriverPhysicsCapsuleComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWheelBarrow.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWheelBarrow::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WheelBarrow");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWheelBarrowDriverCapsuleComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWheelBarrowDriverCapsuleComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WheelBarrowDriverCapsuleComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWheelBarrowMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWheelBarrowMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WheelBarrowMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWheelBarrowDriverMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWheelBarrowDriverMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WheelBarrowDriverMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWheelBarrowPassengerMountSlot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWheelBarrowPassengerMountSlot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WheelBarrowPassengerMountSlot");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWindowFortificationsType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWindowFortificationsType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WindowFortificationsType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWindVane.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWindVane::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WindVane");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldCraftingMarkerWidget.ChangeMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECraftingMarkerMode                                mode                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWorldCraftingMarkerWidget::ChangeMode(ECraftingMarkerMode mode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldCraftingMarkerWidget.ChangeMode");
		
		UWorldCraftingMarkerWidget_ChangeMode_Params params {};
		params.mode = mode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWorldCraftingMarkerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWorldCraftingMarkerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WorldCraftingMarkerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWorldEventManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWorldEventManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WorldEventManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.TransformWorldPositionToTargetFOV
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              FieldOfView                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     WorldPosition                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UWorldStatics::TransformWorldPositionToTargetFOV(class UObject* WorldContextObject, float FieldOfView, const struct FVector& WorldPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.TransformWorldPositionToTargetFOV");
		
		UWorldStatics_TransformWorldPositionToTargetFOV_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.FieldOfView = FieldOfView;
		params.WorldPosition = WorldPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.IsWorldStreamed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWorldStatics::IsWorldStreamed(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.IsWorldStreamed");
		
		UWorldStatics_IsWorldStreamed_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.IsLocationOverWaterSurface
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWorldStatics::IsLocationOverWaterSurface(class UObject* WorldContextObject, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.IsLocationOverWaterSurface");
		
		UWorldStatics_IsLocationOverWaterSurface_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.IsLocationInDangerZone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWorldStatics::IsLocationInDangerZone(class UObject* WorldContextObject, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.IsLocationInDangerZone");
		
		UWorldStatics_IsLocationInDangerZone_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.IsLocationInCustomZone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWorldStatics::IsLocationInCustomZone(class UObject* WorldContextObject, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.IsLocationInCustomZone");
		
		UWorldStatics_IsLocationInCustomZone_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.IsEveryStreamedLevelLoadedAtLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWorldStatics::IsEveryStreamedLevelLoadedAtLocation(class UObject* WorldContextObject, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.IsEveryStreamedLevelLoadedAtLocation");
		
		UWorldStatics_IsEveryStreamedLevelLoadedAtLocation_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.IsEnvironmentClassOutdoor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EEnvironmentClass                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWorldStatics::IsEnvironmentClassOutdoor(EEnvironmentClass Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.IsEnvironmentClassOutdoor");
		
		UWorldStatics_IsEnvironmentClassOutdoor_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.IsEnvironmentClassIndoor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EEnvironmentClass                                  Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWorldStatics::IsEnvironmentClassIndoor(EEnvironmentClass Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.IsEnvironmentClassIndoor");
		
		UWorldStatics_IsEnvironmentClassIndoor_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.GetExtraAirTemperatureFromHeatSourcesAtLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UWorldStatics::GetExtraAirTemperatureFromHeatSourcesAtLocation(class UObject* WorldContextObject, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.GetExtraAirTemperatureFromHeatSourcesAtLocation");
		
		UWorldStatics_GetExtraAirTemperatureFromHeatSourcesAtLocation_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.GetEnvironmentDescriptionAtLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FEnvironmentDescription UWorldStatics::GetEnvironmentDescriptionAtLocation(class UObject* WorldContextObject, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.GetEnvironmentDescriptionAtLocation");
		
		UWorldStatics_GetEnvironmentDescriptionAtLocation_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.GetDistanceToClosestPlayerPawnOrSpectator
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWorld*                                      World                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UWorldStatics::GetDistanceToClosestPlayerPawnOrSpectator(class UWorld* World, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.GetDistanceToClosestPlayerPawnOrSpectator");
		
		UWorldStatics_GetDistanceToClosestPlayerPawnOrSpectator_Params params {};
		params.World = World;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.WorldStatics.FindTeleportSpotInArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              MinRadius                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxRadius                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            numIterationsPerRadius                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            numIterationsPerSlice                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWorldStatics::FindTeleportSpotInArea(class AActor* Actor, struct FVector* Location, struct FRotator* Rotation, float MinRadius, float MaxRadius, int32_t numIterationsPerRadius, int32_t numIterationsPerSlice)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.WorldStatics.FindTeleportSpotInArea");
		
		UWorldStatics_FindTeleportSpotInArea_Params params {};
		params.Actor = Actor;
		params.MinRadius = MinRadius;
		params.MaxRadius = MaxRadius;
		params.numIterationsPerRadius = numIterationsPerRadius;
		params.numIterationsPerSlice = numIterationsPerSlice;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Location != nullptr)
			*Location = params.Location;
		if (Rotation != nullptr)
			*Rotation = params.Rotation;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UWorldStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWorldStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.WorldStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.Wristwatch.SetDisplayBrightness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWristwatch::SetDisplayBrightness(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.Wristwatch.SetDisplayBrightness");
		
		AWristwatch_SetDisplayBrightness_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AWristwatch.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWristwatch::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.Wristwatch");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UXMLAttributeMap.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UXMLAttributeMap::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.XMLAttributeMap");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UXMLStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UXMLStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.XMLStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AZombieAIController2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AZombieAIController2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZombieAIController2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ZombieAnimInstance2.AnimNotify_RFootDown
	 * 		Flags  -> ()
	 */
	void UZombieAnimInstance2::AnimNotify_RFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ZombieAnimInstance2.AnimNotify_RFootDown");
		
		UZombieAnimInstance2_AnimNotify_RFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ZombieAnimInstance2.AnimNotify_LFootDown
	 * 		Flags  -> ()
	 */
	void UZombieAnimInstance2::AnimNotify_LFootDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ZombieAnimInstance2.AnimNotify_LFootDown");
		
		UZombieAnimInstance2_AnimNotify_LFootDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ZombieAnimInstance2.AnimNotify_GoToRagdoll
	 * 		Flags  -> ()
	 */
	void UZombieAnimInstance2::AnimNotify_GoToRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ZombieAnimInstance2.AnimNotify_GoToRagdoll");
		
		UZombieAnimInstance2_AnimNotify_GoToRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UZombieAnimInstance2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UZombieAnimInstance2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZombieAnimInstance2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UZombieArmorDamageReductionAssetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UZombieArmorDamageReductionAssetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZombieArmorDamageReductionAssetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AZombieCorpse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AZombieCorpse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZombieCorpse");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ZombieKamikazeComponent.OnRep_IsDisarmed
	 * 		Flags  -> ()
	 */
	void UZombieKamikazeComponent::OnRep_IsDisarmed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ZombieKamikazeComponent.OnRep_IsDisarmed");
		
		UZombieKamikazeComponent_OnRep_IsDisarmed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ZombieKamikazeComponent.OnRep_IsCriticalPostMortemPhase
	 * 		Flags  -> ()
	 */
	void UZombieKamikazeComponent::OnRep_IsCriticalPostMortemPhase()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ZombieKamikazeComponent.OnRep_IsCriticalPostMortemPhase");
		
		UZombieKamikazeComponent_OnRep_IsCriticalPostMortemPhase_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ZombieKamikazeComponent.NetMulticast_HandleExplosion
	 * 		Flags  -> ()
	 */
	void UZombieKamikazeComponent::NetMulticast_HandleExplosion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ZombieKamikazeComponent.NetMulticast_HandleExplosion");
		
		UZombieKamikazeComponent_NetMulticast_HandleExplosion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ZombieKamikazeComponent.Explode
	 * 		Flags  -> ()
	 */
	void UZombieKamikazeComponent::Explode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ZombieKamikazeComponent.Explode");
		
		UZombieKamikazeComponent_Explode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ZombieKamikazeComponent.Disarm
	 * 		Flags  -> ()
	 */
	void UZombieKamikazeComponent::Disarm()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ZombieKamikazeComponent.Disarm");
		
		UZombieKamikazeComponent_Disarm_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UZombieKamikazeComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UZombieKamikazeComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZombieKamikazeComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function ConZ.ZombieKamikazeDummyTrap.OnRep_OwningComponent
	 * 		Flags  -> ()
	 */
	void AZombieKamikazeDummyTrap::OnRep_OwningComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function ConZ.ZombieKamikazeDummyTrap.OnRep_OwningComponent");
		
		AZombieKamikazeDummyTrap_OnRep_OwningComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AZombieKamikazeDummyTrap.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AZombieKamikazeDummyTrap::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZombieKamikazeDummyTrap");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UZombieMovementComponent2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UZombieMovementComponent2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZombieMovementComponent2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UZombieSoundComponent2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UZombieSoundComponent2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZombieSoundComponent2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UZoneConfigurationDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UZoneConfigurationDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZoneConfigurationDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UZoneRegistry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UZoneRegistry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class ConZ.ZoneRegistry");
		return ptr;
	}

}


