#pragma once

/**
 * Name: Insurgency__Sandstorm
 * Version: 8846794
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Classes
	// --------------------------------------------------
	/**
	 * Class Insurgency.DynamicNavModifierVolume
	 * Size -> 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
	 */
	class ADynamicNavModifierVolume : public AVolume
	{
	public:
		unsigned char                                              UnknownData_O6PM[0x8];                                   // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              NavArea;                                                 // 0x0260(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void ActivateNavModifer();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AccurateDynamicNavModifierVolume
	 * Size -> 0x0030 (FullSize[0x0298] - InheritedSize[0x0268])
	 */
	class AAccurateDynamicNavModifierVolume : public ADynamicNavModifierVolume
	{
	public:
		unsigned char                                              UnknownData_CZSC[0x30];                                  // 0x0268(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AchievementDataAsset
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UAchievementDataAsset : public UPrimaryDataAsset
	{
	public:
		TArray<class UClass*>                                      AchievementClasses;                                      // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ActiveObjectiveDisplay
	 * Size -> 0x0068 (FullSize[0x0298] - InheritedSize[0x0230])
	 */
	class UActiveObjectiveDisplay : public UUserWidget
	{
	public:
		class UCanvasPanel*                                        RootCanvas;                                              // 0x0230(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextObjectiveDescription;                                // 0x0238(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextObjectiveName;                                       // 0x0240(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     ObjectiveTypeSwitcher;                                   // 0x0248(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveIcon*                                      BP_ObjectiveIcon;                                        // 0x0250(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveIcon*                                      BP_ObjectiveSecondaryIcon;                               // 0x0258(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextObjectivePlayers;                                    // 0x0260(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AObjectiveBase*                                      PlayerActiveObjective;                                   // 0x0268(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AINSPlayerState*                                     ViewedPlayerState;                                       // 0x0270(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AINSSoldier*                                         ViewedSoldier;                                           // 0x0278(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              MinPlayersToCapture;                                     // 0x0280(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DL4P[0x3];                                   // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumCapturers;                                            // 0x0284(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_WUHU[0x10];                                  // 0x0288(0x0010) MISSED OFFSET (PADDING)

	public:
		void UpdatePlayersOnObjective(bool bObjectiveChanged);
		void OnSetViewTarget(class AActor* NewViewTarget);
		void OnRoundReset();
		void OnRoundOver(const struct FPlayerRoundOverData& UIData);
		void OnPlayerObjectiveStateChanged();
		void OnOwnerChanged(class AObjectiveBase* Objective, unsigned char NewOwners);
		void OnObjectiveChanged(class AObjectiveBase* NewObjective);
		void OnNumCapturersChanged();
		void OnCapturingTeamChanged(class AObjectiveBase* Objective, unsigned char NewOwners);
		void OnActiveObjectiveChanged(class AINSPlayerState* PlayerState, class AObjectiveBase* NewActiveObjective);
		void OnActiveChanged(bool bNewActiveState, class AObjectiveBase* Objective);
		class FText GetObjectiveDescription();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AIHelicopterController
	 * Size -> 0x01D0 (FullSize[0x04F8] - InheritedSize[0x0328])
	 */
	class AAIHelicopterController : public AAIController
	{
	public:
		unsigned char                                              UnknownData_33AC[0x8];                                   // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBlackboardComponent*                                BlackboardComponent;                                     // 0x0330(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             DestinationLocation;                                     // 0x0338(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             SpawnLocation;                                           // 0x0344(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             ExtractionPoint;                                         // 0x0350(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FHitResult                                          CollisionSphereTrace;                                    // 0x035C(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		struct FHitResult                                          DownwardTrace;                                           // 0x03E4(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		struct FHitResult                                          LastValidDownwardTrace;                                  // 0x046C(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_U2MW[0x4];                                   // 0x04F4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AimAssistComponent
	 * Size -> 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
	 */
	class UAimAssistComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_ZOL5[0x18];                                  // 0x00B0(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AimAssistTargetComponent
	 * Size -> 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
	 */
	class UAimAssistTargetComponent : public UActorComponent
	{
	public:
		class UCapsuleComponent*                                   TargetCapsule;                                           // 0x00B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K1IQ[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AircraftBase
	 * Size -> 0x00A8 (FullSize[0x02C8] - InheritedSize[0x0220])
	 */
	class AAircraftBase : public AActor
	{
	public:
		unsigned char                                              UnknownData_BVDD[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     SceneComponent;                                          // 0x0228(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMesh*                                       SkeletalMesh;                                            // 0x0230(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                              SkeletalMeshComponent;                                   // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAircraftMovementComponent*                          MovementComponent;                                       // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AudioComponent;                                          // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEventSpawn;                                         // 0x0250(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlyOverTime;                                             // 0x0258(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_25KU[0x4];                                   // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AFireSupportBase*                                    AssociatedFireSupport;                                   // 0x0260(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPayloadDroppedDelegate;                                // 0x0268(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAllPayloadsDroppedDelegate;                            // 0x0278(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GBOP[0x8];                                   // 0x0288(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAircraftPayload>                            Payloads;                                                // 0x0290(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector_NetQuantize10                               GroundTargetLocation;                                    // 0x02A0(0x000C) Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XCVL[0x4];                                   // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                AircraftName;                                            // 0x02B0(0x0018) Edit, NativeAccessSpecifierPublic

	public:
		void SetGroundTarget(const struct FVector& InGroundTarget, float InMaxDiveAltitude);
		void BroadcastPayloadDrop(const struct FAircraftPayload& Payload);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AircraftMovementComponent
	 * Size -> 0x0030 (FullSize[0x0120] - InheritedSize[0x00F0])
	 */
	class UAircraftMovementComponent : public UMovementComponent
	{
	public:
		struct FVector                                             InitialLocation;                                         // 0x00F0(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnSpeed;                                               // 0x00FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CruisingSpeed;                                           // 0x0100(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Acceleration;                                            // 0x0104(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SubstepTimer;                                            // 0x0108(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x010C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2G6L[0x8];                                   // 0x0118(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetTargetLocation(const struct FVector& InTarget);
		struct FVector LimitVelocity(const struct FVector& NewVelocity);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AircraftStrafing
	 * Size -> 0x0058 (FullSize[0x0320] - InheritedSize[0x02C8])
	 */
	class AAircraftStrafing : public AAircraftBase
	{
	public:
		class FScriptMulticastDelegate                             OnStrafeBeginDelegate;                                   // 0x02C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnStrafeFinishDelegate;                                  // 0x02D8(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		bool                                                       bUseRealisticStrafing;                                   // 0x02E8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PXJ7[0x3];                                   // 0x02E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StrafeDistance;                                          // 0x02EC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeMinFiringDistance;                                 // 0x02F0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeDuration;                                          // 0x02F4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeMinAngle;                                          // 0x02F8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           StrafeDirectionWeighting;                                // 0x02FC(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UKHN[0x8];                                   // 0x0304(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LastStrafeAttackLocation;                                // 0x030C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFinishedStrafing;                                       // 0x0318(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_59F5[0x7];                                   // 0x0319(0x0007) MISSED OFFSET (PADDING)

	public:
		void MulticastBeginStrafe();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AISenseConfig_INSHearing
	 * Size -> 0x0020 (FullSize[0x0068] - InheritedSize[0x0048])
	 */
	class UAISenseConfig_INSHearing : public UAISenseConfig
	{
	public:
		class UBotSkillConfig*                                     BotConfig;                                               // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Implementation;                                          // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearingRange;                                            // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoSHearingRange;                                         // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseLoSHearing : 1;                                      // 0x0060(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_52NN[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAISenseAffiliationFilter                           DetectionByAffiliation;                                  // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AISenseEvent_INSHearing
	 * Size -> 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
	 */
	class UAISenseEvent_INSHearing : public UAISenseEvent
	{
	public:
		struct FAIINSNoiseEvent                                    Event;                                                   // 0x0028(0x0030) Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AISense_INSHearing
	 * Size -> 0x0068 (FullSize[0x00E8] - InheritedSize[0x0080])
	 */
	class UAISense_INSHearing : public UAISense
	{
	public:
		TArray<struct FAIINSNoiseEvent>                            NoiseEvents;                                             // 0x0080(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SpeedOfSoundSq;                                          // 0x0090(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RCNN[0x54];                                  // 0x0094(0x0054) MISSED OFFSET (PADDING)

	public:
		void STATIC_ReportNoiseEvent(class UObject* WorldContextObject, const struct FVector& NoiseLocation, float Loudness, class AActor* Instigator, float MaxRange, const class FName& Tag);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AlarmComponent
	 * Size -> 0x0020 (FullSize[0x0210] - InheritedSize[0x01F0])
	 */
	class UAlarmComponent : public USceneComponent
	{
	public:
		class UINSAudioComponent*                                  AudioComponent;                                          // 0x01F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AlarmStartEvent;                                         // 0x01F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AlarmEndEvent;                                           // 0x0200(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_K1AC[0x8];                                   // 0x0208(0x0008) MISSED OFFSET (PADDING)

	public:
		void StartAlarm(float Duration);
		void MulticastStartAlarm(float Duration);
		void EndAlarm();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AlignedWrapBox
	 * Size -> 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
	 */
	class UAlignedWrapBox : public UPanelWidget
	{
	public:
		struct FVector2D                                           InnerSlotPadding;                                        // 0x0120(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHorizontalAlignment                                       HorizontalAlignment;                                     // 0x0128(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVerticalAlignment                                         VerticalAlignment;                                       // 0x0129(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZERH[0x16];                                  // 0x012A(0x0016) MISSED OFFSET (PADDING)

	public:
		void SetVerticalAlignment(EVerticalAlignment InVerticalAlignment);
		void SetInnerSlotPadding(const struct FVector2D& InPadding);
		void SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment);
		class UAlignedWrapBoxSlot* AddChildWrapBox(class UWidget* Content);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AlignedWrapBoxSlot
	 * Size -> 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
	 */
	class UAlignedWrapBoxSlot : public UPanelSlot
	{
	public:
		struct FMargin                                             Padding;                                                 // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bFillEmptySpace;                                         // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YJA5[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FillSpanWhenLessThan;                                    // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHorizontalAlignment                                       HorizontalAlignment;                                     // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVerticalAlignment                                         VerticalAlignment;                                       // 0x0051(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AKP4[0xE];                                   // 0x0052(0x000E) MISSED OFFSET (PADDING)

	public:
		void SetVerticalAlignment(EVerticalAlignment InVerticalAlignment);
		void SetPadding(const struct FMargin& InPadding);
		void SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment);
		void SetFillSpanWhenLessThan(float InFillSpanWhenLessThan);
		void SetFillEmptySpace(bool InbFillEmptySpace);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveBase
	 * Size -> 0x0198 (FullSize[0x03B8] - InheritedSize[0x0220])
	 */
	class AObjectiveBase : public AActor
	{
	public:
		unsigned char                                              UnknownData_0Y7F[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ObjectiveTypePrintName;                                  // 0x0230(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              ObjectiveId;                                             // 0x0248(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E41V[0x7];                                   // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                PrintName;                                               // 0x0250(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                HintText;                                                // 0x0268(0x0018) Edit, BlueprintVisible, DisableEditOnTemplate, NativeAccessSpecifierPublic
		EObjectiveType                                             ObjectiveType;                                           // 0x0280(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideObjectiveLetter;                                // 0x0281(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4UUQ[0x6];                                   // 0x0282(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ObjectiveLetter;                                         // 0x0288(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bActive;                                                 // 0x02A0(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              LockedTeams;                                             // 0x02A1(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bVisibleOnHUD;                                           // 0x02A2(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCounterAttack;                                          // 0x02A3(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowLethalFireSupport;                                 // 0x02A4(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UFTX[0x3];                                   // 0x02A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AmbushRatioOverride;                                     // 0x02A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbushRadiusOverride;                                    // 0x02AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbushHeightThreshold;                                   // 0x02B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WanderRadiusOverride;                                    // 0x02B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EObjectiveBotSpawnMethod                                   BotInitialSpawnMethod;                                   // 0x02B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              OwningTeamId;                                            // 0x02B9(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ITCD[0x6];                                   // 0x02BA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATeamInfo*                                           OwningTeam;                                              // 0x02C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CapturingTeamId;                                         // 0x02C8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LYOT[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATeamInfo*                                           CapturingTeam;                                           // 0x02D0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       BoxCollision;                                            // 0x02D8(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ASpawnZone*>                                  AssociatedSpawnZones;                                    // 0x02E0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveActiveDelegate;                               // 0x02F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveChangeOwnerDelegate;                          // 0x0300(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveChangeCapturingTeamDelegate;                  // 0x0310(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveLockedTeamsChangedDelegate;                   // 0x0320(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveIsBeingCounterattackedDelegate;               // 0x0330(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnRoundResetDelegate;                                    // 0x0340(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BO6X[0x8];                                   // 0x0350(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              EntranceZones[0x50];                                     // 0x0358(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<class UCoverComponent*>                             BotCaptureLocations;                                     // 0x03A8(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		int32_t SetSpawnsEnabled(bool bNewActiveState);
		void SetOwningTeam(unsigned char NewOwner);
		void SetObjectiveVisibleOnHUD(bool bNewVisibility);
		void SetObjectiveIsBeingCounterAttacked(bool bNewCounterAttackState);
		void SetObjectiveActive(bool bNewActiveState);
		void SetNeutralOwningTeam();
		void SetLockedForTeam(unsigned char InTeamId, bool Blocked);
		void SetCapturingTeam(unsigned char NewCapturingTeam);
		void ResetCapturingTeam();
		void OnRep_OwningTeamId();
		void OnRep_ObjectiveId();
		void OnRep_LockedTeams();
		void OnRep_CapturingTeamId();
		void OnRep_bIsBeingCounterAttack();
		void OnRep_bActive();
		void OnOwningTeamChanged(unsigned char PreviousOwner, unsigned char NewOwner);
		void OnObjectiveLockedTeamsChangedDelegate__DelegateSignature(class AObjectiveBase* Objective, unsigned char NewLockedTeamsBitMask);
		void OnObjectiveIsBeingCounterattackedDelegate__DelegateSignature(bool bNewCounterAttackState, class AObjectiveBase* Objective);
		void OnObjectiveInitialized();
		void OnObjectiveChangeOwnerDelegate__DelegateSignature(class AObjectiveBase* Objective, unsigned char NewOwners);
		void OnObjectiveActiveDelegate__DelegateSignature(bool bNewActiveState, class AObjectiveBase* Objective);
		void OnCapturingTeamChanged(unsigned char NewCapturingTeam);
		bool IsOwningTeamValid();
		bool IsOwnedAndSafe();
		bool IsObjectiveActiveInRound();
		bool IsObjectiveActive();
		bool IsObjective();
		bool IsNeutralObjective();
		bool IsLockedForTeam(unsigned char CheckTeamId);
		bool IsLockedForAnyTeam();
		bool IsCapturingTeamValid();
		bool IsActiveObjectiveForSoldier(class AINSSoldier* Soldier);
		void InitializeObjective(unsigned char ID);
		class UCoverComponent* GetRandomBotCaptureLocation();
		class FText GetObjectiveLetter();
		class FText GetDescriptionForActiveObjective(class AINSSoldier* Soldier);
		float GetCaptureProgress();
		TArray<class UCoverComponent*> GetAllBotCaptureLocations();
		bool GetActive();
		void ClearLockedTeams();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveCapturable
	 * Size -> 0x00B0 (FullSize[0x0468] - InheritedSize[0x03B8])
	 */
	class AObjectiveCapturable : public AObjectiveBase
	{
	public:
		class ACaptureZone*                                        CaptureZone;                                             // 0x03B8(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CaptureZones[0x50];                                      // 0x03C0(0x0050) UNKNOWN PROPERTY: SetProperty
		ECaptureState                                              CaptureState;                                            // 0x0410(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_09L6[0x3];                                   // 0x0411(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CaptureProgress;                                         // 0x0414(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxCaptureProgress;                                      // 0x0418(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastAwardProgress;                                       // 0x041C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumCapturers;                                            // 0x0420(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumDefenders;                                            // 0x0424(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TeamWithMostPlayers;                                     // 0x0428(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FirstCapturingTeam;                                      // 0x0429(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FirstBlockingTeam;                                       // 0x042A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              BlockingObjectiveId;                                     // 0x042B(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AObjectiveBase>                       BlockingObjective;                                       // 0x042C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HAZT[0x8];                                   // 0x0434(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bStaleMated;                                             // 0x043C(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCapturersHaveRadio;                                     // 0x043D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefendersHaveRadio;                                     // 0x043E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MinPlayersToCapture;                                     // 0x043F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequireAllPlayersToCapture;                             // 0x0440(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FPO6[0x7];                                   // 0x0441(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnCapturedDelegate;                                      // 0x0448(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveCaptureStateChange;                           // 0x0458(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		bool TeamCanCapture(unsigned char TeamId);
		void StartCapture(unsigned char NewCapturingTeamId);
		void OnRep_CaptureState();
		void OnRep_BlockingObjectiveId();
		void OnBeginObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		bool IsSoldierTouchingZone(class AINSSoldier* Soldier, class ACaptureZone* IgnoreZone);
		bool IsPointOnObjective(const struct FVector& Point);
		bool IsPlayerRequirementMet();
		void GetPlayerStatesInCaptureAreaOwningTeam(TArray<class AINSPlayerState*>* OutPlayers);
		void GetPlayerStatesInCaptureAreaCapturingTeam(TArray<class AINSPlayerState*>* OutPlayers);
		void GetPlayerStatesInCaptureArea(TArray<class AINSPlayerState*>* OutPlayers);
		void GetPlayersInCaptureAreaOwningTeam(TArray<class AINSSoldier*>* OutPlayers);
		void GetPlayersInCaptureAreaCapturingTeam(TArray<class AINSSoldier*>* OutPlayers);
		void GetPlayersInCaptureArea(TArray<class AINSSoldier*>* OutPlayers);
		void EndCapture();
		void BreakCapture(bool bTriggerEvents);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AmbushObjective
	 * Size -> 0x0008 (FullSize[0x0470] - InheritedSize[0x0468])
	 */
	class AAmbushObjective : public AObjectiveCapturable
	{
	public:
		bool                                                       bIsVIPInZone;                                            // 0x0468(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_15QI[0x7];                                   // 0x0469(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SequenceHelperBase
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class USequenceHelperBase : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SequenceHelperAmbush
	 * Size -> 0x00A0 (FullSize[0x00C8] - InheritedSize[0x0028])
	 */
	class USequenceHelperAmbush : public USequenceHelperBase
	{
	public:
		unsigned char                                              CapturePointSequence[0x28];                              // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ExtractionVehicle[0x28];                                 // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ExtractionSpline[0x28];                                  // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<struct FVector>                                     SurvivedSoldiersEscapingPlan;                            // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     VehicleEscapingGoal;                                     // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToReachTheCar;                                       // 0x00C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RQ4W[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GameModeScenarioData
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UGameModeScenarioData : public UObject
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AmbushScenarioData
	 * Size -> 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
	 */
	class UAmbushScenarioData : public UGameModeScenarioData
	{
	public:
		unsigned char                                              VIPDeathCameraPtr[0x28];                                 // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              VIPDeathSequence[0x28];                                  // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    NumOfSurvivedSoldiersToExtractWithVIP;                   // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MLB6[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AmmoContainer
	 * Size -> 0x0148 (FullSize[0x0170] - InheritedSize[0x0028])
	 */
	class UAmmoContainer : public UObject
	{
	public:
		TArray<class UClass*>                                      AcceptedAmmo;                                            // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Capacity;                                                // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxCarry;                                                // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefaultAmmo;                                             // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZJYY[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMesh*                                       Mesh1P;                                                  // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMesh*                                       Mesh3P;                                                  // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    MagazineSurfaceReaction;                                 // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         DroppedStaticMesh;                                       // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ShotEjectionClass;                                       // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ShotEjectionEffectSocket;                                // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAmmoContainerType                                         ContainerType;                                           // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KPV6[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              WeaponIndexMaterialOverride1P[0x50];                     // 0x0080(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              WeaponIndexMaterialOverride3P[0x50];                     // 0x00D0(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              WeaponIndexMaterialOverrideDropped[0x50];                // 0x0120(0x0050) UNKNOWN PROPERTY: MapProperty

	public:
		bool UsesSubContainers();
		bool UsesMagazineReloads();
		bool IsValidContainer();
		bool IsAmmoSupported(class UClass* AmmoType);
		float GetFullWeight();
		int32_t GetCapacityOfSubContainer(int32_t ContainerIndex);
		TArray<int32_t> GetCapacitiesOfSubContainers();
		int32_t GetAmountOfSubContainers();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AmmoContainerMagazine
	 * Size -> 0x0008 (FullSize[0x0178] - InheritedSize[0x0170])
	 */
	class UAmmoContainerMagazine : public UAmmoContainer
	{
	public:
		float                                                      Weight;                                                  // 0x0170(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTranslucentMagazine;                                    // 0x0174(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z9HK[0x3];                                   // 0x0175(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AmmoContainerWithSubContainers
	 * Size -> 0x0010 (FullSize[0x0180] - InheritedSize[0x0170])
	 */
	class UAmmoContainerWithSubContainers : public UAmmoContainer
	{
	public:
		TArray<struct FAmmoSubContainer>                           SubContainers;                                           // 0x0170(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AmmoType
	 * Size -> 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
	 */
	class UAmmoType : public UObject
	{
	public:
		float                                                      RoundWeight;                                             // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoundVolume;                                             // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageTypeClass;                                         // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PrintName;                                               // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bIsModifiedAmmo;                                         // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BCYI[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                AmmoModifierPrintName;                                   // 0x0058(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UClass*                                              BrassEjectionClass;                                      // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AmmoTypeBallistic
	 * Size -> 0x0250 (FullSize[0x02C8] - InheritedSize[0x0078])
	 */
	class UAmmoTypeBallistic : public UAmmoType
	{
	public:
		struct FRuntimeFloatCurve                                  DamageCurve;                                             // 0x0078(0x0088) Edit, NativeAccessSpecifierPublic
		TMap<class FName, struct FBoneDamageMod>                   BoneDamageModifiers;                                     // 0x0100(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    SurfaceReaction;                                         // 0x0150(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  PenetrationPowerCurve;                                   // 0x0158(0x0088) Edit, NativeAccessSpecifierPublic
		float                                                      PenetrationPowerModifier;                                // 0x01E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionIncrement;                                    // 0x01E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionRadius;                                       // 0x01E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PelletCount;                                             // 0x01EC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9VFP[0x3];                                   // 0x01ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpreadModifier;                                          // 0x01F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8C7D[0x4];                                   // 0x01F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  VelocityDecelerationCurve;                               // 0x01F8(0x0088) Edit, NativeAccessSpecifierPublic
		float                                                      BulletVelocityDeceleration;                              // 0x0280(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDecelerationVelocitySq;                               // 0x0284(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDecelerationVelocitySq;                               // 0x0288(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Gravity;                                                 // 0x028C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxProjectileDistance;                                   // 0x0290(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MaxSurfacePenetrations;                                  // 0x0294(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5RNJ[0x3];                                   // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBulletPenetrationSettings*                          BulletPenetrationOverride;                               // 0x0298(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RagdollImpulseModifier;                                  // 0x02A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeathRagdollImpulse;                                     // 0x02A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WhizzDistanceSq;                                         // 0x02A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WhizzSupersonicDistanceSq;                               // 0x02AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     TracerParticle;                                          // 0x02B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TracerFrequency;                                         // 0x02B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LowAmmoTracerThreshold;                                  // 0x02BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     PenetrationParticle;                                     // 0x02C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnalyticsSubsystem
	 * Size -> 0x0140 (FullSize[0x0170] - InheritedSize[0x0030])
	 */
	class UAnalyticsSubsystem : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_IKGJ[0x30];                                  // 0x0030(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, int32_t>                               BackendMapMapping;                                       // 0x0060(0x0050) Config, NativeAccessSpecifierPrivate
		TMap<class FString, int32_t>                               BackendGamemodeMapping;                                  // 0x00B0(0x0050) Config, NativeAccessSpecifierPrivate
		TMap<class FString, int32_t>                               BackendTutorialMapping;                                  // 0x0100(0x0050) Config, NativeAccessSpecifierPrivate
		float                                                      MatchPereodicDelay;                                      // 0x0150(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RTMT[0x1C];                                  // 0x0154(0x001C) MISSED OFFSET (PADDING)

	public:
		void RecordOutboundLinkClicked(const class FString& InUrl, const class FString& InContext);
		void RecordAnnouncementPopupDismissed(bool bClickedLink, float TimeOnScreen);
		void OnPlayerClassChanged(class UPlayerClass* PlayerClass);
		void OnOwnedItemsLoadingComplete();
		void OnMatchEnd(unsigned char WinningFaction, class UClass* GameMode);
		void OnBackendRewardsReceived(int32_t RoundNumber, const struct FGameStatsRoundReward& Rewards);
		void LogTelemetryEvent(ETelemetryEvent EventType);
		void LogTelemetryCustomEvent(ETelemetryEvent EventType, const class FString& Content);
		void ClearQueriedEvents();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimationStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UAnimationStatics : public UBlueprintFunctionLibrary
	{
	public:
		float STATIC_GetWeaponReadyTimeFromSequence(class UAnimSequenceBase* Sequence);
		float STATIC_GetWeaponReadyTimeFromMontageSection(class UAnimMontage* Montage, int32_t SectionIndex);
		class UAnimSequence* STATIC_GetRandomSequenceStrengthPair(struct FMultiAnimationStrengthPair* MultiAnimPair, int32_t* OutChosenIndex);
		class UAnimSequence* STATIC_GetRandomSequence(struct FAnimSequenceRandom* AnimSequenceRandom, int32_t* OutChosenIndex, bool bNoRepeats);
		int32_t STATIC_GetLODLevelForMesh(class USkeletalMeshComponent* SkelMeshComp);
		void STATIC_GetAnimBoneTransformFromSkeletalMesh(class UAnimSequence* Sequence, class USkeletalMesh* SkelMesh, const class FName& BoneName, float Time, struct FTransform* OutTransform, bool ReturnInParentBoneSpace);
		void STATIC_GetAnimBoneTransform(class UAnimSequence* Sequence, class USkeletalMeshComponent* SkelMeshComp, const class FName& BoneName, float Time, struct FTransform* OutTransform, bool ReturnInParentBoneSpace);
		class UAnimNotify* STATIC_FindAnimNotifyTimeMontageByName(class UAnimMontage* Montage, const class FName& NotifyName, bool bScaleByPlayRate, float* OutTime, int32_t SectionIndex);
		class UAnimNotify* STATIC_FindAnimNotifyTimeMontageByClass(class UAnimMontage* Montage, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime, int32_t SectionIndex);
		class UAnimNotify* STATIC_FindAnimNotifyTimeMontage(class UAnimMontage* Montage, const class FName& NotifyName, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime, int32_t SectionIndex);
		class UAnimNotify* STATIC_FindAnimNotifyTimeByName(class UAnimSequenceBase* Sequence, const class FName& NotifyName, bool bScaleByPlayRate, float* OutTime);
		class UAnimNotify* STATIC_FindAnimNotifyTimeByClass(class UAnimSequenceBase* Sequence, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime);
		class UAnimNotify* STATIC_FindAnimNotifyTime(class UAnimSequenceBase* Sequence, const class FName& NotifyName, class UClass* NotifyClass, bool bScaleByPlayRate, float* OutTime);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotifyWeapon
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotifyWeapon : public UAnimNotify
	{
	public:
		class AItemWeapon* GetOuterWeapon(class USkeletalMeshComponent* ContextMeshComp);
		class AINSSoldier* GetOuterSoldier(class USkeletalMeshComponent* ContextMeshComp);
		class AItemFirearm* GetOuterFirearm(class USkeletalMeshComponent* ContextMeshComp);
		class AItemEquipable* GetOuterEquipable(class USkeletalMeshComponent* ContextMeshComp);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_BipodSurfaceReaction
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UAnimNotify_BipodSurfaceReaction : public UAnimNotifyWeapon
	{
	public:
		float                                                      SurfaceTraceLength;                                      // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OZTY[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USurfaceReaction*                                    SurfaceReaction;                                         // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   BloodMaterial;                                           // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   WaterMaterial;                                           // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_BoltCycled
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_BoltCycled : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_ChamberRound
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ChamberRound : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_ChangeBipodLegsState
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ChangeBipodLegsState : public UAnimNotifyWeapon
	{
	public:
		EBipodState                                                DesiredState;                                            // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQR4[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_ChangeBipodState
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ChangeBipodState : public UAnimNotifyWeapon
	{
	public:
		EBipodState                                                DesiredState;                                            // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NW3M[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_CheckPendingAmmo
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_CheckPendingAmmo : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_DisallowCancel
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_DisallowCancel : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_FireProjectile
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_FireProjectile : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_Footstep
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_Footstep : public UAnimNotify
	{
	public:
		EFootstepFoot                                              Foot;                                                    // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFootstepEffectType                                        FootstepType;                                            // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Z7K[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_GrenadePullPin
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_GrenadePullPin : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_GrenadeRelease
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_GrenadeRelease : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_GrenadeSpoonRelease
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_GrenadeSpoonRelease : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_KickDoor
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_KickDoor : public UAnimNotify
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_LastRoundEject
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_LastRoundEject : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_MagIn
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_MagIn : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_MagOut
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_MagOut : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_PlayLoopingSound
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UAnimNotify_PlayLoopingSound : public UAnimNotifyWeapon
	{
	public:
		class FName                                                LoopSlot;                                                // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Event_FP;                                                // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Event_TP;                                                // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDuration;                                             // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6P45[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_RoundIn
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_RoundIn : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_ShowAmmoInfo
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_ShowAmmoInfo : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_SpawnBrass
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_SpawnBrass : public UAnimNotifyWeapon
	{
	public:
		bool                                                       bShowBrassOnNotifyMesh;                                  // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G9TF[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_SpawnEjectedMag
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UAnimNotify_SpawnEjectedMag : public UAnimNotifyWeapon
	{
	public:
		bool                                                       bIgnoreSpeedReloadState;                                 // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UA31[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             SpeedReloadEjectVelocity;                                // 0x003C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SpeedReloadEjectRelativeLocation;                        // 0x0048(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpeedReloadHideMagazineMesh;                            // 0x0054(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WSYH[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_StopLoopingSound
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UAnimNotify_StopLoopingSound : public UAnimNotifyWeapon
	{
	public:
		class FName                                                LoopSlot;                                                // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_StoreAmmo
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_StoreAmmo : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_WeaponReady
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UAnimNotify_WeaponReady : public UAnimNotifyWeapon
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AnimNotify_WeaponSound
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UAnimNotify_WeaponSound : public UAnimNotifyWeapon
	{
	public:
		class UAkAudioEvent*                                       Event_FP;                                                // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Event_TP;                                                // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ArtillerySite
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class AArtillerySite : public AActor
	{
	public:
		unsigned char                                              UnknownData_OT6V[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              TeamId;                                                  // 0x0228(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3VVY[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      ArtilleryWhitelist;                                      // 0x0230(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool IsFireSupportWhitelisted(class UClass* FireSupportClass);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.AudioBlueprintLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UAudioBlueprintLibrary : public UObject
	{
	public:
		void STATIC_PlayUISound(EUISound Sound);
		void STATIC_PlayUILoadoutSound(EUILoadoutSound Sound);
		void STATIC_PlayUIHUDSound(EUIHUDSound Sound);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MainMenuPanelWidget
	 * Size -> 0x0058 (FullSize[0x0288] - InheritedSize[0x0230])
	 */
	class UMainMenuPanelWidget : public UUserWidget
	{
	public:
		class UAccountNickname*                                    AccountNickname;                                         // 0x0230(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FText>                                        BreadcrumbText;                                          // 0x0238(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideMenuBackgroundOverlay;                              // 0x0248(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B9IS[0x7];                                   // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnLicenseDialogToggleDelegate;                           // 0x0250(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected
		class UClass*                                              LicenseDialogWidgetClass;                                // 0x0260(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UDialogLicenseWidget*                                LicenseDialogWidget;                                     // 0x0268(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZQ19[0x8];                                   // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EUserPrivilegeResult                                       CurrentPrivilegeResult;                                  // 0x0278(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IUU7[0xF];                                   // 0x0279(0x000F) MISSED OFFSET (PADDING)

	public:
		void UpdateLicenseAgreementDialogBP();
		void TryEnterMiltiplayerGame();
		void SetTutorialPromptResult(bool bOpeningTutorial);
		void SetActiveMapPageSelect(int32_t InValue);
		bool OnRequestNavigateBack();
		void OnPanelOpened();
		void OnPanelClosed();
		void OnLicenseDialogToggleDelegate__DelegateSignature(bool bHasOpened);
		bool HasUserConfirmedLicense();
		class UTutorialList* GetLessonList();
		void DisplayRestrictionDialog(EUserPrivilegeResult PrivilageRestriction);
		bool CreateLicenseAgreementDialog();
		class AINSWorldSettings* BPGetINSWorldSetting();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MainMenuPanelWidgetWithStore
	 * Size -> 0x0000 (FullSize[0x0288] - InheritedSize[0x0288])
	 */
	class UMainMenuPanelWidgetWithStore : public UMainMenuPanelWidget
	{
	public:
		void UpdateStoreNotification(bool bInHasNewItems, bool bInHasSales);
		void OnUnviewedStoreItemViewed();
		void OnStoreItemsFlagsUpdated(bool bInHasNewItems, bool bInHasSales);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BaseOnlineStore
	 * Size -> 0x0078 (FullSize[0x0300] - InheritedSize[0x0288])
	 */
	class UBaseOnlineStore : public UMainMenuPanelWidgetWithStore
	{
	public:
		bool                                                       bHasSales;                                               // 0x0288(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YXET[0x7];                                   // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStoreItemsList*                                     PossibleStoreItems;                                      // 0x0290(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bDebugShowPopupWithoutClaim;                             // 0x0298(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UDJL[0x7];                                   // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, class UStoreItem*>                       StoreItemList;                                           // 0x02A0(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WQO0[0x10];                                  // 0x02F0(0x0010) MISSED OFFSET (PADDING)

	public:
		void TryPurchaseItem(class UStoreItem* PurchasedItem);
		void SetItemIsShown(class UStoreItem* PurchasedItem);
		void SetAllItemsIsShown();
		void OnStoreItemListUpdated();
		void OnPurchaseStoreItemSuccess(TArray<class FName> PurchasedItemIds);
		void OnHasSalesChanged();
		void InitStoreItems();
		void HasNewStoreItemsByOperationName(const class FName& InOperationName, bool* bOutHasNew);
		void HasNewStoreItemsByCategory(EStoreItemCategory InCategory, bool* bOutHasNew);
		void HasNewStoreItems(bool* bOutHasNew);
		void GetStoreItemsByOperationName(TArray<class UStoreItem*>* OutResults, const class FName& InOperationName, bool bInShowOwned);
		void GetStoreItemsByDiscount(TArray<class UStoreItem*>* OutResults, bool bInShowOwned);
		void GetStoreItemsByCategory(TArray<class UStoreItem*>* OutResults, EStoreItemCategory InCategory, bool bInShowOwned);
		void GetStoreItems(TArray<class UStoreItem*>* OutResults, bool bInShowOwned);
		void Debug_ResetLocalProfileLists();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BloodSplatterData
	 * Size -> 0x0130 (FullSize[0x0160] - InheritedSize[0x0030])
	 */
	class UBloodSplatterData : public UDataAsset
	{
	public:
		struct FBloodSplatter                                      BloodPoolMaterials;                                      // 0x0030(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FBloodSplatter                                      WallBloodSplatterMaterials;                              // 0x0060(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FBloodSplatter                                      BloodLeakMaterials;                                      // 0x0090(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FBloodSplatter                                      GroundBloodSplatterMaterials;                            // 0x00C0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FBloodSplatter                                      HeadshotBloodSplatterMaterials;                          // 0x00F0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FBloodSplatter                                      VaporizationBloodSplatterMaterials;                      // 0x0120(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEventKillBloodSplatter;                             // 0x0150(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeakingProbability;                                      // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FG9V[0x4];                                   // 0x015C(0x0004) MISSED OFFSET (PADDING)

	public:
		class UMaterialInterface* GetMaterialFromBloodSplatter(const struct FBloodSplatter& BloodSplatter, struct FVector* MinSize, struct FVector* MaxSize);
		void DetermineSplatterContext(struct FBloodSplatterContext* SplatterContext, class UObject* WorldContextObject, const struct FVector& HitPosition, const struct FVector& HitDirection, bool bHeadshot, bool bLethal, class AActor* IgnoredActor);
		void CreateBloodSplatter(class UObject* WorldContextObject, const struct FVector& DecalPosition, const struct FRotator& DecalRotation, class USceneComponent* AttachComponent, EPhysicalSurface PhysicalSurface, EBloodSplatterType BloodSplatterType, bool bKillShot);
		class UDecalComponent* CreateBloodPool(class UObject* WorldContextObject, const struct FVector& Position, class AActor* IgnoredActor);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BlueprintUsableActor
	 * Size -> 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
	 */
	class ABlueprintUsableActor : public AActor
	{
	public:
		unsigned char                                              UnknownData_ZFO6[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EUsablePriority                                            UsePriority;                                             // 0x0228(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EUseHoldBehavior                                           UseHoldBehavior;                                         // 0x0229(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EOK2[0x2];                                   // 0x022A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UseTime;                                                 // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasTapAndHoldBehavior;                                  // 0x0230(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanProneWhileUse;                                       // 0x0231(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasUseYawLimit;                                         // 0x0232(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q39Y[0x1];                                   // 0x0233(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      YawLimitWhileUse;                                        // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UseMessage;                                              // 0x0238(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UTexture2D*                                          UseImage;                                                // 0x0250(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDynamicUseImage;                                     // 0x0258(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EUseItem                                                   UseItem;                                                 // 0x0259(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasUseTimeout;                                          // 0x025A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSubUseAction;                                        // 0x025B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SubUseInputAction;                                       // 0x025C(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z1YV[0x4];                                   // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        SubUseInputActions;                                      // 0x0268(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                SubUseMessage;                                           // 0x0278(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UTexture2D*                                          SubUseImage;                                             // 0x0290(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDynamicSubUseImage;                                  // 0x0298(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSubUseTimeout;                                       // 0x0299(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VCT2[0x6];                                   // 0x029A(0x0006) MISSED OFFSET (PADDING)

	public:
		EUseResponse EventTryUse(class AINSSoldier* Pawn, const struct FHitResult& HitResult);
		EUseResponse EventOnUseKeyReleased(class AINSSoldier* Pawn, float ElapsedTime);
		void EventOnUseComplete(class AINSSoldier* Pawn);
		void EventOnUseCancelled(class AINSSoldier* Pawn);
		float EventGetUseTimeoutFraction(class AINSSoldier* Pawn);
		class UTexture2D* EventGetUseImage(class AINSPlayerController* Controller, bool bInProgress, const struct FHitResult& UseHitResult, class FText* OutAdditonalText);
		float EventGetSubUseTimeoutFraction(class AINSSoldier* Pawn);
		class UTexture2D* EventGetSubUseImage(class AINSPlayerController* Controller, bool bInProgress, const struct FHitResult& UseHitResult, class FText* OutAdditonalText);
		struct FVector EventGetDynamicHintLocation(class AINSSoldier* Pawn, const struct FHitResult& Hit);
		bool EventCanUse(class AINSSoldier* User);
		bool EventCanContinueUse(class AINSSoldier* User);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	class UBotBehavior : public UObject
	{
	public:
		class FName                                                BehaviorName;                                            // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EBotBehaviorPriority                                       BehaviorPriority;                                        // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_69Z0[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)

	public:
		float GetTimeSinceBehaviorStarted();
		EBotBehaviorPriority GetPriority();
		class FName GetBehaviorName();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotHandler
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UBotHandler : public UObject
	{
	public:
		class AINSAISoldierController* GetController();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehaviorHandler
	 * Size -> 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
	 */
	class UBotBehaviorHandler : public UBotHandler
	{
	public:
		TArray<class UClass*>                                      ValidBehaviors;                                          // 0x0028(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UBotBehavior*>                                Behaviors;                                               // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBotBehavior*                                        ActiveBehavior;                                          // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QM7I[0x10];                                  // 0x0050(0x0010) MISSED OFFSET (PADDING)

	public:
		TArray<class UBotBehavior*> GetBehaviors();
		class UBotBehavior* GetActiveBehavior();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotFirearmBehavior
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UBotFirearmBehavior : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_ZTEK[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_ADSWithPrimary
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UBotBehavior_ADSWithPrimary : public UBotFirearmBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_ADSWithSecondary
	 * Size -> 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
	 */
	class UBotBehavior_ADSWithSecondary : public UBotFirearmBehavior
	{
	public:
		unsigned char                                              UnknownData_L5MQ[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Ambush
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Ambush : public UBotBehavior
	{
	public:
		class AObjectiveBase*                                      AmbushObjective;                                         // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6H5U[0x10];                                  // 0x0040(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_AttackMelee
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UBotBehavior_AttackMelee : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_TNBW[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_AttackRanged
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UBotBehavior_AttackRanged : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_4D2R[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBlinkConfig
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class UBotBlinkConfig : public UDataAsset
	{
	public:
		class UAkAudioEvent*                                       AkEventBlink;                                            // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CooldownTime;                                            // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlinkDistance;                                           // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlinkDistanceThreshold;                                  // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XYC6[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     VanishParticle;                                          // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     AppearParticle;                                          // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           PlacementQuery;                                          // 0x0058(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Blink
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Blink : public UBotBehavior
	{
	public:
		class UBotBlinkConfig*                                     BlinkConfig;                                             // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5975[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Blueprint
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Blueprint : public UBotBehavior
	{
	public:
		EBotBehaviorReturnResult BlueprintUpdate(class AINSAISoldierController* Me);
		void BlueprintReset();
		EBotBehaviorReturnResult BlueprintOnStart(class AINSAISoldierController* Me);
		void BlueprintOnOtherSoldierKilled(class AINSSoldier* Soldier, float DistanceToVictim, float Damage, class AController* Killer, class AActor* DamageCauser);
		void BlueprintOnMoveCompleted(class AINSAISoldierController* Me, const struct FAIRequestID& RequestID, bool bSuccess, bool bInterrupted);
		void BlueprintOnHeardEnemySound(class AINSAISoldierController* Me, class AActor* Emitter, const struct FVector& Position, bool bHasLOS);
		void BlueprintOnFinish(class AINSAISoldierController* Me);
		bool BlueprintCanEnter(class AINSAISoldierController* Me);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_ClearObjective
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UBotBehavior_ClearObjective : public UBotBehavior
	{
	public:
		class UBotInvestigation*                                   Investigation;                                           // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TY74[0x18];                                  // 0x0040(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_DestroyObjective
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UBotBehavior_DestroyObjective : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_SJFL[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Example_ShootAtTarget
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Example_ShootAtTarget : public UBotBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Example_Wander
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Example_Wander : public UBotBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_FireRocket
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UBotBehavior_FireRocket : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_QK13[0x18];                                  // 0x0038(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_FleeGrenade
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UBotBehavior_FleeGrenade : public UBotBehavior
	{
	public:
		class AProjectileGrenade*                                  GrenadeToFlee;                                           // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PTSP[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_FlushTarget
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UBotBehavior_FlushTarget : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_OII0[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_FollowSquadLeader
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UBotBehavior_FollowSquadLeader : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_21PO[0x20];                                  // 0x0038(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_HipFireWithPrimary
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	class UBotBehavior_HipFireWithPrimary : public UBotFirearmBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Investigate
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Investigate : public UBotBehavior
	{
	public:
		class UBotInvestigation*                                   Investigation;                                           // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_442T[0x18];                                  // 0x0040(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_MoveToObjective
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UBotBehavior_MoveToObjective : public UBotBehavior
	{
	public:
		class AObjectiveBase*                                      DesiredObjective;                                        // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UVehicleSeatComponent*                               DesiredVehicleSeat;                                      // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_X2KQ[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_MoveToSeat
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBotBehavior_MoveToSeat : public UBotBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_OutpostPrepare
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBotBehavior_OutpostPrepare : public UBotBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Pursue
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Pursue : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_Q7UW[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_ReloadBackupWeapon
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBotBehavior_ReloadBackupWeapon : public UBotBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_ReloadEquippedWeapon
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBotBehavior_ReloadEquippedWeapon : public UBotBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_RequestFireSupport
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBotBehavior_RequestFireSupport : public UBotBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Retreat
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Retreat : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_RIBD[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_SeekAndDestroy
	 * Size -> 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
	 */
	class UBotBehavior_SeekAndDestroy : public UBotBehavior
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotSuicideBomberConfig
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UBotSuicideBomberConfig : public UDataAsset
	{
	public:
		class UClass*                                              ExplosionProtectile;                                     // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventPreDetonate;                                      // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DetonationTime;                                          // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DetonationRadius;                                        // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_SuicideBomb
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UBotBehavior_SuicideBomb : public UBotBehavior
	{
	public:
		class AProjectileBase*                                     SuicideBombProjectile;                                   // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBotSuicideBomberConfig*                             BomberConfig;                                            // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7M80[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_SuppressTarget
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UBotBehavior_SuppressTarget : public UBotBehavior
	{
	public:
		class UBotKnownTargetMemory*                               SuppressionTarget;                                       // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_837C[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_TacticalMoveToObjective
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UBotBehavior_TacticalMoveToObjective : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_KKOZ[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_ThrowBackGrenade
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UBotBehavior_ThrowBackGrenade : public UBotBehavior
	{
	public:
		class AProjectileGrenade*                                  TrackedGrenade;                                          // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D86E[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_ThrowGrenade
	 * Size -> 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
	 */
	class UBotBehavior_ThrowGrenade : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_4P7R[0x18];                                  // 0x0038(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_ThrowGrenadeAtWindows
	 * Size -> 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
	 */
	class UBotBehavior_ThrowGrenadeAtWindows : public UBotBehavior
	{
	public:
		struct FBotGrenadeTarget                                   WindowThrowTarget;                                       // 0x0038(0x005C) NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_67O6[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBotGrenadeCheckResult                              ThrowResult;                                             // 0x0098(0x0020) NativeAccessSpecifierPrivate
		TWeakObjectPtr<class AItemGrenade>                         GrenadeToThrow;                                          // 0x00B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RQ3P[0x18];                                  // 0x00C0(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_ThrowSmokeGrenade
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UBotBehavior_ThrowSmokeGrenade : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_BE61[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_UseSmartActor
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	class UBotBehavior_UseSmartActor : public UBotBehavior
	{
	public:
		class ASmartActor*                                         SmartActor;                                              // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Vehicle
	 * Size -> 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Vehicle : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_3HBC[0x20];                                  // 0x0038(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AObjectiveBase>                       TargetObjective;                                         // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotBehavior_Wander
	 * Size -> 0x0040 (FullSize[0x0078] - InheritedSize[0x0038])
	 */
	class UBotBehavior_Wander : public UBotBehavior
	{
	public:
		unsigned char                                              UnknownData_ZC0N[0x18];                                  // 0x0038(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             ActiveWanderArea;                                        // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UObject*>                                     WanderAreas;                                             // 0x0058(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UObject*>                                     VisitedWanderAreas;                                      // 0x0068(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotSkillConfig
	 * Size -> 0x0228 (FullSize[0x0258] - InheritedSize[0x0030])
	 */
	class UBotSkillConfig : public UDataAsset
	{
	public:
		float                                                      HearAwareDistanceRadial;                                 // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearAwareDistanceGunshot;                                // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearAwareDistanceSprintFootstep;                         // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearAwareDistanceFootsteps;                              // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearAwareDistanceBreach;                                 // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearAwareDistanceDoor;                                   // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearAwareDistanceRigExplosive;                           // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearDistanceFootstepsSprinting;                          // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearDistanceFootstepsRunning;                            // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearAbilityZOffsetMin;                                   // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearAbilityZOffsetMax;                                   // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightRangeAlert;                                         // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightRangeIdle;                                          // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightRangeWithinSmokeGrenade;                            // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightRangeWithinSmokeGrenadeEye;                         // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightRangeSmokeEyeFrac;                                  // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinLightIntensityToSeeTarget;                            // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinLightIntensityToSeeTargetAtNight;                     // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightIntensityForFullyVisibleTarget;                     // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToNoticeVisibilityMultiplier;                        // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinLightIntensityToAffectNightVision;                    // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinNightVisionSightStrength;                             // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnSpeedMaxAngleThreshold;                              // 0x0088(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnSpeedMinAngleThreshold;                              // 0x008C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnSpeedMaxAngle;                                       // 0x0090(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnSpeedMinAngle;                                       // 0x0094(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccuracyMultiplier;                                      // 0x0098(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionAccuracyMultiplier;                           // 0x009C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackDelayClose;                                        // 0x00A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackDelayDistant;                                      // 0x00A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackDelayMelee;                                        // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceRange;                                           // 0x00AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CloseRange;                                              // 0x00B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MiddleRange;                                             // 0x00B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChanceAtDistanceStanding;                                // 0x00B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChanceAtCloseRangeStanding;                              // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChanceAtDistanceCrouched;                                // 0x00C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChanceAtCloseRangeCrouched;                              // 0x00C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChanceAtDistanceProne;                                   // 0x00C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChanceAtCloseRangeProne;                                 // 0x00CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChanceSprintMultiplier;                                  // 0x00D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChanceMovingMultiplier;                                  // 0x00D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EFirearmCategory, struct FFirearmAIConfig>            WeaponCategoryConfigs;                                   // 0x00D8(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FFirearmAIConfig                                    DefaultCategoryConfig;                                   // 0x0128(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CTY0[0x4];                                   // 0x0164(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ValidBehaviors[0x50];                                    // 0x0168(0x0050) UNKNOWN PROPERTY: SetProperty
		float                                                      DoorBreachAwareDistance;                                 // 0x01B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FragGrenadeMinDetonateTime;                              // 0x01BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyGrenadeUnreachable;                                 // 0x01C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanGrenadeWithLOS;                                      // 0x01C1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2TN5[0x2];                                   // 0x01C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GrenadeMinimumDistance;                                  // 0x01C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GrenadeInaccuracyMaxDistance;                            // 0x01C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SquadGrenadeCooldown;                                    // 0x01CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GrenadeInaccuracyMin;                                    // 0x01D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GrenadeInaccuracyMax;                                    // 0x01D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RocketMinimumDistance;                                   // 0x01E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RocketSquadCooldown;                                     // 0x01E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RocketMinimumClusterSize;                                // 0x01E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZeroTimeMultiplierEasy;                                  // 0x01EC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZeroTimeMultiplierHard;                                  // 0x01F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BloatBoxMultiplierEasy;                                  // 0x01F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BloatBoxMultiplierHard;                                  // 0x01F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BloatBoxMultiplierDistance;                              // 0x01FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BloatBoxMultiplierMaxDistance;                           // 0x0200(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BloatBoxMultiplierMinDistance;                           // 0x0204(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBotIgnoresDamage;                                       // 0x0208(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBotHasInfiniteAmmo;                                     // 0x0209(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBotUsesVehicles;                                        // 0x020A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U5CH[0x1];                                   // 0x020B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MemoryMaxAge;                                            // 0x020C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoverSuppressionToCowerCombat;                           // 0x0210(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoverSuppressionToCower;                                 // 0x0214(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoverSuppressionToRecover;                               // 0x0218(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoverCowerMinTime;                                       // 0x021C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbushBonusDistance;                                     // 0x0220(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbushReactionTimeMultiplier;                            // 0x0224(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbushAccuracyMultiplier;                                // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbushTurnSpeedMultiplier;                               // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoraleRestoreTime;                                       // 0x0230(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoraleLostOnHeadShot;                                    // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoraleLostOnDeath;                                       // 0x0238(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoraleLostOnGruesomeDeath;                               // 0x023C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoraleToRetreat;                                         // 0x0240(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoraleToRecover;                                         // 0x0244(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRetreatIsDeffered;                                      // 0x0248(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQ44[0x3];                                   // 0x0249(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefferedRetreatDelayTime;                                // 0x024C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefferedRetreatShoutFrequencyMin;                        // 0x0250(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefferedRetreatShoutFrequencyMax;                        // 0x0254(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotCombatHandler
	 * Size -> 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
	 */
	class UBotCombatHandler : public UBotHandler
	{
	public:
		unsigned char                                              UnknownData_TG8U[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBotKnownTargetMemory*                               CurrentTarget_Visible;                                   // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBotKnownTargetMemory*                               CurrentTarget_Hidden;                                    // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4F2T[0x18];                                  // 0x0040(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCoverComponent*                                     Cover;                                                   // 0x0058(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_22YL[0x18];                                  // 0x0060(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVehicleSeatComponent*                               TargetSeat;                                              // 0x0078(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UAW6[0x10];                                  // 0x0080(0x0010) MISSED OFFSET (PADDING)

	public:
		bool WantsToReload(bool bTakeIntoAccountReloadPossibility);
		bool SwitchWeapon(EItemSlot Slot);
		bool ShouldWearGasMask();
		bool ShouldSpeakReactions();
		void SetTargetSeat(class UVehicleSeatComponent* Seat);
		void SetSuppressing(bool bState);
		void SetSpeakReactions(bool bShouldSpeak);
		void SetLocationToTakeCoverFrom(const struct FVector& Location);
		void SetDesiredFiremode(EFirearmFiremode NewFiremode);
		void SetAttackState(bool bShouldFire);
		void SelectBestWeapon();
		bool Reload();
		bool IsWeaponEmpty(EItemSlot Slot);
		bool IsValidSeat(class UVehicleSeatComponent* Seat);
		bool IsThreatAimingTowardMe(class AINSSoldier* Threat);
		bool IsSwitchingWeapon();
		bool IsSuppressing();
		float GetTurnSpeed(const struct FRotator& OldRotaton, const struct FRotator& NewRotation);
		class UVehicleSeatComponent* GetTargetSeat();
		float GetMorale();
		struct FVector GetLocationToTakeCoverFrom();
		EMoraleAdjustmentReason GetLastMoraleDecreaseReason();
		float GetGrenadeThrowbackRadius();
		struct FFirearmAIConfig GetFirearmCategoryConfig(class AItemFirearm* Firearm);
		class UBotKnownTargetMemory* GetCurrentPriorityTarget(bool bVisibleOnly);
		class UCoverComponent* GetCover();
		float GetChanceToSpotTarget(class UBotKnownTargetMemory* Target);
		float GetAttackDelay();
		struct FVector2D GetAimOffsetForGrenade(const struct FVector& TargetLocation);
		struct FVector GetAimLocationOnTarget(class UBotKnownTargetMemory* MyCurrentTarget);
		void ClearPriorityTargets();
		void AddMoraleWithReason(float Amount, EMoraleAdjustmentReason Reason);
		void AddMorale(float Amount);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotInteractComponent
	 * Size -> 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
	 */
	class UBotInteractComponent : public UActorComponent
	{
	public:
		class FScriptDelegate                                      CanInteract;                                             // 0x00B0(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FScriptDelegate                                      ShouldFinist;                                            // 0x00C0(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUpdate;                                                // 0x00D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected
		class FScriptMulticastDelegate                             OnStart;                                                 // 0x00E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected
		class FScriptMulticastDelegate                             OnFinish;                                                // 0x00F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected
		float                                                      Timeout;                                                 // 0x0100(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EBotBehaviorPriority                                       BehaviorPriority;                                        // 0x0104(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_L6MF[0x3];                                   // 0x0105(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumDistance;                                         // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5KR4[0x4];                                   // 0x010C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSAISoldierController*                             InteractingBot;                                          // 0x0110(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YOG6[0x8];                                   // 0x0118(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetEnabled(bool bNewEnabled);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotKnownTargetMemory
	 * Size -> 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
	 */
	class UBotKnownTargetMemory : public UObject
	{
	public:
		TWeakObjectPtr<class APawn>                                TargetPawn;                                              // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BSS8[0x68];                                  // 0x0030(0x0068) MISSED OFFSET (PADDING)

	public:
		bool WasVisibleRecently();
		void SetThreatRanking(float NewThreatRanking);
		void MarkTargetAsDead();
		void MarkStartedEngaging();
		void MarkFinishedEngaging();
		void MarkBloatBoxUpdated(const struct FVector2D& NewBloatBox);
		void MakeAwareOfTargetAtLocation(const struct FVector& Location);
		void MakeAwareOfTarget();
		bool IsValidCombatTarget();
		bool IsUnreachable();
		bool IsTargetAlive();
		bool IsLookingAtMe();
		bool IsEngaging();
		bool IsBlindingMe();
		bool IsAwareOfTarget();
		bool HasLOS();
		bool HasBeenInMeleeFor(float Duration);
		float GetTotalTimeVisible();
		float GetTimeSinceStartedEngaging();
		float GetTimeSinceRegainedLoS();
		float GetTimeSinceLastSeen();
		float GetTimeSinceLastKnown();
		float GetTimeSinceLastBloatBoxUpdate();
		float GetTimeSinceAwareOfTarget();
		float GetThreatRanking();
		class APawn* GetTargetPawn();
		struct FVector2D GetPreviousBloatBox();
		struct FVector GetLastSeenPosition();
		struct FVector GetLastKnownVelocity();
		struct FVector GetLastKnownPosition();
		struct FVector2D GetCurrentBloatBox();
		bool EverHadLOS();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotMemoryHandler
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	class UBotMemoryHandler : public UBotHandler
	{
	public:
		TArray<class UBotKnownTargetMemory*>                       KnownTargets;                                            // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_T5D0[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	public:
		class UBotKnownTargetMemory* GetTargetMemoryForPawn(class APawn* Pawn);
		void GetKnownTargets(EBotKnownQuery QueryType, TArray<class UBotKnownTargetMemory*>* KnownTargetArray, bool bVisibleOnly, float MaxTimeSinceLastKnown, bool bIgnoreAwareness);
		int32_t GetKnownCount(EBotKnownQuery QueryType, bool bVisibleOnly, float MaxTimeSinceLastKnown);
		void AddOrUpdateVisiblePawn(class APawn* SeenPawn);
		void AddOrUpdateSound(class APawn* HeardPawn, const struct FVector& Location, float Distance, bool bHasLOS);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotMoodHandler
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	class UBotMoodHandler : public UBotHandler
	{
	public:
		float                                                      CombatIntensity;                                         // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EBotAIMood                                                 Mood;                                                    // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DEEB[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)

	public:
		EBotAIMood GetMood();
		float GetCombatIntensity();
		void AddCombatIntensity(float Amount);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotMovementHandler
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	class UBotMovementHandler : public UBotHandler
	{
	public:
		unsigned char                                              UnknownData_YRBM[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotObjectiveHandler
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	class UBotObjectiveHandler : public UBotHandler
	{
	public:
		unsigned char                                              UnknownData_LGYL[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)

	public:
		bool HasArrivedAtObjectiveEntrance();
		bool HasArrivedAtObjective();
		class AObjectiveBase* GetDesiredObjective();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BrassManager
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	class UBrassManager : public UObject
	{
	public:
		int32_t                                                    BrassMaximum;                                            // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_35QY[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AEjectedBrass*>                               TrackedBrass;                                            // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BreakableComponent
	 * Size -> 0x0160 (FullSize[0x0600] - InheritedSize[0x04A0])
	 */
	class UBreakableComponent : public UStaticMeshComponent
	{
	public:
		unsigned char                                              UnknownData_MTEK[0x8];                                   // 0x04A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnResetDelegate;                                         // 0x04A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UStaticMesh*                                         Mesh;                                                    // 0x04B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreakable;                                              // 0x04C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnBroken;                                            // 0x04C1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7ZAF[0x6];                                   // 0x04C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnBreak;                                                 // 0x04C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnComponentBrokenDelegate;                               // 0x04D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bClientsideOnly;                                         // 0x04E8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowBreakthrough;                                      // 0x04E9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFragile;                                              // 0x04EA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSeeThrough;                                             // 0x04EB(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlockPawns;                                             // 0x04EC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HBLB[0x3];                                   // 0x04ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Health;                                                  // 0x04F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZGH5[0x4];                                   // 0x04F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnHealthChangedDelegate;                                 // 0x04F8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bReplicateHealth;                                        // 0x0508(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDamageFilter;                                        // 0x0509(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6EWG[0x6];                                   // 0x050A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      DamageTypeFilter;                                        // 0x0510(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDamageFilterIsBlacklist;                                // 0x0520(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5GIN[0x3];                                   // 0x0521(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDamage;                                               // 0x0524(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideMeshOnBreak;                                        // 0x0528(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveDecalsOnBreak;                                    // 0x0529(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZKPC[0x6];                                   // 0x052A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         MeshBroken;                                              // 0x0530(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMaterialSwap>                               BreakMaterials;                                          // 0x0538(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     BreakParticle;                                           // 0x0548(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            BreakParticleComponent;                                  // 0x0550(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       BreakSound;                                              // 0x0558(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachBreakEffects;                                     // 0x0560(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0UKT[0x3];                                   // 0x0561(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EffectAttachSocket;                                      // 0x0564(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_13ZI[0x4];                                   // 0x056C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGib>                                        Gibs;                                                    // 0x0570(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GibLifetime;                                             // 0x0580(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreakableGibs;                                          // 0x0584(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_91PC[0x3];                                   // 0x0585(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GibHealth;                                               // 0x0588(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GibImpulseScale;                                         // 0x058C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGibPhysics;                                             // 0x0590(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8YSS[0x7];                                   // 0x0591(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     GibBreakParticle;                                        // 0x0598(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BounceSpeedMin;                                          // 0x05A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BounceSpeedMax;                                          // 0x05A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLocallyBroken;                                        // 0x05A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBrokenAuthority;                                        // 0x05A9(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CR49[0x6];                                   // 0x05AA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USurfaceReaction*                                    PhysicsPropSurfaceReaction;                              // 0x05B0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UQE9[0x38];                                  // 0x05B8(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastNotify;                                              // 0x05F0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      MinTimeBetweenNotifies;                                  // 0x05F4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NVLN[0x8];                                   // 0x05F8(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetBrokenMaterials();
		void ResetBreakable();
		void RemoveChildDecals();
		void OnReset();
		void OnRep_Health();
		void OnRep_bBrokenAuthority();
		void MulticastBreak();
		bool IsBroken();
		void ChangeMesh();
		bool CanBreakThrough();
		void Break(const struct FVector& HitLocation, const struct FVector& ShotDirection, float DamageImpulse, const class FName& BoneName);
		void BlueprintOnHealthChanged();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BulletManager
	 * Size -> 0x0068 (FullSize[0x0288] - InheritedSize[0x0220])
	 */
	class ABulletManager : public AInfo
	{
	public:
		unsigned char                                              UnknownData_9P1B[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SubstepTimer;                                            // 0x0228(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BulletsPresimulatedTicks;                                // 0x022C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BulletsPresimulatedAccuracy;                             // 0x0230(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R5U4[0x4];                                   // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BulletMaxLifespan;                                       // 0x0238(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BulletMinSpeed;                                          // 0x023C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidateHits;                                           // 0x0240(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7YL9[0x3];                                   // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClientsideHitsPingLimit;                                 // 0x0244(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSimulatedBullet>                            Bullets;                                                 // 0x0248(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSimulatedBullet>                            ExpiredBullets;                                          // 0x0258(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FQueuedClientBulletHit>                      UnknownBulletsQueuedClientHits;                          // 0x0268(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBulletPenetrationSettings*                          DefaultBulletPenetrationSettings;                        // 0x0278(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugTraces;                                            // 0x0280(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDebugImpacts;                                           // 0x0281(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7RY4[0x6];                                   // 0x0282(0x0006) MISSED OFFSET (PADDING)

	public:
		void SetDebugTraces(bool bState);
		void SetDebugImpacts(bool bState);
		float GetPresimulatedTime();
		void AddBullet(const struct FSimulatedBullet& InBullet);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BulletPenetrationSettings
	 * Size -> 0x0178 (FullSize[0x01A8] - InheritedSize[0x0030])
	 */
	class UBulletPenetrationSettings : public UDataAsset
	{
	public:
		TMap<EPhysicalSurface, struct FBulletPenetrationPowerValues> Settings;                                                // 0x0030(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FBulletPenetrationPowerValues                       DefaultSettings;                                         // 0x0080(0x0120) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       RicochetAudioEvent;                                      // 0x01A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		struct FBulletPenetrationPowerValues GetBulletPenetrationValuesForSurface(EPhysicalSurface* SurfaceType);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CaptureZone
	 * Size -> 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
	 */
	class ACaptureZone : public AVolume
	{
	public:
		class AObjectiveCapturable*                                Objective;                                               // 0x0258(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnEndObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnBeginObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CharacterDialogueComponent
	 * Size -> 0x0090 (FullSize[0x0140] - InheritedSize[0x00B0])
	 */
	class UCharacterDialogueComponent : public UActorComponent
	{
	public:
		class UINSAudioComponent*                                  TargetComponent;                                         // 0x00B0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q181[0x48];                                  // 0x00B8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnInterruptDelegate;                                     // 0x0100(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSpeakDelegate;                                         // 0x0110(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7FD4[0x8];                                   // 0x0120(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCharacterMutedPhrase>                       MutedPhrases;                                            // 0x0128(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTimerHandle                                        FinishDialogueTimerHandle;                               // 0x0138(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void StopActiveDialogue();
		bool PlayDialogue(const struct FCharacterResponseRequest& SpeakRequest, int32_t Seed);
		void OnDialogueFinished();
		bool IsPlayingDialogue();
		float GetTimeSinceLastSound();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CharacterDialogueDictionary
	 * Size -> 0x0198 (FullSize[0x01C8] - InheritedSize[0x0030])
	 */
	class UCharacterDialogueDictionary : public UDataAsset
	{
	public:
		TArray<struct FCharacterPhrase>                            BotPhrases;                                              // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterPhrase>                            ChatterPhrases;                                          // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterPhrase>                            GameModePhrases;                                         // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterPhrase>                            RadialPhrases;                                           // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterPhrase>                            PainPhrases;                                             // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterFireSupportOfficerPhrase>          FireSupportOfficerRequestPhrases;                        // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterFireSupportObserverPhrase>         FireSupportObserverPhrases;                              // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterFireSupportIncomingPhrase>         FireSupportIncomingPhrases;                              // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterObjectivePhrase>                   ObjectivePhrases;                                        // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCachedDialogueData                                 CachedDialogueData;                                      // 0x00C0(0x00F0) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       FocusInhale;                                             // 0x01B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       FocusExhale;                                             // 0x01B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       BreathingLoop;                                           // 0x01C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CharacterDialogueStringTable
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UCharacterDialogueStringTable : public UDataAsset
	{
	public:
		TMap<ECharacterResponse, class FString>                    DialogueMap;                                             // 0x0030(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ChatBox
	 * Size -> 0x0050 (FullSize[0x0280] - InheritedSize[0x0230])
	 */
	class UChatBox : public UUserWidget
	{
	public:
		class UEditableTextBox*                                    Input;                                                   // 0x0230(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxChatLines;                                            // 0x0238(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    MaxSendLimit;                                            // 0x023C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      ChatMessageReduceTime;                                   // 0x0240(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      LastChatMessageSentTime;                                 // 0x0244(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentMessageSentCount;                                 // 0x0248(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInChatMode;                                             // 0x024C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChatTeamOnly;                                           // 0x024D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UA1N[0x2];                                   // 0x024E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FChatBoxEntry>                               ChatMessages;                                            // 0x0250(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2Q7M[0x20];                                  // 0x0260(0x0020) MISSED OFFSET (PADDING)

	public:
		void StartChatInput(bool bForTeamOnly);
		void SendChatMessage(const class FText& Message);
		void ReduceMessagesSentCount();
		void OnChatMessageRecieved(const class FText& Message);
		void OnChatInputStarted();
		void OnChatInputEnded();
		bool IsChatRestricted();
		void HoldMessage(const class FText& Message);
		class FText GetChatBody();
		void EndChatInput();
		bool AtMaxSendLimit();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Collectible
	 * Size -> 0x01C8 (FullSize[0x01F0] - InheritedSize[0x0028])
	 */
	class UCollectible : public UObject
	{
	public:
		ECollectibleType                                           CollectibleType;                                         // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FMVV[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayNameText;                                         // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                UnlockDescription;                                       // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		ECollectibleRarity                                         Rarity;                                                  // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ORW3[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCompetitiveUnlockTier                              CompetitiveUnlockableTier;                               // 0x0064(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U2C6[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FCollectiblePlatformClaim>        Claims;                                                  // 0x0070(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<class FName, struct FCollectiblePlatformClaim>        ClaimsBeta;                                              // 0x00C0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              BackendClaimId;                                          // 0x0110(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAppendPlatformToClaimId;                                // 0x0120(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBotCanEquip;                                            // 0x0121(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z5Q1[0x2];                                   // 0x0122(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemId;                                                  // 0x0124(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPreOrderItem;                                           // 0x0128(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bConsumable;                                             // 0x0129(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K65N[0x6];                                   // 0x012A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UIIconTexture[0x28];                                     // 0x0130(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bShowOnInventory;                                        // 0x0158(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RRUW[0x7];                                   // 0x0159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              InventoryIconTexture[0x28];                              // 0x0160(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FText                                                InventoryDisplayName;                                    // 0x0188(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InventoryDisplayVariant;                                 // 0x01A0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                InventoryDescription;                                    // 0x01B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bCanEarnFromLevelUp;                                     // 0x01D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_74F2[0x3];                                   // 0x01D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UnlockLevelMin;                                          // 0x01D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnlockLevelMax;                                          // 0x01D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanObtainWithCredits;                                   // 0x01DC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QPYT[0x3];                                   // 0x01DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TokenCost;                                               // 0x01E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TokenValue;                                              // 0x01E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultForSlot;                                         // 0x01E8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultForSubSlot;                                      // 0x01E9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDeprecated;                                             // 0x01EA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WJ6R[0x5];                                   // 0x01EB(0x0005) MISSED OFFSET (PADDING)

	public:
		class FText GetTokenValueText();
		class FText GetTokenCostText();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CollectibleBundle
	 * Size -> 0x0040 (FullSize[0x0230] - InheritedSize[0x01F0])
	 */
	class UCollectibleBundle : public UCollectible
	{
	public:
		TArray<struct FCollectibleBundleItem>                      BundleItems;                                             // 0x01F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Tokens;                                                  // 0x0200(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowVariationsInPopup;                                  // 0x0204(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G2HD[0x3];                                   // 0x0205(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UICustomizeScreenTexture[0x28];                          // 0x0208(0x0028) UNKNOWN PROPERTY: SoftObjectProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CompassHUD
	 * Size -> 0x0078 (FullSize[0x02A8] - InheritedSize[0x0230])
	 */
	class UCompassHUD : public UUserWidget
	{
	public:
		class AINSBasePlayerController*                            BasePlayerController;                                    // 0x0230(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOverlay*                                            Bound_MarkerOverlay;                                     // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              Bound_CompassImage;                                      // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Bound_CompassDirectionText;                              // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Bound_CardinalTextN;                                     // 0x0250(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Bound_CardinalTextNE;                                    // 0x0258(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Bound_CardinalTextE;                                     // 0x0260(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Bound_CardinalTextSE;                                    // 0x0268(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Bound_CardinalTextS;                                     // 0x0270(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Bound_CardinalTextSW;                                    // 0x0278(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Bound_CardinalTextW;                                     // 0x0280(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          Bound_CardinalTextNW;                                    // 0x0288(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bCompassToggledByUser;                                   // 0x0290(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GDY2[0x3];                                   // 0x0291(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CompassAngle;                                            // 0x0294(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    CompassAngleInt;                                         // 0x0298(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAlwaysVisible;                                          // 0x029C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bRadialMenuActive;                                       // 0x029D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bDisplayingMarkers;                                      // 0x029E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_G00S[0x1];                                   // 0x029F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWidgetAnimation*                                    Animation_FadeOut;                                       // 0x02A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UpdateMarkerAngle(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
		void UpdateAlwaysVisible();
		void SetDisplayingMarkers(bool bHasMarkers);
		void OnShowRadialMenu(class UUserWidget* Widget);
		void OnRoundReset();
		void OnRoundEnd(ERoundConclusion RoundEndReason, unsigned char WinningFaction, TArray<struct FOtherPlayerAwardedTagline> Taglines);
		void OnPlayerKilled(const struct FPlayerKillNotice& KillNotice);
		void OnHideRadialMenu(class UUserWidget* Widget);
		void OnCompassToggledByUser(bool bVisible);
		bool CanFadeOutCompass();
		void BindGameStateEvent(class AGameStateBase* GameState);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CompetitiveLeaverPenaltyMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UCompetitiveLeaverPenaltyMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ConsumeItemProxy
	 * Size -> 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
	 */
	class UConsumeItemProxy : public UBlueprintAsyncActionBase
	{
	public:
		class FScriptMulticastDelegate                             OnItemConsumed;                                          // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnItemConsumeError;                                      // 0x0040(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KEXC[0x20];                                  // 0x0050(0x0020) MISSED OFFSET (PADDING)

	public:
		class UConsumeItemProxy* STATIC_ConsumeEntitlement(class UObject* WorldContextObject, const class FString& EntitlementId, int32_t UserIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ControllerLayout
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UControllerLayout : public UDataAsset
	{
	public:
		TArray<struct FActionMapping>                              ActionMappings;                                          // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAxisMapping>                                AxisMappings;                                            // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLeftHanded;                                             // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_13W4[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)

	public:
		void ApplyToProfile(class UINSPlayerLocalProfile* Profile);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CopyPoseAnimInstance
	 * Size -> 0x0018 (FullSize[0x0280] - InheritedSize[0x0268])
	 */
	class UCopyPoseAnimInstance : public UAnimInstance
	{
	public:
		TArray<struct FMorphTargetPair>                            MorphTargets;                                            // 0x0268(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CPUF[0x8];                                   // 0x0278(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetFollowedSkeletalMesh(class USkeletalMeshComponent* MeshComponent);
		void ApplyMorphTargets();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CosmeticCache
	 * Size -> 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
	 */
	class UCosmeticCache : public UObject
	{
	public:
		TArray<struct FCachePoolData>                              CachedCosmeticPools;                                     // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UINSSkeletalMeshMerge*                               SkeletalMeshMerger;                                      // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UINSSkeletalMeshComponent*                           SoldierGhostMesh;                                        // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		bool SetMergedMeshOnObject(class UObject* Object);
		void PrintCache();
		void OnSkeletalMeshMergeCompleted();
		void OnCosmeticLoaded(class UCosmeticItem* Cosmetic);
		void Merge();
		void MarkCosmeticsSet(class UObject* Object);
		class UCosmeticItem* GetMergedMesh(class UObject* Object);
		class UCosmeticItem* GetCosmeticFromCache(ECharacterAppearanceSlot Slot, int32_t SubSlot, class UObject* Object);
		class UCosmeticItem* CreateNewCosmetic(class UClass* CosmeticClass, class UObject* Object, class USharedCosmeticState* SharedState);
		void ClearCosmeticCache(bool bSwitchedTeams);
		void CheckAllMeshesLoaded(class UObject* Object);
		void CacheCosmetics(TArray<class UCosmeticItem*> Cosmetics, class UObject* Object);
		void CacheCosmetic(class UCosmeticItem* Cosmetic, class UObject* Object);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CosmeticItem
	 * Size -> 0x0260 (FullSize[0x0450] - InheritedSize[0x01F0])
	 */
	class UCosmeticItem : public UCollectible
	{
	public:
		unsigned char                                              UnknownData_KBIO[0x10];                                  // 0x01F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bAutoAttachMeshes;                                       // 0x0200(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_01CO[0x7];                                   // 0x0201(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCharacterCosmeticAttachedModel                     AttachmentModel;                                         // 0x0208(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FCharacterCosmeticAttachedModel>             AttachmentSubmodels;                                     // 0x0278(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterCosmeticAttachedModel>             AttachmentMeshes1P;                                      // 0x0288(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBackpack;                                              // 0x0298(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHeavyBackpack;                                         // 0x0299(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_44IK[0x6];                                   // 0x029A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInstanceDynamic*>                    DynamicMaterials;                                        // 0x02A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FactionRestriction;                                      // 0x02B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterGender                                           Gender;                                                  // 0x02B8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterAppearanceSlot                                   AppearanceSlot;                                          // 0x02B9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_71KL[0x2];                                   // 0x02BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AppearanceSubSlot;                                       // 0x02BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CosmeticParent[0x28];                                    // 0x02C0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class UCharacterDialogueDictionary*                        VoiceDictionary;                                         // 0x02E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AINSSoldier*                                         OuterSoldier;                                            // 0x02F0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AProfileCharacter*                                   OuterProfileCharacter;                                   // 0x02F8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ARagdoll*                                            OuterRagdoll;                                            // 0x0300(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APawn*                                               OuterPawn;                                               // 0x0308(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             OuterObject;                                             // 0x0310(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UINSSkeletalMeshComponent*>                   Mesh1PAttachedMeshes;                                    // 0x0318(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UINSSkeletalMeshComponent*>                   Mesh3PAttachedMeshes;                                    // 0x0328(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UINSSkeletalMeshComponent*>                   MeshBodyAttachedMeshes;                                  // 0x0338(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCosmeticInitializating;                                 // 0x0348(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCosmeticInitialized;                                    // 0x0349(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasDuplicated;                                          // 0x034A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YOX4[0x5];                                   // 0x034B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USharedCosmeticState*                                SharedCosmeticState;                                     // 0x0350(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsCached;                                               // 0x0358(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInCache;                                                // 0x0359(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeedsClearing;                                          // 0x035A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceStartLoad;                                         // 0x035B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoadedFromCache;                                        // 0x035C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0789[0x3];                                   // 0x035D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCharacterCosmeticAttachedModel>             Mesh1PAttachedModels;                                    // 0x0360(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterCosmeticAttachedModel>             Mesh3PAttachedModels;                                    // 0x0370(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterCosmeticAttachedModel>             MeshBodyAttachedModels;                                  // 0x0380(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UCosmeticCache>                       CosmeticCache;                                           // 0x0390(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              BundledFromClass[0x28];                                  // 0x0398(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		TArray<class FName>                                        SpecialMorphs;                                           // 0x03C0(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DefaultVariation;                                        // 0x03D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      SupportedVariations;                                     // 0x03D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      BotSupportedVariations;                                  // 0x03E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCosmeticVariation*                                  Variation;                                               // 0x03F8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CostMultiplier;                                          // 0x0400(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZB56[0x4];                                   // 0x0404(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      CosmeticExclusions;                                      // 0x0408(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPendingCosmeticLoad>                        PendingCosmeticLoads;                                    // 0x0418(0x0010) ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6904[0x10];                                  // 0x0428(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bMeshesLoaded;                                           // 0x0438(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZXIJ[0x17];                                  // 0x0439(0x0017) MISSED OFFSET (PADDING)

	public:
		void UpdateVisibility(bool bNewVisibility);
		void SetupCosmetic(class UClass* VariationClass);
		void RemoveCosmetic();
		void STATIC_ProcessMeshForCache(class UINSSkeletalMeshComponent* Mesh, class UObject* NewOwner, bool bCleanMaterials);
		void ProcessForCache();
		bool OwnerHasGearLevelInSlot(EItemSlot Slot, EItemGearLevel Level);
		void OnUpdateEquipmentVariation(class UINSSkeletalMeshComponent* Mesh);
		void OnCosmeticMeshLoaded(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh);
		bool IsVariationEquippedAnywhere(class UClass* VariationClass, bool bIncludeSubclasses);
		bool IsMeshLoading();
		void InitSharedState(class USharedCosmeticState* NewState);
		void InitializeLoadedCosmeticMesh(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh, bool bFromCache);
		void InitializeFromCache(class UObject* Object, bool OnlyFirstPersonMeshes);
		void InitializeAttachedMesh(class UINSSkeletalMeshComponent* AttachedMesh, struct FCharacterCosmeticAttachedModel* Model, bool bFirstPerson, bool bBodyMesh);
		void InitCosmetic();
		bool HasOtherCosmetic(bool bIncludeSubclasses);
		bool HasGearItem(bool bIncludeSubclasses);
		class UClass* GetVariationInSlot(ECharacterAppearanceSlot Slot, int32_t SubSlot);
		class USkeletalMeshComponent* GetOuterMesh(bool bFirstPerson, bool bBodyMesh);
		void GetOtherCosmeticsWithVariation(TArray<struct FSelectedCosmetic>* OutOtherCosmetics);
		void GetOtherCosmetics(TArray<class UClass*>* OutOtherCosmetics);
		class UCosmeticItem* CreateDuplicate();
		int32_t CountMeshesLoading();
		bool CheckRestriction(const struct FProfileCharacterCosmeticState& CosmeticState);
		void BlueprintRemoveCosmetic();
		void BlueprintOnItemRemoved(class AItemBase* Item);
		void BlueprintOnItemAdded(class AItemBase* Item);
		void BlueprintInitSharedState(class USharedCosmeticState* NewState);
		void BlueprintInitCosmetic(class UClass* VariationClass);
		void BlueprintCosmeticMeshLoaded(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh);
		class UINSSkeletalMeshComponent* AttachMesh(struct FCharacterCosmeticAttachedModel* MeshToAttach, bool bFirstPerson, bool bBodyMesh);
		void ApplyMaterialSwaps(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CosmeticItemArms
	 * Size -> 0x0028 (FullSize[0x0478] - InheritedSize[0x0450])
	 */
	class UCosmeticItemArms : public UCosmeticItem
	{
	public:
		unsigned char                                              ReplacementArmMesh1P[0x28];                              // 0x0450(0x0028) UNKNOWN PROPERTY: SoftObjectProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CosmeticItemMultiSlot
	 * Size -> 0x0010 (FullSize[0x0460] - InheritedSize[0x0450])
	 */
	class UCosmeticItemMultiSlot : public UCosmeticItem
	{
	public:
		TArray<int32_t>                                            MultipleAppearanceSubSlot;                               // 0x0450(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CosmeticStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UCosmeticStatics : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_ValidateCosmeticState(struct FProfileCharacterCosmeticState* State, ECharacterGender Gender);
		int32_t STATIC_TranslateSlotToIndex(ECharacterAppearanceSlot Slot, int32_t SubSlot);
		bool STATIC_IsVanityCosmetic(const struct FSelectedCosmetic& SelectedCosmetic);
		bool STATIC_IsCosmeticExcluded(const struct FProfileCharacterCosmeticState& State);
		int32_t STATIC_GetSelectedCosmeticValue(const struct FSelectedCosmetic& SelectedCosmetic);
		struct FCompetitiveUnlockTier STATIC_GetSelectedCosmeticTier(const struct FSelectedCosmetic& SelectedCosmetic);
		ECollectibleRarity STATIC_GetSelectedCosmeticRarity(const struct FSelectedCosmetic& SelectedCosmetic);
		int32_t STATIC_GetSelectedCosmeticItemId(const struct FSelectedCosmetic& SelectedCosmetic);
		ECharacterGender STATIC_GetSelectedCosmeticGender(const struct FSelectedCosmetic& SelectedCosmetic);
		bool STATIC_GetSelectedCosmeticFromItemId(int32_t ItemId, struct FSelectedCosmetic* OutCosmeticPair);
		int32_t STATIC_GetSelectedCosmeticCost(const struct FSelectedCosmetic& SelectedCosmetic);
		void STATIC_GetIncompatibleCosmetics(const struct FProfileCharacterCosmeticState& State, TArray<class UClass*>* OutIncompatibleItems);
		void STATIC_GetDefaultSelectedCosmeticForSlot(struct FSelectedCosmetic* SelectedCosmetic, const struct FProfileCharacterCosmeticState& State, ECharacterAppearanceSlot Slot, int32_t SubSlot);
		int32_t STATIC_GetCosmeticSlotSubslotCount(ECharacterAppearanceSlot Slot);
		bool STATIC_DoesCosmeticSlotSupportEmptyForState(ECharacterAppearanceSlot Slot, const struct FProfileCharacterCosmeticState& State, int32_t SubSlot);
		bool STATIC_DoesCosmeticSlotSupportEmpty(ECharacterAppearanceSlot Slot, int32_t SubSlot, const class FName& Faction);
		void STATIC_CosmeticStateRemoveAllInSlot(struct FProfileCharacterCosmeticState* State, ECharacterAppearanceSlot Slot, int32_t SubSlot);
		bool STATIC_CosmeticStateHasItemInSlot(const struct FProfileCharacterCosmeticState& State, ECharacterAppearanceSlot Slot, int32_t SubSlot);
		bool STATIC_CosmeticStateGetItemInSlot(const struct FProfileCharacterCosmeticState& State, ECharacterAppearanceSlot Slot, int32_t SubSlot, struct FSelectedCosmetic* OutCosmeticPair);
		ECharacterGender STATIC_CosmeticStateGetGender(const struct FProfileCharacterCosmeticState& State);
		void STATIC_CosmeticStateGetExclusions(const struct FProfileCharacterCosmeticState& State);
		bool STATIC_CosmeticStateContainsItem(const struct FProfileCharacterCosmeticState& State);
		bool STATIC_CosmeticSlotHasSubslots(ECharacterAppearanceSlot Slot);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CosmeticVariation
	 * Size -> 0x00D8 (FullSize[0x02C8] - InheritedSize[0x01F0])
	 */
	class UCosmeticVariation : public UCollectible
	{
	public:
		bool                                                       bOverrideRarity;                                         // 0x01F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideTier;                                           // 0x01F1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8KCQ[0x6];                                   // 0x01F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PerItemRarityOverride[0x50];                             // 0x01F8(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              PerItemCostOverride[0x50];                               // 0x0248(0x0050) UNKNOWN PROPERTY: MapProperty
		bool                                                       bOverrideTokenCost;                                      // 0x0298(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideFactionRestriction;                             // 0x0299(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B5VF[0x2];                                   // 0x029A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                FactionRestriction;                                      // 0x029C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisablePurchase;                                        // 0x02A4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableObtainFromLevelUp;                               // 0x02A5(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H6VL[0x2];                                   // 0x02A6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCosmeticMaterialSwap>                       PrimaryMesh3PMaterialSwaps;                              // 0x02A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCosmeticMaterialSwap>                       PrimaryMesh1PMaterialSwaps;                              // 0x02B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void RemoveVariation();
		void InitVariation();
		ECollectibleRarity GetRarityWithItem(class UClass* ItemClass);
		class UCosmeticItem* GetOuterCosmetic();
		void BlueprintRemoveVariation(class UCosmeticItem* OuterCosmetic);
		void BlueprintInitVariation(class UCosmeticItem* OuterCosmetic);
		void BlueprintCosmeticItemMeshLoaded(class UINSSkeletalMeshComponent* SkeletalMesh, const struct FCharacterCosmeticAttachedModel& CosmeticModel, bool bFirstPerson, bool bBodyMesh);
		void BlueprintCosmeticItemAllMeshesLoaded();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CoverActor
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class ACoverActor : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CoverComponent
	 * Size -> 0x0040 (FullSize[0x0450] - InheritedSize[0x0410])
	 */
	class UCoverComponent : public UPrimitiveComponent
	{
	public:
		unsigned char                                              UnknownData_74SA[0x8];                                   // 0x0410(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESoldierStance                                             Stance;                                                  // 0x0418(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UEF6[0x3];                                   // 0x0419(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ProtectionAngle;                                         // 0x041C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLauncherPriority;                                       // 0x0420(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScopePriority;                                          // 0x0421(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMachineGunnerPriority;                                  // 0x0422(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAmbushNode;                                             // 0x0423(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rank;                                                    // 0x0424(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T5I2[0x10];                                  // 0x0428(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSSoldier*                                         Occupier;                                                // 0x0438(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_X3KE[0x2];                                   // 0x0440(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int8_t                                                     AssociatedObjectiveId;                                   // 0x0442(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_P2Y3[0xD];                                   // 0x0443(0x000D) MISSED OFFSET (PADDING)

	public:
		bool IsOccupierClose();
		bool HasProtectionAgainstLocation(const struct FVector& ThreatLocation, bool bUseLOS);
		float GetProtectionAngle();
		float GetOccupierDistance();
		class AINSSoldier* GetOccupier();
		struct FVector GetLocation();
		struct FVector GetDirection();
		bool CanMachinegunsDeploy();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CoverGenerator
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class ACoverGenerator : public AActor
	{
	public:
		class UCoverSystem*                                        CoverSystem;                                             // 0x0220(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDrawDebug;                                              // 0x0228(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EVMO[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CoverSystem
	 * Size -> 0x00F0 (FullSize[0x0118] - InheritedSize[0x0028])
	 */
	class UCoverSystem : public UBlueprintFunctionLibrary
	{
	public:
		unsigned char                                              UnknownData_HIP0[0xD0];                                  // 0x0028(0x00D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bDebugDraw;                                              // 0x00F8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FAO7[0x1F];                                  // 0x00F9(0x001F) MISSED OFFSET (PADDING)

	public:
		void RemoveStaleCoverPoints(const struct FVector& Origin, const struct FVector& Extent);
		void RemoveCoverPointsOfObject(class AActor* CoverObject);
		void RemoveAll();
		bool ReleaseCover(const struct FVector& ElementLocation);
		void OnNavMeshTilesUpdated();
		void OnBeginPlay();
		bool HoldCover(const struct FVector& ElementLocation);
		class UCoverSystem* STATIC_GetCoverSystem(class UObject* WorldContextObject);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageLogComponent
	 * Size -> 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
	 */
	class UDamageLogComponent : public UActorComponent
	{
	public:
		TArray<struct FLoggedDamage>                               DamageEvents;                                            // 0x00B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnOwnerTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
		class AController* GetHighestDamager(class AController* Ignore, float MaxTime, bool bCheckTeam);
		void ClearDamageLog();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageReflectionToggledMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UDamageReflectionToggledMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSDamageType
	 * Size -> 0x0060 (FullSize[0x00A0] - InheritedSize[0x0040])
	 */
	class UINSDamageType : public UDamageType
	{
	public:
		bool                                                       bHasCustomName;                                          // 0x0040(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4U19[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DamageTypeCustomName;                                    // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bCustomNameReplacesWeaponName;                           // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZTSY[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          DamageTypeIcon;                                          // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanArmorMitigate;                                       // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanEffectPlayersInSpawnZone;                            // 0x0071(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayHitReactions;                                       // 0x0072(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayPainSounds;                                         // 0x0073(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayDeathSounds;                                        // 0x0074(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldBloodPool;                                        // 0x0075(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBurns;                                                  // 0x0076(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExplosive;                                              // 0x0077(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bThermiteType;                                           // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChemical;                                               // 0x0079(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoteDamageType;                                       // 0x007A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreFriendlyFireDamageModifier;                       // 0x007B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDamageDestructibleObjectives;                           // 0x007C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O7YH[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageBonusObjectives;                                   // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreachesDoors;                                          // 0x0084(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SEKJ[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageBonusFragileBreakables;                            // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDrainStamina;                                           // 0x008C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YA4G[0x3];                                   // 0x008D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StaminaDrainAmount;                                      // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsePainOrDeathReponseOverride;                          // 0x0094(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RA3C[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeBetweenResponses;                                    // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterResponse                                         PainResponse;                                            // 0x009C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterResponse                                         DeathResponse;                                           // 0x009D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UPB1[0x2];                                   // 0x009E(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeBullet
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeBullet : public UINSDamageType
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeBuckshot
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeBuckshot : public UDamageTypeBullet
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeFall
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeFall : public UINSDamageType
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeSuicide
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeSuicide : public UINSDamageType
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeEnvironmentalFire
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeEnvironmentalFire : public UINSDamageType
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeVehicleFire
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeVehicleFire : public UDamageTypeEnvironmentalFire
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeExplosionGeneric
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeExplosionGeneric : public UINSDamageType
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeExplosionVehicle
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeExplosionVehicle : public UDamageTypeExplosionGeneric
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeMeleeGeneric
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeMeleeGeneric : public UINSDamageType
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeMeleeSlash
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeMeleeSlash : public UDamageTypeMeleeGeneric
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeMeleeClub
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeMeleeClub : public UDamageTypeMeleeGeneric
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeMeleePunch
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeMeleePunch : public UDamageTypeMeleeClub
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeImpact
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeImpact : public UDamageTypeMeleeGeneric
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeVehicleImpact
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeVehicleImpact : public UDamageTypeImpact
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeGrenadeImpact
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeGrenadeImpact : public UDamageTypeImpact
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeChargeImpact
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeChargeImpact : public UDamageTypeImpact
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DamageTypeDoorBreach
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UDamageTypeDoorBreach : public UDamageTypeImpact
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DecalManager
	 * Size -> 0x2910 (FullSize[0x2938] - InheritedSize[0x0028])
	 */
	class UDecalManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_XVNT[0x2910];                                // 0x0028(0x2910) MISSED OFFSET (PADDING)

	public:
		class UDecalPlaneComponent* STATIC_SpawnTranslucentTrackedDecalAttached(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, class USceneComponent* AttachToComponent, const class FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, float LifeSpan, float FadeScreenSize);
		class UDecalComponent* STATIC_SpawnTrackedDecalAttached(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, class USceneComponent* AttachToComponent, const class FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, EAttachLocation LocationType, float LifeSpan, float FadeScreenSize, float FadeOutDelay, float FadeOutDuration, EDecalChannel DecalChannel, bool bUseFootprintArray);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DecalPlaneComponent
	 * Size -> 0x0010 (FullSize[0x04B0] - InheritedSize[0x04A0])
	 */
	class UDecalPlaneComponent : public UStaticMeshComponent
	{
	public:
		struct FTimerHandle                                        TimerHandle_Lifespan;                                    // 0x04A0(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3AEP[0x8];                                   // 0x04A8(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetDecalScale(float NewScale);
		void SetDecalMaterial(class UMaterialInterface* Material);
		void SetDecalLifespan(float Seconds);
		void OnLifespanExpired();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DialogLicenseWidget
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class UDialogLicenseWidget : public UUserWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DismembermentSet
	 * Size -> 0x01C0 (FullSize[0x01E8] - InheritedSize[0x0028])
	 */
	class UDismembermentSet : public UObject
	{
	public:
		struct FRotator                                            ReplacementMeshRotationOffset;                           // 0x0028(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OFGM[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  DamageCurve;                                             // 0x0038(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      DamageTypeBlacklist;                                     // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VaporizationThreshold;                                   // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObliterationChance;                                      // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VaporizationImpulseStrength;                             // 0x00D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BW92[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     VaporizationParticleSystem;                              // 0x00E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDeathSet                                           DefaultDeath;                                            // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<class UClass*, struct FDeathSet>                      DeathAnimations;                                         // 0x00F8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                BrainBoneName;                                           // 0x0148(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HeartBoneName;                                           // 0x0150(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        VitalOrganBones;                                         // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class UClass*, struct FRagdollEffectLayer>            EffectConditions;                                        // 0x0168(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UParticleSystem*                                     BurnParticleSystem;                                      // 0x01B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBloodSplatterData*                                  BloodSplatterData;                                       // 0x01C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        HiddenMaterialSlotsFirstPerson;                          // 0x01C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FLimbGroup>                                  LimbGroups;                                              // 0x01D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSGameMode
	 * Size -> 0x0450 (FullSize[0x0758] - InheritedSize[0x0308])
	 */
	class AINSGameMode : public AGameMode
	{
	public:
		class FText                                                LocalizedName;                                           // 0x0308(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                LocalizedType;                                           // 0x0320(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                LocalGameType;                                           // 0x0338(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class FText>                                        LocalizedRules;                                          // 0x0350(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DiagramTexture[0x28];                                    // 0x0360(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_PQOX[0x10];                                  // 0x0388(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsMatchServer;                                          // 0x0398(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B6QQ[0xF];                                   // 0x0399(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WarmupEnterTime;                                         // 0x03A8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_821X[0x4];                                   // 0x03AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ServerHostname;                                          // 0x03B0(0x0010) Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KEOS[0x18];                                  // 0x03C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class URuleset*>                                    Rulesets;                                                // 0x03D8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWaitingRulesetLoad;                                     // 0x03E8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MRVA[0x7];                                   // 0x03E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMutator*>                                    Mutators;                                                // 0x03F0(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWaitingMutatorLoad;                                     // 0x0400(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PVUX[0x7];                                   // 0x0401(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSGameState*                                       INSGameState;                                            // 0x0408(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, int32_t>                                 ScoringAmounts;                                          // 0x0410(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UScenarioBase*                                       Scenario;                                                // 0x0460(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ScenarioDataClass;                                       // 0x0468(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SequenceHelperClass;                                     // 0x0470(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              OverrideTheaterDefinition[0x28];                         // 0x0478(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UTheaterDefinition*                                  LoadedOverrideTheaterDefinition;                         // 0x04A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ULevelStreaming*>                             ScenarioPendingSublevels;                                // 0x04A8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UC4L[0x50];                                  // 0x04B8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              RequiredScenarioBanks[0x50];                             // 0x0508(0x0050) UNKNOWN PROPERTY: SetProperty
		bool                                                       bAssetLoadingComplete;                                   // 0x0558(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GH1A[0x57];                                  // 0x0559(0x0057) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USquadLayout*                                        OverrideSquadLayoutAllFactions;                          // 0x05B0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              OverrideSquadLayouts[0x50];                              // 0x05B8(0x0050) UNKNOWN PROPERTY: MapProperty
		bool                                                       bDisableRestrictedAreasOnWaveDepletion;                  // 0x0608(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V1CT[0x7];                                   // 0x0609(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              TeamInfoClass;                                           // 0x0610(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_9K9Y[0x1];                                   // 0x0618(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bKillFeed;                                               // 0x0619(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKillFeedSpectator;                                      // 0x061A(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKillerInfo;                                             // 0x061B(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKillerInfoRevealDistance;                               // 0x061C(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DVT1[0x3];                                   // 0x061D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TeamKillLimit;                                           // 0x0620(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TeamKillGrace;                                           // 0x0624(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TeamKillReduceTime;                                      // 0x0628(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumTotalFriendlyFireDamageToReflect;                 // 0x062C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnforceFriendlyFireReflect;                             // 0x0630(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowRestrictedAreas;                                   // 0x0631(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableVehicles;                                        // 0x0632(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowRestrictedAreaBothTeam;                             // 0x0633(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnProtectionTime;                                     // 0x0634(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoseSpawnProtectionOnMoveGrace;                          // 0x0638(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M09K[0x4];                                   // 0x063C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnFireSupportKilledDelegate;                             // 0x0640(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		float                                                      ObjectiveCaptureTime;                                    // 0x0650(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObjectiveResetTime;                                      // 0x0654(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObjectiveSpeedup;                                        // 0x0658(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObjectiveRadioSpeedup;                                   // 0x065C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ObjectiveMaxSpeedupPlayers;                              // 0x0660(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFloatingObjectiveVisibilitySetting                        FloatingObjectiveVisibility;                             // 0x0661(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1XS3[0x6];                                   // 0x0662(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnObjectiveCaptureDelegate;                              // 0x0668(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveDestroyedDelegate;                            // 0x0678(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              PlayerPawnObject[0x28];                                  // 0x0688(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		int32_t                                                    PlayersSpawnedThisFrame;                                 // 0x06B0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSpawnedPlayersEachFrame;                              // 0x06B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDeadSay;                                                // 0x06B8(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDeadSayTeam;                                            // 0x06B9(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVoiceAllowDeadChat;                                     // 0x06BA(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVoiceEnemyHearsLocal;                                   // 0x06BB(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ULB8[0x4];                                   // 0x06BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DroppedWeaponLifespan;                                   // 0x06C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GeneralVehicleSpawnerQuotaTeamOne;                       // 0x06C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GeneralVehicleSpawnerQuotaTeamTwo;                       // 0x06C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0XIS[0x4];                                   // 0x06CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              GamemodeAssets[0x50];                                    // 0x06D0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_NC88[0x10];                                  // 0x0720(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSAIDirector*                                      AIDirector;                                              // 0x0730(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UStatisticsManager*                                  StatsManager;                                            // 0x0738(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UTagline*>                                    Taglines;                                                // 0x0740(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LRPW[0x8];                                   // 0x0750(0x0008) MISSED OFFSET (PADDING)

	public:
		void SwapSides(bool bKillAlivePlayers);
		void SetRestrictedAreas(bool bState, unsigned char TeamId);
		bool SetPropertyValueFromString(const class FName& PropertyName, const class FString& NewPropertyValue);
		bool SetPropertyValueFromFloat(const class FName& PropertyName, float NewPropertyValue);
		int32_t RespawnTeam(unsigned char TeamId, bool bIncludingAlive);
		void RespawnPlayers(unsigned char TeamId);
		void RespawnPlayer(class AINSPlayerController* PlayerController);
		bool RespawnBot(class AINSAISoldierController* BotController);
		int32_t RespawnAllTeams(bool bIncludingAlive);
		int32_t ReinforceTeam(unsigned char TeamId);
		int32_t ReinforceAllTeams();
		void PerformResupplyForSoldier(class AINSSoldier* Player, bool bRemoveCurrentItems);
		void OnWavesDepleted_DisableRestricted(class UReinforcementSystemComponent* Component);
		void OnWaveGained_ReenableRestricted(class UReinforcementSystemComponent* Component, int32_t OldWaveCount);
		void OnVehicleEngineDestroyed(class UVehicleEnginePart* EnginePart, class AController* KillerPlayer, TArray<class AController*> AssisterPlayers);
		bool OnTextMessageSent(class AINSPlayerController* Speaker, const class FText& Message, bool bTeamOnly);
		float OnSoldierTakeRadialDamage(class AINSSoldier* SoldierPawn, float Damage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo);
		float OnSoldierTakePointDamage(class AINSSoldier* SoldierPawn, float Damage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageType, const struct FHitResult& HitInfo, const struct FVector& ShotFromDirection);
		float OnSoldierTakeAnyDamage(class AINSSoldier* SoldierPawn, float Damage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageType);
		void OnScenarioSublevelLoaded();
		void OnObjectiveRigged(class AObjectiveDestructible* Objective, class AINSSoldier* Rigger, class AProjectileBase* SpawnedExplosive);
		void OnObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers);
		void OnObjectiveChangeOwnership(class AObjectiveBase* Objective, unsigned char PreviousOwner, unsigned char NewOwners);
		void OnObjectiveBeginRig(class AObjectiveDestructible* Objective, class AINSSoldier* Rigger);
		void OnLoadedRulesets();
		void OnLoadedMutators();
		void OnFireSupportCalled(class AFireSupportBase* FireSupportActor, class AController* OfficerController, class AController* ObserverController);
		void OnFirearmFired(class AItemFirearm* Firearm, const struct FVector& Origin, const struct FVector& ShootDir);
		void OnEnterInitialMatchState();
		void OnCaptureObjectiveStartCapture(class AObjectiveCapturable* Objective, unsigned char NewOwners);
		void OnCaptureObjectiveProgressTick(class AObjectiveCapturable* Objective, unsigned char CapturingTeamId, unsigned char TeamWithMostPlayersId, TArray<class AINSPlayerState*> Tickers);
		void OnCaptureObjectiveProgressReset(class AObjectiveCapturable* Objective, TArray<class AINSPlayerState*> Resetters, float MaxCaptureProgress);
		void OnCaptureObjectiveChangeOwnership(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
		void OnCaptureObjectiveBeginOverlap(class AObjectiveCapturable* Objective, class AINSSoldier* Overlapper);
		bool OnCanBeDropped(class AItemBase* Item, class AINSSoldier* ItemOwner, bool* bCanDrop);
		bool NeedsBots();
		bool IsUsingOfficialRuleset();
		bool IsNightLightingLoaded();
		bool IsMutatedMode();
		bool IsFinalObjective(unsigned char ObjectiveId);
		bool IsCenterObjective(unsigned char ObjectiveId);
		bool IsAttackDefend();
		bool HasEnabledSpawnZones(unsigned char TeamId);
		void GiveSoldierInventory(class AINSSoldier* Player, bool bFromResupply);
		class UTheaterDefinition* GetTheaterDefinition();
		class ATeamInfo* GetTeam(unsigned char ID);
		class USquadLayout* GetSquadLayoutForFaction(class UFactionDefinition* Faction);
		int32_t GetScoringFor(const class FName& ScoreableAction);
		bool GetPropertyValueAsString(const class FName& PropertyName, class FString* OutPropertyValue);
		bool GetPropertyValueAsFloat(const class FName& PropertyName, float* OutPropertyValue);
		int32_t GetObjectiveCount();
		class AObjectiveBase* GetObjective(unsigned char ObjectiveId);
		void GetMutatorShortNames(TArray<class FName>* OutNames);
		void GetInactiveObjectives(TArray<class AObjectiveBase*>* OutObjectives);
		class AObjectiveBase* GetFirstObjective();
		class AObjectiveBase* GetFirstActiveObjective();
		class AObjectiveBase* GetFinalObjective();
		class AObjectiveDestructible* GetDestructibleObjective(unsigned char ObjectiveId);
		unsigned char GetDefendingTeam();
		class AObjectiveBase* GetCenterObjective();
		class AObjectiveCapturable* GetCapturableObjective(unsigned char ObjectiveId);
		unsigned char GetAttackingTeam();
		class UINSAIDirector* GetAIDirector();
		void GetActiveObjectives(TArray<class AObjectiveBase*>* OutObjectives);
		int32_t GetActiveObjectiveCount();
		void DisableSpawns(unsigned char TeamId);
		void DisableAllActiveObjectives(bool bHideFromHud);
		void ChangeTeam(class AController* Controller, unsigned char NewTeamId, bool bForce, bool bSuicideIfAlive);
		bool CanUseMutator(class UClass* MutatorClass);
		bool CanScore();
		void CancelPendingRespawns(unsigned char TeamId);
		void BroadcastTextMessageTeam(unsigned char TeamId, const class FText& Message, const class FName& Type);
		void BroadcastTextMessageAllPlayers(const class FText& Message, const class FName& Type);
		void BroadcastTeamResponseEvent(const struct FCharacterResponseRequest& Request, unsigned char TeamId, class AINSSoldier* SpeakingSoldier, float Delay, bool bPrioritizeFirst, bool bOnlyOfficerAndObserver);
		void BroadcastTeamRadioEvent(class UAkAudioEvent* Event, unsigned char TeamId, const class FText& SubtitleText, class AActor* AssociatedActor, bool bInterrupt, float Delay, bool bOnlyOfficerAndObserver, bool bPrioritizeFirst, float QueuedTimeout);
		void BroadcastTeamMusicEvent(EMusicEvent Event, unsigned char TeamId, bool bIncludeSpectators);
		void BroadcastStationResponse(EStationResponse StationResponse, unsigned char TeamId, class AActor* AssociatedActor, bool bInterrupt, float Delay, bool bOnlyOfficerAndObserver);
		void BroadcastMusicEvent(EMusicEvent Event);
		void BroadcastCenterMessageTeam(unsigned char TeamId, const class FText& Message);
		void BroadcastCenterMessageAllPlayers(const class FText& Message);
		void BlueprintOnSoldierKilled(class AINSSoldier* SoldierPawn, float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AController* Assister, class AActor* DamageCauser);
		void BlueprintOnPlayerScoreChanged(class AINSPlayerState* PlayerState, int32_t NewScore, int32_t IncrementAmount, bool bIncrementedTeam);
		void BlueprintFactionsInitialized();
		void AssignPawnTeam(class APawn* Soldier, class AController* Controller);
		bool AllowObjectiveFullCapture(class AObjectiveCapturable* Objective, class AObjectiveBase** OutBlockedBy);
		void AdvanceSpawns(unsigned char ObjectiveId, unsigned char TeamId);
		float AdjustObjectiveCaptureSpeed(class AObjectiveCapturable* Objective, unsigned char TeamWithMostPlayers, int32_t PlayerDifference, int32_t Defenders);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSMultiplayerMode
	 * Size -> 0x0250 (FullSize[0x09A8] - InheritedSize[0x0758])
	 */
	class AINSMultiplayerMode : public AINSGameMode
	{
	public:
		unsigned char                                              MinimumPlayers;                                          // 0x0758(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMinimumPlayersRequiresSingleTeam;                       // 0x0759(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSeparateMinimumPlayersInProgress;                    // 0x075A(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MinimumPlayersInProgress;                                // 0x075B(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GameStartingIntermissionTime;                            // 0x075C(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GameStartingIntermissionTimeMatch;                       // 0x0760(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoundLimit;                                              // 0x0764(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsesPointsScoring;                                      // 0x0768(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResetPointsEachRound;                                   // 0x0769(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRoundWonOnceWinLimitReached;                            // 0x076A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UL28[0x1];                                   // 0x076B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    WinLimit;                                                // 0x076C(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GameTimeLimit;                                           // 0x0770(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreRoundTime;                                            // 0x0774(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoundTime;                                               // 0x0778(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OvertimeTime;                                            // 0x077C(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOvertime;                                               // 0x0780(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRedoRoundOnDraw;                                        // 0x0781(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLastRoundDraw;                                          // 0x0782(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGamemodeOvertime;                                       // 0x0783(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGamemodeHasOvertime;                                    // 0x0784(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZA89[0x3];                                   // 0x0785(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    GamemodeOvertimeAdditionalRounds;                        // 0x0788(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GamemodeOvertimeAdditionalWins;                          // 0x078C(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GamemodeOvertimeSwitchTeamsEveryRound;                   // 0x0790(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WinTime;                                                 // 0x0794(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PostRoundTime;                                           // 0x0798(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PostGameTime;                                            // 0x079C(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PostGameTimeExp;                                         // 0x07A0(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LYKT[0xC];                                   // 0x07A4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TeamSwitchTime;                                          // 0x07B0(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowUnbalancedTeams;                                   // 0x07B4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoAssignTeams;                                        // 0x07B5(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoAssignClass;                                        // 0x07B6(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPromptKitMenuIfAutoAssignedClass;                       // 0x07B7(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SwitchTeamsEveryRound;                                   // 0x07B8(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowPlayerTeamSelect;                                  // 0x07BC(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowThirdPersonSpectate;                               // 0x07BD(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowDeathCamera;                                       // 0x07BE(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6GFK[0x1];                                   // 0x07BF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FScoreboardConfig                                   ScoreboardConfig;                                        // 0x07C0(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class AINSMultiplayerGameState*                            MultiplayerGameState;                                    // 0x07E8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScenarioMultiplayer*                                MultiplayerScenario;                                     // 0x07F0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseEliminationRules;                                    // 0x07F8(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YW3Y[0x7];                                   // 0x07F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnRoundOverDelegate;                                     // 0x0800(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              LastWinningTeam;                                         // 0x0810(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XLR6[0x7];                                   // 0x0811(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPreRoundStartedDelegate;                               // 0x0818(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnRoundActiveDelegate;                                   // 0x0828(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FName                                                SubMatchState;                                           // 0x0838(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnHeroCaptureDelegate;                                   // 0x0840(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bIsArcadeMode;                                           // 0x0850(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFireSupportAllowed;                                     // 0x0851(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDynamicInGameLessonsAllowed;                            // 0x0852(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ActiveObjectiveId;                                       // 0x0853(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPlayerStartsToScore;                                  // 0x0854(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsePlayerStartScoring;                                  // 0x0858(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowFriendlyFire;                                      // 0x0859(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V8Q6[0x2];                                   // 0x085A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FriendlyFireModifier;                                    // 0x085C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FriendlyFireReflect;                                     // 0x0860(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckLastPersonStanding;                                // 0x0864(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XEUO[0x1];                                   // 0x0865(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bFirstBloodObtained;                                     // 0x0866(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsesAdvancedSpawning;                                   // 0x0867(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayersFrozen;                                          // 0x0868(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_48NS[0x7];                                   // 0x0869(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerSpawnedDelegate;                                 // 0x0870(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      BotWanderRadius;                                         // 0x0880(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotTerritoryRadius;                                      // 0x0884(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotAmbushRadius;                                         // 0x0888(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotAmbushRatio;                                          // 0x088C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalGame;                                              // 0x0890(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSoloGame;                                               // 0x0891(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBots;                                                   // 0x0892(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ESK0[0x1];                                   // 0x0893(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BotQuota;                                                // 0x0894(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPendingBotQuotaAdjustment;                              // 0x0898(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XWAI[0x1];                                   // 0x0899(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bAutoBalanceTeams;                                       // 0x089A(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableAutoBalanceTeamsAtZeroWaves;                     // 0x089B(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4L05[0x4];                                   // 0x089C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AutoBalanceDelay;                                        // 0x08A0(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRestrictClassByPlayerLevel;                             // 0x08A4(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RCH7[0x3];                                   // 0x08A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AutobalanceRoundEndThreshold;                            // 0x08A8(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutobalanceCheckInterval;                                // 0x08AC(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YBZI[0x8];                                   // 0x08B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_TeamBalance;                                 // 0x08B8(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bMapVoting;                                              // 0x08C0(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMapCycle;                                            // 0x08C1(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseObjectiveCaptureGraceRespawn;                        // 0x08C2(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KLRQ[0x1];                                   // 0x08C3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ObjectiveCaptureGraceRespawnTime;                        // 0x08C4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OOWK[0x15];                                  // 0x08C8(0x0015) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              InitialSupply;                                           // 0x08DD(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MaximumSupply;                                           // 0x08DE(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSupplyGainEnabled;                                      // 0x08DF(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAwardSupplyInstantly;                                   // 0x08E0(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S082[0x3];                                   // 0x08E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SupplyGainFrequency;                                     // 0x08E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreRoundOver;                                        // 0x08E8(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreBotPurge;                                         // 0x08E9(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XDT8[0x6];                                   // 0x08EA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GameModeTagName;                                         // 0x08F0(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVoiceIntermissionAllowAll;                              // 0x0900(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVoiceRadioBroadcastLocal;                               // 0x0901(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0SID[0x16];                                  // 0x0902(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bAutoRecordReplaysDedicated;                             // 0x0918(0x0001) ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_46ZD[0x2F];                                  // 0x0919(0x002F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PlaylistName;                                            // 0x0948(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IdleLimit;                                               // 0x0958(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IdleLimitLowReinforcements;                              // 0x095C(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IdleLimitLastOneStandingCombatZone;                      // 0x0960(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IdleCheckFrequency;                                      // 0x0964(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastIdleCheckTimestamp;                                  // 0x0968(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeaverPenaltyPlayerLeaveTime;                            // 0x096C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeaverPenaltyGameStartTimeLimit;                         // 0x0970(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeaverPenaltyPlayerLeftTimeLimit;                        // 0x0974(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        HealthSnapshotTimer;                                     // 0x0978(0x0008) Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGameStatsSession*                                   GameStatsMatchSession;                                   // 0x0980(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSAISoldierController*>                     CachedImpostorsControllers;                              // 0x0988(0x0010) ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class AINSPlayerController*>                        SequenceParticipantsPCs;                                 // 0x0998(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UpdateVoiceChatChannelFlagsForPlayer(class AINSPlayerController* PlayerController);
		void UpdateVoiceChatChannelFlagsForAll();
		void SetTransitionTimer(float Timer);
		void SetSubMatchState(const class FName& NewState);
		void SetRoundTimer(int32_t Timer);
		void SetNeutralSpawnZones(bool bEnabled);
		float ScorePlayerStart(class AController* Player, class APlayerStart* PlayerStart);
		void RoundStateChangeDelegate__DelegateSignature();
		void RoundRestart();
		void RoundReset();
		void RoundOverDraw(ERoundConclusion RoundEndReason);
		void RoundOverByTeam(ERoundConclusion RoundEndReason, class ATeamInfo* TeamInfo);
		void RoundOver(ERoundConclusion RoundEndReason, unsigned char WinningTeam);
		void RoundActiveTick();
		void RespawnAllBots();
		void ResetRoundWins(bool bResetScores);
		void PlayObjectiveAnnouncement(class UAkAudioEvent* Sound, int32_t ObjectiveId, unsigned char TeamId);
		void PlayAnnouncement(class UAkAudioEvent* Sound, unsigned char TeamId);
		void OnUpdateServerSettings(class AINSMultiplayerGameState* InMultiplayerGameState);
		void OnTeamChanged(class AController* Controller, unsigned char NewTeamId, bool bForced, bool bDidKillPlayer);
		bool OnRoundTimerExpired();
		void OnRoundStarted();
		void OnRoundReset();
		void OnRoundOverDelegate__DelegateSignature(ERoundConclusion RoundEndReason, unsigned char WinningTeam);
		void OnRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningTeam);
		void OnResetObjectives();
		void OnPreRoundStarted();
		void OnPreRoundPreReset();
		void OnPlayerConfirmedLoadout(class AINSPlayerController* PlayerController, bool bWasAlreadyConfirmed);
		void OnPlayerClassAssigned(class AController* Controller, class UPlayerClass* PlayerClass);
		bool OnPlayerBecomeSpectator(class AINSPlayerController* PlayerController);
		void OnInitObjectives();
		void OnHeroCaptureDelegate__DelegateSignature(class AINSPlayerState* HeroPlayer);
		void OnGameStatsRoundSubmitted(const struct FGameStatsRoundRewards& Rewards, int32_t RoundNumber);
		bool IsValidPlayerStart(class AController* Player, class APlayerStart* Start);
		bool IsSoloMode();
		bool IsSingleRoundMode();
		bool IsRoundRunning();
		bool IsRoundExpired();
		bool IsPreRound();
		bool IsPlayerStartEnabled(class AController* Player, class APlayerStart* Start);
		bool IsGameOver();
		bool IsCoop();
		bool IsArcade();
		void InvalidateRoundTimer();
		void IncrementTeamPointsById(unsigned char TeamId, int32_t Amount, bool bCheckWinningConditions);
		void IncrementTeamPoints(class ATeamInfo* Team, int32_t Amount, bool bCheckWinningConditions);
		EVoiceChatChannelFlags GetVoiceChatChannelFlagsForPlayer(class AINSPlayerController* PlayerController);
		int32_t GetTotalPlayerCount();
		class ATeamInfo* GetTeamWithMostPoints();
		class ATeamInfo* GetTeamWithMajorityControl(bool bIncludeContested);
		float GetRoundTimer();
		float GetRoundTimeElapsed();
		int32_t GetRoundsPlayed();
		bool GetRoundOverText(ERoundConclusion RoundEndReason, unsigned char WinningTeam, class FText* OutText);
		int32_t GetRoundNumber();
		class UPlayerClass* GetPlayerClassForBot(class AINSAISoldierController* Bot, class ATeamInfo* Team);
		int32_t GetNumObjectivesOwnedForTeam(unsigned char TeamId, bool bIncludeContested);
		int32_t GetNumObjectivesContested();
		class ATeamInfo* GetDefaultWinningTeam();
		class UPlayerClass* GetAutoAssignPlayerClass(class AController* Controller, class ATeamInfo* DesiredTeam, bool* bOutPromptLoadoutMenu);
		void FreezePlayers(bool bFrozen);
		void ExtendRoundTimer(int32_t Seconds);
		void DefaultRoundExpiry();
		void ClearTransitionTimer();
		void ClearPendingWaves();
		void ClearLastOneStanding(class ATeamInfo* Team);
		void CheckTeamEliminationSingleLife();
		void CheckSupplyReward(class AINSPlayerController* Controller);
		void CheckPointsWinningConditions();
		void CheckIdlePlayers();
		void CheckFullCapture();
		void CheckForLastPersonStanding(class ATeamInfo* Team);
		void CheckEliminationRules();
		void CheatCaptureObjective();
		void BenchmarkOnGameHealthSnapshot();
		void BalanceTeams();
		void AwardTeamSupply(unsigned char TeamId, int32_t SupplyAmount);
		unsigned char AutoAssignTeam(class AController* Controller);
		bool AtWinningCondition();
		bool AtOvertimeCondition();
		bool AtGameOverCondition();
		bool AreTeamsCurrentlyUnbalanced();
		bool AreAnyObjectivesContested();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSTeamDeathmatchGameMode
	 * Size -> 0x0040 (FullSize[0x09E8] - InheritedSize[0x09A8])
	 */
	class AINSTeamDeathmatchGameMode : public AINSMultiplayerMode
	{
	public:
		bool                                                       bScoreKills;                                             // 0x09A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3XWB[0x3];                                   // 0x09A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpawnScoringMaxDistance;                                 // 0x09AC(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnScoringMinDistanceFriendly;                         // 0x09B0(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnScoringMinDistanceEnemy;                            // 0x09B4(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnScoringFriendyDistanceFactor;                       // 0x09B8(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnScoringEnemyDistanceFactor;                         // 0x09BC(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnScoringRecentSpawnPenalty;                          // 0x09C0(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnScoringRecentSpawnCheckTime;                        // 0x09C4(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSPlayerStart*>                             DeathmatchSpawns;                                        // 0x09C8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeathmatchSpawnPointDelay;                               // 0x09D8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNearWinLimit;                                           // 0x09DC(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              NearWinLimitThreshold;                                   // 0x09DD(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LX00[0x2];                                   // 0x09DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_EnableDeathmatchSpawns;                      // 0x09E0(0x0008) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		bool ShouldUseDeathmatchSpawns();
		void SetDeathmatchSpawns(bool bEnabled);
		void EnableDeathmatchSpawns();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DominationGameMode
	 * Size -> 0x0010 (FullSize[0x09F8] - InheritedSize[0x09E8])
	 */
	class ADominationGameMode : public AINSTeamDeathmatchGameMode
	{
	public:
		float                                                      DominationScoreFrequency;                                // 0x09E8(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DP11[0x4];                                   // 0x09EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_DominationScoring;                           // 0x09F0(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void CheckDominationScoring();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Door
	 * Size -> 0x0400 (FullSize[0x0620] - InheritedSize[0x0220])
	 */
	class ADoor : public AActor
	{
	public:
		unsigned char                                              UnknownData_SZ1G[0x3C];                                  // 0x0220(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EUsablePriority                                            UsePriority;                                             // 0x025C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Blocked;                                                 // 0x025D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x025E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VC79[0x1];                                   // 0x025F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AINSAISoldierController*>                     QueueingBots;                                            // 0x0260(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EDoorBotSlot, class AINSAISoldierController*>         InteractingBots;                                         // 0x0270(0x0050) NativeAccessSpecifierPrivate
		TMap<EDoorBotSlot, bool>                                   BlockedDoorSlots;                                        // 0x02C0(0x0050) NativeAccessSpecifierPrivate
		class UStaticMeshComponent*                                FrameMeshComponent;                                      // 0x0310(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                MeshComponent;                                           // 0x0318(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                DoorHandleMeshComponent;                                 // 0x0320(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       TopHinge;                                                // 0x0328(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       BottomHinge;                                             // 0x0330(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       DoorOverlapCollision;                                    // 0x0338(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   HingePhysMat;                                            // 0x0340(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSmoothTransition                                   SmoothTransition;                                        // 0x0348(0x0060) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UCurveFloat*                                         SmoothTransitionCurve;                                   // 0x03A8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         BreachSmoothTransitionCurve;                             // 0x03B0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSmoothTransition                                   DoorHandleSmoothTransition;                              // 0x03B8(0x0060) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UStaticMesh*                                         DefaultMesh;                                             // 0x0418(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         TopHingeMesh;                                            // 0x0420(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         BottomHingeMesh;                                         // 0x0428(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         NoHingeMesh;                                             // 0x0430(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UStaticMesh*>                                 GibMeshes;                                               // 0x0438(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class APhysicalDebris*>                             TrackedDebris;                                           // 0x0448(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDoorState                                                 DoorState;                                               // 0x0458(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDoorState                                                 DesiredDoorState;                                        // 0x0459(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BC89[0x2];                                   // 0x045A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DoorAngle;                                               // 0x045C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLaunched;                                               // 0x0460(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LVSM[0x7];                                   // 0x0461(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_CheckFallenDoorIsStuck;                      // 0x0468(0x0008) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TopHingeHealth;                                          // 0x0470(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BottomHingeHealth;                                       // 0x0474(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnOpen;                                              // 0x0478(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDoorState                                                 SimulatedDoorState;                                      // 0x0479(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9WNJ[0x2];                                   // 0x047A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DoorTransitionTime;                                      // 0x047C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorAngleDifference;                                     // 0x0480(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTopHingeBroken;                                         // 0x0484(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBottomHingeBroken;                                      // 0x0485(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDoorType                                                  DoorType;                                                // 0x0486(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DW64[0x1];                                   // 0x0487(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialDoorHealth;                                       // 0x0488(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bKicked;                                                 // 0x048C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TKQ3[0x3];                                   // 0x048D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnDoorKicked;                                            // 0x0490(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDoorOpened;                                            // 0x04A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDoorClosed;                                            // 0x04B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDoorFallen;                                            // 0x04C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDoorDestroyedDelegate;                                 // 0x04D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FVector                                             InitialLocation;                                         // 0x04E0(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            InitialRotation;                                         // 0x04EC(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             AxisLocation;                                            // 0x04F8(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHorizontallyInverted;                                   // 0x0504(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowTransitionInterruption;                            // 0x0505(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CGSD[0x2];                                   // 0x0506(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSAudioComponent*                                  AkComponent;                                             // 0x0508(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorPeak;                                         // 0x0510(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorOpen;                                         // 0x0518(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorClose;                                        // 0x0520(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorCreakOpen;                                    // 0x0528(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorCreakClose;                                   // 0x0530(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorKick;                                         // 0x0538(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorLock;                                         // 0x0540(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorUnlock;                                       // 0x0548(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorPhysHit;                                      // 0x0550(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventHingeShotOff;                                     // 0x0558(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventDoorBlocked;                                      // 0x0560(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MinTimeBetweenNotifies;                                  // 0x0568(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastNotifyTime;                                          // 0x056C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastBreachTime;                                          // 0x0570(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DMHT[0x4];                                   // 0x0574(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      DamageTypeBlacklist;                                     // 0x0578(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                     DoorKickFX;                                              // 0x0588(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                     DoorBreachFX;                                            // 0x0590(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                     DoorDestroyFX;                                           // 0x0598(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystem*                                     HingeDestroyFX;                                          // 0x05A0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USurfaceReaction*                                    GibSurfaceReaction;                                      // 0x05A8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          DoorOpenUI;                                              // 0x05B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          DoorOutsideOpenUI;                                       // 0x05B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          DoorPartialOpenUI;                                       // 0x05C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          DoorOutsidePartialOpenUI;                                // 0x05C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          DoorCloseUI;                                             // 0x05D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          DoorOutsideCloseUI;                                      // 0x05D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          DoorBreachUI;                                            // 0x05E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BreachDamage;                                            // 0x05E8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MinDistanceNeededToTakeBreachDamage;                     // 0x05EC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MinDistanceNeededToTakeSuppression;                      // 0x05F0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_7UI6[0x4];                                   // 0x05F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMaterialSwap                                       DestroyedMaterialSwap;                                   // 0x05F8(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected
		class UMaterialInterface*                                  InitialDoorMaterial;                                     // 0x0610(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  InitialFrameMaterial;                                    // 0x0618(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void UpdateLocked(bool bNewLocked);
		void UpdateEnabled(bool bNewEnabled);
		void OnRep_TopHingeBroken();
		void OnRep_DoorState();
		void OnRep_DoorAngle();
		void OnRep_BottomHingeBroken();
		void OnDoorHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		float NormalDotNormal(const struct FVector& HitNormal);
		void Multicast_PlayDoorFX(class UParticleSystem* FX, const struct FVector& Location);
		void Multicast_LaunchDoor(const struct FVector_NetQuantize10& ImpulseLocation, const struct FVector_NetQuantize10& ImpulseForce);
		void Multicast_DoorPostAkEvent(class UAkAudioEvent* Event);
		void LaunchDoor(const struct FVector& ImpulseLocation, const struct FVector& ImpulseForce);
		bool IsFalling();
		bool IsDoorDestroyed();
		bool IsCompletelyOpen();
		bool IsClosed();
		bool IsBroken();
		bool HasFallen();
		EDoorState GetDoorState();
		struct FVector GetCenterLocation();
		float DoorDotProduct(class AINSCharacter* Pawn);
		void CheckLaunchDoor();
		void CheckFallenDoorIsStuck();
		void BreakDown(float DotProduct, float Speed);
		bool AreHingesShotOff();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DynamicAccurateObstacleSpawnerInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UDynamicAccurateObstacleSpawnerInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DynamicHintWidget
	 * Size -> 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
	 */
	class UDynamicHintWidget : public UUserWidget
	{
	public:
		class UTexture2D*                                          PrimaryHintImage;                                        // 0x0230(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          SubHintImage;                                            // 0x0238(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          PrimaryKeyImage;                                         // 0x0240(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          SubKeyImage;                                             // 0x0248(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                AdditionalHintText;                                      // 0x0250(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                AdditionalSubHintText;                                   // 0x0268(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      UsePercentage;                                           // 0x0280(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UsableCoolDownRemain;                                    // 0x0284(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDynamicHintOpacity;                               // 0x0288(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QJ9P[0x7];                                   // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  ScaleCurve;                                              // 0x0290(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FVector                                             UseLocation;                                             // 0x0318(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_URMU[0x4];                                   // 0x0324(0x0004) MISSED OFFSET (PADDING)

	public:
		void UpdateVisibility();
		void OnFillRowWithInformationMultipleActions(bool IsPrimaryRow, const class FText& AdditionalText, class UTexture2D* HintTexture, TArray<class FName> ActionNames, const struct FVector& Location, float Timeout);
		void OnFillRowWithInformation(bool IsPrimaryRow, const class FText& AdditionalText, class UTexture2D* HintTexture, const class FName& ActionName, const struct FVector& Location, float Timeout);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PhysicalDebris
	 * Size -> 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
	 */
	class APhysicalDebris : public AActor
	{
	public:
		unsigned char                                              UnknownData_4ZLT[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                MeshComponent;                                           // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    SurfaceReaction;                                         // 0x0230(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SurfaceReactionMinimumSpeed;                             // 0x0238(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SurfaceReactionMaximumSpeed;                             // 0x023C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastEffectTime;                                          // 0x0240(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeBetweenEffects;                                      // 0x0244(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxBounceEffects;                                        // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BounceCount;                                             // 0x024C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnBounce(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EjectedBrass
	 * Size -> 0x0020 (FullSize[0x0270] - InheritedSize[0x0250])
	 */
	class AEjectedBrass : public APhysicalDebris
	{
	public:
		struct FVector2D                                           SpeedRange;                                              // 0x0250(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           AngularImpulseUpRange;                                   // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           AngularImpulseForwardRange;                              // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngularDampingOverride;                                  // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialSpeed;                                            // 0x026C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EntranceZone
	 * Size -> 0x0028 (FullSize[0x0280] - InheritedSize[0x0258])
	 */
	class AEntranceZone : public AVolume
	{
	public:
		class AObjectiveBase*                                      Objective;                                               // 0x0258(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UINSAISquad*>                                 SelectedByTeam0Squads;                                   // 0x0260(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UINSAISquad*>                                 SelectedByTeam1Squads;                                   // 0x0270(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void OnBeginEntranceOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnumerateReplayEventsProxy
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UEnumerateReplayEventsProxy : public UBlueprintAsyncActionBase
	{
	public:
		class FScriptMulticastDelegate                             OnEventsEnumerated;                                      // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I5TM[0x18];                                  // 0x0040(0x0018) MISSED OFFSET (PADDING)

	public:
		class UEnumerateReplayEventsProxy* STATIC_EnumerateReplayEvents(class UObject* WorldContextObject, const class FString& Group);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnumerateReplaysProxy
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UEnumerateReplaysProxy : public UBlueprintAsyncActionBase
	{
	public:
		class FScriptMulticastDelegate                             OnReplaysEnumerated;                                     // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AJ2B[0x18];                                  // 0x0040(0x0018) MISSED OFFSET (PADDING)

	public:
		class UEnumerateReplaysProxy* STATIC_EnumerateReplays(class UObject* WorldContextObject, const class FString& MetaData);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_ActiveObjectives
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_ActiveObjectives : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_AliveAllies
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_AliveAllies : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_AliveEnemies
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_AliveEnemies : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_GetClaimedSearchAreasForinvestigation
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_GetClaimedSearchAreasForinvestigation : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_NearbyOfficers
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_NearbyOfficers : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_PreviousPath
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_PreviousPath : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_SquadCenter
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_SquadCenter : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_SquadDestination
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_SquadDestination : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_SquadMembers
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_SquadMembers : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_SquadMembersDest
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_SquadMembersDest : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryContext_SquadPath
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UEnvQueryContext_SquadPath : public UEnvQueryContext
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryGenerator_CoverLocations
	 * Size -> 0x00C0 (FullSize[0x0140] - InheritedSize[0x0080])
	 */
	class UEnvQueryGenerator_CoverLocations : public UEnvQueryGenerator_ProjectedPoints
	{
	public:
		struct FAIDataProviderFloatValue                           Radius;                                                  // 0x0080(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FAIDataProviderIntValue                             SpokeNumber;                                             // 0x00B8(0x0038) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bNeedsVision;                                            // 0x00F0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ESS4[0x3];                                   // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ZOffset;                                                 // 0x00F4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WallOffset;                                              // 0x00F8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CKWJ[0x4];                                   // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              GenerateAround;                                          // 0x0100(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PositionToHideFrom;                                      // 0x0108(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FEnvTraceData                                       TraceData;                                               // 0x0110(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryTest_ActiveObjective
	 * Size -> 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
	 */
	class UEnvQueryTest_ActiveObjective : public UEnvQueryTest
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryTest_ContestedObjective
	 * Size -> 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
	 */
	class UEnvQueryTest_ContestedObjective : public UEnvQueryTest
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryTest_OnReachableNavMesh
	 * Size -> 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
	 */
	class UEnvQueryTest_OnReachableNavMesh : public UEnvQueryTest
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryTest_OnTacticalGrid
	 * Size -> 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
	 */
	class UEnvQueryTest_OnTacticalGrid : public UEnvQueryTest
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryTest_SpatialVisibility
	 * Size -> 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
	 */
	class UEnvQueryTest_SpatialVisibility : public UEnvQueryTest
	{
	public:
		class UClass*                                              VisibilityTo;                                            // 0x01F8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EnvQueryTest_TeamPresence
	 * Size -> 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
	 */
	class UEnvQueryTest_TeamPresence : public UEnvQueryTest
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EquipableAnimInstance
	 * Size -> 0x00B8 (FullSize[0x0320] - InheritedSize[0x0268])
	 */
	class UEquipableAnimInstance : public UAnimInstance
	{
	public:
		unsigned char                                              UnknownData_A34H[0x8];                                   // 0x0268(0x0008) Fix Super Size
		class AINSSoldier*                                         Soldier;                                                 // 0x0270(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPerson;                                            // 0x0278(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAnimType                                                  AnimType;                                                // 0x0279(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFirearmCategory                                           FirearmCategory;                                         // 0x027A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BP6T[0x5];                                   // 0x027B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AItemEquipable*                                      PreviousEquipable;                                       // 0x0280(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemEquipable*                                      Equipable;                                               // 0x0288(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemWeapon*                                         Weapon;                                                  // 0x0290(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemAimableWeapon*                                  AimableWeapon;                                           // 0x0298(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemFirearm*                                        Firearm;                                                 // 0x02A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemRevolver*                                       Revolver;                                                // 0x02A8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemGrenade*                                        Grenade;                                                 // 0x02B0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemRemoteExplosive*                                RemoteExplosive;                                         // 0x02B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemMeleeWeapon*                                    Knife;                                                   // 0x02C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSinglyLoaded;                                           // 0x02C8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V8R7[0x3];                                   // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Time;                                                    // 0x02CC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, class UINSAudioComponent*>               LoopingAudioSlots;                                       // 0x02D0(0x0050) ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate

	public:
		void SetEquipable(class AItemEquipable* Item);
		void OnUpgradeRemoved(class UWeaponUpgradeComponent* Upgrade);
		void OnUpgradeMeshLoaded(class UINSSkeletalMeshComponent* Mesh, class UWeaponVisualUpgradeComponent* Upgrade);
		void OnUpgradeInstalled(class UWeaponUpgradeComponent* Upgrade);
		void OnSwitchMagazineInterrupt(float AnimationInterruptTime);
		void OnSwitchMagazine(float RateMultiplier, bool bDryReload);
		void OnRevolverChambersUpdated();
		void OnRevolverActiveChamberUpdated();
		void OnReloadInterrupt();
		void OnReloadAfterSwitchMagazine(bool bDryReload, bool bSingleReload, float RateMultiplier);
		void OnReload(bool bDryReload, bool bSingleReload, float RateMultiplier);
		void OnPlayerClassAttributesUpdated(class AINSSoldier* UpdatedSoldier);
		void OnMeshLoaded(class UINSSkeletalMeshComponent* Mesh);
		void OnMeleeWeaponHit(const struct FHitResult& Hit);
		void OnMeleeWeaponAttack(const struct FMeleeConfig& SelectedAttack);
		void OnItemUnequip(bool bInstant, class AItemEquipable* SwitchingTo);
		void OnItemEquip(bool bInstant, class AItemEquipable* SwitchingFrom, bool bWantsFirstEquip);
		void OnGrenadeThrowModeChanged(EGrenadeThrowMode OldState);
		void OnGrenadeStateChanged(EGrenadeState OldState);
		void OnGrenadeStartCook(EGrenadeThrowMode NewThrowMode);
		void OnGenericMeleeAttack(bool bBash);
		void OnGearInteracted(class AItemInteractableGear* GearItem, EEquipableState NewState);
		void OnFirearmStopFire();
		void OnFirearmStartFire();
		void OnFirearmFired(const struct FVector& FireOrigin, const struct FVector& FireDirection);
		void OnFirearmDryFire();
		void OnFastReload(bool bDryReload, float RateMultiplier);
		void OnEndViewTarget();
		void OnCycleFiremode(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
		void OnBoltCycle();
		void OnBipodLegsStateChanged(EBipodState OldState, EBipodState NewState);
		void OnBipodDeployedStateChanged(EBipodState OldState, EBipodState NewState);
		void OnBecomeViewTarget();
		void OnAmmoCheck();
		void OnAllUpgradeMeshesLoaded(class UWeaponVisualUpgradeComponent* Upgrade);
		bool CanFireEvents();
		void BlueprintOnUpgradeStateChanged(class UWeaponUpgradeComponent* Upgrade);
		void BlueprintOnUpgradeRemoved(class UWeaponUpgradeComponent* Upgrade);
		void BlueprintOnUpgradeMeshLoaded(class UINSSkeletalMeshComponent* Mesh, class UWeaponVisualUpgradeComponent* Upgrade);
		void BlueprintOnUpgradeInstalled(class UWeaponUpgradeComponent* Upgrade);
		void BlueprintOnSwitchMagazineInterrupt(float AnimationInterruptTime);
		void BlueprintOnSwitchMagazine(float RateMultiplier, bool bDryReload);
		void BlueprintOnRevolverChambersUpdated();
		void BlueprintOnRevolverActiveChamberUpdated();
		void BlueprintOnReloadInterrupt();
		void BlueprintOnReloadAfterSwitchMagazine(bool bDryReload, bool bSingleReload, float RateMultiplier);
		void BlueprintOnReload(bool bDryReload, bool bSingleReload, float RateMultiplier);
		void BlueprintOnPlayerClassAttributesUpdated();
		void BlueprintOnMeshLoaded();
		void BlueprintOnMeleeWeaponHit(const struct FHitResult& Hit);
		void BlueprintOnMeleeWeaponAttack(const struct FMeleeConfig& SelectedAttack);
		void BlueprintOnItemUnequip(bool bInstant, class AItemEquipable* SwitchingTo);
		void BlueprintOnItemEquip(bool bInstant, class AItemEquipable* SwitchingFrom, bool bWantsFirstEquip);
		void BlueprintOnGrenadeThrowModeChanged(EGrenadeThrowMode OldState);
		void BlueprintOnGrenadeStateChanged(EGrenadeState OldState);
		void BlueprintOnGrenadeStartCook(EGrenadeThrowMode NewThrowMode);
		void BlueprintOnGenericMeleeAttack(bool bBash);
		void BlueprintOnGearInteracted(class AItemInteractableGear* GearItem, EEquipableState NewState);
		void BlueprintOnFirearmStopFire();
		void BlueprintOnFirearmStartFire();
		void BlueprintOnFirearmFired(const struct FVector& FireOrigin, const struct FVector& FireDirection);
		void BlueprintOnFirearmDryFire();
		void BlueprintOnFastReload(bool bDryReload, float RateMultiplier);
		void BlueprintOnEndViewTarget();
		void BlueprintOnCycleFiremode(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
		void BlueprintOnBoltCycle();
		void BlueprintOnBipodLegsStateChanged(EBipodState OldState, EBipodState NewState);
		void BlueprintOnBipodDeployedStateChanged(EBipodState OldState, EBipodState NewState);
		void BlueprintOnBecomeViewTarget();
		void BlueprintOnAmmoCheck();
		void BlueprintOnAllUpgradeMeshesLoaded(class UWeaponVisualUpgradeComponent* Upgrade);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ExplosionPenetrationSettings
	 * Size -> 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
	 */
	class UExplosionPenetrationSettings : public UDataAsset
	{
	public:
		TMap<EPhysicalSurface, float>                              DamageLossPerSurface;                                    // 0x0030(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      DefaultDamageLoss;                                       // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M8NI[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USurfaceReaction*                                    ExitSurfaceReaction;                                     // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableCornerChecking;                                   // 0x0090(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQRQ[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CornerOffsetFromOriginalLocation;                        // 0x0094(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CornerDamageReduction;                                   // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VPKP[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ExplosionReaction
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AExplosionReaction : public AActor
	{
	public:
		bool                                                       bFireEventDedicatedServer;                               // 0x0220(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequireExplosiveDamageType;                             // 0x0221(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RSML[0x6];                                   // 0x0222(0x0006) MISSED OFFSET (PADDING)

	public:
		void OnExplosion(float Distance, float Damage, const struct FHitResult& HitResult, const struct FVector& ImpulseDir);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ExternalHyperlinkDecorator
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UExternalHyperlinkDecorator : public URichTextBlockDecorator
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FactionDefinition
	 * Size -> 0x0450 (FullSize[0x0480] - InheritedSize[0x0030])
	 */
	class UFactionDefinition : public UDataAsset
	{
	public:
		unsigned char                                              UnknownData_YB19[0xA0];                                  // 0x0030(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                FactionName;                                             // 0x00D0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                CosmeticsKey;                                            // 0x00E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          Emblem;                                                  // 0x00F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          EmblemColorMasked;                                       // 0x00F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  ScoreboardEmblemMaterial;                                // 0x0100(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0108(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          TacticalMapIcon;                                         // 0x0110(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        Color;                                                   // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              FireSupportRadialMenu;                                   // 0x0128(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              CommsRadialMenu;                                         // 0x0130(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPlayerAllowedEquipment                             AllowedEquipment;                                        // 0x0138(0x00F0) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              AllowedEquipmentCollections[0x50];                       // 0x0228(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              GearRedirects[0x50];                                     // 0x0278(0x0050) UNKNOWN PROPERTY: MapProperty
		EFactionAnimationStyle                                     WeaponAnimationStyle;                                    // 0x02C8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1KZP[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              AvailableFireSupport[0x50];                              // 0x02D0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              FireSupportGameModeOverrides[0x50];                      // 0x0320(0x0050) UNKNOWN PROPERTY: MapProperty
		float                                                      FireSupportPersonalCooldown;                             // 0x0370(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireSupportPersonalCooldownCoop;                         // 0x0374(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MusicFactionKey;                                         // 0x0378(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Cosmetics[0x50];                                         // 0x0388(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<struct FSelectedCosmetic>                           DefaultSelectedCosmetics;                                // 0x03D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PlaceholderCharacterMeshes[0x10];                        // 0x03E8(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              CharacterVoices[0x50];                                   // 0x03F8(0x0050) UNKNOWN PROPERTY: SetProperty
		class UCharacterDialogueDictionary*                        PlaceholderCharacterVoice;                               // 0x0448(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStationDialogueDictionary*                          StationVoice;                                            // 0x0450(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CounterAttackTypes[0x28];                                // 0x0458(0x0028) UNKNOWN PROPERTY: SoftObjectProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FeaturedItemsSettings
	 * Size -> 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
	 */
	class UFeaturedItemsSettings : public UDeveloperSettings
	{
	public:
		unsigned char                                              Items[0x10];                                             // 0x0038(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              WeaponUpgrades[0x10];                                    // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty

	public:
		class UFeaturedItemsSettings* STATIC_GetFeaturedItemsSettings();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FireSupportBase
	 * Size -> 0x00F8 (FullSize[0x0318] - InheritedSize[0x0220])
	 */
	class AFireSupportBase : public AActor
	{
	public:
		unsigned char                                              UnknownData_7D6R[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSSoldier*                                         OwnerPawn;                                               // 0x0230(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                         InstigatingController;                                   // 0x0238(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AINSSoldier*                                         AssistingPawn;                                           // 0x0240(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                         AssistingController;                                     // 0x0248(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             InitialOwnerLocation;                                    // 0x0250(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ExtractionPointLocation;                                 // 0x025C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExtractionHoverHeight;                                   // 0x0268(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoDamage;                                               // 0x026C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_61U9[0x3];                                   // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            InitialOwnerRotation;                                    // 0x0270(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x027C(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5CGK[0x3];                                   // 0x027D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     SpottingParticle;                                        // 0x0280(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     AimingParticle;                                          // 0x0288(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     SpottingConfirmationParticle;                            // 0x0290(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        SpottingColorGrenadeTarget;                              // 0x0298(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        SpottingColorValidLocation;                              // 0x02A8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        SpottingColorInvalidLocation;                            // 0x02B8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     IndicatorParticle;                                       // 0x02C8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseFactionColor : 1;                                    // 0x02D0(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4IAV[0x3];                                   // 0x02D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        IndicatorColor;                                          // 0x02D4(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDealFriendlyFire;                                    // 0x02E4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TM60[0x3];                                   // 0x02E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IncomingDialogueDelay;                                   // 0x02E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4116[0x4];                                   // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UParticleSystemComponent*>                    SpawnedIndicatorParticles;                               // 0x02F0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFireSupportDefinition*                              Definition;                                              // 0x0300(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSuccesfullyCompletedDelegate;                          // 0x0308(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic

	public:
		void PlayIncomingDialogue();
		void PlayDestroyedDialogue();
		unsigned char GetTeamId();
		class FText GetSubtitleText(const class FText& DisplayText);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FireSupportAircraft
	 * Size -> 0x0118 (FullSize[0x0430] - InheritedSize[0x0318])
	 */
	class AFireSupportAircraft : public AFireSupportBase
	{
	public:
		EAircraftMovementState                                     CurrentMovementState;                                    // 0x0318(0x0001) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N3LP[0x3];                                   // 0x0319(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_7F26[0x4];                                   // 0x031C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAircraftFormation>                          AircraftFormation;                                       // 0x0320(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            FlyAwayRotation;                                         // 0x0330(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      SpawnAltitude;                                           // 0x033C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnDistance;                                           // 0x0340(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDive;                                                // 0x0344(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JYUA[0x3];                                   // 0x0345(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxDiveAltitude;                                         // 0x0348(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SpawnDelayRange;                                         // 0x034C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnYawDirectionOffset;                                 // 0x0354(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAircraftMovementState                                     FinishMovementState;                                     // 0x0358(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JC4W[0x3];                                   // 0x0359(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      LeaveDelay;                                              // 0x035C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PostStrafeResponseDelay;                                 // 0x0360(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AZ5M[0x4];                                   // 0x0364(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       TakingFireEvent;                                         // 0x0368(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       ArrivingEvent;                                           // 0x0370(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       LeavingEvent;                                            // 0x0378(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       BeginStrafeEvent;                                        // 0x0380(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       FinishStrafeEvent_NoKills;                               // 0x0388(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       FinishStrafeEvent_Kills;                                 // 0x0390(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       DroppingPayloadEvent;                                    // 0x0398(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       LandedPayloadEvent;                                      // 0x03A0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q2KC[0x50];                                  // 0x03A8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AAircraftBase*>                               SpawnedAircraftList;                                     // 0x03F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTimerHandle                                        TImerHandle_AircraftSpawn;                               // 0x0408(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTimerHandle                                        TimerHandle_PostStrafeResponse;                          // 0x0410(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTimerHandle                                        TimerHandle_Leave;                                       // 0x0418(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9ZC1[0x10];                                  // 0x0420(0x0010) MISSED OFFSET (PADDING)

	public:
		void PlayKillResponse();
		void OnPayloadDropped(class AAircraftBase* Aircraft);
		void OnPayloadArrived(class AAircraftBase* Aircraft);
		void OnFireSupportKillsEnemy(class AFireSupportBase* FireSupport);
		void OnFinishStrafe(class AAircraftBase* Aircraft);
		void OnBeginStrafe(class AAircraftBase* Aircraft);
		void OnAllPayloadsDropped(class AAircraftBase* Aircraft);
		void BeginLeave();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FireSupportArtillery
	 * Size -> 0x00A8 (FullSize[0x03C0] - InheritedSize[0x0318])
	 */
	class AFireSupportArtillery : public AFireSupportBase
	{
	public:
		struct FTimerHandle                                        TimerHandle_RoundQueue;                                  // 0x0318(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TImerHandle_RoundSpawn;                                  // 0x0320(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Projectile;                                              // 0x0328(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       FireAudioEvent;                                          // 0x0330(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           InitialDelayRange;                                       // 0x0338(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SpawnDelayRange;                                         // 0x0340(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           FireDelayRange;                                          // 0x0348(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           VolleyDelayRange;                                        // 0x0350(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              NumProjectiles;                                          // 0x0358(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              NumVolleys;                                              // 0x0359(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W9WY[0x2];                                   // 0x035A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TargetAreaSpread;                                        // 0x035C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetAreaOffset;                                        // 0x0360(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseGalileanBallistics;                                  // 0x036C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LNQT[0x3];                                   // 0x036D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinFiringAngle;                                          // 0x0370(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProjectileSpread;                                        // 0x0374(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FallbackSpawnOffset;                                     // 0x0378(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RemainingProjectiles;                                    // 0x0384(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RemainingVolleys;                                        // 0x0385(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FJBC[0x2];                                   // 0x0386(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AArtillerySite*                                      ArtillerySite;                                           // 0x0388(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           PlacementQuery;                                          // 0x0390(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     ImpactLocations;                                         // 0x0398(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_30IJ[0x18];                                  // 0x03A8(0x0018) MISSED OFFSET (PADDING)

	public:
		void SpawnRound();
		void QueueNextRound();
		void OnVolleyDelayComplete();
		void OnRoundsImpacted();
		void Multicast_QueuedNextRound();
		struct FVector GetSimpleArtilleryTrajectory(const struct FVector& TargetLocation, const struct FVector& SourceLocation, float Gravity, float* ProjectileSpeed, float* OutFlyTime);
		struct FVector GetArtilleryTrajectory(const struct FVector& TargetLocation, const struct FVector& SourceLocation, float Gravity, float* InOutSpeed, float* OutFlyTime);
		struct FVector GetArtilleryTargetLocation();
		struct FVector GetArtillerySourceLocation(const struct FVector& TargetLocation);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FireSupportDefinition
	 * Size -> 0x00B0 (FullSize[0x00D8] - InheritedSize[0x0028])
	 */
	class UFireSupportDefinition : public UObject
	{
	public:
		class FText                                                PrintName;                                               // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                PrintDescription;                                        // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                OfficerRequestText;                                      // 0x0058(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                ObserverRequestText;                                     // 0x0070(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                ObserverThankText;                                       // 0x0088(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bLethal;                                                 // 0x00A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowCoopEnemyUse;                                      // 0x00A1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLockToGrenadeTargets;                                   // 0x00A2(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlockVision;                                            // 0x00A3(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumUsesPerRound;                                     // 0x00A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoundStartDelay;                                         // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Cooldown;                                                // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlockedAfterDestruction;                                // 0x00B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequireClearSpaceAbove;                                 // 0x00B1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XCX0[0x6];                                   // 0x00B2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              FireSupportActorClass;                                   // 0x00B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanAimDirection;                                        // 0x00C0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KRY4[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ArrowYawOffset;                                          // 0x00C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinNearbyEnemies;                                        // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NearbyRadius;                                            // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x00D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		class FText GetPrintName();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSCharacter
	 * Size -> 0x0268 (FullSize[0x0720] - InheritedSize[0x04B8])
	 */
	class AINSCharacter : public ACharacter
	{
	public:
		unsigned char                                              UnknownData_0YP8[0x8];                                   // 0x04B8(0x0008) Fix Super Size
		struct FRotator                                            ReplicatedControllerRotation;                            // 0x04C0(0x000C) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            SmoothedReplicatedControllerRotation;                    // 0x04CC(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class AController*                                         LastPossesser;                                           // 0x04D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_10W3[0x28];                                  // 0x04E0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageLogComponent*                                 DamageLogComponent;                                      // 0x0508(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsDying : 1;                                            // 0x0510(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FFTS[0x7];                                   // 0x0511(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bStartTimeAfterRoundActive : 1;                          // 0x0518(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUpdateServerTimeStartPlayer : 1;                        // 0x0518(0x0001) BIT_FIELD Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q4JQ[0x3];                                   // 0x0519(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ServerTimeSpawned;                                       // 0x051C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      ServerTimeOnStartRound;                                  // 0x0520(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      PlayerTimeByActionOnServer;                              // 0x0524(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      CachedDamage;                                            // 0x0528(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4XXC[0x4];                                   // 0x052C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDamageEvent                                        CachedDamageEvent;                                       // 0x0530(0x0010) NativeAccessSpecifierPublic
		class AController*                                         CachedEventInstigator;                                   // 0x0540(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              CachedDamageCauser;                                      // 0x0548(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CachedHitPosition;                                       // 0x0550(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CachedDamageForce;                                       // 0x055C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeOfDeath;                                             // 0x0568(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Health;                                                  // 0x056C(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxHealth;                                               // 0x0570(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGodMode;                                                // 0x0574(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JH1Q[0x3];                                   // 0x0575(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FBoneDamageMod>                   BoneDamageModifiers;                                     // 0x0578(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UPhysicsAsset*                                       PhysicsAssetOverrideAlive;                               // 0x05C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicsAsset*                                       PhysicsAssetOverrideDead;                                // 0x05D0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInRagdoll;                                              // 0x05D8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldSpawnRagdoll;                                     // 0x05D9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1W9R[0x6];                                   // 0x05DA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USurfaceReaction*                                    RagdollCollisionSurfaceReaction;                         // 0x05E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RagdollCollisionEventMinSpeed;                           // 0x05E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RagdollCollisionEventMaxSpeed;                           // 0x05EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastRagdollCollisionEvent;                               // 0x05F0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RagdollCollisionEventMinTimeBetween;                     // 0x05F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageVelocityModifier;                                  // 0x05F8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageVelocityModifierRecoveryRate;                      // 0x05FC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCharacterTakeDamage;                                   // 0x0600(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    DamageSurfaceReactionDefault;                            // 0x0610(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ParticleSystemDeath;                                     // 0x0618(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBloodSplatterData*                                  BloodSplatterData;                                       // 0x0620(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDismembermentSet*                                   DismembermentSet;                                        // 0x0628(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IgniteFinishTimestamp;                                   // 0x0630(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnFire;                                                 // 0x0634(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OJPZ[0x3];                                   // 0x0635(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_FireDamage;                                  // 0x0638(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            BurnParticleSystemComponent;                             // 0x0640(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  FireAkComponent;                                         // 0x0648(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventBurningStart;                                     // 0x0650(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventBurningFinish;                                    // 0x0658(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        BloodPoolTimer;                                          // 0x0660(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnKilledDelegate;                                        // 0x0668(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ARagdoll>                             RagdollActor;                                            // 0x0678(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_AKVK[0x10];                                  // 0x0680(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnKilledInVehicleSeatDelegate;                           // 0x0690(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnEnteredVehicleDelegate;                                // 0x06A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnExitedVehicleDelegate;                                 // 0x06B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UVehicleSeatComponent*                               VehicleSeat;                                             // 0x06C0(0x0008) ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVehicleSeatComponent*                               LastSeat;                                                // 0x06C8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          InitialMeshTransform;                                    // 0x06D0(0x0030) Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		class AActor*                                              LastHitActor;                                            // 0x0700(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TPX2[0x14];                                  // 0x0708(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LastResetId;                                             // 0x071C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UpdateServerTimeOnStartRound();
		void TickFireDamage();
		void Server_ToggleVehicleLights();
		void Server_StopHonkHorn();
		void Server_StopHandbreak();
		void Server_StartHonkHorn();
		void Server_StartHandbreak();
		void ResetMeshTransform();
		void OnRep_VehicleSeat();
		void OnRep_OnFire();
		void OnRep_IsDying();
		void OnRagdollHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnCapsuleOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnCapsuleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnAuthoritiveDamageReaction(const struct FNetHitReaction& Hit);
		void MulticastResetCharacterAt(const struct FVector_NetQuantize100& NewLocation, int32_t ResetId);
		void MulticastHideCharacter(int32_t ResetId);
		void MulticastAuthoritiveDamageReaction(const struct FNetHitReaction& Hit);
		bool IsAIControlled();
		void Ignite(float Duration);
		bool HasRecentlySpawned(float Threshold);
		bool GetVehicleSeatCameraLocation(struct FVector* OutLocation, struct FRotator* OutRotation);
		class UVehicleSeatComponent* GetVehicleSeat();
		float GetTimeSinceSpawn();
		unsigned char GetSignificanceLevel();
		struct FRotator GetRepresentativeRotation();
		int32_t GetCharacterMeshLOD();
		void DoBloodSplatterEffect(const struct FVector& DecalPosition, const struct FRotator& DecalRotation, class USceneComponent* AttachComponent, EPhysicalSurface PhysicalSurface, EBloodSplatterType BloodSplatterType, bool bKillShot, bool bBroadcast);
		float CalcGenericDamageVelocityModifier(float Damage, const class FName& HitBone);
		float CalcDamageVelocityModifier(float Damage, const struct FDamageEvent& DamageEvent, const class FName& HitBone);
		void BroadcastSurfaceHitReaction(class USurfaceReaction* SurfaceReaction, const struct FHitResult& Hit);
		void BroadcastDeath(float KillingDamage, class UClass* DamageType, const struct FVector& HitPosition, const struct FVector& DamageForce, class AController* Killer, class AActor* DamageCauser);
		void BroadcastBloodSplatterEffect(const struct FVector& DecalPosition, const struct FRotator& DecalRotation, class USceneComponent* AttachComponent, EPhysicalSurface PhysicalSurface, EBloodSplatterType BloodSplatterType, bool bKillShot);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FireSupportCharacter
	 * Size -> 0x0010 (FullSize[0x0730] - InheritedSize[0x0720])
	 */
	class AFireSupportCharacter : public AINSCharacter
	{
	public:
		unsigned char                                              UnknownData_ZH0X[0x8];                                   // 0x0720(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AFireSupportBase*                                    OwningFireSupport;                                       // 0x0728(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FireSupportHoveringVehicle
	 * Size -> 0x00D8 (FullSize[0x03F0] - InheritedSize[0x0318])
	 */
	class AFireSupportHoveringVehicle : public AFireSupportBase
	{
	public:
		class UClass*                                              VehicleClass;                                            // 0x0318(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnHeight;                                             // 0x0320(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnDistance;                                           // 0x0324(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SpawnDelayRange;                                         // 0x0328(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnAboveDestination;                                  // 0x0330(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L2AH[0x7];                                   // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AVehicleHoveringBase*                                SpawnedVehicle;                                          // 0x0338(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EHoveringFireSupportDialogue, struct FFireSupportResponse> Responses;                                               // 0x0340(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_VehicleSpawn;                                // 0x0390(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTimerHandle                                        TimerHandle_KillReport;                                  // 0x0398(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTimerHandle                                        TimerHandleTakingDamage;                                 // 0x03A0(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O3X7[0x3E];                                  // 0x03A8(0x003E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bMuteResponses;                                          // 0x03E6(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              LastKillCount;                                           // 0x03E7(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              TotalKillCount;                                          // 0x03E8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bQueuedKillReport;                                       // 0x03E9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              GunnersKilled;                                           // 0x03EA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MJZF[0x5];                                   // 0x03EB(0x0005) MISSED OFFSET (PADDING)

	public:
		void UpdateKillDialogue();
		void PlayTakingFireDialogue();
		void PlayTakingDamageDialogue();
		void PlayFallingDialogue();
		void OnWeaponFired(class AVehicleHoveringBase* HoveringVehicle, class AItemFirearm* Weapon);
		void OnVehicleTakeAnyDamage(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
		void OnTryDodge(class AVehicleHoveringBase* HoveringVehicle);
		void OnStartFalling(class AVehicleHoveringBase* HoveringVehicle);
		void OnPartDamaged(class UVehiclePartComponent* Part, float Damage);
		void OnLostPassenger(class AVehicleHoveringBase* HoveringVehicle, class UVehicleSeatComponent* Seat);
		void OnImminentImpact(class AVehicleHoveringBase* HoveringVehicle);
		void OnFireSupportKillsEnemy(class AFireSupportBase* FireSupport);
		void OnFinishDodge(class AVehicleHoveringBase* HoveringVehicle);
		void OnCrashImpact(class AVehicleHoveringBase* HoveringVehicle);
		void OnArriving(class AVehicleHoveringBase* HoveringVehicle);
		bool CanPlayCrewDialogue();
		void BlueprintOnLeaving();
		void BlueprintOnArriving(class AVehicleHoveringBase* HoveringVehicle);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FireSupportOwnerInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UFireSupportOwnerInterface : public UInterface
	{
	public:
		class AFireSupportBase* GetFireSupportActor();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FireVolume
	 * Size -> 0x0040 (FullSize[0x0298] - InheritedSize[0x0258])
	 */
	class AFireVolume : public ATriggerVolume
	{
	public:
		class UBoxComponent*                                       FireBox;                                                 // 0x0258(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireDamageTickRate;                                      // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireDamage;                                              // 0x0264(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireFadeTime;                                            // 0x0268(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XNJF[0x2C];                                  // 0x026C(0x002C) MISSED OFFSET (PADDING)

	public:
		void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
		void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FirstPersonAnimInstance
	 * Size -> 0x1CA0 (FullSize[0x1FC0] - InheritedSize[0x0320])
	 */
	class UFirstPersonAnimInstance : public UEquipableAnimInstance
	{
	public:
		EIKDirection                                               IKSprint;                                                // 0x0320(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EIKDirection                                               IKCrawl;                                                 // 0x0321(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y7AF[0x6];                                   // 0x0322(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFirstPersonAnims                                   CachedEquipableAnimations;                               // 0x0328(0x09F8) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FFirearmAnimsGroup                                  CachedFirearmAnimations;                                 // 0x0D20(0x0E70) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FExplosiveAnimsGroup                                CachedGrenadeAnimations;                                 // 0x1B90(0x0270) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FMeleeAnimsGroup                                    CachedMeleeAnimations;                                   // 0x1E00(0x01B0) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bHasEmpty;                                               // 0x1FB0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasFireSelect;                                          // 0x1FB1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasMovementBlendSpace;                                  // 0x1FB2(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSpecialIdle;                                         // 0x1FB3(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BarrelObstructionAnimAlpha;                              // 0x1FB4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireDelta;                                               // 0x1FB8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K8O0[0x4];                                   // 0x1FBC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FloatingHintTextContainer
	 * Size -> 0x0258 (FullSize[0x0488] - InheritedSize[0x0230])
	 */
	class UFloatingHintTextContainer : public UUserWidget
	{
	public:
		class UCanvasPanel*                                        WidgetPanel;                                             // 0x0230(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DynamicHintWidgetClass;                                  // 0x0238(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SupplyCrateHintClass;                                    // 0x0240(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              FloatingPointOfInterestWidgetClass;                      // 0x0248(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDynamicHintWidget*                                  DynamicHintRef;                                          // 0x0250(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                         SupplyCrateHintRef;                                      // 0x0258(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UFloatingPointOfInterestWidget*>              FloatingPointOfInterestWidgets;                          // 0x0260(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          IconVehicleLeave;                                        // 0x0270(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          IconVehicleDrive;                                        // 0x0278(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          IconVault;                                               // 0x0280(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          IconClimb;                                               // 0x0288(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          IconCycleOptic;                                          // 0x0290(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastSupplyCrateRefreshTime;                              // 0x0298(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SupplyCrateMaxDistance;                                  // 0x029C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ASupplyCrate*                                        CurrentSupplyCrate;                                      // 0x02A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRuntimeFloatCurve                                  SupplyCrateScaleCurve;                                   // 0x02A8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		float                                                      FindSupplyCrateRefreshRate;                              // 0x0330(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastPointOfInterestRefreshTime;                          // 0x0334(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRuntimeFloatCurve                                  PointOfInterestScaleCurve;                               // 0x0338(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		float                                                      PointsOfInterestMaxDistance;                             // 0x03C0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      PointsOfInterestRefreshRate;                             // 0x03C4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    MaximumPointOfInterestHints;                             // 0x03C8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AimDownSightsFraction;                                   // 0x03CC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      HintOpacity;                                             // 0x03D0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AimDownSightsHintOpacity;                                // 0x03D4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowKeyHints;                                           // 0x03D8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowVaultHints;                                         // 0x03D9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowCycleOpticHints;                                    // 0x03DA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_QWHT[0x1];                                   // 0x03DB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ObjectPosition;                                          // 0x03DC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             UseImpactPoint;                                          // 0x03E8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Q9TB[0x4];                                   // 0x03F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              UsedActor;                                               // 0x03F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FHitResult                                          LastHitResult;                                           // 0x0400(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected

	public:
		void UpdateSupplyCrateHintLocation();
		void UpdateSupplyCrateHint();
		void UpdateShowKeyHints();
		void UpdatePointsOfInterest();
		void UpdateHints();
		void UpdateDynamicHintLocation(const struct FVector& ObjPos, bool bIsUsableObject, bool bIsVaulting);
		void HidePointsOfInterest();
		struct FVector GetDynamicHintLocationForUseObject(class AActor* UseObject, class AINSSoldier* Soldier, const struct FHitResult& UseHitResult);
		class UTexture2D* GetDriverIconAndLocation(struct FVector* Location);
		bool FindUseActor(TArray<struct FUsableActor>* OutUsableActors);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FloatingObjectiveContainer
	 * Size -> 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
	 */
	class UFloatingObjectiveContainer : public UUserWidget
	{
	public:
		class UCanvasPanel*                                        WidgetPanel;                                             // 0x0230(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              FloatingWidgetClass;                                     // 0x0238(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IronsightFrac;                                           // 0x0240(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CameraLocation;                                          // 0x0244(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            CameraRotation;                                          // 0x0250(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_33A9[0x4];                                   // 0x025C(0x0004) MISSED OFFSET (PADDING)

	public:
		void UpdateObjectiveIcons();
		bool ShouldObjectiveBeVisible(class AObjectiveBase* Objective);
		void PopulateObjectiveIcons();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FloatingPointOfInterestWidget
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class UFloatingPointOfInterestWidget : public UUserWidget
	{
	public:
		class UImage*                                              IconImage;                                               // 0x0230(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPointOfInterestActorComponent*                      PointOfInterest;                                         // 0x0238(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetPointOfInterest(class UPointOfInterestActorComponent* InPointOfInterest);
		void OnSetPointOfInterest(class UPointOfInterestActorComponent* InPointOfInterest);
		class AActor* GetPointOfInterestActor();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FoliageInteractionComponent
	 * Size -> 0x0030 (FullSize[0x0220] - InheritedSize[0x01F0])
	 */
	class UFoliageInteractionComponent : public USceneComponent
	{
	public:
		class AFoliageInteractionManager*                          FoliageInteractionManager;                               // 0x01F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      FoliageAudioTimer;                                       // 0x01F8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_I83G[0x4];                                   // 0x01FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x0200(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Intensity;                                               // 0x0204(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FoliageAudioInteractionMaxTime;                          // 0x0208(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FoliageAudioInteractionMinTime;                          // 0x020C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInFoliage;                                              // 0x0210(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFoliageInteractionType                                    InteractionType;                                         // 0x0211(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0CBY[0x6];                                   // 0x0212(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCapsuleComponent*                                   InteractionCapsuleComponent;                             // 0x0218(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnInteractionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnInteractionBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FoliageInteractionManager
	 * Size -> 0x01B0 (FullSize[0x03D0] - InheritedSize[0x0220])
	 */
	class AFoliageInteractionManager : public AActor
	{
	public:
		class UMaterialInstanceDynamic*                            MultiplyColorMaterial;                                   // 0x0220(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YSIP[0x148];                                 // 0x0228(0x0148) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerController*                                   LocalPC;                                                 // 0x0370(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextureRenderTarget2D*                              RenderTarget;                                            // 0x0378(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextureRenderTarget2D*                              RenderTarget2;                                           // 0x0380(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialParameterCollection*                        PlayerCollection;                                        // 0x0388(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  MultiplyColorBaseMaterial;                               // 0x0390(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  FoliageInteractionBaseMaterial;                          // 0x0398(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          CameraTransform;                                         // 0x03A0(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponUpgradeComponent
	 * Size -> 0x0178 (FullSize[0x0228] - InheritedSize[0x00B0])
	 */
	class UWeaponUpgradeComponent : public UActorComponent
	{
	public:
		unsigned char                                              UnknownData_CP2R[0x8];                                   // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnUpgradeStateChangedDelegate;                           // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bIsUnlockedByItemId;                                     // 0x00C8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T6CH[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UnlockItemId;                                            // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PrintName;                                               // 0x00D0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                PrintDescription;                                        // 0x00E8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FLessonInputAction>                          Actions;                                                 // 0x0100(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BaseSupplyCost;                                          // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldDisplaySupplyCost;                                // 0x0114(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideIfCannotPurchase;                                   // 0x0115(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponUpgradeSlot                                         UpgradeSlot;                                             // 0x0116(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCompatibleWithAllWeapons;                             // 0x0117(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CompatibleWeapons[0x50];                                 // 0x0118(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              ExcludedWeapons[0x50];                                   // 0x0168(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              MutualExclusions[0x50];                                  // 0x01B8(0x0050) UNKNOWN PROPERTY: SetProperty
		bool                                                       bRequiresUpgradeInOtherSlot;                             // 0x0208(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bExcludeRuleRequiresUpgradeInOtherSlot : 1;              // 0x0209(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponUpgradeSlot                                         RequiredOccupiedSlot;                                    // 0x020A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ON2X[0x5];                                   // 0x020B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AItemWeapon*                                         OwningWeapon;                                            // 0x0210(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpgradeInstalled;                                       // 0x0218(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9DO1[0x7];                                   // 0x0219(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          ContextualHintImage;                                     // 0x0220(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void PlaySoundEventPair(struct FAkComponentCameraPair* AudioEvent);
		void PlaySoundEventFromView(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent);
		void PlaySoundEvent(class UAkAudioEvent* Event, bool bApplySpeedOfSound);
		void OnUpgradeStateChangedDelegate__DelegateSignature(class UWeaponUpgradeComponent* Upgrade);
		void OnUpgradeStateChanged();
		bool IsToggled();
		bool IsOwnerLocallyControlled();
		class AINSSoldier* GetOwningSoldier();
		class AItemWeapon* GetActiveOwningWeaponOrAttached(bool bReturnOwnerIfInactive);
		bool ConflictsWith(class UWeaponUpgradeComponent* Other);
		bool CanShowCosmeticEffects();
		void BlueprintOnUpgradeRemoved();
		void BlueprintOnUpgradeInstalled();
		void BlueprintOnUpgradeInit();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponVisualUpgradeComponent
	 * Size -> 0x0150 (FullSize[0x0378] - InheritedSize[0x0228])
	 */
	class UWeaponVisualUpgradeComponent : public UWeaponUpgradeComponent
	{
	public:
		bool                                                       bSpawnedFirstPersonMeshes;                               // 0x0228(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnedThirdPersonMeshes;                               // 0x0229(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V8ZW[0x6];                                   // 0x022A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWeaponUpgradeModel>                         UpgradeModels1P;                                         // 0x0230(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponUpgradeModel>                         UpgradeModels3P;                                         // 0x0240(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSSkeletalMeshComponent*                           PrimaryModel1P;                                          // 0x0250(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSSkeletalMeshComponent*                           PrimaryModel3P;                                          // 0x0258(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ReplacementFirstPersonAnims[0x50];                       // 0x0260(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              ReplacementFirePersonFirearmAnims[0x50];                 // 0x02B0(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              ReplacementThirdPersonAnims[0x50];                       // 0x0300(0x0050) UNKNOWN PROPERTY: MapProperty
		bool                                                       bFirstPersonOverrideCommonDraw;                          // 0x0350(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPersonCommonDraw;                                  // 0x0351(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPersonOverrideCommonHolster;                       // 0x0352(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPersonCommonHolster;                               // 0x0353(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPersonOverrideCommonDown;                          // 0x0354(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPersonCommonDown;                                  // 0x0355(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPersonOverrideCommonSprint;                        // 0x0356(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPersonCommonSprint;                                // 0x0357(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FirstPersonCommonSprintAdjustment;                       // 0x0358(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPersonOverrideCommonCrawl;                         // 0x0364(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstPersonCommonCrawl;                                 // 0x0365(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BHJN[0x2];                                   // 0x0366(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             FirstPersonCommonCrawlAdjustment;                        // 0x0368(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReplacedFPAnims;                                        // 0x0374(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReplaced3PAnims;                                        // 0x0375(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VSFG[0x2];                                   // 0x0376(0x0002) MISSED OFFSET (PADDING)

	public:
		void OnSpawnedThirdPersonMesh(class UINSSkeletalMeshComponent* SpawnedMesh, bool bCheckAllLoaded);
		void OnSpawnedFirstPersonMesh(class UINSSkeletalMeshComponent* SpawnedMesh, bool bCheckAllLoaded);
		bool AreAllThirdPersonMeshesLoaded();
		bool AreAllFirstPersonMeshesLoaded();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponLightComponent
	 * Size -> 0x0100 (FullSize[0x0478] - InheritedSize[0x0378])
	 */
	class UWeaponLightComponent : public UWeaponVisualUpgradeComponent
	{
	public:
		int32_t                                                    AvailableLightModes;                                     // 0x0378(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PointShootingLightModes;                                 // 0x037C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponLightMode                                           CurrentLightMode;                                        // 0x0380(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S1BZ[0x7];                                   // 0x0381(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USpotLightComponent*                                 FlashlightComponent1P;                                   // 0x0388(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USpotLightComponent*                                 FlashlightComponent3P;                                   // 0x0390(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightIntensity;                                          // 0x0398(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELightUnits                                                LightIntensityUnit;                                      // 0x039C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MJH7[0x3];                                   // 0x039D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LightInnerConeAngle;                                     // 0x03A0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightOuterConeAngle;                                     // 0x03A4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightAttenuationRadius;                                  // 0x03A8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XA8R[0x4];                                   // 0x03AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     LaserParticleSystem1P;                                   // 0x03B0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     LaserParticleSystem3P;                                   // 0x03B8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLaserHasBeam;                                           // 0x03C0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLaserFollowAim3P;                                       // 0x03C1(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YKHB[0x2];                                   // 0x03C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LaserTraceDistance;                                      // 0x03C4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LaserTracePadding;                                       // 0x03C8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashlightTraceDistance;                                 // 0x03CC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowBeamInSmoke;                                        // 0x03D0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowLaserParticleSystemInfraredExclusive;               // 0x03D1(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RK0C[0x6];                                   // 0x03D2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent*                            LaserParticleComponent1P;                                // 0x03D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            LaserParticleComponent3P;                                // 0x03E0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioToggleOn1P;                                         // 0x03E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioToggleOn3P;                                         // 0x03F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioToggleOff1P;                                        // 0x03F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioToggleOff3P;                                        // 0x0400(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     FlashlightBlindingParticleSystem3P;                      // 0x0408(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            BlindingParticleComponent3P;                             // 0x0410(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     BeamParticleSystem;                                      // 0x0418(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            BeamParticleComponent;                                   // 0x0420(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightSourceLocation;                                     // 0x0428(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightSourceDirection;                                    // 0x0434(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightTargetLocation;                                     // 0x0440(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightTargetRotation;                                     // 0x044C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightTraceMaxDistance;                                   // 0x0458(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightTracePadding;                                       // 0x045C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionChannel                                          LightTraceCollisionChannel;                              // 0x0460(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RH7V[0x3];                                   // 0x0461(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PreviousAttenuation;                                     // 0x0464(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreviousTime;                                            // 0x0468(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FlashLightTargetNotVisibleCount;                         // 0x046C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        LightTargetTaskTimer;                                    // 0x0470(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void UpdateLightLocation();
		void UpdateLaserBeam();
		void UpdateBlindingParticle();
		void UpdateBeam();
		void StartTraceTask(float Interval, ECollisionChannel Channel);
		bool ShouldEnterPointShootMode();
		void SetLightMode(EWeaponLightMode Mode, bool bFromReplication);
		void ServerSetLightMode(EWeaponLightMode Mode);
		void RecreateEffects();
		void RecreateBeamEffects();
		void OnRep_CurrentLightMode();
		bool LocalPlayerCanSeeInfrared();
		void KillLaserSightEffect();
		void KillBlindingEffect();
		void KillAnyEffects();
		bool HasLightingMode(EWeaponLightMode LightMode);
		EWeaponLightMode GetNextLightMode();
		EWeaponLightMode GetFirstLightMode();
		void CreateLaserSightEffect();
		void CalculateLightTargetVisibility();
		void CalculateLightTarget();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ForegripLightcomponent
	 * Size -> 0x0030 (FullSize[0x04A8] - InheritedSize[0x0478])
	 */
	class UForegripLightcomponent : public UWeaponLightComponent
	{
	public:
		unsigned char                                              WeaponHandlingModifiers[0x28];                           // 0x0478(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_VIQJ[0x8];                                   // 0x04A0(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FriendlyFireMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UFriendlyFireMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FriendlyFireReflectMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UFriendlyFireReflectMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FrontlineWaveDrainWidget
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class UFrontlineWaveDrainWidget : public UUserWidget
	{
	public:
		bool                                                       bLocalTeam;                                              // 0x0230(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PFHB[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UImage*                                              ProgressImage;                                           // 0x0238(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ProgressDynamicMaterial;                                 // 0x0240(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z8MX[0x10];                                  // 0x0248(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnWaveDrainUpdated(class AINSFrontlineTeamInfo* TeamInfo, float NewDrainTime);
		void OnVisibilityUpdated(bool bIsVisible);
		void OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo);
		void OnRefreshTeams();
		unsigned char GetDesiredDisplayTeam();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GameHUD
	 * Size -> 0x0098 (FullSize[0x02C8] - InheritedSize[0x0230])
	 */
	class UGameHUD : public UUserWidget
	{
	public:
		unsigned char                                              UnknownData_NY9Y[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APlayerController*                                   CurrentPlayerController;                                 // 0x0238(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AlphaMultiplier;                                         // 0x0240(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasValidSoldierPawn;                                    // 0x0244(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasAlivePawn;                                           // 0x0245(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bCurrentlySpectating;                                    // 0x0246(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bScoreboardVisible;                                      // 0x0247(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bMenuOpen;                                               // 0x0248(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPaused;                                                 // 0x0249(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bMapVoteStarted;                                         // 0x024A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsPostRound;                                            // 0x024B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldShowFloatingObjectives;                           // 0x024C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldShowObjectiveBriefing;                            // 0x024D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_477Z[0x2];                                   // 0x024E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWidget*                                             BP_PauseDialogue;                                        // 0x0250(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidget*                                             BackgroundBlurWidget;                                    // 0x0258(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        RootCanvas;                                              // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        DamageIndicatorContainer;                                // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        ScoreboardHiddenCanvas;                                  // 0x0270(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        AlivePawnCanvas;                                         // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        FullScreenScoreboardHiddenCanvas;                        // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        HUDCanvas;                                               // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                            ObjectiveBriefingContainer;                              // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                         FloatingObjectiveContainer;                              // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                         FloatingHintTextContainer;                               // 0x02A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                         Bound_ResupplyIndication;                                // 0x02A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AItemWeapon*                                         Weapon;                                                  // 0x02B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AItemFirearm*                                        Firearm;                                                 // 0x02B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FZVD[0x8];                                   // 0x02C0(0x0008) MISSED OFFSET (PADDING)

	public:
		void UpdateScoreboardActive(bool newScoreboardVisible);
		void UpdatePostRoundState();
		void UpdateMenuOpen(bool newMenuOpen);
		void UpdateElementAlpha();
		void TookDamage(float Damage, class AINSSoldier* Target, const struct FVector& HitSource, const struct FVector& HitDirection, class AController* EventInstigator, class AActor* DamageCauser);
		void ToggleResupplyVisibility(bool bNewVisibility);
		void SetHasAlivePawn(bool newAlivePawn);
		void OnRoundReset();
		void OnRoundOver(const struct FPlayerRoundOverData& UIData);
		void OnQueueObjectiveBriefing();
		void OnPauseStateChanged(bool newPauseState);
		void OnMatchStateUpdate(const class FName& NewState);
		void OnExitSpawnZone();
		void OnEquipableItemChanged(class AItemEquipable* NewItem, class AItemEquipable* PreviousItem);
		bool IsScoreboardActive();
		bool IsMenuOpen();
		ESlateVisibility GetScoreboardHiddenCanvasVisibility();
		ESlateVisibility GetHUDCanvasVisibility();
		ESlateVisibility GetFullScreenScoreboardHiddenCanvasVisibility();
		void DoMapVoteStarted();
		class UWidget* DoCreateRoundVictory(const struct FPlayerRoundOverData& UIData);
		class UWidget* DoCreateDamageIndicator(const struct FVector& HitSource, float Damage);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GameInputStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UGameInputStatics : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsValidKey(const struct FKey& Key);
		bool STATIC_IsKeyBoundToAction(const class FName& Action, const struct FKey& Key);
		TArray<struct FInputAxisKeyMapping> STATIC_GetAxisKeyMappingSource(class UINSPlayerLocalProfile* LocalProfile);
		bool STATIC_GetAllKeysBoundToGamepad(const class FName& ActionOrAxis, bool bIsAxis, float AxisScale, bool bGamepad, class UINSPlayerLocalProfile* LocalProfile, TArray<struct FKey>* Keys);
		bool STATIC_GetAllKeysBoundToAxis(const class FName& Axis, float Scale, TArray<struct FKey>* Keys, class UINSPlayerLocalProfile* LocalProfile);
		bool STATIC_GetAllKeysBoundToAction(const class FName& Action, TArray<struct FKey>* Keys, class UINSPlayerLocalProfile* LocalProfile);
		bool STATIC_GetAllKeysBoundTo(const class FName& ActionOrAxis, bool bIsAxis, float AxisScale, class UINSPlayerLocalProfile* LocalProfile, TArray<struct FKey>* Keys);
		TArray<struct FInputActionKeyMapping> STATIC_GetActionKeyMappingSource(class UINSPlayerLocalProfile* LocalProfile);
		struct FKey STATIC_FindKeyBoundToAxis(const class FName& Axis, float Scale, class UINSPlayerLocalProfile* LocalProfile);
		struct FKey STATIC_FindKeyBoundToAction(const class FName& Action, class UINSPlayerLocalProfile* LocalProfile);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GameplayEffectsStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UGameplayEffectsStatics : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_HasPlayerInRange(class UObject* WorldContextObject, float Tolerance, const struct FVector& TestLocation);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GameUIData
	 * Size -> 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
	 */
	class UGameUIData : public UObject
	{
	public:
		struct FLinearColor                                        FriendlyColor;                                           // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        EnemyColor;                                              // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GameUIStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UGameUIStatics : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_TransformToScreen(class APlayerController* Controller, class UUserWidget* Widget, const struct FVector& InWorldLocation, struct FVector2D* OutScreenLocation, float* OutFrontDot, float* OutRightDot, float* OutDistance, bool* bIsOnScreen);
		void STATIC_ReplaceKeyWithLessonMarkup(const class FText& InText, TArray<struct FLessonInputAction> Actions, class FText* OutText);
		void STATIC_OpenURLInOverlay(const class FString& URL);
		void STATIC_OpenPlatformProfileForPlayer(class APlayerController* Controller, class APlayerState* PlayerState);
		void STATIC_OpenPlatformProfileForPlatformId(const class FString& RequestedPlatformId);
		bool STATIC_IsModSupportedPlatform();
		bool STATIC_IsDeveloperPlayingLocal();
		void STATIC_GetUseTimeoutsForUseActor(class AActor* UsableActor, class AINSSoldier* Pawn, float* PrimaryUseTimeoutFrac, float* SecondaryUseTimeoutFrac);
		class FString STATIC_GetUserRequestedLanguage(class FString* OutRawRequestedLang, bool* OutHasUsedFallback);
		void STATIC_GetUseMessage(class AActor* UsableActor, class AINSPlayerController* Controller, const struct FHitResult& UseHitResult, bool bInProgress, class FText* OutPrimaryText, class FText* OutSubText);
		class UTexture2D* STATIC_GetUseImage(class AActor* UsableActor, class AINSPlayerController* Controller, const struct FHitResult& UseHitResult, bool bInProgress, class FText* OutAdditionalText);
		void STATIC_GetUseAction(class AActor* UsableActor, class FName* PrimaryUseAction, TArray<class FName>* SubUseActions);
		class UTexture2D* STATIC_GetSubUseImage(class AActor* UsableActor, class AINSPlayerController* Controller, const struct FHitResult& UseHitResult, bool bInProgress, class FText* OutAdditionalText);
		struct FVector2D STATIC_GetRadialOffsetForSize(float Spacing, float Width, float Height, ERadialMenuDirection Direction, int32_t Options);
		struct FVector2D STATIC_GetRadialOffset(float Spacing, ERadialMenuDirection Direction, int32_t Options);
		EFileSizeUnit STATIC_GetPreferredFileSizeUnit(int64_t SizeInBytes);
		void STATIC_GetOtherEarnedTaglineDescription(const struct FOtherPlayerAwardedTagline& EarnedTagline, class FText* OutDescription);
		void STATIC_GetObjectPrintName(class UObject* InObject, class FText* OutPrintName);
		class FText STATIC_GetObjectivePhonetic(unsigned char ObjectiveId);
		class FText STATIC_GetObjectiveLetter(unsigned char ObjectiveId);
		void STATIC_GetLocalizedWeaponUpgradeSlot(EWeaponUpgradeSlot WeaponUpgradeSlot, class FText* OutPrintName);
		void STATIC_GetLocalizedWeaponName(const class FString& OriginalWeaponName, class FText* OutLocalizedWeaponName);
		void STATIC_GetLocalizedScenarioName(const class FString& OriginalScenarioName, class FText* OutScenarioNameText);
		void STATIC_GetLocalizedMapName(const class FString& OriginalMapName, class FText* OutMapNameText);
		void STATIC_GetLocalizedItemSubSlot(EItemSlot ItemSlot, int32_t SubSlot, class FText* OutPrintName);
		void STATIC_GetLocalizedItemSlot(EItemSlot ItemSlot, class FText* OutPrintName);
		void STATIC_GetLocalizedCompassHeading(ECardinalDirection Direction, bool bAbbreviated, class FText* OutHeading);
		class UTexture2D* STATIC_GetItemIcon(class UClass* ItemClass);
		class FString STATIC_GetGamePageInStoreURL();
		class FText STATIC_GetFormattedShorthandTimespan(const struct FTimespan& InputTimespan);
		class FText STATIC_GetFormattedObjectiveName(class AObjectiveBase* Objective, bool bOverrideFactionColor, unsigned char FactionOverride);
		class FText STATIC_GetFormattedFileSizeInUnits(int64_t SizeInBytes, EFileSizeUnit FileSizeUnit);
		class FText STATIC_GetFormattedFileSize(int64_t SizeInBytes);
		void STATIC_GetFormattedDistanceMetersTwoPoints(class FText* OutDistanceText, const struct FVector& PointA, const struct FVector& PointB, bool bShowDecimal);
		class FText STATIC_GetFormattedDistanceMetersKilometers(int32_t Meters);
		void STATIC_GetFormattedDistanceMeters(class FText* OutDistanceText, float DistanceInUnits, bool bShowDecimal);
		void STATIC_GetFilteredRadialResponseForPlayer(class AINSSoldier* Player, const struct FRadialCommand& InCommand, ECharacterResponse* OutResponse);
		void STATIC_GetEarnedTaglineDescription(const struct FPlayerAwardedTagline& EarnedTagline, class FText* OutDescription);
		void STATIC_GetDeathDescriptionFromKillNotice(const struct FPlayerKillNotice& KillNotice, class FText* OutDescription);
		void STATIC_GetDeathDescription(class UClass* CauserActor, class UClass* DamageType, class FText* OutDescription);
		float STATIC_GetCompassAngle(class UObject* WorldContextObject, float YawAngle);
		void STATIC_GetClipboardContents(class FString* OutClipboardContents);
		void STATIC_GetClassPrintName(class UClass* InClass, class FText* OutPrintName);
		ECardinalDirection STATIC_GetCardinalFromYaw(class UObject* WorldContextObject, float YawAngle);
		ECardinalDirection STATIC_GetCardinalFromRotator(class UObject* WorldContextObject, const struct FRotator& Rotation);
		class FString STATIC_GetAccountNickname(class UObject* WorldContextObject);
		void STATIC_FormatTextFromParameterPairs(const class FText& InFormat, TMap<class FString, class FText> InFormatPairs, class FText* OutText);
		struct FDateTime STATIC_DateTimeFromUnixTimestamp(int64_t UnixTimeStamp);
		void STATIC_CopyTextToClipboard(const class FText& CopyText);
		void STATIC_CopyStringToClipboard(const class FString& CopyString);
		void STATIC_CenterViewportCursor(class APlayerController* PlayerController);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GearUpgradeComponent
	 * Size -> 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
	 */
	class UGearUpgradeComponent : public UWeaponUpgradeComponent
	{
	public:
		class UMaterialInterface*                                  PostProcessedMaterial;                                   // 0x0228(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JHUL[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GenericDialogWidget
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class UGenericDialogWidget : public UUserWidget
	{
	public:
		void BP_OpeningVirtualKeyboard();
		void BP_ClosingVirtualKeyboard();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GetBannerProxy
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UGetBannerProxy : public UBlueprintAsyncActionBase
	{
	public:
		class FScriptMulticastDelegate                             OnBannerReceived;                                        // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QGQA[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		class UGetBannerProxy* STATIC_GetBanner(class UObject* WorldContextObject);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GetMotdProxy
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UGetMotdProxy : public UBlueprintAsyncActionBase
	{
	public:
		class FScriptMulticastDelegate                             OnMotdReceived;                                          // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LLP3[0x10];                                  // 0x0040(0x0010) MISSED OFFSET (PADDING)

	public:
		class UGetMotdProxy* STATIC_GetMotd(class UObject* WorldContextObject, bool bInForNewsPopup);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HelicopterMovementComponent
	 * Size -> 0x0030 (FullSize[0x0168] - InheritedSize[0x0138])
	 */
	class UHelicopterMovementComponent : public UPawnMovementComponent
	{
	public:
		float                                                      EnginePower;                                             // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      RotationForce;                                           // 0x013C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MaxVelocity;                                             // 0x0140(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      YawSpinMultiplier;                                       // 0x0144(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FallingForceScale;                                       // 0x0148(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FallingNoSpinForceScale;                                 // 0x014C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_H4PJ[0x18];                                  // 0x0150(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HelicopterNavTarget
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AHelicopterNavTarget : public ATargetPoint
	{
	public:
		bool                                                       bOverrideHoverHeight;                                    // 0x0220(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J1DY[0x3];                                   // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HoverHeight;                                             // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HelicopterPathFollowingComponent
	 * Size -> 0x0058 (FullSize[0x02B0] - InheritedSize[0x0258])
	 */
	class UHelicopterPathFollowingComponent : public UPathFollowingComponent
	{
	public:
		TMap<int32_t, struct FPathHoverProperties>                 PathPointHoverProps;                                     // 0x0258(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_726Z[0x8];                                   // 0x02A8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HUDWidgetInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UHUDWidgetInterface : public UInterface
	{
	public:
		void OnRoundOverUIToggled(bool bNowVisible);
		void OnMapVoteStarted();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HUDBase
	 * Size -> 0x0108 (FullSize[0x0418] - InheritedSize[0x0310])
	 */
	class AHUDBase : public AHUD
	{
	public:
		unsigned char                                              UnknownData_C0U7[0x18];                                  // 0x0310(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bMapVoteStarted;                                         // 0x0328(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRoundOverVisible;                                       // 0x0329(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HNA7[0x6];                                   // 0x032A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PlayerScreenWidgets[0x10];                               // 0x0330(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<class UClass*>                                      LoadedPlayerScreenWidgets;                               // 0x0340(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UUserWidget*>                                 PlayerScreenWidgetInstances;                             // 0x0350(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FullscreenWidgets[0x10];                                 // 0x0360(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<class UClass*>                                      LoadedFullscreenWidgets;                                 // 0x0370(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UUserWidget*>                                 FullscreenWidgetInstances;                               // 0x0380(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ScoreboardWidget[0x28];                                  // 0x0390(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class UClass*                                              LoadedScoreboardWidget;                                  // 0x03B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UScoreboardBase*                                     ScoreboardWidgetInstance;                                // 0x03C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompassVisible;                                         // 0x03C8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1ND5[0x7];                                   // 0x03C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnCompassToggleByUserDelegate;                           // 0x03D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              DebugOverlayWidget[0x28];                                // 0x03E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class UClass*                                              LoadedDebugOverlayWidget;                                // 0x0408(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                         DebugOverlayWidgetInstance;                              // 0x0410(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void ToggleScoreboard();
		void ToggleCompass();
		void TextWithShadowClipped(float PosX, float PosY, const class FText& Text, class UFont* Font, const struct FLinearColor& TextColor, float Scale, float Width, float Height);
		void ShowScoreboard();
		void ShowCompass();
		void OnRoundOverUIShown(const struct FPlayerRoundOverData& UIData);
		void OnRoundOverUIHidden();
		void OnMapVoteStarted();
		void OnCompassToggledByUserDelegate__DelegateSignature(bool bVisible);
		void HideScoreboard();
		void HideCompass();
		void DrawStringWithShadowClipped(float PosX, float PosY, const class FString& InputString, class UFont* Font, const struct FLinearColor& TextColor, float Scale, float Width, float Height);
		void DebugToggleOverlay();
		class UUserWidget* CreatePlayerScreenWidget(class UClass* WidgetClass);
		class UUserWidget* CreateFullScreenWidget(class UClass* WidgetClass);
		void BlueprintOnRoundOverUIToggled(bool bNowVisible);
		void BlueprintOnMapVoteStarted();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HUDContextualHintContainer
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class UHUDContextualHintContainer : public UUserWidget
	{
	public:
		unsigned char                                              UnknownData_0HUE[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bGamepadCheck;                                           // 0x0238(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YIQ4[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWidgetAnimation*                                    FadeOutAnimation;                                        // 0x0240(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UWidgetAnimation*                                    FadeInAnimation;                                         // 0x0248(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bShowingHints;                                           // 0x0250(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bCanResupply;                                            // 0x0251(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q5UA[0x6];                                   // 0x0252(0x0006) MISSED OFFSET (PADDING)

	public:
		void UsingControllerUpdate(bool bUsingController, EeInputIconType NewIconType);
		void UpdateHintClassImage(class UPlayerClass* PlayerClass);
		void UpdateChildrenVisibility();
		void ShowHints();
		void SetAllowResupply(bool bNewCanResupply);
		void OnSoldierSpawned();
		void OnResupplied(class AINSSoldier* Player);
		void OnItemAddedToInventory(class AINSSoldier* Soldier, class AItemBase* Item);
		void OnInventoryChanged();
		void OnChangedWeapon(class AItemEquipable* NewItem, class AItemEquipable* PreviousItem);
		void HideHints();
		class UWidgetAnimation* GetFadeOutAnimation();
		class UWidgetAnimation* GetFadeInAnimation();
		void GetAssets(EAssetName AssetName, struct FChildAsset* Asset);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HUDMultiplayer
	 * Size -> 0x00F0 (FullSize[0x0508] - InheritedSize[0x0418])
	 */
	class AHUDMultiplayer : public AHUDBase
	{
	public:
		unsigned char                                              ChatBoxWidgetClass[0x28];                                // 0x0418(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class UClass*                                              LoadedChatBoxWidgetClass;                                // 0x0440(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UChatBox*                                            ChatBoxWidget;                                           // 0x0448(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFont*                                               PlayerTargetFont;                                        // 0x0450(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R9IA[0x8];                                   // 0x0458(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          DefaultPlayerIcon;                                       // 0x0460(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDrawPlayerTargetId;                                     // 0x0468(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z68U[0x3];                                   // 0x0469(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerTargetCutoffDistance;                              // 0x046C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetMaxDrawDistance;                             // 0x0470(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetMidrangeDrawDistance;                        // 0x0474(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetCloseDrawDistance;                           // 0x0478(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetHeightScalingMin;                            // 0x047C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetHeightScalingMax;                            // 0x0480(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetHeightCrouchOffset;                          // 0x0484(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetHeightProneOffset;                           // 0x0488(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetTextScaleMin;                                // 0x048C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetTextScaleMax;                                // 0x0490(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconScaleMin;                                      // 0x0494(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconScaleMax;                                      // 0x0498(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconInteractionScaleMin;                           // 0x049C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconInteractionScaleMax;                           // 0x04A0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconDrawDistance;                                  // 0x04A4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IndicatorObscuredAlphaFrac;                              // 0x04A8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IndicatorFocusedAlpha;                                   // 0x04AC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IndicatorFocusedObscuredAlpha;                           // 0x04B0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconAlphaMin;                                      // 0x04B4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconAlphaMax;                                      // 0x04B8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconDistanceAlpha;                                 // 0x04BC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconInteractDistanceAlpha;                         // 0x04C0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTextAlphaFrac;                                     // 0x04C4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconInteractAlphaMin;                              // 0x04C8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconInteractAlphaMax;                              // 0x04CC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconShadowAlpha;                                   // 0x04D0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconShadowOffset;                                  // 0x04D4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerIconInteractionDrawDistance;                       // 0x04D8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerTargetFactionColorModifier;                        // 0x04DC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashIconScaleOffscreen;                                 // 0x04E0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashIconScale;                                          // 0x04E4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashSpeedFactor;                                        // 0x04E8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashFrequency;                                          // 0x04EC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashAmplitude;                                          // 0x04F0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMinimal;                                                // 0x04F4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4ZNP[0x3];                                   // 0x04F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceToIndicatePlayerTargetWithFlash;                 // 0x04F8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceToShowOffscreenPlayerTarget;                     // 0x04FC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToFlashIndicatedPlayerTarget;                        // 0x0500(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WVL9[0x4];                                   // 0x0504(0x0004) MISSED OFFSET (PADDING)

	public:
		void StartTeamChatInput();
		void StartGlobalChatInput();
		void StartChatInput(bool bTeamOnly);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HUDReplay
	 * Size -> 0x0028 (FullSize[0x0338] - InheritedSize[0x0310])
	 */
	class AHUDReplay : public AHUD
	{
	public:
		bool                                                       bControlsVisible;                                        // 0x0310(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3KT0[0x7];                                   // 0x0311(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnReplayControlsToggledDelegate;                         // 0x0318(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UUserWidget*                                         ReplayUI;                                                // 0x0328(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ReplayUIClass;                                           // 0x0330(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void ToggleControls();
		void ShowControls();
		void ReplayControlsToggled__DelegateSignature(bool bState);
		void HideControls();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.InGameMenuWidget
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class UInGameMenuWidget : public UUserWidget
	{
	public:
		bool                                                       bIsReplayPlayback;                                       // 0x0230(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2IS6[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnPanelOpened(EIngameMenuType DesiredMenu, EIngameMenuEntryState FromState);
		void OnHidePanel();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAIDebugHUD
	 * Size -> 0x0030 (FullSize[0x0448] - InheritedSize[0x0418])
	 */
	class AINSAIDebugHUD : public AHUDBase
	{
	public:
		bool                                                       bSpectator;                                              // 0x0418(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C7HX[0x2F];                                  // 0x0419(0x002F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAIDirector
	 * Size -> 0x02A0 (FullSize[0x02C8] - InheritedSize[0x0028])
	 */
	class UINSAIDirector : public UObject
	{
	public:
		unsigned char                                              UnknownData_LKJY[0x50];                                  // 0x0028(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UEnvQuery*                                           QueryTemplate;                                           // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              NavigationDataPawn;                                      // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      TimeLimitPerStep;                                        // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SSAC[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UEnvQuery*                                           Query_FindCover;                                         // 0x0090(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           Query_FindFlank;                                         // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           Query_FindInvestigateLocation;                           // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           Query_FindInvestigateLocationOnObjective;                // 0x00A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           Query_GenerateSpawnsCloseDestination;                    // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           Query_GenerateSpawnsSurvival;                            // 0x00B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           Query_FindOutdoorLocation;                               // 0x00C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           Query_FindLOSLocation;                                   // 0x00C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           Query_LeaveFire;                                         // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery*                                           Query_TacticalPathFollow;                                // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FEnvNamedValue>                              QueryParams;                                             // 0x00E0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4VKN[0x10];                                  // 0x00F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class AProjectileGrenade>>           ActiveGrenades;                                          // 0x0100(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<TWeakObjectPtr<class AProjectileGrenade>, TWeakObjectPtr<class AINSAISoldierController>> GrenadeThrowbackBots;                                    // 0x0110(0x0050) UObjectWrapper, NativeAccessSpecifierPrivate
		TArray<struct FDeathArea>                                  DeathAreas;                                              // 0x0160(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FSmokeArea>                                  SmokeAreas;                                              // 0x0170(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<TWeakObjectPtr<class UVehicleSeatComponent>>        CachedVehicleSeats;                                      // 0x0180(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AINSPatrolArea*>                              CachedPatrolAreas;                                       // 0x0190(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UINSAISquad*>                                 CachedSquads;                                            // 0x01A0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UCoverComponent*>                             CachedCover;                                             // 0x01B0(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<TWeakObjectPtr<class ASmartActor>>                  CachedSmartActors;                                       // 0x01C0(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<TWeakObjectPtr<class ADoor>>                        CachedDoors;                                             // 0x01D0(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<TWeakObjectPtr<class ASupplyCrate>>                 CachedSupplyCrates;                                      // 0x01E0(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AINSSoldier*                                         EQSProbe;                                                // 0x01F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AINSAISoldierController*>                     SpawnedBots;                                             // 0x01F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<unsigned char, int8_t>                                AmbusherCountByTeam;                                     // 0x0208(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_E23P[0x10];                                  // 0x0258(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     OccupiedWanderAreas;                                     // 0x0268(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class ANavigationData*, struct FModifiedNavAreasContainer> NavAreaModifications;                                    // 0x0278(0x0050) NativeAccessSpecifierPrivate

	public:
		void UpdateInvestigations();
		void ToggleAIPerception();
		class AINSAISoldierController* SpawnFakeClient(class ATeamInfo* Faction, class UClass* PawnClass, class UClass* AIControllerClass, TArray<class UPlayerClass*> PlayerClasses, bool bWantsPlayerState);
		class AINSAISoldierController* SpawnBot(class ATeamInfo* Faction, class UClass* PawnClass, const struct FVector& Location, bool bWantsPlayerState, class UPlayerClass* BotClass);
		void SetTargetPlayers(bool bState);
		void SetAINeutral(bool bState);
		void SetAIEnabled(bool bState);
		void SetAIDifficulty(float NewDifficulty);
		void RoundWon(bool bAttackers);
		bool IsInRadiusOfBurningGrenade(const struct FVector& Location);
		bool IsAIPerceptionEnabled();
		bool IsAINeutral();
		bool IsAIEnabled();
		TArray<class AINSAISoldierController*> GetSpawnedBots();
		TArray<struct FBotGrenadeTarget> GetGrenadeTargets();
		TArray<class ADoor*> GetDoors();
		TArray<class UINSAISquad*> GetAllSquads();
		TArray<class UCoverComponent*> GetAllCoverPoints(bool bOccupiedOnly);
		float GetAIDifficulty();
		TArray<class AProjectileGrenade*> GetActiveGrenades();
		TArray<class AProjectileGrenade*> GetActiveAndBurningGrenades();
		class UCoverComponent* FindBestCoverFromLocation(class AINSAISoldierController* Me, const struct FCoverSearchParams& SearchParams);
		bool EQS_GenerateSpawn(class AINSSoldier* Soldier, const struct FVector& GenerationLocation, struct FVector* OutSpawnLocation, bool bTesting);
		bool EQS_FindOutdoorLocation(const struct FVector& Location, float Radius, struct FVector* OutdoorLocation);
		bool EQS_FindNavigatableLocationWithLOS(const struct FVector& LOSLocation, struct FVector* OutLocation);
		bool EQS_FindInvestigation(class AINSSoldier* Soldier, class UBotInvestigation* Investigation, struct FVector* OutInvestigateLocation);
		bool EQS_FindFlank(class AINSSoldier* Soldier, struct FVector* OutFlankLocation);
		bool EQS_FindCover(class AINSSoldier* Soldier, const struct FCoverSearchParams& SearchParams, struct FVector* OutCoverLocation);
		void ClearCoverForBot(class AINSAISoldierController* Bot, const class FName& ReasonForClearing, bool bAvoidBriefly);
		bool CanTargetPlayers();
		bool AssignCoverToBot(class AINSAISoldierController* Bot, class UCoverComponent* Cover);
		void AddOrphanedBotsToNearbySquads(bool bForceMove, float SearchRadius);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BotInvestigation
	 * Size -> 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
	 */
	class UBotInvestigation : public UObject
	{
	public:
		unsigned char                                              UnknownData_0MAV[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Position;                                                // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T9WG[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Actor;                                                   // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBotInvestigationPriority                                  Priority;                                                // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCompleted;                                            // 0x0049(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HTAH[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     SearchedLocations;                                       // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     ClaimedSearchedLocations;                                // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		float GetTimeUntilFinished();
		float GetTimeSinceStarted();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ModifiedNavArea
	 * Size -> 0x01C8 (FullSize[0x01F0] - InheritedSize[0x0028])
	 */
	class UModifiedNavArea : public UObject
	{
	public:
		unsigned char                                              UnknownData_LUZX[0x50];                                  // 0x0028(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Actor;                                                   // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Nodes[0x50];                                             // 0x0080(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              DormantNodes[0x50];                                      // 0x00D0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              QueuedDormantNodes[0x50];                                // 0x0120(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              QueuedOverlappedNodes[0x50];                             // 0x0170(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_P7AZ[0x28];                                  // 0x01C0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ModifiedNavAreaClass;                                    // 0x01E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAIPerception
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	class UINSAIPerception : public UObject
	{
	public:
		class AINSAISoldierController*                             Controller;                                              // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBotMemoryHandler*                                   Memory;                                                  // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAIPerceptionComponent*                              PerceptionComponent;                                     // 0x0038(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SeePawn(class APawn* SeenPawn);
		void OnTargetPerceptionUpdate(class AActor* TriggeringActor, const struct FAIStimulus& Stimulus);
		void Initialize(class AINSAISoldierController* BotController, class UBotMemoryHandler* BotMemory, class UAIPerceptionComponent* Perception);
		void HearPawn(class APawn* HeardPawn, const struct FVector& Location, float Distance, bool bHasLOS);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAISoldierController
	 * Size -> 0x0158 (FullSize[0x0480] - InheritedSize[0x0328])
	 */
	class AINSAISoldierController : public AAIController
	{
	public:
		unsigned char                                              UnknownData_7OW2[0x20];                                  // 0x0328(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASpawnerBase*                                        ParentSpawner;                                           // 0x0348(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_T02Y[0x8];                                   // 0x0350(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSAIPerception*                                    AiPerception;                                            // 0x0358(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAISenseConfig_Sight*                                SightConfig;                                             // 0x0360(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAISenseConfig_INSHearing*                           HearingConfig;                                           // 0x0368(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1XJW[0x18];                                  // 0x0370(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             ReceivedEnemySeen;                                       // 0x0388(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ReceivedStateChange;                                     // 0x0398(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             EnemyKilledDelegate;                                     // 0x03A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             PossessDelegate;                                         // 0x03B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2SEO[0x8];                                   // 0x03C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AFireSupportBase*                                    AssociatedFireSupport;                                   // 0x03D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBotSkillConfig*                                     DefaultAIConfig;                                         // 0x03D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBotSkillConfig*                                     AIConfig;                                                // 0x03E0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZXOU[0x28];                                  // 0x03E8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DesiredMoveReason;                                       // 0x0410(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                DesiredLookReason;                                       // 0x0428(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class UBotMoodHandler*                                     MoodHandler;                                             // 0x0440(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBotMemoryHandler*                                   MemoryHandler;                                           // 0x0448(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBotObjectiveHandler*                                ObjectiveHandler;                                        // 0x0450(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBotCombatHandler*                                   CombatHandler;                                           // 0x0458(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBotBehaviorHandler*                                 BehaviorHandler;                                         // 0x0460(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UBotMovementHandler*                                 MovementHandler;                                         // 0x0468(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AINSSoldier*                                         CachedPawn;                                              // 0x0470(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W0D8[0x8];                                   // 0x0478(0x0008) MISSED OFFSET (PADDING)

	public:
		void ToggleMovement(bool bEnabled);
		void StopFiring();
		void StartFiringAtFocalPoint();
		bool Sidestep(float Cooldown);
		void SetDesiredStance(ESoldierStance NewStance);
		void SetAIEnabled(bool bEnabled);
		void SeePawn(class APawn* OtherPawn);
		void OnTargetSpotted(class UBotKnownTargetMemory* Target);
		void OnTargetLostLOS(class UBotKnownTargetMemory* Target);
		void OnTargetKilled(class UBotKnownTargetMemory* Target);
		void OnTargetGainedLOS(class UBotKnownTargetMemory* Target);
		void OnSquadMemberKilled(class AINSSoldier* KilledSoldier, bool bWasSquadLeader);
		void OnFriendlyLeftFiringAngle();
		void OnFriendlyInFiringAngle();
		void OnFinishedPatrol();
		void OnAIStateChange(EAIControllerState* OldState, EAIControllerState* NewState);
		EPathFollowingRequestResult MoveToOverride(const struct FVector& Destination, EAIDesiredLocomotion MoveType, ESoldierStance Stance, EAIDesiredLocomotionPriority Priority, bool bIgnoreDeathAreas, float AcceptRadius, bool bAllowPartialPath);
		EPathFollowingRequestResult MoveToLocationSafe(const struct FVector& Destination, const class FString& Reason, EAIDesiredLocomotion MoveType, ESoldierStance Stance, EAIDesiredLocomotionPriority Priority, bool bIgnoreDeathAreas, float AcceptRadius, bool bAllowPartialPath);
		EPathFollowingRequestResult MoveToActorSafe(class AActor* DestinationActor, const class FString& Reason, EAIDesiredLocomotion MoveType, ESoldierStance Stance, EAIDesiredLocomotionPriority Priority, bool bIgnoreDeathAreas, float AcceptRadius, bool bAllowPartialPath);
		bool LookAtLocation(const struct FVector& Location, EAIDesiredLookAtPriority Priority, const class FString& LookReason, float Duration);
		bool LookAtActor(class AActor* Actor, EAIDesiredLookAtPriority Priority, const class FString& LookReason, float Duration);
		bool LineOfSightToLocation(const struct FVector& Location, bool bShowDebug);
		bool IsTeamMate(class AINSSoldier* Target);
		bool IsTargetFacingMe(class UBotKnownTargetMemory* Target, float AngleThreshold);
		bool IsSquadLeader();
		bool IsSmokeBlockingVisionToLocation(const struct FVector& Location);
		bool IsFriendlyInFiringLine();
		bool IsFriendlyInFiringAngle(float AngleThreshold);
		bool IsAIEnabled();
		void HearNoise(class APawn* OtherActor, const struct FVector& Location, float Distance, bool bHasLOS);
		unsigned char GetTeamId();
		class UCoverComponent* GetSquadLeaderCover();
		class UINSAISquad* GetSquad();
		class AINSSoldier* GetSoldier();
		class UBotObjectiveHandler* GetObjectives();
		class UBotMovementHandler* GetMovementHandler();
		class UBotMoodHandler* GetMood();
		class UBotMemoryHandler* GetMemory();
		class AItemFirearm* GetFirearm();
		EAIDesiredLocomotion GetDesiredLocomotionType();
		class UBotCombatHandler* GetCombatHandler();
		float GetChanceToSpotTarget(class UBotKnownTargetMemory* Target);
		class UBotBehaviorHandler* GetBehaviorHandler();
		float GetAngleToLocationFromEyeDirection(const struct FVector& Location);
		void ForgetEverything();
		void ClearLookAt();
		bool CanSidestep();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAIVehicleController
	 * Size -> 0x0080 (FullSize[0x03A8] - InheritedSize[0x0328])
	 */
	class AINSAIVehicleController : public AAIController
	{
	public:
		TWeakObjectPtr<class ASpawnerVehicle>                      Spawner;                                                 // 0x0328(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Destination;                                             // 0x0330(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NEL8[0x14];                                  // 0x033C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AVehicleBase*                                        ConvoyVehicleAhead;                                      // 0x0350(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UINSAISquad*                                         AISquad;                                                 // 0x0358(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_1LXF[0x48];                                  // 0x0360(0x0048) MISSED OFFSET (PADDING)

	public:
		bool IsStuck();
		class AVehicleBase* GetVehicle();
		class UINSAISquad* GetAISquad();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAISplineVehicleController
	 * Size -> 0x0008 (FullSize[0x03B0] - InheritedSize[0x03A8])
	 */
	class AINSAISplineVehicleController : public AINSAIVehicleController
	{
	public:
		unsigned char                                              UnknownData_0FKL[0x8];                                   // 0x03A8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAISquad
	 * Size -> 0x0150 (FullSize[0x0178] - InheritedSize[0x0028])
	 */
	class UINSAISquad : public UObject
	{
	public:
		unsigned char                                              UnknownData_QJ90[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class AINSSoldier*, EAISquadRole>                     SquadRoleMap;                                            // 0x0030(0x0050) NativeAccessSpecifierPublic
		int32_t                                                    MaxSquadSize;                                            // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TeamId;                                                  // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PSAR[0x28];                                  // 0x0088(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBotInvestigation*                                   ActiveInvestigation;                                     // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UBotInvestigation*>                           PendingInvestigations;                                   // 0x00B8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AObjectiveBase*                                      TargetObjective;                                         // 0x00C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class AINSSoldier>                          SquadLeader;                                             // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YICZ[0x10];                                  // 0x00D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AEntranceZone*                                       TargetObjectiveEntrance;                                 // 0x00E8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VDA6[0x8];                                   // 0x00F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAISquadPath                                        TargetSquadPath;                                         // 0x00F8(0x0080) NativeAccessSpecifierPrivate

	public:
		void UpdateMemberDestination(class AINSSoldier* Soldier, const struct FVector& Destination);
		bool RemovePawnFromSquad(class AINSSoldier* RemovedMember, bool bWasDeath);
		void PurgeInvestigation(class UBotInvestigation* Investigation);
		void OnSoldierReachedObjectiveEntrance(class AINSSoldier* Soldier, class AEntranceZone* EntranceZone);
		bool IsSquadMemberPlayingDialogue(ECharacterResponse Response);
		int32_t GetTeamId();
		class AEntranceZone* GetTargetObjectiveEntrance();
		class AObjectiveBase* GetTargetObjective();
		int32_t GetSquadPosition(class AINSSoldier* Member);
		TMap<class AINSSoldier*, struct FVector> GetSquadMembersDestinations();
		TArray<class AINSSoldier*> GetSquadMembers();
		class AINSSoldier* GetSquadLeader();
		EAISquadRole GetRoleForSoldier(class AINSSoldier* Soldier);
		TArray<class UBotInvestigation*> GetPendingInvestigations();
		TArray<class AINSSoldier*> GetMovementGroup(class AINSSoldier* Soldier);
		int32_t GetMaxSquadSize();
		class UBotInvestigation* GetContestedObjective(class AINSSoldier* Investigator);
		TArray<struct FVector> GetActualSquadPathLocations(class AINSSoldier* Soldier);
		class UBotInvestigation* GetActiveInvestigation();
		int32_t CountSquadMembers();
		struct FVector CenterPosition();
		bool AddPawnToSquad(class AINSSoldier* NewMember, bool bIsLeader);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAmbushGameMode
	 * Size -> 0x00B8 (FullSize[0x0A60] - InheritedSize[0x09A8])
	 */
	class AINSAmbushGameMode : public AINSMultiplayerMode
	{
	public:
		class AINSSoldier*                                         VIPPlayer;                                               // 0x09A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPlayerClass*                                        ClassBeforeVIP;                                          // 0x09B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AController*                                         VIPController;                                           // 0x09B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RY69[0x50];                                  // 0x09C0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CaptureSpeedMultiplier;                                  // 0x0A10(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XDKG[0xC];                                   // 0x0A14(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeForVIPRespawn;                                       // 0x0A20(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bStatWasVIPHeadshoted;                                   // 0x0A24(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IG55[0x3];                                   // 0x0A25(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAmbushScenarioData*                                 CurrentAmbushScenarioData;                               // 0x0A28(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USequenceHelperAmbush*                               ValidSequenceHelperPtr;                                  // 0x0A30(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AINSSoldier*>                                 PlayersToExtract;                                        // 0x0A38(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z0JA[0x15];                                  // 0x0A48(0x0015) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bVIPCapturedPoint;                                       // 0x0A5D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F5Z6[0x2];                                   // 0x0A5E(0x0002) MISSED OFFSET (PADDING)

	public:
		class AINSSoldier* GetVIPSoldier();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAssetManager
	 * Size -> 0x03E8 (FullSize[0x0820] - InheritedSize[0x0438])
	 */
	class UINSAssetManager : public UAssetManager
	{
	public:
		unsigned char                                              UnknownData_9B3L[0x158];                                 // 0x0438(0x0158) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              WorldBankAssets[0x50];                                   // 0x0590(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              BaseBanksInMemory[0x50];                                 // 0x05E0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              ScenarioBanksInMemory[0x50];                             // 0x0630(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              PersistentBanksInMemory[0x50];                           // 0x0680(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              PreloadedCosmetics[0x50];                                // 0x06D0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_0WM0[0x10];                                  // 0x0720(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FSelectedCosmetic>                    CosmeticItems;                                           // 0x0730(0x0050) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IX20[0xA0];                                  // 0x0780(0x00A0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAudioComponent
	 * Size -> 0x0040 (FullSize[0x0410] - InheritedSize[0x03D0])
	 */
	class UINSAudioComponent : public UAkComponent
	{
	public:
		bool                                                       bRegisterWithSoundscape;                                 // 0x03D0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4JAB[0x1];                                   // 0x03D1(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bEnable2DDistanceRTPC;                                   // 0x03D2(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableRelativeSpeedRTPC;                                // 0x03D3(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoPlayAssociatedEvent;                                // 0x03D4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4LNU[0x3B];                                  // 0x03D5(0x003B) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSBasePlayerController
	 * Size -> 0x02C8 (FullSize[0x0838] - InheritedSize[0x0570])
	 */
	class AINSBasePlayerController : public APlayerController
	{
	public:
		class AHUDBase*                                            CachedHUDBase;                                           // 0x0570(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                         GenericMenuWidget;                                       // 0x0578(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerSettingsUpdatedDelegate;                         // 0x0580(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TMap<class UAkAudioEvent*, struct FPlayerSoundscapeState>  SoundscapeState;                                         // 0x0590(0x0050) ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_V22W[0x10];                                  // 0x05E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnShowRoundOverUIDelegate;                               // 0x05F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnHideRoundOverUIDelegate;                               // 0x0600(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnShowMatchOverUIDelegate;                               // 0x0610(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnShowRoundOverRewardsDelegate;                          // 0x0620(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             MatchStateUpdateDelegate;                                // 0x0630(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             SubMatchStateUpdateDelegate;                             // 0x0640(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             RefreshTeamsDelegate;                                    // 0x0650(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             RefreshMutatorsDelegate;                                 // 0x0660(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             RefreshObjectivesDelegate;                               // 0x0670(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveCaptureDelegate;                              // 0x0680(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveDestroyedDelegate;                            // 0x0690(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             PawnTookDamageDelegate;                                  // 0x06A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSetViewTargetDelegate;                                 // 0x06B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnShowCenterMessageDelegate;                             // 0x06C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerKilledDelegate;                                  // 0x06D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnScoreboardShownDelegate;                               // 0x06E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bShowMap;                                                // 0x06F0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScoreboardActive;                                       // 0x06F1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WXYW[0x6];                                   // 0x06F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUserWidget*                                         ActiveTacticalMapWidget;                                 // 0x06F8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              TacticalMapWidget;                                       // 0x0700(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CurrentMinimapZoomLevel;                                 // 0x0708(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SMZT[0xC];                                   // 0x070C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnNewHintDelegate;                                       // 0x0718(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnHintExpiredDelegate;                                   // 0x0728(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnHintMoreInfoDelegate;                                  // 0x0738(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FHintInfo                                           ActiveHint;                                              // 0x0748(0x0010) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bHintIsActive;                                           // 0x0758(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SVDV[0xF];                                   // 0x0759(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHintInfo>                                   QueuedHints;                                             // 0x0768(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WYPJ[0x8];                                   // 0x0778(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneCaptureComponent2D*                            ScopeSceneCapture;                                       // 0x0780(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnKilledFriendlyDelegate;                                // 0x0788(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  RadioComponent;                                          // 0x0798(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              HighlightsManagerClass[0x28];                            // 0x07A0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class AActor*                                              HighlightsManager;                                       // 0x07C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YGBM[0x8];                                   // 0x07D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OpenNVIDIAHighlightsDelegate;                            // 0x07D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             DestroyNVIDIAHighlightsDelegate;                         // 0x07E8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bIsAdmin;                                                // 0x07F8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0L8U[0x7];                                   // 0x07F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AdminMenuWidget;                                         // 0x0800(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bIsAdminMenuEnabled;                                     // 0x0808(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WID2[0x7];                                   // 0x0809(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             AdminReceivedLevelListDelegate;                          // 0x0810(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             AdminReceivedScenarioListDelegate;                       // 0x0820(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TH7A[0x8];                                   // 0x0830(0x0008) MISSED OFFSET (PADDING)

	public:
		void UpdateMinimapZoomLevel(float Axis);
		void UpdateInputMode(bool bForce);
		void UpdatedPlayerSettings();
		void UnmutePlayerState(class APlayerState* OtherPlayerState);
		void ToggleDebugMenu();
		void ToggleAdminMenu();
		void ShowScoreboard(bool bShow);
		void ShowRoundOverUIDelegate__DelegateSignature(const struct FPlayerRoundOverData& UIData);
		void ShowMatchOverUIDelegate__DelegateSignature(const struct FPlayerMatchOverData& UIData);
		void ShowMap();
		class UUserWidget* ShowGenericMenu(class UClass* WidgetClass);
		bool ShouldHintLesson(class UClass* Lesson, class ALessonArea* LessonArea);
		void SetVideo(const class FString& GroupId, const class FString& HighlightId, int32_t StartDelta, int32_t EndDelta);
		void SetGenericMenu(class UUserWidget* Widget);
		void SetActiveHint(class UClass* Lesson, float HintTime, bool bPlayVideo, bool bPause);
		void Server_AdminUnbanPlayer(const class FString& UniqueId);
		void Server_AdminTravelScenario(const class FString& Scenario);
		void Server_AdminTravelMap(const class FString& TravelArgs);
		void Server_AdminTravel(const class FString& Level, const class FString& Scenario);
		void Server_AdminSetGamemodeProperty(const class FString& Property, const class FString& Value);
		void Server_AdminRestartRound(bool bSwitchTeams);
		void Server_AdminRestartLevel();
		void Server_AdminRespawnAllPlayers();
		void Server_AdminRequestScenarios(const class FString& LevelName);
		void Server_AdminRequestLevels();
		void Server_AdminKickPlayer(int32_t PlayerId);
		void Server_AdminGetGamemodeProperty(const class FString& Property);
		void Server_AdminForceGameOver();
		void Server_AdminExtendRoundTimer();
		void Server_AdminEndRound(bool bVictory);
		void Server_AdminDebugPlayerState();
		void Server_AdminDebugLightLevels();
		void Server_AdminConsoleCommand(const class FString& Command);
		void Server_AdminCheat(const class FString& Command);
		void Server_AdminBypassWaitingState();
		void Server_AdminBroadcastMusic(EMusicEvent Event);
		void Server_AdminBeginProfiling(bool bStopAtRoundEnd);
		void Server_AdminBanPlayer(int32_t PlayerId, float BanDuration);
		void RoundOverRewardsDelegate__DelegateSignature(int32_t RoundNumber, const struct FGameStatsRoundReward& Rewards);
		void ReturnToMainMenu();
		void ResetPlayerAccount();
		void RefreshTeamsDelegate__DelegateSignature();
		void RefreshObjectivesDelegate__DelegateSignature();
		void RefreshMutatorsDelegate__DelegateSignature();
		void PrintAvailableFireSupport();
		void PlayerSettingsUpdatedDelegate__DelegateSignature();
		void PlayerAdminReceivedScenarioList__DelegateSignature(TArray<class FString> Scenarios);
		void PlayerAdminReceivedLevelList__DelegateSignature(TArray<class FString> LevelNames);
		void OpenNVIDIAHighlights();
		void OnSoundscapeUpdate(const struct FSoundscapeStateRepl& NewState);
		void OnShowCenterMessageDelegate__DelegateSignature(const class FText& MessageText);
		void OnSetViewTargetDelegate__DelegateSignature(class AActor* NewViewTarget);
		void OnScoreboardShownDelegate__DelegateSignature(bool bShow);
		void OnQueuedHintReady();
		void OnPlayerReportingStart();
		void OnPlayerReportingEnd();
		void OnPlayerKillEvent(const struct FSoldierKillInfo& SoldierKillInfo);
		void OnLocalPlayerProfileUpdated(EProfileBlockType SavedBlockType);
		void OnHUDDisplayOptionChanged();
		void OnHighlightsPreferencesChanged();
		void OnActiveHintExpired();
		void MutePlayerState(class APlayerState* OtherPlayerState);
		bool IsUsingGamepad();
		bool IsSpectator();
		bool IsReportingPlayer();
		bool IsPlayerStateMuted(class APlayerState* OtherPlayerState);
		bool IsInFirstPersonFor(class UObject* Object);
		void InitNVIDIAHighlights(bool bNeedsPlayerState);
		void InformIncomingHint(class UClass* Lesson, float HintTime, bool bQueueIfBusy, bool bPlayVideo, bool bForceShow, bool bPauseGame, class ALessonArea* LessonArea);
		void HideRoundOverUIDelegate__DelegateSignature();
		void HideOpenMenu();
		void HideMap();
		void HideHint(class UClass* Lesson);
		class UINSPlayerLocalProfile* GetLocalProfile();
		class UINSLocalPlayer* GetLocalPlayer();
		class AINSPlayerState* GetINSPlayerState();
		class AHUDBase* GetHUDBase();
		void DestroyNVIDIAHighlights(bool bDeleteHighlights);
		void ClientTeamMessageText(class APlayerState* SenderPlayerState, const class FText& InText, const class FName& Type, float MsgLifeTime);
		void ClientShowFriendlyKillWarning(int32_t TeamKills, int32_t Limit);
		void ClientRoundOverRewards(int32_t RoundNumber, const struct FGameStatsRoundReward& Rewards);
		void ClientReceivedRoundOver(const struct FPlayerRoundOverData& UIData);
		void ClientReceivedMatchOver(const struct FPlayerMatchOverData& UIData);
		void ClientPlayIncomingRadioEventSpectator(class UAkAudioEvent* Event, int32_t Seed, bool bOnlyOfficerOrObserver, unsigned char TeamId);
		void ClientPlayIncomingRadioEvent(class UAkAudioEvent* Event, int32_t Seed);
		void ClientPlayerKillNotice(const struct FPlayerKillNotice& Notice);
		void ClientPawnReceivedDamage(float Damage, class AINSSoldier* Target, const struct FVector& HitSource, const struct FVector& HitDirection, class AController* EventInstigator, class AActor* DamageCauser, const class FString& BoneName);
		void ClientObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers);
		void ClientObjectiveCapture(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
		void ClientMessageText(const class FText& Text, const class FName& Type, float MsgLifeTime);
		void Client_AdminReceiveScenarios(TArray<class FString> Scenarios);
		void Client_AdminReceiveLevels(TArray<class FString> LevelNames);
		void AdminUnbanPlayer(const class FString& UniqueId);
		void AdminTravelScenario(const class FString& Scenario);
		void AdminTravelMap(const class FString& TravelArgs);
		void AdminSetGamemodeProperty(const class FString& Property, const class FString& Value);
		void AdminRestartRound(bool bSwitchTeams);
		void AdminRespawnAllPlayers();
		void AdminKickPlayer(int32_t PlayerId);
		void AdminGetGamemodeProperty(const class FString& Property);
		void AdminForceGameOver();
		void AdminExtendRoundTimer();
		void AdminDebugPlayerState();
		void AdminDebugLightLevels();
		void AdminConsoleCommand(const class FString& Command);
		void AdminCheat(const class FString& Command);
		void AdminBanPlayer(int32_t PlayerId, float BanDuration);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSAIBlueprintLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UINSAIBlueprintLibrary : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsWithEditor();
		class UClass* STATIC_GetNavAreaClassAtLocation(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Extents);
		class UINSAIDirector* STATIC_GetAIDirector(class UObject* WorldContextObject);
		void STATIC_ChangeNavAreaAtLocation(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Extents, class UClass* NewAreaClass, float Duration);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSBlueprintBuildMetadata
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UINSBlueprintBuildMetadata : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsCTE();
		bool STATIC_IsConsoleBeta();
		class FString STATIC_GetPlatformUserID();
		class FString STATIC_GetGameVersion();
		int32_t STATIC_GetChangelist();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSBlueprintLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UINSBlueprintLibrary : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_WWiseGetListenerPositions(TArray<struct FVector>* Positions);
		void STATIC_UpdateInertialEasing(struct FInertialEasingContainer1D* Easing, class UObject* WorldContextObject);
		void STATIC_UpdateDampingEasing(struct FDampingEasingContainer3D* Easing, class UObject* WorldContextObject);
		bool STATIC_StringLessThan(const class FString& Left, const class FString& Right);
		struct FVector STATIC_SoftLimitVector(const struct FVector& X, const struct FVector& LimitStart, const struct FVector& LimitEnd);
		float STATIC_SoftLimitFloat(float X, float LimitStart, float LimitEnd);
		void STATIC_SimpleAssetUnload(const struct FSoftObjectPath& AssetToUnload);
		void STATIC_SimpleAssetSyncLoad();
		void STATIC_SetInertialEasingTarget(struct FInertialEasingContainer1D* Easing, class UObject* WorldContextObject, float NewTarget);
		void STATIC_SetDampingEasingTarget(struct FDampingEasingContainer3D* Easing, class UObject* WorldContextObject, const struct FVector& NewTarget);
		float STATIC_RotatorAngularDistance(const struct FRotator& rotatorA, const struct FRotator& rotatorB);
		void STATIC_PlayWorldShellShock(class UObject* WorldContextObject, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float InnerDuration, float OuterDuration, class AActor* DamageCauser);
		struct FLinearColor STATIC_MakeFromColorTemperature(float Temperature);
		bool STATIC_IsLoggedInToEOS();
		bool STATIC_IsLinkingEnabled(const class FName& InService);
		bool STATIC_IsGamePadConnected();
		bool STATIC_IsFreeWeekendUser();
		bool STATIC_IsEGSBuild();
		bool STATIC_IsConsolePlatform();
		bool STATIC_HasNvidiaGPU();
		bool STATIC_HasIntelGPU();
		bool STATIC_HasAMDGPU();
		void STATIC_GetTotalPlayableArea(class UObject* WorldContextObject, struct FVector* Center, struct FBox* Extents);
		class FName STATIC_GetPlatformOSSName();
		float STATIC_GetPenetrationPower(class UClass* AmmoClass, float EvaluationVelocity);
		class UUserWidget* STATIC_GetPendingDialog(class UObject* WorldContextObject, bool bIsVisible);
		class UINSParty* STATIC_GetPartyManager();
		void STATIC_GetOverviewAreaScenario(class UObject* WorldContextObject, struct FVector* Center, struct FBox* Extents);
		class FText STATIC_GetLocalizedTextForCharacterResponse(ECharacterResponse Value);
		struct FMatchScoreChange STATIC_GetLastMatchScoreChange();
		class APlayerController* STATIC_GetFirstLocalPlayerController(class UObject* WorldContextObject);
		bool STATIC_GetAllScenariosForMaps(TArray<class FString> MapNames, TArray<struct FScenarioAssetInfo>* OutScenarioNames);
		bool STATIC_GetAllScenariosForMap(const class FString& MapName, TArray<struct FScenarioAssetInfo>* OutScenarioNames);
		bool STATIC_GetAllMapNames(TArray<class FString>* OutMapNames);
		bool STATIC_GetAllLocalizedMapNames(TArray<class FString>* OutMapNames);
		bool STATIC_FirearmHasFiremode(class UClass* FirearmClass, EFirearmFiremode Firemode);
		bool STATIC_CheckFirstPerson(class UObject* Target);
		void STATIC_CalcInertialEasing(struct FInertialEasingContainer1D* Easing, class UObject* WorldContextObject, float* Position, float* Velocity);
		void STATIC_CalcDampingEasing(struct FDampingEasingContainer3D* Easing, class UObject* WorldContextObject, struct FVector* Position);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSCaptureTheBaseGameMode
	 * Size -> 0x0018 (FullSize[0x09C0] - InheritedSize[0x09A8])
	 */
	class AINSCaptureTheBaseGameMode : public AINSMultiplayerMode
	{
	public:
		int32_t                                                    StartingWaves;                                           // 0x09A8(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CapturingBonusWave;                                      // 0x09AC(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       Team1ReinforcementSystem;                                // 0x09B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       Team2ReinforcementSystem;                                // 0x09B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void CheckCustomEliminationRules();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSCheatManager
	 * Size -> 0x0040 (FullSize[0x00B8] - InheritedSize[0x0078])
	 */
	class UINSCheatManager : public UCheatManager
	{
	public:
		unsigned char                                              UnknownData_M74I[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnDisplayLicenseAgreementDialogDelegate;                 // 0x0080(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class AINSAISoldierController*                             DebugAIController;                                       // 0x0090(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SpawnedAIGoalLocation;                                   // 0x0098(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MM4K[0x14];                                  // 0x00A4(0x0014) MISSED OFFSET (PADDING)

	public:
		void TestNavSpawning();
		void TeleportToObjective(int32_t ObjectiveId);
		void SuppressMe(float Suppression, float HoldTime);
		void SpewSpawnZones();
		void SpawnFireSupport(class FString* FireSupportClassName, bool bEnemy);
		void SetRoundTimer(int32_t Seconds);
		void SetExperience(int32_t Experience);
		void SABER_SetMapDownloadSpeed(int32_t SpeedType);
		void SABER_SendInvite(const class FString& TargetUserId);
		void SABER_QuerySanctions();
		void SABER_QueryExternalAccountId(const class FString& AccountId);
		void SABER_OpenInviteUI();
		void SABER_LeaveParty();
		void SABER_DisplayInviteId();
		void SABER_CreateParty();
		void RevertConfirmableEvents();
		void ResupplyNow();
		void RespawnMe();
		void RemoveWeaponUpgrade(class FString* UpgradeClass);
		void OnDisplayLicenseAgreementDialog__DelegateSignature();
		void Noclip();
		void InstaCap();
		void IgnoreRoundOver(bool bIgnoreRoundOver);
		void HurtMe(float DamageAmount);
		void GoToLocation(class FString* Location);
		void GodModeAllPlayer();
		void GodMode();
		void GiveWeaponUpgrade(class FString* UpgradeClass);
		void GiveWeapon(class FString* WeaponClass);
		void GiveSupplyPoints(int32_t Count);
		void GiveItem(class FString* ItemClass);
		void GiveAmmo(int32_t Count);
		class AINSSoldier* GetOuterSoldier();
		void ForceObjectiveCapture();
		void Debug_UpdateAchievementProgress(const class FString& ID, float Percent);
		void BlindMe(float Duration, float FadeTime, float Suppression);
		void AIToggle();
		void AISpawn();
		void AISetBotsAmount(int32_t Amount);
		void AIRespawnFriendlyBots();
		void AIRespawnEnemyBots();
		void AIRespawnBots();
		void AIPurgeFriendly();
		void AIPurgeEnemy();
		void AIPurge();
		void AiPerceptionToggle();
		void AINoTargetPlayer();
		void AIModifyMorale(float Amount);
		void AIDifficulty(float NewDifficulty);
		void AIDebugThreats();
		void AIDebugHUDSpectate();
		void AIDebugHUD();
		void AddCompassTestMarker();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CheckpointCounterAttackTypes
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UCheckpointCounterAttackTypes : public UDataAsset
	{
	public:
		TArray<struct FCheckpointCounterAttackDefinition>          CounterAttackDefinitions;                                // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSCoopMode
	 * Size -> 0x0128 (FullSize[0x0AD0] - InheritedSize[0x09A8])
	 */
	class AINSCoopMode : public AINSMultiplayerMode
	{
	public:
		bool                                                       bBotsUseHumanLoadouts;                                   // 0x09A8(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZRL5[0x7];                                   // 0x09A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USquadLayout*                                        OverrideBotSquadLayoutAllFactions;                       // 0x09B0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              OverrideBotSquadLayouts[0x50];                           // 0x09B8(0x0050) UNKNOWN PROPERTY: MapProperty
		class AVehicleBase*                                        PlayerInsertionVehicle;                                  // 0x0A08(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class AVehicleBase*>                                InsertionVehicles;                                       // 0x0A10(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class ASpawnerVehicle*>                             InsertionVehicleSpawners;                                // 0x0A20(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bForceSoloWaves;                                         // 0x0A30(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bSupportsSoloWaves;                                      // 0x0A31(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UQBX[0x6];                                   // 0x0A32(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UReinforcementSystemComponent*                       SoloReinforcementSystem;                                 // 0x0A38(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              SoloWaves;                                               // 0x0A40(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              SoloWaveIncrementOnObjectiveCapture;                     // 0x0A41(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_AFLF[0x2];                                   // 0x0A42(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SoloReinforcementTime;                                   // 0x0A44(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SoloRoundTime;                                           // 0x0A48(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    MaxPlayersToScaleEnemyCount;                             // 0x0A4C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseVehicleInsertion;                                    // 0x0A50(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMNB[0x3];                                   // 0x0A51(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AIDifficulty;                                            // 0x0A54(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FriendlyBotQuota;                                        // 0x0A58(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SoloEnemies;                                             // 0x0A5C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinimumEnemies;                                          // 0x0A60(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumEnemies;                                          // 0x0A64(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoseWhenAllPlayersDead;                                 // 0x0A68(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V1ZX[0x3];                                   // 0x0A69(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AlarmDuration;                                           // 0x0A6C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZKF3[0x8];                                   // 0x0A70(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UPlayerClass*, float>                           ClassDeathTimestamp;                                     // 0x0A78(0x0050) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NM22[0x8];                                   // 0x0AC8(0x0008) MISSED OFFSET (PADDING)

	public:
		bool UseSoloModeWaveRules();
		void StartAlarms();
		void RetreatBotsFromObjective(class AObjectiveBase* RetreatObjective, EMoraleAdjustmentReason Reason);
		void OnAllHumanPlayersEliminated();
		bool IsSplitScreen();
		void EnableBotSenses();
		void DisableBotSenses();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSCheckpointGameMode
	 * Size -> 0x0160 (FullSize[0x0C30] - InheritedSize[0x0AD0])
	 */
	class AINSCheckpointGameMode : public AINSCoopMode
	{
	public:
		float                                                      BotAmbushRatioCheckpointMinDeaths;                       // 0x0AD0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotAmbushRatioCheckpointMaxDeaths;                       // 0x0AD4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AVehicleBase*>                                PendingVehicleEnters;                                    // 0x0AD8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCheckpointCounterAttackTypes*                       OverrideCounterAttackType;                               // 0x0AE8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefendTimer;                                             // 0x0AF0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefendTimerFinal;                                        // 0x0AF4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RetreatTimer;                                            // 0x0AF8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RespawnDPR;                                              // 0x0AFC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RespawnDelay;                                            // 0x0B00(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCounterAttackReinforce;                                 // 0x0B04(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OIDA[0x3];                                   // 0x0B05(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PostCaptureRushTimer;                                    // 0x0B08(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CounterAttackRespawnDPR;                                 // 0x0B0C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CounterAttackRespawnDelay;                               // 0x0B10(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObjectiveTotalEnemyRespawnMultiplierMin;                 // 0x0B14(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObjectiveTotalEnemyRespawnMultiplierMax;                 // 0x0B18(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FinalCacheBotQuotaMultiplier;                            // 0x0B1C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AObjectiveBase*                                      ActiveObjective;                                         // 0x0B20(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YHRU[0x17];                                  // 0x0B28(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bUseRandomCounterAttackTypes;                            // 0x0B3F(0x0001) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FTimerHandle                                        CounterAttackResponseTimer;                              // 0x0B40(0x0008) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_U0DQ[0x8];                                   // 0x0B48(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCheckpointCounterAttackDefinition                  CounterAttackDefinition;                                 // 0x0B50(0x0030) Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_CGV9[0x8];                                   // 0x0B80(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class AObjectiveBase*, struct FCachedSpawnLocation>   SpawnLocationsForObjective;                              // 0x0B88(0x0050) NativeAccessSpecifierPrivate
		TMap<class ASpawnZoneCounterAttack*, struct FCachedSpawnLocation> SpawnLocationsForCounterAttack;                          // 0x0BD8(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YEY7[0x8];                                   // 0x0C28(0x0008) MISSED OFFSET (PADDING)

	public:
		bool TryPlaceBotsInSpawnedVehicle(class AVehicleBase* Vehicle);
		void RespawnBotTeamPostObjective();
		void PlayCounterAttackResponse();
		void OnStartDefending();
		void OnFinishRetreat();
		void OnFinishDefending();
		class AObjectiveBase* GetActiveObjective();
		void CheatRespawnBotsRandomCounterAttackClass();
		void CheatFinishCounterAttack();
		void CheatCounterAttack();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CheckpointHardcoreLoadouts
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UCheckpointHardcoreLoadouts : public UDataAsset
	{
	public:
		unsigned char                                              LoadoutsForFaction[0x50];                                // 0x0030(0x0050) UNKNOWN PROPERTY: MapProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSCheckpointHardcoreGameMode
	 * Size -> 0x0088 (FullSize[0x0CB8] - InheritedSize[0x0C30])
	 */
	class AINSCheckpointHardcoreGameMode : public AINSCheckpointGameMode
	{
	public:
		float                                                      AmmoBoxSpawnChance;                                      // 0x0C30(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxAmmoPerObjective;                                     // 0x0C34(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinAmmoPerObjective;                                     // 0x0C38(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStripWeaponsOnRespawn;                                  // 0x0C3C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RQ8X[0x3];                                   // 0x0C3D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLoadoutWeapon>                              RandonPrimaryWeaponsToGiveOnSpawn;                       // 0x0C40(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinObjectiveForCrate;                                    // 0x0C50(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxObjectiveForCrate;                                    // 0x0C54(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASupplyCrate*                                        RandomSupplyCrate;                                       // 0x0C58(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_432M[0x8];                                   // 0x0C60(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      PlayersWhoHaveSpawnedWithLoadout;                        // 0x0C68(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RespawnLoadoutsDataAssetPath[0x28];                      // 0x0C78(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UCheckpointHardcoreLoadouts*                         RespawnLoadoutsDataAsset;                                // 0x0CA0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K708[0x10];                                  // 0x0CA8(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSCheckpointTutorialGameMode
	 * Size -> 0x0010 (FullSize[0x0C40] - InheritedSize[0x0C30])
	 */
	class AINSCheckpointTutorialGameMode : public AINSCheckpointGameMode
	{
	public:
		class AObjectiveBase*                                      ForcedBotObjective;                                      // 0x0C30(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_T64K[0x8];                                   // 0x0C38(0x0008) MISSED OFFSET (PADDING)

	public:
		void ForceEnemyBotsToObjective(class AObjectiveBase* Objective);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSConvoyGameMode
	 * Size -> 0x0020 (FullSize[0x09C8] - InheritedSize[0x09A8])
	 */
	class AINSConvoyGameMode : public AINSMultiplayerMode
	{
	public:
		class UReinforcementSystemComponent*                       AttackerReinforcementSystem;                             // 0x09A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       DefenderReinforcementSystem;                             // 0x09B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AObjectiveBase*                                      ActiveObjective;                                         // 0x09B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoundTimeExtension;                                      // 0x09C0(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_79CK[0x4];                                   // 0x09C4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSDamageTypeCheat
	 * Size -> 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
	 */
	class UINSDamageTypeCheat : public UINSDamageType
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSDemoNetDriver
	 * Size -> 0x0008 (FullSize[0x1128] - InheritedSize[0x1120])
	 */
	class UINSDemoNetDriver : public UDemoNetDriver
	{
	public:
		unsigned char                                              UnknownData_DH8W[0x8];                                   // 0x1120(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSDemoSpectator
	 * Size -> 0x00C8 (FullSize[0x0900] - InheritedSize[0x0838])
	 */
	class AINSDemoSpectator : public AINSBasePlayerController
	{
	public:
		struct FTimerHandle                                        TimerHandle_ScenarioLoad;                                // 0x0838(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnScrubToTimeCompleteDelegate;                           // 0x0840(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnScrubbingStateChangedDelegate;                         // 0x0850(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      PlaybackSpeed;                                           // 0x0860(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1W3I[0x4];                                   // 0x0864(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AHUDReplay*                                          ReplayHud;                                               // 0x0868(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScrubbingToTime;                                        // 0x0870(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_15IT[0x3];                                   // 0x0871(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ReplayLightingScenario;                                  // 0x0874(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasMenuHiddenOnKeyDown;                                 // 0x087C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T1GK[0x3];                                   // 0x087D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AHUDMultiplayer*                                     MultiplayerHud;                                          // 0x0880(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInGameMenuWidget*                                   InGameMenuInstance;                                      // 0x0888(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_G6F9[0x58];                                  // 0x0890(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        HealthSnapshotTimer;                                     // 0x08E8(0x0008) Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bBenchmarkStatCapture;                                   // 0x08F0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bBenchmarkStatCaptureActive;                             // 0x08F1(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8UUE[0x2];                                   // 0x08F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BenchmarkStatCaptureStart;                               // 0x08F4(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      BenchmarkStatCaptureDuration;                            // 0x08F8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      BenchmarkStatCaptureWarmup;                              // 0x08FC(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void TogglePauseReplay();
		void ToggleInGameMenu();
		void SpectatePreviousPlayer();
		void SpectateNextPlayer();
		void ShowInGameMenu();
		void SetViewTargetPlayerState(class APlayerState* InPlayerState);
		void ScrubToTime(float TimeSeconds);
		void PauseReplay(bool bPaused);
		void OnScrubToTimeComplete__DelegateSignature(bool bSuccessful);
		void OnScrubbingStateChangedDelegate__DelegateSignature(bool bIsScrubbing);
		bool IsReplayPaused();
		void IncreasePlaybackSpeed();
		void HideInGameMenu();
		void GoToBookmark(const class FName& Slot);
		float GetDemoTimeTotal();
		float GetDemoTimeCurrent();
		float GetCurrentPlaybackSpeed();
		void DecreasePlaybackSpeed();
		void CheckScenarioLoad();
		void AssignBookmark(const class FName& Slot);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSMissionGameMode
	 * Size -> 0x0088 (FullSize[0x0B58] - InheritedSize[0x0AD0])
	 */
	class AINSMissionGameMode : public AINSCoopMode
	{
	public:
		class UScenarioMission*                                    MissionScenario;                                         // 0x0AD0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AObjectiveBase*                                      ActiveObjective;                                         // 0x0AD8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MortarClass[0x28];                                       // 0x0AE0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              HelicopterClass[0x28];                                   // 0x0B08(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class AVehicleHoveringBase*                                EvacHelicopter;                                          // 0x0B30(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              EvacDestination;                                         // 0x0B38(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        EvacTimerHandle;                                         // 0x0B40(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartedEvac;                                            // 0x0B48(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0I6E[0x3];                                   // 0x0B49(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TotalDeadPlayers;                                        // 0x0B4C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAISquad*                                         DefendingSquad;                                          // 0x0B50(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSFilmingGameMode
	 * Size -> 0x0000 (FullSize[0x0B58] - InheritedSize[0x0B58])
	 */
	class AINSFilmingGameMode : public AINSMissionGameMode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSFirefightGameMode
	 * Size -> 0x0000 (FullSize[0x09A8] - InheritedSize[0x09A8])
	 */
	class AINSFirefightGameMode : public AINSMultiplayerMode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSFrontlineGameMode
	 * Size -> 0x0098 (FullSize[0x0A40] - InheritedSize[0x09A8])
	 */
	class AINSFrontlineGameMode : public AINSMultiplayerMode
	{
	public:
		int32_t                                                    StartingWaves;                                           // 0x09A8(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CapturingBonusWave;                                      // 0x09AC(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RegressSpawnsTimer;                                      // 0x09B0(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VRFM[0x4];                                   // 0x09B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UReinforcementSystemComponent*                       Team1ReinforcementSystem;                                // 0x09B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       Team2ReinforcementSystem;                                // 0x09C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZ5T[0x10];                                  // 0x09C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastStandDisableSpawnsDelay;                             // 0x09D8(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultLastStandDrainRate;                               // 0x09DC(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SOLJ[0x8];                                   // 0x09E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              LastStandTeam[0x28];                                     // 0x09E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_8C1Y[0x8];                                   // 0x0A10(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_LastStandDisableSpawns;                      // 0x0A18(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_LastStandDrainRate;                          // 0x0A20(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLD1[0x18];                                  // 0x0A28(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnWavesDepleted_DisableAutoBalance(class UReinforcementSystemComponent* Component);
		void OnWaveGained_ReenableAutoBalance(class UReinforcementSystemComponent* Component, int32_t OldWaveCount);
		void LastStandDisableSpawns();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSGameState
	 * Size -> 0x0338 (FullSize[0x05C8] - InheritedSize[0x0290])
	 */
	class AINSGameState : public AGameState
	{
	public:
		TArray<class ARestrictedFireSupportVolume*>                RestrictedFireSupportVolumes;                            // 0x0290(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class APlayableArea*>                               PlayableAreas;                                           // 0x02A0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ANavMeshBoundsVolume*>                        NavMeshAreas;                                            // 0x02B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ASupplyCrate*>                                SupplyCrates;                                            // 0x02C0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPointOfInterestActorComponent*>              PointsOfInterest;                                        // 0x02D0(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ASpawnZone*>                                  SpawnZones;                                              // 0x02E0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARestrictedArea*>                             RestrictedAreas;                                         // 0x02F0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AItemPickup*>                                 ItemPickups;                                             // 0x0300(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBox                                                LevelBounds;                                             // 0x0310(0x001C) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FBox                                                TacticalMapScenarioOverviewArea;                         // 0x032C(0x001C) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        GameTagsCollection;                                      // 0x0348(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActiveScenarioAsset;                                     // 0x0358(0x0010) Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActiveTheaterOverride;                                   // 0x0368(0x0010) Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActiveTravelURL;                                         // 0x0378(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ActiveScenarioLocalized;                                 // 0x0388(0x0018) BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic
		class FText                                                ActiveGamemodeLocalized;                                 // 0x03A0(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class FText>                                        ActiveGamemodeRulesLocalized;                            // 0x03B8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ActiveMutators[0x10];                                    // 0x03C8(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_T7FD[0x1];                                   // 0x03D8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bDynamicInGameLessonsAllowed;                            // 0x03D9(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TXTF[0x6];                                   // 0x03DA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             RoundResetDelegate;                                      // 0x03E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             RoundOverDelegate;                                       // 0x03F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             MatchEndedDelegate;                                      // 0x0400(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TArray<class AItemRadio*>                                  Radios;                                                  // 0x0410(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ATeamInfo*>                                   Teams;                                                   // 0x0420(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<bool>                                               TeamsReplicated;                                         // 0x0430(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              NumTeams;                                                // 0x0440(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K3YN[0x7];                                   // 0x0441(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AObjectiveBase*>                              Objectives;                                              // 0x0448(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayerTeamSelectAllowed;                                // 0x0458(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTeam0Locked;                                            // 0x0459(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTeam1Locked;                                            // 0x045A(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C5QC[0x5];                                   // 0x045B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             TeamLockUpdateDelegate;                                  // 0x0460(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTeamInfoReplicatedDelegate;                            // 0x0470(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bFreezeTime;                                             // 0x0480(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWorldContainsPlayableAreas;                             // 0x0481(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWorldContainsScenarioPlayableArea;                      // 0x0482(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFireSupportAllowed;                                     // 0x0483(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideRoundTimer;                                         // 0x0484(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WOL5[0x3];                                   // 0x0485(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnMatchStateUpdateDelegate;                              // 0x0488(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMatchSubStateUpdateDelegate;                           // 0x0498(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FName                                                SubMatchState;                                           // 0x04A8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBotGrenadeTarget>                           GrenadeTargets;                                          // 0x04B0(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ABulletManager*                                      BulletManager;                                           // 0x04C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBrassManager*                                       BrassManager;                                            // 0x04C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URagdollManager*                                     RagdollManager;                                          // 0x04D0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZV50[0x10];                                  // 0x04D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AFoliageInteractionManager*                          FoliageInteractionManager;                               // 0x04E8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LJWP[0x8];                                   // 0x04F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPostMergeManager*                                   PostMergeManager;                                        // 0x04F8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A5RU[0x30];                                  // 0x0500(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ALightSampler*                                       LightSampler;                                            // 0x0530(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundscapeState*                                    SoundscapeState;                                         // 0x0538(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDecalManager*                                       DecalManager;                                            // 0x0540(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UVoiceRouting*                                       VoiceRouting;                                            // 0x0548(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPopulatedScenarioAssets;                                // 0x0550(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TK0W[0x3];                                   // 0x0551(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RemainingLoads;                                          // 0x0554(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMatchmakingSession;                                   // 0x0558(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRankedSession;                                          // 0x0559(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_44KX[0x2];                                   // 0x055A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MatchStartDeadline;                                      // 0x055C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ExpectedMatchPlayers;                                    // 0x0560(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CurrentMatchPlayers;                                     // 0x0561(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCoopSession;                                          // 0x0562(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O625[0x1];                                   // 0x0563(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsCompetitiveSession;                                   // 0x0564(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DXJW[0x3];                                   // 0x0565(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              LastFireSupportTime;                                     // 0x0568(0x0010) Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMapVoteManager*                                     MapVoteManager;                                          // 0x0578(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMapVoteInProgress;                                      // 0x0580(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9NG[0x3];                                   // 0x0581(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerClassAttributes                              RulesetAttributeOverrides;                               // 0x0584(0x003C) Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bUseAttributeOverrides;                                  // 0x05C0(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5VRQ[0x7];                                   // 0x05C1(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnTeamInfoReady(unsigned char ID);
		void OnRep_UseAttributeOverrides();
		void OnRep_TeamLockState();
		void OnRep_SubMatchState();
		void OnRep_RulesetAttributeOverrides();
		void OnRep_IsCompetitiveSession();
		void OnRep_FreezeTime();
		void OnRep_ActiveScenarioLocalized();
		void OnRep_ActiveMutators();
		void OnMapVoteStarted();
		void OnMapVoteEnded();
		void MulticastTextMessage(const class FText& Message, const class FName& Type);
		void MulticastSetActiveMutators();
		bool IsTeamVisuallyLocked(unsigned char TeamIndex);
		bool IsRoundRunning();
		bool IsPostRoundOrGame();
		bool IsPostRound();
		bool IsMapVoteInProgress();
		bool IsGameOver();
		bool InRoundIntermission();
		class ATeamInfo* GetTeam(unsigned char ID);
		class ATeamInfo* GetFaction(unsigned char FactionId);
		void DebugStartMapVoteFromCycle();
		void CollectInterestingTaglines(TArray<struct FOtherPlayerAwardedTagline>* OutTaglines);
		bool CanResupplyInCurrentGameState(class AINSSoldier* Soldier);
		void BroadcastShowPlayerExperience();
		void BroadcastRoundReset();
		void BroadcastRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningFaction, TArray<struct FOtherPlayerAwardedTagline> Taglines);
		void BroadcastMatchEnded(unsigned char WinningFaction);
		int32_t AddTeam(class ATeamInfo* InTeam);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSMultiplayerGameState
	 * Size -> 0x0078 (FullSize[0x0640] - InheritedSize[0x05C8])
	 */
	class AINSMultiplayerGameState : public AINSGameState
	{
	public:
		float                                                      GameStartTime;                                           // 0x05C8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoundNumber;                                             // 0x05CC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoundsPlayed;                                            // 0x05D0(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoundStartTime;                                          // 0x05D4(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoundEndTime;                                            // 0x05D8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRoundTimerExpired;                                      // 0x05DC(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOvertime;                                               // 0x05DD(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ACTP[0xA];                                   // 0x05DE(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FNetworkedServerSettings                            NetworkedServerSettings;                                 // 0x05E8(0x0058) BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic

	public:
		void SetRoundTimer(int32_t Seconds);
		void OnRoundStarted();
		void OnRoundEnded();
		void OnRep_EndRoundTime();
		void OnPreRoundStarted();
		bool IsWaitingForPlayers();
		bool IsThirdPersonSpectatorAllowed();
		bool IsRoundActive();
		bool IsInPreRound();
		bool IsGameStarting();
		bool IsDeathCameraEnabled();
		void InvalidateRoundTimer();
		float GetRoundTimeRemaining();
		float GetRoundTimeElapsed();
		void ExtendRoundTimer(int32_t Seconds);
		bool AreClassLevelRestrictionsEnabled();
		bool AllowPlayerMove();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSFrontlineGameState
	 * Size -> 0x0008 (FullSize[0x0648] - InheritedSize[0x0640])
	 */
	class AINSFrontlineGameState : public AINSMultiplayerGameState
	{
	public:
		float                                                      LastStandWaveDrainRate;                                  // 0x0640(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2L7J[0x4];                                   // 0x0644(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TeamInfo
	 * Size -> 0x0178 (FullSize[0x0398] - InheritedSize[0x0220])
	 */
	class ATeamInfo : public AInfo
	{
	public:
		unsigned char                                              UnknownData_A1NH[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              TeamId;                                                  // 0x0228(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D147[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFactionDefinition*                                  Faction;                                                 // 0x0230(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USquadLayout*                                        ActiveSquadLayout;                                       // 0x0238(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamRole                                                  TeamRole;                                                // 0x0240(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RoundsWon;                                               // 0x0241(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RoundsDrawn;                                             // 0x0242(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RMNP[0x1];                                   // 0x0243(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Score;                                                   // 0x0244(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ObjectivesCaptured;                                      // 0x0248(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Points;                                                  // 0x024C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FReplicatedTeamSettings                             TeamSettings;                                            // 0x0250(0x000C) BlueprintVisible, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7QEN[0x4];                                   // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnReplicatedTeamSettingsUpdatedDelegate;                 // 0x0260(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		int32_t                                                    ReinforcementWaves;                                      // 0x0270(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaveTimer;                                               // 0x0274(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       ReinforcementSystem;                                     // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AController*>                                 Players;                                                 // 0x0280(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSPlayerState*>                             PlayerArray;                                             // 0x0290(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AINSSoldier>                          LastOneStanding;                                         // 0x02A0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B415[0x8];                                   // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnReinforcedDelegate;                                    // 0x02B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnWaveShouldBlinkDelegate;                               // 0x02C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TArray<class ASpawnZone*>                                  ActiveSpawnZones;                                        // 0x02D0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class UFireSupportDefinition*, struct FFireSupportGameModeOverrideDefinition> FireSupportOverrides;                                    // 0x02E0(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FFireSupportState>                           FireSupportStates;                                       // 0x0330(0x0010) Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IR0S[0x10];                                  // 0x0340(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UQueuedRadioEvent*>                           QueuedRadioEvents;                                       // 0x0350(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UQueuedRadioEvent*                                   CurrentPlayingEvent;                                     // 0x0360(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTimerHandle                                        TimerHandle_NextRadioUpdateTime;                         // 0x0368(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TGJ6[0x8];                                   // 0x0370(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPlayerVotingComponent*                              TeamVotingComponent;                                     // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVotingEnabled;                                          // 0x0380(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NW3C[0x7];                                   // 0x0381(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      TeamVoteIssues;                                          // 0x0388(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void UpdateQueuedRadioEvents();
		void SetFireSupportDisabled(class UFireSupportDefinition* FireSupportDefinition, bool bDisabled);
		void ResetPointsScore();
		void ResetFireSupportTimers();
		void RemoveInvalidPlayerEntries();
		void RemoveEmptyPlayerEntries();
		int32_t ReadyPlayerCount(bool bExcludeBots);
		int32_t PlayerCountInClass(class UPlayerClass* PlayerClass, bool bExcludeBots);
		void PlayerCountByClass(TMap<class UPlayerClass*, int32_t>* OutMappedCount, bool bExcludeBots);
		int32_t PlayerCount(bool bExcludeBots);
		void OnWaveShouldBlinkDelegate__DelegateSignature(bool bBlink);
		void OnReplicatedTeamSettingsUpdatedDelegate__DelegateSignature(class ATeamInfo* Team, const struct FReplicatedTeamSettings& NewSettings);
		void OnRep_TeamSettings();
		void OnRep_TeamId();
		void OnRep_LastOneStanding();
		void OnRep_Faction();
		void OnReinforcedDelegate__DelegateSignature(int32_t PlayersSpawned);
		void LockFireSupport(class UFireSupportDefinition* FireSupportDefinition, float Duration);
		bool IsWavePending();
		bool IsVotingEnabled();
		bool IsPlayerOnTeam(class AController* Player);
		bool IsFireSupportOnCooldown(class UFireSupportDefinition* FireSupportDefinition);
		bool IsFireSupportDisabled(class UFireSupportDefinition* FireSupportDefinition);
		void IncrementScore(int32_t Amount, EScoreType ScoreType);
		void IncrementPointsScore(int32_t Amount);
		void IncrementFireSupportUse(class UFireSupportDefinition* FireSupportDefinition);
		int32_t HumanCount();
		bool HasLastOneStanding();
		bool HasEnabledSpawnZones();
		float GetWaveTimeRemaining();
		float GetTimeUntilNextFireSupportRatio(class UFireSupportDefinition* FireSupportDefinition);
		float GetTimeUntilNextFireSupport(class UFireSupportDefinition* FireSupportDefinition);
		void GetSpectatorTargets(TArray<class AINSPlayerState*>* OutTargets);
		void GetSortedPlayerList(TArray<class AINSPlayerState*>* OutPlayers);
		int32_t GetRemainingFireSupportUses(class UFireSupportDefinition* FireSupportDefinition);
		float GetPercentageTeamAlive(bool bExcludeBots);
		bool GetFireSupportGameModeOverrideParams(class UFireSupportDefinition* FireSupportDefinition, struct FFireSupportGameModeOverrideDefinition* Params);
		class FText GetFactionName();
		struct FLinearColor GetFactionColor(class AINSPlayerState* RelativePlayer);
		void DisableAllSpawnZones();
		int32_t DeadPlayerCount(bool bExcludeBots, bool bIncludeNotReady);
		bool CanPlayerJoinTeam(class AController* Player);
		void BroadcastTextMessage(const class FText& Message, const class FName& Type);
		int32_t BotCount();
		void BlueprintGetFactionName(class FText* OutFactionName);
		void AwardTaglineToTeamWithFloatContext(class UClass* TaglineClass, float ContextValue, bool bRequireAlive, bool bAsPercentage);
		void AwardTaglineToTeamWithContext(class UClass* TaglineClass, int32_t ContextValue, bool bRequireAlive);
		void AwardTaglineToTeam(class UClass* TaglineClass, bool bRequireAlive);
		int32_t AlivePlayerCount(bool bExcludeBots);
		void AddCompassMarkerOnActor(class AActor* Actor, ECompassMarkerType MarkerType, class AINSPlayerController* IgnorePlayer);
		void AddCompassMarker(const struct FVector& WorldLocation, ECompassMarkerType MarkerType, class AINSPlayerController* IgnorePlayer);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSFrontlineTeamInfo
	 * Size -> 0x0018 (FullSize[0x03B0] - InheritedSize[0x0398])
	 */
	class AINSFrontlineTeamInfo : public ATeamInfo
	{
	public:
		float                                                      NextWaveDrainTime;                                       // 0x0398(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NU6P[0x4];                                   // 0x039C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnWaveDrainTimeUpdatedDelegate;                          // 0x03A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void SetNextWaveDrainTime(float InTime);
		void ResetNextWaveDrainTime();
		void OnWaveDrainTimeUpdatedDelegate__DelegateSignature(class AINSFrontlineTeamInfo* TeamInfo, float NewDrainTime);
		void OnRep_NextWaveDrainTime();
		bool HasWaveDrainTime();
		float GetTimeUntilNextWaveDrain();
		float GetNextWaveDrainTime();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSGameEngine
	 * Size -> 0x0000 (FullSize[0x0E70] - InheritedSize[0x0E70])
	 */
	class UINSGameEngine : public UGameEngine
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSGameInstance
	 * Size -> 0x0710 (FullSize[0x08A8] - InheritedSize[0x0198])
	 */
	class UINSGameInstance : public UGameInstance
	{
	public:
		bool                                                       bNeedsToPromptLanguageSelection;                         // 0x0198(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C3PC[0xF7];                                  // 0x0199(0x00F7) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UObject*>                                     TempSyncLoadObjects;                                     // 0x0290(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IWI5[0x30];                                  // 0x02A0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMapCycleEntry>                              MapCycle;                                                // 0x02D0(0x0010) BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMapCycleEntry>                              CurrentMapPool;                                          // 0x02E0(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentMapCycleIndex;                                    // 0x02F0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M8RU[0x4];                                   // 0x02F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FServerCustomWelcome                                ServerCustomWelcomeMessage;                              // 0x02F8(0x0090) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              WidgetModDownloadAsset[0x28];                            // 0x0388(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class UUserWidget*                                         WidgetModDownload;                                       // 0x03B0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B1QG[0x10];                                  // 0x03B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LoadingScreenFadeDelay;                                  // 0x03C8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6X5V[0x14];                                  // 0x03CC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUserWidget*                                         TransitionLoadingScreenWidget;                           // 0x03E0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              TransitionLoadingScreenAsset[0x28];                      // 0x03E8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              UnknownData_Y2E1[0x10];                                  // 0x0410(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LegalTextMinTime;                                        // 0x0420(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZZGB[0x9];                                   // 0x0424(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int8_t                                                     NWILoginMaxRetries;                                      // 0x042D(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FSP[0xA];                                   // 0x042E(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NWILoginMaxRetryTime;                                    // 0x0438(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S9BN[0x2C];                                  // 0x043C(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnMatchmakingSearchBeginDelegate;                        // 0x0468(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMatchmakingErrorDelegate;                              // 0x0478(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnReadyCheckUpdate;                                      // 0x0488(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_THVB[0x1C];                                  // 0x0498(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bShouldAutoRequeue;                                      // 0x04B4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VS4E[0x3];                                   // 0x04B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           MatchAutoRequeueTime;                                    // 0x04B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSMatchmaking*                                     Matchmaker;                                              // 0x04C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49X2[0x68];                                  // 0x04C8(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnAvailablePlaylistsUpdated;                             // 0x0530(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6B7F[0x10];                                  // 0x0540(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAvailablePlaylists                                 AvailablePlaylists;                                      // 0x0550(0x0058) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AUKU[0x40];                                  // 0x05A8(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ProfaneWordCollections[0x10];                            // 0x05E8(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<class UProfaneWordCollection*>                      LoadedProfaneWordCollections;                            // 0x05F8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMusicDirector*                                      MusicDirectorInstance;                                   // 0x0608(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInitialClassSelection;                                  // 0x0610(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_13UV[0x2F];                                  // 0x0611(0x002F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      Taglines;                                                // 0x0640(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTaglinesLoaded;                                         // 0x0650(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTaglineLoadPending;                                     // 0x0651(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RRIC[0x16];                                  // 0x0652(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnNetStatsEnabled;                                       // 0x0668(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnNetStatsUpdated;                                       // 0x0678(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9CM2[0x20];                                  // 0x0688(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnNetTimingOutUpdateDelegate;                            // 0x06A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlatformConnectionStatusChangedDelegate;               // 0x06B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_366Y[0x18];                                  // 0x06C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bReturnToServerBrowser;                                  // 0x06E0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnteredMainMenu;                                        // 0x06E1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9XFH[0x6];                                   // 0x06E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSParty*                                           Party;                                                   // 0x06E8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHighlightsEnabled;                                      // 0x06F0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SEC4[0x27];                                  // 0x06F1(0x0027) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWelcomeMenuWidget*                                  WelcomeMenuWidget;                                       // 0x0718(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              ClassWelcomeScreenWidget;                                // 0x0720(0x0008) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ILYW[0x6];                                   // 0x0728(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              EOSLoginMaxRetries;                                      // 0x072E(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6JMZ[0x11];                                  // 0x072F(0x0011) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnServiceLoginComplete;                                  // 0x0740(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bHasServicesLinked;                                      // 0x0750(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5XXC[0xC7];                                  // 0x0751(0x00C7) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bHasLicenseShown : 1;                                    // 0x0818(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IION[0x7];                                   // 0x0819(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnDisplayRestrictionDialog;                              // 0x0820(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YBOF[0x78];                                  // 0x0830(0x0078) MISSED OFFSET (PADDING)

	public:
		void UpdateRealtimeMultiplayAndUpdateUserPrivilege(bool RealtimeMultiplay, bool UpdateUserPrivilege);
		void TimerCheckModSubscriptions();
		void ShowAccountPicker();
		void SetTacticalMapVisibility(bool bVisibility);
		void SeamlessLoadingScreen();
		void ReturnToMainMenu();
		void RemoveViewportLoadingScreenWidget();
		void PlayReplayByName(const class FString& InName, bool bHttp);
		void OnTaglinesLoaded();
		void OnReadyCheckUpdate__DelegateSignature(bool bActive, bool bLocalReady);
		void OnPreLoadMap(const class FString& LevelName);
		void OnPreClientTravel(const class FString& PendingURL, ETravelType TravelType, bool bIsSeamlessTravel);
		void OnPostLoadMapWithWorld(class UWorld* World);
		void OnPlatformConnectionStatusChanged__DelegateSignature(bool bConnected);
		void OnNetTimingOutUpdateDelegate__DelegateSignature(bool bTimingOut);
		void OnNetStatsUpdated__DelegateSignature(const struct FClientNetStats& Stats);
		void OnNetStatEnabled__DelegateSignature(bool bEnabled);
		void OnMatchmakingSearchBegin__DelegateSignature();
		void OnMatchmakingError__DelegateSignature(const class FText& Error, EMatchmakingFailure MatchmakingFailureType);
		void OnMatchmakerStateChanged(EMatchmakingState OldState, EMatchmakingState NewState);
		void OnMatchmakerFailed(EMatchmakingFailure Reason);
		void OnLinkAccountComplete__DelegateSignature(bool bSuccessful, const class FName& InServiceName);
		void OnForceLogout(int32_t LocalUserNum);
		void OnDisplayRestrictionDialog__DelegateSignature(EUserPrivilegeResult PrivilegeResult);
		void OnCheckHasAbandonedGameComplete(bool bSuccessful, const class FString& Data);
		void OnAvailablePlaylistUpdated__DelegateSignature(const struct FAvailablePlaylists& Data);
		void OnAvailablePlaylistsFetched(bool bSuccess, const struct FQueryOpenPoolsResults& Results);
		void MountPaksInDirectory(const class FString& Directory);
		void MountPak(const class FString& PakPath);
		void MountMod(const class FString& PluginName, const class FString& Path);
		void MinimizeGameWindow();
		void MatchmakingRequeue();
		void MatchmakingAcceptReadyCheck();
		void LinkUserAccount(const class FName& ServiceToLink);
		bool JoinSearchResult(class ULocalPlayer* LocalPlayer, const struct FBlueprintFindSessionResult& SearchResult, const class FString& ServerPassword);
		bool IsMatchmakingInPool(const class FString& PoolName);
		bool IsMatchmaking();
		bool IsLoggedInNewWorld();
		bool IsLocalGame();
		bool IsConnectedToOnlineServices();
		bool IsClientNetStatsEnabled();
		bool IsAboutToJoinMatch();
		void IndicateGameLoaded();
		bool HostGame(class ULocalPlayer* LocalPlayer, const class FString& InTravelURL);
		bool HasAllMapsDownloaded();
		void GetThumbnailTextureForLevel(const class FString& Name, const class FString& LightingName);
		bool GetTacticalMapVisibility();
		class FName GetState();
		bool GetNetPacketLoss(float* InPacketLoss, float* OutPacketLoss);
		float GetMatchmakingTimer();
		class FText GetMatchmakingProgressText();
		int32_t GetMatchmakingEstimatedTimer();
		bool GetMapCycleTravelUrl(class FString* TravelUrl);
		bool GetLeaverBanTimer(float* Minutes, float* Seconds);
		class FText GetLeaverBanText();
		class FString GetAppId();
		void ForceStopFPSChart();
		void ForceStartFPSChart();
		void FadeLoadingScreen();
		void EndLoadingScreen();
		bool DoesContainProfaneWord(const class FString& inString, class FString* OutString);
		void DisplayHydraDebugInfo();
		void DirectConnectToIP(const class FString& IpPort, const class FString& Password);
		void CreateParty();
		bool CanJoinQueue();
		void CancelMatchRequeue();
		void CancelMatchmakingSearch();
		void BeginMatchmakingForPlaylists(TArray<class UPlaylist*> Playlist);
		void BeginLoadingScreenURL(const class FString& URL, bool bSeamless, bool bMatchTransition);
		void BeginLoadingScreen(const class FString& Name, const class FString& Mode, const class FString& Scenario, const class FString& LightingName, bool bSeamless, bool bMatchTransition);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSGameSession
	 * Size -> 0x0070 (FullSize[0x02A8] - InheritedSize[0x0238])
	 */
	class AINSGameSession : public AGameSession
	{
	public:
		unsigned char                                              UnknownData_H0BV[0x20];                                  // 0x0238(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      AdminUniqueIds;                                          // 0x0258(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPlayerBan>                                  PlayerBans;                                              // 0x0268(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3E8Z[0x30];                                  // 0x0278(0x0030) MISSED OFFSET (PADDING)

	public:
		void OnGameStatsServerLoginChanged(bool bLoggedIn);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSGameSessionMatchmaking
	 * Size -> 0x0218 (FullSize[0x04C0] - InheritedSize[0x02A8])
	 */
	class AINSGameSessionMatchmaking : public AINSGameSession
	{
	public:
		unsigned char                                              UnknownData_5VZ6[0x140];                                 // 0x02A8(0x0140) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ReservationBeaconHostClass;                              // 0x03E8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              QosBeaconHostClass;                                      // 0x03F0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSessionRegistrationLocked;                              // 0x03F8(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GA8I[0xF];                                   // 0x03F9(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSMatchBeaconHost*                                 ReservationBeaconHost;                                   // 0x0408(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AQosBeaconHost*                                      QosBeaconHost;                                           // 0x0410(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EMEL[0xA0];                                  // 0x0418(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VoteKickRejoinBanTime;                                   // 0x04B8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0HPL[0x4];                                   // 0x04BC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSGameUserSettings
	 * Size -> 0x0308 (FullSize[0x0428] - InheritedSize[0x0120])
	 */
	class UINSGameUserSettings : public UGameUserSettings
	{
	public:
		class FScriptMulticastDelegate                             OnSettingsUpdated;                                       // 0x0120(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnConnectionStatusLocationSettingUpdated;                // 0x0130(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnRespawnStatusLocationSettingUpdated;                   // 0x0140(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnHUDDisplayOptionChanged;                               // 0x0150(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FSpectatorSettings                                  SpectatorSettings;                                       // 0x0160(0x0007) BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G7IL[0x1];                                   // 0x0167(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              JsonSpectatorSettings;                                   // 0x0168(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, unsigned char>                           VideoOptions;                                            // 0x0178(0x0050) Config, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnVoiceChatInputDeviceChanged;                           // 0x01C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnVoiceChatGainSettingChanged;                           // 0x01D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      MasterVolume;                                            // 0x01E8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      MusicVolume;                                             // 0x01EC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      VoiceVolume;                                             // 0x01F0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      EffectsVolume;                                           // 0x01F4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              AudioPanningRule;                                        // 0x01F8(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bVoiceMuteRadioTransmitBeep;                             // 0x01F9(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XQFP[0x6];                                   // 0x01FA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              VoiceInputDevice;                                        // 0x0200(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      VoiceInputGain;                                          // 0x0210(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_18Y4[0x4];                                   // 0x0214(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnMatchRegionsChangedDelegate;                           // 0x0218(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMatchGamemodesChangedDelegate;                         // 0x0228(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnClientStatLocationChanged;                             // 0x0238(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              ColorSchemeSetting;                                      // 0x0248(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RespawnStatusLocationSetting;                            // 0x0249(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ConnectionStatusLocationSetting;                         // 0x024A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KFSR[0x1];                                   // 0x024B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        CustomFriendlyColor;                                     // 0x024C(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QJDC[0x4];                                   // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CustomFriendlyColorString;                               // 0x0260(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        CustomEnemyColor;                                        // 0x0270(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CustomEnemyColorString;                                  // 0x0280(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        CustomNeutralColor;                                      // 0x0290(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CustomNeutralColorString;                                // 0x02A0(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BuddyColor;                                              // 0x02B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BuddyColorString;                                        // 0x02C0(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        PartyColor;                                              // 0x02D0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PartyColorString;                                        // 0x02E0(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        CommanderObserverColor;                                  // 0x02F0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CommanderObserverColorString;                            // 0x0300(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBuddyColorOverridesCommanderObserverColor;              // 0x0310(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IWDW[0x7];                                   // 0x0311(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CustomLanguage;                                          // 0x0318(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLanguageChanged;                                       // 0x0328(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      ObjectiveIndicatorOpacity;                               // 0x0338(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TeammateIndicatorOpacity;                                // 0x033C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      SeenMenuPrompts;                                         // 0x0340(0x0010) ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    QualityPreset;                                           // 0x0350(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SoldierFOV;                                              // 0x0354(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DefaultSoldierFOV;                                       // 0x0358(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bViewBob;                                                // 0x035C(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEnableProfanityFilter;                                  // 0x035D(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bCameraAnimation;                                        // 0x035E(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bDeathCamera;                                            // 0x035F(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bRelativeTeamColors;                                     // 0x0360(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAlwaysShowCompass;                                      // 0x0361(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowContextualKeyHints;                                 // 0x0362(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowContextualVaultHints;                               // 0x0363(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowContextualCycleOpticsHint;                          // 0x0364(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAudioVOMuteRadioTransmitBeep;                           // 0x0365(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bMuteTinitusEffect;                                      // 0x0366(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZPK8[0x1];                                   // 0x0367(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        ExcludedMatchRegions;                                    // 0x0368(0x0010) ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        ExcludedMatchGamemodes;                                  // 0x0378(0x0010) ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bClientNetStats;                                         // 0x0388(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAllowDynamicIngameLessons;                              // 0x0389(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bSelectedExcludedRegions;                                // 0x038A(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowFPS;                                                // 0x038B(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bClientStatLocation;                                     // 0x038C(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEnableFrameRateSmoothing;                               // 0x038D(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEnableHUD;                                              // 0x038E(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAlwaysShowFiremode;                                     // 0x038F(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAlwaysShowCosmeticSelection;                            // 0x0390(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEnableObjectiveBriefing;                                // 0x0391(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEnableMouseSmoothing;                                   // 0x0392(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_IWMX[0x1];                                   // 0x0393(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   ConfirmedEventMask;                                      // 0x0394(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bSoundInBackground;                                      // 0x0398(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BKWL[0x3];                                   // 0x0399(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BackgroundVolumeMultiplier;                              // 0x039C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DisplayGamma;                                            // 0x03A0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    FrameLimit;                                              // 0x03A4(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ScreenPercentage;                                        // 0x03A8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_E002[0x4];                                   // 0x03AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           LastAnnoucementPanelDate;                                // 0x03B0(0x0008) ZeroConstructor, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class FName, struct FOverrideSetting>                 OverrideOptions;                                         // 0x03B8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZT2[0x1];                                   // 0x0408(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bFirstSave;                                              // 0x0409(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JVQ5[0x2];                                   // 0x040A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   GameVersion;                                             // 0x040C(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FScriptMulticastDelegate                             OnNVIDIAHighlightPreferencesChangedDelegate;             // 0x0410(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bEnableHighlights;                                       // 0x0420(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowDevTag;                                             // 0x0421(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAllowVIP;                                             // 0x0422(0x0001) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_LL78[0x5];                                   // 0x0423(0x0005) MISSED OFFSET (PADDING)

	public:
		void UpdateLastAnnouncementPanelDate(const struct FDateTime& CurrentAnnouncementDateTime);
		bool ShouldShowAnnouncementPopup(const struct FDateTime& CurrentAnnouncementDateTime);
		void SetVoiceVolume(float Volume);
		void SetVoiceInputGain(float NewInputGain);
		void SetVoiceInputDevice(const class FString& NewDevice);
		void SetViewBobEnabled(bool bVal);
		void SetToDefaultsVideoSettings();
		void SetToDefaultsGameSettings();
		void SetToDefaultsControlSettings();
		void SetToDefaultsAudioSettings();
		void SetTeammateIndicatorOpacity(float Alpha);
		void SetSpectatorXrayTailsPlayerOnlyEnabled(bool bEnable);
		void SetSpectatorXrayTailsEnabled(bool bEnable);
		void SetSpectatorXrayEnabled(bool bEnable);
		void SetSpectatorControlHintsEnabled(bool bEnable);
		void SetSoundInBackground(bool bEnabledInBG);
		void SetSoldierFOV(float Val);
		void SetShowFPS(bool bEnabled);
		void SetShowDevTag(bool bEnabled);
		void SetShowContextualVaultHints(bool bNewVal);
		void SetShowContextualKeyHints(bool bNewVal);
		void SetShowContextualCycleOpticsHint(bool bNewVal);
		void SetShoutcasterTeamScoresEnabled(bool bEnabled);
		void SetShoutcasterPlayerVitalsEnabled(bool bEnabled);
		void SetShoutcasterMinimapEnabled(bool bEnabled);
		void SetScreenPercentage(float ScreenPercentage);
		void SetRespawnStatusLocationSetting(unsigned char RespawnLocationIndex);
		void SetRelativeTeamColors(bool bVal);
		void SetQualityPreset(int32_t Quality);
		void SetProfanityFilterEnabled(bool bVal);
		void SetPartyLinearColor(const struct FLinearColor& NewColor);
		void SetPartyColor(float R, float G, float B);
		void SetPanningRule(unsigned char Rule);
		void SetOverrideVideoOption(const class FName& ConsoleVariableName, int32_t Value, bool bMakeDefault);
		void SetObjectiveIndicatorOpacity(float Alpha);
		void SetMuteVOTransmitBeep(bool bNewMute);
		void SetMuteTinitusEffect(bool bNewMute);
		void SetMuteRadioTransmitBeep(bool bNewMute);
		void SetMusicVolume(float Volume);
		void SetMouseSmoothing(bool bEnabled);
		void SetMatchRegionEnabled(const class FName& Mode, bool bEnabled);
		void SetMatchGamemodeEnabled(const class FName& GameModeName, bool bEnabled);
		void SetMasterVolume(float Volume);
		void SetIsAllowVIP(bool bNewState);
		void SetHasSelectedRegions(bool bEnabled);
		void SetFrameRateSmoothing(bool bEnabled);
		void SetFrameLimit(int32_t FPS);
		void SetEnableObjectiveBriefing(bool bEnable);
		void SetEnableNVIDIAHighlights(bool bEnabled);
		void SetEnableHUD(bool bEnable);
		void SetEffectsVolume(float Volume);
		void SetDisplayGamma(float Gamma);
		void SetDefaultColorScheme();
		void SetDeathCameraEnabled(bool bEnabled);
		void SetCustomNeutralLinearColor(const struct FLinearColor& NewColor);
		void SetCustomNeutralColor(float R, float G, float B);
		bool SetCustomLanguage(const class FString& InValue, bool bSaveToConfig);
		void SetCustomFriendlyLinearColor(const struct FLinearColor& NewColor);
		void SetCustomFriendlyColor(float R, float G, float B);
		void SetCustomEnemyLinearColor(const struct FLinearColor& NewColor);
		void SetCustomEnemyColor(float R, float G, float B);
		void SetConnectionStatusLocationSetting(unsigned char ConnectionLocationIndex);
		void SetCommanderObserverLinearColor(const struct FLinearColor& NewColor);
		void SetCommanderObserverColor(float R, float G, float B);
		void SetColorSchemeSetting(unsigned char ColorSchemeIndex);
		void SetClientStatsOverlayEnabled(bool bEnabled);
		void SetClientStatLocation(bool bEnabled);
		void SetCameraAnimationEnabled(bool bVal);
		void SetBuddyOverridesCommanderObserverColor(bool bVal);
		void SetBuddyLinearColor(const struct FLinearColor& NewColor);
		void SetBuddyColor(float R, float G, float B);
		void SetBackgroundVolumeMultiplier(float Amount);
		void SetAlwaysShowFiremode(bool bNewVal);
		void SetAlwaysShowCosmeticSelection(bool bNewVal);
		void SetAlwaysShowCompass(bool bNewVal);
		void SetAllowIngameLessons(bool bVal);
		void ResetOverrideVideoOptions(bool bPartialRefresh);
		void ResetOverrideVideoOption(const class FName& ConsoleVariableName);
		void ResetOriginalOverrideVideoOptions();
		void RefreshOverrideVideoOptions();
		void OnVoiceChatInputDeviceChanged__DelegateSignature(const class FString& NewInputDevice);
		void OnVoiceChatGainSettingChanged__DelegateSignature(float NewGain);
		void OnSettingsUpdated__DelegateSignature();
		void OnRespawnStatusLocationSettingUpdated__DelegateSignature(unsigned char NewIndex);
		void OnNVIDIAHighlightPreferencesChanged__DelegateSignature();
		void OnMatchRegionsChanged__DelegateSignature();
		void OnMatchGamemodesChanged__DelegateSignature();
		void OnLanguageChanged__DelegateSignature();
		void OnHUDDisplayOptionChanged__DelegateSignature();
		void OnConnectionStatusLocationSettingUpdated__DelegateSignature(unsigned char NewIndex);
		void OnClientStatLocationChanged__DelegateSignature();
		void MarkMenuPromptAsSeen(class FString* Prompt);
		bool MarkEventAsConfirmed(EConfirmableEvent Event, bool bPersistIfUpdated);
		bool IsViewBobEnabled();
		bool IsProfanityFilterEnabled();
		bool IsObjectiveBriefingEnabled();
		bool IsHUDEnabled();
		bool IsFrameRateSmoothingEnabled();
		bool IsFirstTimeSaving();
		bool IsDeathCameraEnabled();
		bool IsCameraAnimationEnabled();
		bool HasSeenMenuPrompt(class FString* Prompt);
		bool HasConfirmedEvent(EConfirmableEvent Event);
		float GetVoiceVolume();
		float GetVoiceInputGain();
		class FString GetVoiceInputDevice();
		bool GetSpectatorXrayTailsPlayerOnlyEnabled();
		bool GetSpectatorXrayTailsEnabled();
		bool GetSpectatorXrayEnabled();
		bool GetSpectatorControlHintsEnabled();
		bool GetSoundInBackground();
		float GetSoldierFOV();
		bool GetShowFPS();
		bool GetShowDevTag();
		bool GetShowContextualVaultHints();
		bool GetShowContextualKeyHints();
		bool GetShowContextualCycleOpticsHint();
		bool GetShoutcasterTeamScoresEnabled();
		bool GetShoutcasterPlayerVitalsEnabled();
		bool GetShoutcasterMinimapEnabled();
		float GetScreenPercentage();
		void GetResolutionScaleInformationSane(float* CurrentScaleNormalized, float* CurrentScaleValue, float* MinScaleValue, float* MaxScaleValue);
		bool GetRelativeTeamColors();
		int32_t GetQualityPreset();
		unsigned char GetPanningRule();
		bool GetNVIDIAHighlightEnabled();
		bool GetMuteVOTransmitBeep();
		bool GetMuteTinitusEffect();
		bool GetMuteRadioTransmitBeep();
		float GetMusicVolume();
		bool GetMouseSmoothing();
		void GetMatchRegions(TArray<class FName>* Regions, TArray<class FName>* EnabledRegions);
		void GetMatchGamemodes(bool bCoop, TArray<class FName>* Modes, TArray<class FName>* EnabledModes);
		float GetMasterVolume();
		bool GetIsAllowVIP();
		class UINSGameUserSettings* STATIC_GetInsurgencyGameUserSettings();
		bool GetHasSelectedRegions();
		int32_t GetFrameLimit();
		void GetExcludedMatchRegions(TArray<class FName>* Regions);
		void GetExcludedMatchGamemodes(TArray<class FName>* Modes);
		float GetEffectsVolume();
		float GetDisplayGamma();
		class FString GetCustomLanguage();
		bool GetColorScheme(unsigned char ColorSchemeIndex, struct FColorScheme* OutColorScheme);
		bool GetClientStatsOverlayEnabled();
		bool GetClientStatLocation();
		float GetBackgroundVolumeMultiplier();
		bool GetAlwaysShowFiremode();
		bool GetAlwaysShowCosmeticSelection();
		bool GetAlwaysShowCompass();
		bool GetAllowIngameLessons();
		void CreateOverrideVideoOption(const class FName& ConsoleVariableName);
		void ClearEventConfirmedState(EConfirmableEvent Event, bool bPersistIfUpdated);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSGameViewportClient
	 * Size -> 0x0070 (FullSize[0x03A0] - InheritedSize[0x0330])
	 */
	class UINSGameViewportClient : public UGameViewportClient
	{
	public:
		unsigned char                                              UnknownData_Y4DC[0x68];                                  // 0x0330(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFont*                                               WatermarkFontAsset;                                      // 0x0398(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SSForceKeyboardId(int32_t NewControllerId);
		void SSForceGamepadId(int32_t NewControllerId);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSLevelScriptActor
	 * Size -> 0x0000 (FullSize[0x0228] - InheritedSize[0x0228])
	 */
	class AINSLevelScriptActor : public ALevelScriptActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSLocalPlayer
	 * Size -> 0x08E8 (FullSize[0x0B40] - InheritedSize[0x0258])
	 */
	class UINSLocalPlayer : public ULocalPlayer
	{
	public:
		class URenderTargetController*                             RenderTargetController;                                  // 0x0258(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M6C0[0x18];                                  // 0x0260(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsUsingController;                                      // 0x0278(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FK1[0x7];                                   // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnUsingControllerUpdate;                                 // 0x0280(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FString                                              PendingJoinPassword;                                     // 0x0290(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSPlayerLocalProfile*                              LoadedLocalProfile;                                      // 0x02A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       HasAchievementDescriptions;                              // 0x02A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QY57[0x7];                                   // 0x02A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      AchievementsNames;                                       // 0x02B0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnQueryAchievementsComplete;                             // 0x02C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TMap<class FString, struct FPlayerGameAchievement>         PlayerAchievements;                                      // 0x02D0(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IZ63[0x10];                                  // 0x0320(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    LastProfileRequestTime;                                  // 0x0330(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     ProfileRequestRetries;                                   // 0x0338(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QLUB[0x7];                                   // 0x0339(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStatisticsProfile*                                  PlayerProfile;                                           // 0x0340(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic, CPF_SkipSerialization
		class FScriptMulticastDelegate                             OnRequestPlayerProfileUpdated;                           // 0x0348(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic, CPF_SkipSerialization
		class FScriptMulticastDelegate                             OnLocalProfileLoaded;                                    // 0x0358(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              UnknownData_M1PI[0x8];                                   // 0x0368(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PlayerProfileResult;                                     // 0x0370(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int64_t                                                    LastGamesRequestTime;                                    // 0x0380(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     GamesRequestRetries;                                     // 0x0388(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0TN1[0x7];                                   // 0x0389(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnRequestPlayerGamesUpdated;                             // 0x0390(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic, CPF_SkipSerialization
		unsigned char                                              UnknownData_BM0Q[0x8];                                   // 0x03A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PlayerGamesResult;                                       // 0x03A8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int64_t                                                    LastPostMatchRequestTime;                                // 0x03B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     LastPostMatchRequestRetries;                             // 0x03C0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VDL8[0x7];                                   // 0x03C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPostMatchStatsUpdated;                                 // 0x03C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic, CPF_SkipSerialization
		class FString                                              GameStatsResult;                                         // 0x03D8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FStatisticsLastGameResult                           LastGameResult;                                          // 0x03E8(0x0230) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GSDE[0x8];                                   // 0x0618(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerRatingUpdated;                                   // 0x0620(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FCompetitiveRating                                  CompetitiveRating;                                       // 0x0630(0x001C) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bHasReceivedCompetitiveRating;                           // 0x064C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_29MR[0x3];                                   // 0x064D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPoolCountsUpdated;                                     // 0x0650(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAbandonedMatchUpdate;                                  // 0x0660(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J9K7[0x20];                                  // 0x0670(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerAvatarLoadedDelegate;                            // 0x0690(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TMap<struct FUniqueNetIdRepl, class FString>               CachedNicknames;                                         // 0x06A0(0x0050) NativeAccessSpecifierPrivate
		class UTexture2D*                                          UserAvatar;                                              // 0x06F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_V678[0x20];                                  // 0x06F8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerGearLevelChanged;                                // 0x0718(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FGetAccountStatusResult                             AccountStatus;                                           // 0x0728(0x0030) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAccountStatusUpdatedDelegate;                          // 0x0758(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WT7R[0xA0];                                  // 0x0768(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnLocalVoiceChatStateChanged;                            // 0x0808(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnRemoteVoiceChatStateChanged;                           // 0x0818(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnProfileBlockLoadedDelegate;                            // 0x0828(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerProfileUpdatedDelegate;                          // 0x0838(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FSandstormPlayerProfile                             CachedPlayerProfile;                                     // 0x0848(0x02C8) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMatchHistoryUpdated;                                   // 0x0B10(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FMatchHistory                                       CachedMatchHistory;                                      // 0x0B20(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2Z5[0x8];                                   // 0x0B38(0x0008) MISSED OFFSET (PADDING)

	public:
		void UpdatePoolCounts();
		void UpdatePlayerProfile(bool bForceUpdate);
		void UpdateMatchHistory();
		void UpdateArmorAndCarrierLevels(const class FName& ArmorLevel, const class FName& CarrierLevel);
		void SetNextJoinPassword(const class FString& Password);
		void SetChatRestricted(bool bInResctricted);
		void SaveLocalProfile();
		void RequestPostMatchStats();
		void RequestPlayerProfile();
		void RequestPlayerGames(int32_t CurrentPage, int32_t CountPerPage);
		void QueryAchievements(bool bRefresh);
		void OnUsingControllerUpdate__DelegateSignature(bool UsingController, EeInputIconType NewIconType);
		void OnUpdateProfileBlockLoadedDelegate__DelegateSignature(EProfileBlockType Type, bool bFromCloud);
		void OnTutorialComplete();
		void OnTaglinesLoaded();
		void OnRequestPlayerProfileUpdated__DelegateSignature();
		void OnRequestPlayerGamesUpdated__DelegateSignature();
		void OnQueryAchievementsComplete__DelegateSignature();
		void OnProfileBlockLoaded(EProfileBlockType Type, bool bFromCloud);
		void OnPostMatchStatsUpdated__DelegateSignature();
		void OnPoolCountsUpdatedCallback(bool bSuccess, const struct FQueryPoolCountResults& Results);
		void OnPoolCountsUpdated__DelegateSignature(const struct FQueryPoolCountResults& Counts);
		void OnPlayerRatingUpdated__DelegateSignature(const struct FCompetitiveRating& Rating);
		void OnPlayerProfileUpdated__DelegateSignature(const struct FSandstormPlayerProfile& NewData);
		void OnPlayerGearLevelChanged__DelegateSignature(const class FName& ArmorLevel, const class FName& CarrierLevel);
		void OnPlayerAvatarLoaded__DelegateSignature(class UTexture2D* Texture);
		void OnMatchHistoryUpdated__DelegateSignature(const struct FMatchHistory& NewHistory);
		void OnLocalProfileLoaded__DelegateSignature();
		void OnExperienceUpdated(int64_t NewExperience);
		void OnAccountStatusUpdatedDelegate__DelegateSignature(const struct FGetAccountStatusResult& Status);
		void OnAbandonedMatchUpdate__DelegateSignature();
		void LoadPlayerAvatar();
		bool IsChatRestricted();
		bool HasAbandonedMatchInPool(const class FString& PoolName);
		void GetVoiceInputDevices(TArray<struct FVoiceChatAvailableDevice>* OutInputDevices);
		void GetTaglinesCount(TMap<class FString, int32_t>* TaglineCountMap);
		void GetTaglineClassPtr(class FString* ClassName);
		class UStatisticsProfile* GetPlayerProfile();
		class UINSPlayerLocalProfile* GetLocalProfile();
		int32_t GetEntitledScoreboardBadgeIndex();
		EeInputIconType GetControllerIconType();
		void GetAchievementsCount(int32_t* AchievementsAchieved, int32_t* AchievementsTotal);
		void CreateCustomGame(bool bLocal, const class FString& Scenario);
		void BroadcastKeyIconUpdate();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSMatchBeaconClient
	 * Size -> 0x0030 (FullSize[0x03A0] - InheritedSize[0x0370])
	 */
	class AINSMatchBeaconClient : public APartyBeaconClient
	{
	public:
		float                                                      ReconnectionInitialTimeout;                              // 0x0370(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ReconnectionTimeout;                                     // 0x0374(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasReconnected;                                         // 0x0378(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_G1D3[0x27];                                  // 0x0379(0x0027) MISSED OFFSET (PADDING)

	public:
		void ClientAllowedToProceedFromReservationTimeout();
		void ClientAllowedToProceedFromReservation();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSMatchBeaconHost
	 * Size -> 0x0020 (FullSize[0x02E0] - InheritedSize[0x02C0])
	 */
	class AINSMatchBeaconHost : public APartyBeaconHost
	{
	public:
		unsigned char                                              UnknownData_YVNP[0x9];                                   // 0x02C0(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bReservationsLocked;                                     // 0x02C9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DF8H[0x16];                                  // 0x02CA(0x0016) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSMatchBeaconState
	 * Size -> 0x0010 (FullSize[0x0088] - InheritedSize[0x0078])
	 */
	class UINSMatchBeaconState : public UPartyBeaconState
	{
	public:
		struct FMatchReservation                                   MatchReservation;                                        // 0x0078(0x0010) Protected, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSMatchmaking
	 * Size -> 0x00D8 (FullSize[0x0100] - InheritedSize[0x0028])
	 */
	class UINSMatchmaking : public UObject
	{
	public:
		unsigned char                                              UnknownData_JUK7[0xD0];                                  // 0x0028(0x00D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSSessionHelper*                                   SessionHelper;                                           // 0x00F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void OnMatchmakerSuccess__DelegateSignature();
		void OnMatchmakerStateChange__DelegateSignature(EMatchmakingState OldState, EMatchmakingState NewState);
		void OnMatchmakerFailure__DelegateSignature(EMatchmakingFailure Error);
		bool IsMatchmakingLateJoin();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSMatchmakingServerMode
	 * Size -> 0x0008 (FullSize[0x0310] - InheritedSize[0x0308])
	 */
	class AINSMatchmakingServerMode : public AGameMode
	{
	public:
		bool                                                       bIsMatchServer;                                          // 0x0308(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XU22[0x7];                                   // 0x0309(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSMultiplayerTestGameMode
	 * Size -> 0x0008 (FullSize[0x09B0] - InheritedSize[0x09A8])
	 */
	class AINSMultiplayerTestGameMode : public AINSMultiplayerMode
	{
	public:
		unsigned char                                              UnknownData_I5QT[0x8];                                   // 0x09A8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSOccupyGameMode
	 * Size -> 0x0020 (FullSize[0x09C8] - InheritedSize[0x09A8])
	 */
	class AINSOccupyGameMode : public AINSMultiplayerMode
	{
	public:
		int32_t                                                    DefaultReinforcementWaves;                               // 0x09A8(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BonusReinforcementWaves;                                 // 0x09AC(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       FactionOneReinforcementSystem;                           // 0x09B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       FactionTwoReinforcementSystem;                           // 0x09B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AObjectiveBase*                                      HillObjective;                                           // 0x09C0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool ShouldDeductReinforcementWave(class UReinforcementSystemComponent* ReinforcementSystemComponent);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSOperationGameMode
	 * Size -> 0x00E0 (FullSize[0x0BB0] - InheritedSize[0x0AD0])
	 */
	class AINSOperationGameMode : public AINSCoopMode
	{
	public:
		float                                                      RetreatTimer;                                            // 0x0AD0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R14K[0x4];                                   // 0x0AD4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AObjectiveBase*                                      ActiveObjective;                                         // 0x0AD8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AObjectiveCapturable*                                ActiveEvacObj;                                           // 0x0AE0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AObjectiveBase*>                              ObjectiveSequence;                                       // 0x0AE8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AObjectiveBase*>                              CompletedObjectives;                                     // 0x0AF8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AObjectiveCapturable*>                        EvacObjectives;                                          // 0x0B08(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UINSAISquad*                                         DefendingSquad;                                          // 0x0B18(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              MortarClass[0x28];                                       // 0x0B20(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              HelicopterClass[0x28];                                   // 0x0B48(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class AVehicleHoveringBase*                                EvacHelicopter;                                          // 0x0B70(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              EvacDestination;                                         // 0x0B78(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TMQO[0x30];                                  // 0x0B80(0x0030) MISSED OFFSET (PADDING)

	public:
		void SpawnPlayerTeam();
		void EvacSuccessful();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.OutpostWaveConfig
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UOutpostWaveConfig : public UDataAsset
	{
	public:
		TArray<struct FOutpostCustomWave>                          CustomWaves;                                             // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOutpostSpecialWave>                         SpecialWaves;                                            // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FOutpostFinalWave                                   FinalWaveSettings;                                       // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E31A[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSOutpostGameMode
	 * Size -> 0x01D0 (FullSize[0x0CA0] - InheritedSize[0x0AD0])
	 */
	class AINSOutpostGameMode : public AINSCoopMode
	{
	public:
		class AINSOutpostGameState*                                OutpostGameState;                                        // 0x0AD0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_ForceRetreat;                                // 0x0AD8(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    WavesPlayed;                                             // 0x0AE0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WavesCompleted;                                          // 0x0AE4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSupportsObjectiveGroups;                                // 0x0AE8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7JXH[0x3];                                   // 0x0AE9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ActiveObjectiveGroup;                                    // 0x0AEC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bContestedObjective;                                     // 0x0AF0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRetreated;                                              // 0x0AF1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRetreatedFromElimination;                               // 0x0AF2(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1T7H[0x1];                                   // 0x0AF3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialPrepareTimer;                                     // 0x0AF4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PrepareTimer;                                            // 0x0AF8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WaveSurvivalSupplyAward;                                 // 0x0AFC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumWaves;                                                // 0x0B00(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDeductWaveAfterRetreat;                                 // 0x0B04(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResetWavesOnRetreat;                                    // 0x0B05(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceRespawnOnRetreat;                                  // 0x0B06(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRetreatOnElimination;                                   // 0x0B07(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EliminationRetreatDelay;                                 // 0x0B08(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowRetreatOnFinalWave;                                // 0x0B0C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G9O0[0x3];                                   // 0x0B0D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefendTimer;                                             // 0x0B10(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FinalDefendTimer;                                        // 0x0B14(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RetreatTimer;                                            // 0x0B18(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinimumBotsPerAdditionalObjective;                       // 0x0B1C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumBotsPerAdditionalObjective;                       // 0x0B20(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumBotsPerCompletedWave;                             // 0x0B24(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumBotsPerCompletedWave;                             // 0x0B28(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotDPRRespawnFinal;                                      // 0x0B2C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotDPRRespawnFirst;                                      // 0x0B30(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotDPRMinimumTimeRemaining;                              // 0x0B34(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSpecialWaves;                                        // 0x0B38(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZE9B[0x3];                                   // 0x0B39(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SpecialWaveFrequency;                                    // 0x0B3C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResetLoadoutOnNewRound;                                 // 0x0B40(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G92I[0x7];                                   // 0x0B41(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                MessageStartDefending;                                   // 0x0B48(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                MessageStartDefendingSpecial;                            // 0x0B60(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class FText>                                        MessagesStartDefendingFinalWave;                         // 0x0B78(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                MessageStartPreparing;                                   // 0x0B88(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                MessageStartRetreat;                                     // 0x0BA0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                MessageStartForcedRetreat;                               // 0x0BB8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                MessageDead;                                             // 0x0BD0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                MessageDeadFinalObjective;                               // 0x0BE8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                MessageDeadFinalObjectiveLastWave;                       // 0x0C00(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    MaximumBotFireSupportPerWave;                            // 0x0C18(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotFireSupportCooldown;                                  // 0x0C1C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireSupportMinimumTimeRemaining;                         // 0x0C20(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaximumBotFireSupportFinalWave;                          // 0x0C24(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotFireSupportFinalWaveCooldown;                         // 0x0C28(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireSupportMinimumTimeRemainingFinalWave;                // 0x0C2C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A5WD[0x8];                                   // 0x0C30(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLoadoutWeapon>                              StartingItems;                                           // 0x0C38(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              OutpostWaveConfigAssetPath[0x28];                        // 0x0C48(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UOutpostWaveConfig*                                  OutpostWaveConfig;                                       // 0x0C70(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TWXX[0x28];                                  // 0x0C78(0x0028) MISSED OFFSET (PADDING)

	public:
		bool IsFinalWave();
		int32_t GetRemainingWaves();
		void ForceRetreat();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSOutpostGameState
	 * Size -> 0x0060 (FullSize[0x06A0] - InheritedSize[0x0640])
	 */
	class AINSOutpostGameState : public AINSMultiplayerGameState
	{
	public:
		int32_t                                                    CurrentWave;                                             // 0x0640(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalWaves;                                              // 0x0644(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOutpostWaveType                                           CurrentWaveType;                                         // 0x0648(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WB28[0x7];                                   // 0x0649(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnCurrentWaveChangedDelegate;                            // 0x0650(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTotalWavesChangedDelegate;                             // 0x0660(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OutpostLostObjectiveDelegate;                            // 0x0670(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OutpostPrepareNextWaveDelegate;                          // 0x0680(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OutpostIncomingWaveDelegate;                             // 0x0690(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void SetCurrentWave(int32_t NewCurrentWave);
		void OnRep_TotalWaves();
		void OnRep_CurrentWave();
		void OnOutpostWaveChangedDelegate__DelegateSignature(int32_t NewWave);
		void OnOutpostPrepareNextWaveDelegate__DelegateSignature();
		void OnOutpostLostObjectiveDelegate__DelegateSignature();
		void OnOutpostIncomingWaveDelegate__DelegateSignature(EOutpostWaveType WaveType);
		void Multicast_OutpostPrepareNextWaveEvent();
		void Multicast_OutpostLostObjectiveEvent();
		void Multicast_OutpostIncomingWaveEvent(EOutpostWaveType NewCurrentWaveType);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSParty
	 * Size -> 0x0248 (FullSize[0x0270] - InheritedSize[0x0028])
	 */
	class UINSParty : public UObject
	{
	public:
		class FScriptMulticastDelegate                             OnPartyJoinedDelegate;                                   // 0x0028(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPartyStateUpdateDelegate;                              // 0x0038(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPartyLeftDelegate;                                     // 0x0048(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPartyMemberPromotedDelegate;                           // 0x0058(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlatformSessionStartedDelegate;                        // 0x0068(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FINSPartyState                                      LastPartyState;                                          // 0x0078(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFriendsListUpdatedDelegate;                            // 0x0090(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3FU6[0x3C];                                  // 0x00A0(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxPlayers;                                              // 0x00DC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LTUJ[0x190];                                 // 0x00E0(0x0190) MISSED OFFSET (PADDING)

	public:
		void UpdatePendingInvites();
		void UpdateFriendsList();
		void StartLateJoinQueue();
		void PromoteToPartyLeader(const class FString& PlatformId);
		void OpenInviteInterface(const class FName& InService);
		void LeaveParty();
		void KickMember(const class FString& PlatformId);
		bool IsUserInParty(const class FString& UserId);
		bool IsPartyInGame();
		bool IsLocalPlayerLeader();
		bool IsLateJoinPossible();
		bool IsInParty();
		void INSPartyStateUpdate__DelegateSignature(const struct FINSPartyState& State, const struct FPartySettings& Settings);
		void INSPartyPlatformSessionStarted__DelegateSignature();
		void INSPartyMemberPromoted__DelegateSignature();
		void INSPartyLeft__DelegateSignature();
		void INSPartyJoined__DelegateSignature(const struct FINSPartyState& State);
		void INSPartyFriendsUpdated__DelegateSignature(TArray<class FString> FriendsNetId);
		class FString GetFriendNameById(const class FString& FriendNetId);
		void Delegate_OnMatchmakerStateChange(EMatchmakingState OldState, EMatchmakingState NewState);
		void CreateParty(const class FName& InService);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSPatrolArea
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class AINSPatrolArea : public AActor
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSPawnSensingComponent
	 * Size -> 0x0020 (FullSize[0x0118] - InheritedSize[0x00F8])
	 */
	class UINSPawnSensingComponent : public UPawnSensingComponent
	{
	public:
		float                                                      BotOccludedHearingThreshold;                             // 0x00F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotLOSHearingThreshold;                                  // 0x00FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JT89[0x8];                                   // 0x0100(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnHearNoiseExtended;                                     // 0x0108(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSPlayerCameraManager
	 * Size -> 0x0C24 (FullSize[0x3360] - InheritedSize[0x273C])
	 */
	class AINSPlayerCameraManager : public APlayerCameraManager
	{
	public:
		float                                                      FreeCamDistanceVehicle;                                  // 0x273C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FreeCamDistanceTurret;                                   // 0x2740(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SJK9[0x4];                                   // 0x2744(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialParameterCollection*                        PlayerCollection;                                        // 0x2748(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionEffectMaximum;                                // 0x2750(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H24S[0x4];                                   // 0x2754(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstanceDynamic*                            SuppressionEffectMaterial;                               // 0x2758(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  BlendableSuppressionEffectMaterial;                      // 0x2760(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            BlindEffectMaterial;                                     // 0x2768(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  BlendableBlindEffectMaterial;                            // 0x2770(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            GaussianBlurEffectMaterial;                              // 0x2778(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  BlendableGaussianBlurEffectMaterial;                     // 0x2780(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  BlendablePainEffectMaterial;                             // 0x2788(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            PainEffectMaterial;                                      // 0x2790(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  BlendableSharpenEffectMaterial;                          // 0x2798(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            SharpenEffectMaterial;                                   // 0x27A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  CustomDepthBlendableMaterial;                            // 0x27A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            CustomDepthBlendable;                                    // 0x27B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            SmokeEffectMaterial;                                     // 0x27B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  BlendableSmokeEffectMaterial;                            // 0x27C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bXRay;                                                   // 0x27C8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NHMS[0x7];                                   // 0x27C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                PostProcessSettings;                                     // 0x27D0(0x0540) BlueprintVisible, NativeAccessSpecifierPublic
		class UTextureRenderTarget2D*                              ScopeTargetTexture;                                      // 0x2D10(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneCaptureComponent2D*                            ScopeSceneCapture;                                       // 0x2D18(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUICamera;                                               // 0x2D20(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OCCB[0x63F];                                 // 0x2D21(0x063F) MISSED OFFSET (PADDING)

	public:
		void UpdateDefaultFOV();
		void OnOwnerChangeTeam(unsigned char TeamId, class ATeamInfo* TeamInfo);
		bool IsFirstPersonCamera();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSPlayerController
	 * Size -> 0x0618 (FullSize[0x0E50] - InheritedSize[0x0838])
	 */
	class AINSPlayerController : public AINSBasePlayerController
	{
	public:
		unsigned char                                              UnknownData_AO0V[0x8];                                   // 0x0838(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FreeaimLastSightsProgress;                               // 0x0840(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           LastDPadAxisInput;                                       // 0x0844(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LAIR[0x4];                                   // 0x084C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnTeamVoteCallResultDelegate;                            // 0x0850(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTeamVoteCastResultDelegate;                            // 0x0860(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G5QX[0x8];                                   // 0x0870(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnTeamChangedDelegate;                                   // 0x0878(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMenuWidgetOpenedDelegate;                              // 0x0888(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMenuWidgetExitDelegate;                                // 0x0898(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5YMX[0x58];                                  // 0x08A8(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bQueueRestart;                                           // 0x0900(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TLV1[0x13];                                  // 0x0901(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxHQAnnouncements;                                      // 0x0914(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAudioAnnouncementCue>                       HQAudioQueue;                                            // 0x0918(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHQAnnouncementPlaying;                                  // 0x0928(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LP8E[0x7];                                   // 0x0929(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_PlayingHQAnnouncement;                       // 0x0930(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  LocalAudioComponent;                                     // 0x0938(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_Fading;                                      // 0x0940(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YE70[0x40];                                  // 0x0948(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPrimaryAssetId>                             ItemFPrimaryAssetId;                                     // 0x0988(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FScriptMulticastDelegate                             InventoryItemLoaded;                                     // 0x0998(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected
		bool                                                       bAssetIsLoadProgress;                                    // 0x09A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_LOHK[0x7];                                   // 0x09A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             PlayerClassChangedDelegate;                              // 0x09B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UPlayerInventoryComponent*                           InventoryComponent;                                      // 0x09C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             UpdateFiremodeDelegate;                                  // 0x09C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             UpdateOpticDelegate;                                     // 0x09D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             UpdatePointShootDelegate;                                // 0x09E8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             EquipableItemSelectedDelegate;                           // 0x09F8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             AmmoUpdatedDelegate;                                     // 0x0A08(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ReserveAmmoUpdatedDelegate;                              // 0x0A18(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ShowAmmoDisplayDelegate;                                 // 0x0A28(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4K4Q[0x2];                                   // 0x0A38(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bFireSupportMenuOpen;                                    // 0x0A3A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsingFireSupportMenuKey;                                // 0x0A3B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRangeComputerMenuOpen;                                  // 0x0A3C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HEHX[0x3];                                   // 0x0A3D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FireSupportPersonalCooldown;                             // 0x0A40(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastFireSupportTime;                                     // 0x0A44(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             FireSupportConfirmedDelegate;                            // 0x0A48(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UFireSupportDefinition*                              SelectedFireSupportDefinition;                           // 0x0A58(0x0008) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SQPK[0x8];                                   // 0x0A60(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             AddCompassMarkerDelegate;                                // 0x0A68(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CV9N[0x9];                                   // 0x0A78(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bInGameMenuVisible;                                      // 0x0A81(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YTY0[0x6];                                   // 0x0A82(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnInGameMenuVisibleDelegate;                             // 0x0A88(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bCanAccessExtraMenus;                                    // 0x0A98(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E6F2[0x3];                                   // 0x0A99(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PendingMenuActions;                                      // 0x0A9C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPendingMenuActionChanged;                              // 0x0AA0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnShowKillerInfoDelegate;                                // 0x0AB0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UInGameMenuWidget*                                   InGameMenuInstance;                                      // 0x0AC0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              InGameMenuWidget;                                        // 0x0AC8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              FireSupportRadialWidgetClass;                            // 0x0AD0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUserWidget*                                         FireSupportRadialWidget;                                 // 0x0AD8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              CommsRadialWidgetClass;                                  // 0x0AE0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUserWidget*                                         CommsRadialWidget;                                       // 0x0AE8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              MapVoteWidget;                                           // 0x0AF0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UUserWidget*                                         ActiveRadialWidget;                                      // 0x0AF8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                         ActiveGenericWidget;                                     // 0x0B00(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IY4R[0x2];                                   // 0x0B08(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EIngameMenuType                                            LastOpenedIngameMenu;                                    // 0x0B0A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_D7IJ[0x5];                                   // 0x0B0B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMapVoteWidget*                                      ActiveMapVoteWidget;                                     // 0x0B10(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                ShellShockAkStateGroup;                                  // 0x0B18(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ShellShockStartAkState;                                  // 0x0B20(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ShellShockStopAkState;                                   // 0x0B28(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ShellShockTerminateAkEvent;                              // 0x0B30(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ShellShockTinnitusAkEvent;                               // 0x0B38(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ShellShockTinnitusEndAkEvent;                            // 0x0B40(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DeafenAkStateGroup;                                      // 0x0B48(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DeafenStartAkState;                                      // 0x0B50(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DeafenStopAkState;                                       // 0x0B58(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DeafenAkEvent;                                           // 0x0B60(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DeafenEndAkEvent;                                        // 0x0B68(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YHZX[0x18];                                  // 0x0B70(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        AvailableDebugCameras;                                   // 0x0B88(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastChatMessageTime;                                     // 0x0B98(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisablePawnInput;                                       // 0x0B9C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRadialMenuActive;                                       // 0x0B9D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInventorySelectActive;                                  // 0x0B9E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JLEU[0x1];                                   // 0x0B9F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnInventorySelectActiveDelegate;                         // 0x0BA0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      ButtonTapTimeThreshold;                                  // 0x0BB0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInventoryMenuVisible;                                   // 0x0BB4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GSA8[0x3];                                   // 0x0BB5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnInventoryMenuVisibleDelegate;                          // 0x0BB8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3JRR[0x8];                                   // 0x0BC8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bMainMenuController;                                     // 0x0BD0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_POOX[0x17];                                  // 0x0BD1(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bVoiceLocalPressed;                                      // 0x0BE8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVoiceRadioPressed;                                      // 0x0BE9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTalkingOverRadio;                                       // 0x0BEA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z0CF[0x55];                                  // 0x0BEB(0x0055) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bShowDevTag;                                             // 0x0C40(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CBT1[0x3];                                   // 0x0C41(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ScoreboardBadge;                                         // 0x0C44(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMusicManagerComponent*                              MusicManagerComponent;                                   // 0x0C48(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZRQM[0x10];                                  // 0x0C50(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayingMusic                                       PlayingMusic;                                            // 0x0C60(0x0008) Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JIBG[0x8];                                   // 0x0C68(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnSoldierSpawnDelegate;                                  // 0x0C70(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLeaveSpawnZoneDelegate;                                // 0x0C80(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnEnterSpawnZoneDelegate;                                // 0x0C90(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnShowRadialMenuDelegate;                                // 0x0CA0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnHideRadialMenuDelegate;                                // 0x0CB0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerMapVotingStarted;                                // 0x0CC0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerResupplied;                                      // 0x0CD0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSoldierDespawnDelegate;                                // 0x0CE0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bClientLoadedScenarioAssets;                             // 0x0CF0(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_627P[0x7];                                   // 0x0CF1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSoftObjectPath>                             ClientPendingAssets;                                     // 0x0CF8(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             ClientExpectedAssets;                                    // 0x0D08(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ClientPendingAudioBanks[0x50];                           // 0x0D18(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_7IQ9[0x60];                                  // 0x0D68(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UTutorialLesson*>                             Lessons;                                                 // 0x0DC8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAchievementDataAsset*                               AchievementLists;                                        // 0x0DD8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USandstormAchievement*>                       Achievements;                                            // 0x0DE0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AINSSoldier*                                         CachedPawn;                                              // 0x0DF0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnShowPlayerExperienceDelegate;                          // 0x0DF8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UKNQ[0x10];                                  // 0x0E08(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USandstormStatsCollectionComponent*                  StatsCollection;                                         // 0x0E18(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ISCZ[0x10];                                  // 0x0E20(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ARandomWeaponCrate*>                          OpenedWeaponCrates;                                      // 0x0E30(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QUCW[0x10];                                  // 0x0E40(0x0010) MISSED OFFSET (PADDING)

	public:
		void UpdateVoiceChatChannels();
		void UpdatePointShootPreference(bool Mode);
		void UpdatePointShootDelegate__DelegateSignature(bool Mode);
		void UpdateOpticPreference(int32_t Mode);
		void UpdateOpticDelegate__DelegateSignature(int32_t Mode);
		void UpdateFiremodePreference(EFirearmFiremode Firemode);
		void UpdateFiremodeDelegate__DelegateSignature(EFirearmFiremode Firemode);
		void ToggleLoadoutMenu();
		void ToggleInGameMenu(EIngameMenuType Menu);
		void StopShellShock(bool bTerminate);
		void StopDeafen(bool bTerminate);
		void SpotEnemy();
		void SpectatePlayer(class AActor* Actor);
		void ShowRangeComputerMenu(class UUserWidget* RangeWidget);
		void ShowPlayerExperienceDelegate__DelegateSignature();
		void ShowKillerInfoDelegate__DelegateSignature(const struct FPlayerKillNotice& Notice, const struct FNemesisStats& NemesisStats);
		void ShowInGameMenu(EIngameMenuType Menu, EIngameMenuEntryState FromState);
		class UUserWidget* ShowGenericWidget(class UClass* NewWidget, bool bConsumesInput);
		void ShowFireSupportMenu();
		void ShowCustomRadial(class UUserWidget* CustomRadialWidget);
		void ShowCommsMenu();
		void ShowAmmoDisplayDelegate__DelegateSignature();
		void ShowAmmoDisplay();
		void SetVotedForKick(bool SetVotedForKick);
		void SetSelectedFireSupport(class UFireSupportDefinition* FireSupportClass);
		void SetLeaveGameMenuState(bool bIsLeaveMenuOpenedParam);
		void SetCameraForUI(bool SoldierCamera, float TransitionTime);
		void ServerVoiceChatLoggedIn();
		void ServerUpdateShowDevTag(bool bNewShowDevTag);
		void ServerUpdateScoreboardBadge(int32_t NewScoreboardBadge);
		void ServerUpdateFactionCosmetics(const class FString& FactionName, TArray<int32_t> Cosmetics);
		void ServerUpdateAllowVIP(bool bNewAllowVIP);
		void ServerSpectatePlayer(class AActor* Actor);
		void ServerSetTalkingOverRadio(bool bState);
		void ServerSetMapVoteSelection(EMapVoteSelection VoteIndex);
		void ServerSendFireSupportRadialCommand(ERadialMenuDirection Direction);
		void ServerSendCommsRadialCommand(ERadialMenuDirection Direction);
		void ServerSendChatMessage(const class FText& Message, bool bTeamOnly);
		void ServerSABER_PlayDialogueForObjective(ECharacterResponse DialogueType, int32_t ObjectiveId);
		void ServerRequestViewTarget(class AActor* Target, const struct FViewTargetTransitionParams& TransitionParams);
		void ServerRequestSelectedFireSupport(float YawOffset);
		void ServerRequestGameChannelToken(const class FString& Channel);
		void ServerPossessViewTarget();
		void ServerKill();
		void ServerJoinSpectators();
		void ServerJoinPlayerClass(class UPlayerClass* DesiredClass);
		void ServerJoinFaction(unsigned char FactionId);
		void ServerEjectToSpectator();
		void ServerConfirmLoadout();
		void ServerChangeFaction(unsigned char NewFactionId);
		void ServerCastVote(int32_t ChoiceIndex, bool bTeamOnlyVote);
		void ServerCallVote(class UClass* Issue, const class FString& Option, class APlayerState* TargetPlayer, bool bTeamOnlyVote);
		void ServerAckScenarioAudioBanksLoaded();
		void ServerAckScenarioAssetsLoaded(TArray<struct FSoftObjectPath> LoadedByClient);
		void SendFireSupportRadialCommand(ERadialMenuDirection Direction);
		void SendCurrentCosmeticPreset();
		void SendCommsRadialCommand(ERadialMenuDirection Direction);
		bool SavePlayerClassLoadout(const class FText& LoadoutName);
		void SaveCurrentLoadout();
		void SABER_PlayDialogueForObjective(ECharacterResponse DialogueType, int32_t ObjectiveId);
		void SABER_PlayDialogue(ECharacterResponse DialogueType);
		void ResetCameraFocus(bool bShouldAttemptToViewPlayer);
		void RenewTutorialPause();
		void ReleaseCommsMenu();
		void QueueHQObjectiveAnnouncement(class UAkAudioEvent* AudioEvent, int32_t ObjectiveId);
		void QueueHQAnnouncement(class UAkAudioEvent* AudioEvent);
		void QAGetPos(bool bCopyToClipboard);
		void PressCommsMenu();
		void PossessViewTarget();
		void PlayShellShock(float Duration);
		void PlayingMusicUpdated__DelegateSignature(const struct FPlayingMusic& NewMusic);
		void PlayerClassChangedDelegate__DelegateSignature(class UPlayerClass* PlayerClass);
		void PlayDeafen(float Duration);
		void PendingMenuActionChangedDelegate__DelegateSignature();
		void OnUpdatedLocalProfileHUDPreferences();
		void OnUpdatedHUDPreferences();
		void OnStopShellShock();
		void OnStopDeafen();
		void OnSpawnZoneDelegate__DelegateSignature();
		void OnSoldierSpawnDelegate__DelegateSignature();
		void OnShowRadialMenuDelegate__DelegateSignature(class UUserWidget* ShownRadial);
		void OnRep_PlayingMusic();
		void OnRep_PendingMenuActions();
		void OnPlayerSettingsUpdate();
		void OnPlayerMapVotingStart__DelegateSignature();
		void OnMenuWidgetOpenedDelegate__DelegateSignature(EIngameMenuType Entered);
		void OnMenuWidgetExitDelegate__DelegateSignature();
		void OnInventorySelectActiveDelegate__DelegateSignature(bool bNewInventorySelectActive);
		void OnInventoryMenuVisibleDelegate__DelegateSignature(bool bNewInventorySelectActive, bool bUsingGamepad);
		void OnInGameMenuVisibleDelegate__DelegateSignature(bool bNewVisibility);
		void OnHQAnnouncementFinished();
		void OnHideRadialMenuDelegate__DelegateSignature(class UUserWidget* HiddenRadial);
		void OnFireSupportPersonalCooldownElapsed();
		void OnFireSupportConfirmedDelegate__DelegateSignature(const struct FFireSupportRequest& Request);
		void OnFadeFinished();
		void NotifyOfUsingMultiplayerFeatures(bool bIsUsingMP);
		void LocalProfileSaveOpportunity();
		bool LoadInventoryItem();
		void LoadAndInstanceIngameMenu(bool bHideAfterLoad);
		void Kill();
		void JoinSpectators();
		void JoinPlayerClass(class UPlayerClass* DesiredClass);
		void JoinFaction(unsigned char FactionId);
		void JoinClassBySlot(int32_t ClassSlotIndex);
		bool IsVaultKeyBound();
		bool IsTextChatOnCooldown();
		bool IsPlayingShellShock();
		bool IsPlayerAudioInProximity(int32_t PlayerId);
		bool IsInTutorialSession();
		bool IsInSpectatorFaction();
		bool IsFireSupportOnCooldown();
		bool IsFadingInOrOut();
		bool IsDeafened();
		void InventorySelectReleased();
		void InventorySelectPressed();
		void InventoryItemLoaded__DelegateSignature();
		void InitAchievements();
		void HideInGameMenu();
		void HideGenericWidget();
		void HideFireSupportMenu();
		void HideCommsMenu();
		void HideActiveRadialWidget();
		bool HasPendingMenuAction(EPendingMenuAction Action);
		bool HasLocalProfile();
		bool HasConfirmedLoadout();
		bool HasAlivePawn();
		void GetVoteIssues(TArray<struct FVotableIssue>* OutVotableIssues, bool bTeamOnlyVote);
		float GetTimeUntilPersonalCooldownFinished();
		float GetTimeSinceLastChatMessage();
		unsigned char GetTeamId();
		class ATeamInfo* GetTeam();
		class UFireSupportDefinition* GetSelectedFireSupport();
		void GetKeysForActionUsingInputMethod(const class FName& Action, TArray<struct FInputActionKeyMapping>* OutKeys, bool bGamepad);
		void GetKeysForActionActiveInputMethod(const class FName& Action, TArray<struct FInputActionKeyMapping>* OutKeys);
		void GetKeysForAction(const class FName& Action, TArray<struct FInputActionKeyMapping>* OutKeys);
		float GetFireSupportPersonalCooldownDuration();
		class UFactionDefinition* GetFactionDefinition();
		class UPlayerClass* GetCurrentPlayerClass(bool bUseCurrentPawnClass);
		void ForwardInventoryPreferences();
		void EquipableItemSelectedDelegate__DelegateSignature(class AItemEquipable* NewItem, class AItemEquipable* PreviousItem);
		void DPadUpPressed();
		void DPadRightPressed();
		void DPadLeftPressed();
		void DPadDownPressed();
		void DebugFireSupportRadialMenu();
		void CycleDebugCamera();
		class UUserWidget* CreateRangeComputerMenu(class UClass* NewRangeWidget);
		void CreateIndividualAchievement(class UClass* AchievementClass);
		class UUserWidget* CreateCustomRadial(class UClass* NewWidget);
		void ConfirmLoadout();
		void ClientVoteResult(ECallVoteResult Result, bool bTeamOnlyVote);
		void ClientStartOnlineGame();
		void ClientShowMapVoteScreen(TArray<struct FMapVoteOption> Maps, float EndTime, bool bCanVoteRefresh);
		void ClientShowKillerInfo(const struct FPlayerKillNotice& Notice, const struct FNemesisStats& NemesisStats);
		void ClientSetVoiceState(int32_t PlayerId, bool bAudibleProximity, bool bAudibleRadio, bool bIsEnemy, bool bRadioFilter);
		void ClientSetMapVoteWinner(EMapVoteSelection Selection);
		void ClientSetMapVoteCount(TArray<struct FMapVoteCount> Data);
		void ClientSetDeathFade(float FadeTime, bool bApplyHeadshotSwitch);
		void ClientReturnToQueueFromMatch();
		void ClientReceiveScenarioAssets(TArray<struct FSoftObjectPath> AssetsToLoad, bool bFirst);
		void ClientReceivedGameChannelToken(const class FString& Channel, const class FString& JoinToken);
		void ClientReceiveAudioBanks();
		void ClientQueueHQObjectiveAnnouncement(class UAkAudioEvent* AudioEvent, int32_t ObjectiveId);
		void ClientQueueHQAnnouncement(class UAkAudioEvent* AudioEvent);
		void ClientPromptTeamMenu();
		void ClientPromptLoadout();
		void ClientPromptCosmeticsMenuIfNeeded();
		void ClientProfileSaveOpportunity();
		void ClientOnPlayerResupplied(class AINSSoldier* Soldier);
		void ClientNotifyKickReason(EPlayerKickReason KickReason);
		void ClientIdleKickWarning(int32_t SecondsRemaining);
		void ClientFadeOut(const struct FColor& FadeColor, float FadeTime, float HoldTime);
		void ClientFadeIn(const struct FColor& FadeColor, float FadeTime, float HoldTime);
		void ClientEnterMatchTransitionState(const struct FGuid& TicketId, const class FString& Scenario, const class FString& Options);
		void ClientEndOnlineRatedMatch(bool bHasRatingUpdate, const struct FMatchScoreChange& PlayerChange);
		void ClientConnectVoiceChat(const class FString& VoiceSessionId, const class FString& ConnectToken);
		void ClientConfirmScenarioAssetsLoaded();
		void ClientConfirmMapVoteSelection(EMapVoteSelection VotedIndex);
		void ClientClearDeathFade(float FadeTime);
		void ClientChangeVoiceChatChannels(unsigned char TeamId, EVoiceChatChannelFlags Flags);
		void ClientCastVoteResult(ECastVoteResult Result, bool bTeamOnlyVote);
		void ClientBroadcastPendingMenuAction();
		void ClientAddCompassMarker(const struct FVector_NetQuantize& WorldLocation, class AActor* FollowActor, ECompassMarkerType MarkerType);
		void ChoosePlayerClassLoadout(int32_t LoadoutIndex);
		void CheckInventorySelectType();
		void ChangeFaction(unsigned char NewFactionId);
		void CastVoteChecked(int32_t ChoiceIndex, bool bTeamOnlyVote);
		struct FFireSupportRequestResult CanRequestSelectedFireSupport(const struct FVector& RequestLocation);
		bool CanCallVote();
		void BroadcastMenuStateChange(EIngameMenuType EnteredState);
		void BreakTutorialPause();
		void BindToggleMenuInsteadToggleLessons();
		void BindToggleLessonsInsteadToggleMenu();
		void BenchmarkStart();
		void BeginQueuedFadeIn(const struct FColor& Color, float Duration, float TargetAlpha);
		void AmmoUpdatedDelegate__DelegateSignature();
		void AddHQAnnouncement(const struct FAudioAnnouncementCue& Cue);
		void AddCompassMarkerOnActor(class AActor* Actor, ECompassMarkerType MarkerType);
		void AddCompassMarkerDelegate__DelegateSignature(const struct FVector& WorldLocation, class AActor* FollowActor, ECompassMarkerType MarkerType);
		void AddCompassMarker(const struct FVector& WorldLocation, ECompassMarkerType MarkerType);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSPlayerInput
	 * Size -> 0x0280 (FullSize[0x0628] - InheritedSize[0x03A8])
	 */
	class UINSPlayerInput : public UPlayerInput
	{
	public:
		struct FRuntimeFloatCurve                                  SensitivityCurveExponential;                             // 0x03A8(0x0088) Config, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  SensitivityCurveLinear;                                  // 0x0430(0x0088) Config, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  SensitivityCurveDynamic;                                 // 0x04B8(0x0088) Config, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  SensitivityCurveDualZone;                                // 0x0540(0x0088) Config, NativeAccessSpecifierPublic
		float                                                      DeadzoneInnerLeft;                                       // 0x05C8(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeadzoneInnerRight;                                      // 0x05CC(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeadzoneOuter;                                           // 0x05D0(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_37H5[0x54];                                  // 0x05D4(0x0054) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSPlayerLocalProfile
	 * Size -> 0x0BB0 (FullSize[0x0BD8] - InheritedSize[0x0028])
	 */
	class UINSPlayerLocalProfile : public UObject
	{
	public:
		class FScriptMulticastDelegate                             OnProfileBlockLoadedDelegate;                            // 0x0028(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnProfileBlockSavedDelegate;                             // 0x0038(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		int32_t                                                    SavedProfileVersion;                                     // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastKnownPVPExperience;                                  // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastKnownBalance;                                        // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A5MW[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProfileCharacterCosmeticState                      CurrentSecurityFemaleCosmeticState;                      // 0x0058(0x0038) BlueprintVisible, NativeAccessSpecifierPublic
		ECharacterGender                                           CurrentSecurityCosmeticGender;                           // 0x0090(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4OAS[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProfileCharacterCosmeticState                      CurrentSecurityCosmeticState;                            // 0x0098(0x0038) BlueprintVisible, NativeAccessSpecifierPublic
		struct FProfileCharacterCosmeticState                      CurrentSecurityShoppingCart;                             // 0x00D0(0x0038) BlueprintVisible, NativeAccessSpecifierPublic
		struct FProfileCharacterCosmeticState                      CurrentInsurgentsCosmeticState;                          // 0x0108(0x0038) BlueprintVisible, NativeAccessSpecifierPublic
		struct FProfileCharacterCosmeticState                      CurrentInsurgentsShoppingCart;                           // 0x0140(0x0038) BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FString, struct FProfileCharacterCosmeticState> StoredCosmeticStates;                                    // 0x0178(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FString, class FText>                           StoredCosmeticChoices;                                   // 0x01C8(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                CurrentSelectedPresetName;                               // 0x0218(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    ScoreboardBadge;                                         // 0x0230(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FHGM[0xC];                                   // 0x0234(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EProfileBlockType, struct FProfileSaveBlock>          ProfileBlocks;                                           // 0x0240(0x0050) NativeAccessSpecifierPrivate
		class UControllerLayout*                                   ControllerLayout;                                        // 0x0290(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FNVIDIAHighlightsInfo                               NVIDIAHighlightsInfo;                                    // 0x0298(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerControlSettings                              PlayerControls;                                          // 0x02A0(0x0170) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTheaterPreferences                                 TheaterPreferences;                                      // 0x0410(0x0210) BlueprintVisible, NativeAccessSpecifierPublic
		struct FServerBrowserPreferences                           ServerBrowserPreferences;                                // 0x0620(0x0048) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FCosmeticDefinition>                         EntitledCosmetics;                                       // 0x0668(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PreferredFaction;                                        // 0x0678(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, struct FBasicLoadoutItem>                LastEquippedPrimary;                                     // 0x0680(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class FString>                                      LessonHintsReceived;                                     // 0x06D0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, unsigned char>                         LessonLeftCount;                                         // 0x06E0(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YCG7[0x40];                                  // 0x0730(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerLastGameSummary                              LastMatchStats;                                          // 0x0770(0x00D8) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              EquippedItems[0x50];                                     // 0x0848(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              EquippedWeaponUpgrades[0x50];                            // 0x0898(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_QW5D[0x50];                                  // 0x08E8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UnviewedItems[0x50];                                     // 0x0938(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              PreviewedCosmeticItems[0x50];                            // 0x0988(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnviewedStoreItems[0x50];                                // 0x09D8(0x0050) UNKNOWN PROPERTY: SetProperty
		bool                                                       bHasSales;                                               // 0x0A28(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BU9K[0x7];                                   // 0x0A29(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PreviewedStoreItems[0x50];                               // 0x0A30(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<int32_t>                                            HiddenReplays;                                           // 0x0A80(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, struct FCameraBookmarkData>            ReplayCameraBookmarks;                                   // 0x0A90(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bVaultKeyBound;                                          // 0x0AE0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BA1O[0x7];                                   // 0x0AE1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FUserInterfacePreferences                           UserInterfacePreferences;                                // 0x0AE8(0x0060) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUIOptionChangedDelegate;                               // 0x0B48(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUnviewedStoreItemViewed;                               // 0x0B58(0x0010) ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FGameAchievements                                   GameAchievements;                                        // 0x0B68(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A1ML[0x20];                                  // 0x0BB8(0x0020) MISSED OFFSET (PADDING)

	public:
		void UpdateServerBrowserPreferences(const struct FServerBrowserPreferences& NewPreferences);
		void UpdatePointShootPreference(bool Mode);
		void UpdatePlayerClassDefaultLoadout(TArray<struct FBasicLoadoutItem> Items, bool bIsNight);
		void UpdateOpticPreference(int32_t Mode);
		void UpdateLastEquippedPrimary(const class FName& InFactionName, const struct FBasicLoadoutItem& InItem);
		void UpdateFiremodePreference(EFirearmFiremode Firemode);
		bool ShouldHideReplayFromHistory(int32_t ReplayID);
		void SetUseScopeSensitivityScale(bool bGamepad, bool bNewSetting);
		void SetToDefaults();
		void SetSensitivityScaleForOpticZoom(bool bGamepad, EOpticZoomLevel ZoomLevel, float NewVal);
		void SetScoreboardBadgeFromItemId(int32_t NewScoreboardBadgeItemId);
		void SetScoreboardBadge(int32_t NewScoreboardBadge);
		void SetScopeSensitivityScaleUsesWorldFOV(bool bGamepad, bool bNewSetting);
		void SetScopeSensitivityScale(bool bGamepad, float NewSetting);
		void SetRadialToggle(bool bSetting);
		void SetPreferredFaction(const class FName& FactionPref);
		void SetPlaylistSelected(EPlaylistType Type, class UPlaylist* Playlist, bool bSelected);
		void SetMouseSensitivity(float Val);
		void SetManualBipod(bool bSetting);
		void SetKeyBindingsToDefaults();
		void SetInvertedYAxisMouse(bool bSetting);
		void SetInvertedYAxis(bool bSetting);
		void SetGamepadYSensitivity(float Val);
		void SetGamepadXSensitivity(float Val);
		void SetGamepadDeadzoneInnerRight(float InValue);
		void SetGamepadDeadzoneInnerLeft(float InValue);
		void SetGamepadDampeningSettings(float NewDampeningStrength, float NewDampeningSize, float NewDampeningEaseIn);
		void SetGamepadAimSensitivityCurve(EGamepadSensitivityCurve NewCurve);
		void SetGamepadAccelerationSettings(float NewTimeThreshold, float NewTimeToReachMax, float NewMaxMultiplier);
		void SetGamepadAccelerationEnabled(bool bEnabled);
		void SetFreeaimDeadzoneScale(float NewScale);
		void SetFreeaimDeadzoneMinimumSensitivity(float NewSensitivity);
		void SetFreeaimDeadzoneEnabled(bool bNewEnabled);
		void SetFOVSensitivityScaling(bool bGamepad, bool bNewSetting);
		void SetForceFeedbackIntensity(float Val);
		void SetFocusSensitivityScale(bool bGamepad, float Val);
		void SetControlSettingsToDefaults();
		void SetControllerLayoutName(const class FString& InName);
		void SetControllerLayout(class UControllerLayout* Layout);
		void SetAutoLean(bool bState);
		void SetAimingSensitivityScale(bool bGamepad, float NewSetting);
		void SaveToCloud(int32_t SpecificBlocks);
		void SaveProfileBlockToCloud(const struct FProfileSaveBlock& ProfileBlock);
		void SaveProfileBlock(EProfileBlockType Type, bool bToCloud, bool bIncrementRevision);
		bool SavePlayerClassLoadout(const class FText& LoadoutName, TArray<struct FBasicLoadoutItem> Items, bool bNightMode);
		void SaveLocalProfileIfDirty();
		void SaveLocalProfile();
		bool SaveActivePresetIndex(int32_t ActivePresetIndex, bool bNightMode);
		void SaveAchievementPercent(const class FString& AchType, float Value);
		void ResetServerBrowserPreferences();
		void ResetLessons();
		void ResetLastMatchStats();
		void ResetFavoritedServers();
		void ReplaceActionMappings(const class FName& OldBinding, const class FName& NewBinding);
		void ReplaceActionMappingKey(const class FName& MatchingBinding, const struct FKey& OldKey, const struct FKey& NewKey);
		void ReplaceActionMapping(const class FName& OldBinding, const class FName& NewBinding, const struct FKey& Key);
		bool RenameSavedLoadout(int32_t PresetIndex, const class FText& NewName, bool bNightMode);
		void RemoveFavoritedServer(const struct FBlueprintFindSessionResult& NewRemovedServer);
		void RemoveCloudDelegates();
		void RemoveActionMapping(struct FInputActionKeyMapping* KeyMapping);
		void ReceiveLessonHint(class UClass* Lesson);
		void OnUserConfirmedLicenseAgreement();
		void OnUnviewedStoreItemViewed__DelegateSignature();
		void OnUIOptionChangedDelegate__DelegateSignature();
		void OnProfileBlockSavedDelegate__DelegateSignature(EProfileBlockType Type);
		void OnProfileBlockLoadedDelegate__DelegateSignature(EProfileBlockType Type, bool bFromCloud);
		void MarkProfileBlockDirty(EProfileBlockType InBlock);
		void LoadProfileBlock(EProfileBlockType Type, bool bFromCloud);
		void LoadFromCloud();
		bool IsRadialToggle();
		bool IsPlaylistSelected(EPlaylistType Type, class UPlaylist* Playlist);
		bool IsManualBipod();
		bool IsFavoritedServer(const struct FBlueprintFindSessionResult& CheckServer);
		bool IsDirty();
		void IncrementNewHighlights();
		void HideReplayFromHistory(int32_t ReplayID);
		bool HasUserConfirmedLicenseAgreement();
		bool HasPreviewedStoreItem(int32_t ItemId);
		bool HasPreviewedCosmeticItem(int32_t ItemId);
		int32_t HasPlayerClassLoadoutNamed(const class FText& LoadoutName, bool bNightMode);
		bool HasEquippedUpgrade();
		bool HasEquippedItem();
		bool HasCosmeticPresetForFaction(const class FString& InFactionString);
		bool HasCompletedLessonHint(class UClass* Lesson);
		bool GetUseScopeSensitivityScale(bool bGamepad);
		float GetSensitivityScaleForOpticZoom(bool bGamepad, EOpticZoomLevel ZoomLevel);
		bool GetScopeSensitivityScaleUsesWorldFOV(bool bGamepad);
		float GetScopeSensitivityScale(bool bGamepad);
		bool GetSavedLoadouts(TArray<struct FSavedLoadout>* OutSavedLoadouts, bool bNightMode);
		bool GetSavedLoadoutNames(TArray<class FText>* OutLoadoutNames, bool bNightMode);
		bool GetSavedActivePresetIndex(int32_t* ActivePresetIndex, bool bNightMode);
		float GetMouseSensitivity();
		bool GetItemsForSavedLoadout(int32_t PresetIndex, TArray<struct FBasicLoadoutItem>* Items, bool bNightMode);
		bool GetInvertedYAxisMouse();
		bool GetInvertedYAxis();
		float GetGamepadYSensitivity();
		float GetGamepadXSensitivity();
		float GetGamepadDeadzoneInnerRight();
		float GetGamepadDeadzoneInnerLeft();
		void GetGamepadDampeningSettings(float* OutDampeningStrength, float* OutDampeningSize, float* OutDampeningEaseIn);
		EGamepadSensitivityCurve GetGamepadAimSensitivityCurve();
		void GetGamepadAccelerationSettings(float* TimeThreshold, float* TimeToReachMax, float* MaxMultiplier);
		bool GetGamepadAccelerationEnabled();
		float GetFreeaimDeadzoneScale();
		float GetFreeaimDeadzoneMinimumSensitivity();
		bool GetFreeaimDeadzoneEnabled();
		bool GetFOVSensitivityScaling(bool bGamepad);
		float GetForceFeedbackIntensity();
		float GetFocusSensitivityScale(bool bGamepad);
		struct FProfileCharacterCosmeticState GetCurrentCosmeticStateForPreferredFaction();
		struct FProfileCharacterCosmeticState GetCurrentCosmeticStateForFaction(const class FName& FactionName);
		struct FProfileCharacterCosmeticState GetCurrentCosmeticShoppingCartForPreferredFaction();
		struct FProfileCharacterCosmeticState GetCurrentCosmeticShoppingCartForFaction(const class FName& FactionName);
		TArray<struct FInputActionKeyMapping> GetControlsActionMappings();
		class FString GetControllerLayoutName();
		class UControllerLayout* GetControllerLayout();
		bool GetAutoLean();
		float GetAimingSensitivityScale(bool bGamepad);
		void GetAestheticForWeapon();
		void ForwardControlSettings();
		bool FindPlayerClassDefaultLoadout(TArray<struct FBasicLoadoutItem>* OutItems, bool bIsNight);
		bool DeletePlayerClassLoadout(int32_t LoadoutIndex, bool bNightMode);
		bool CosmeticStateChanged();
		void CompleteLesson(class UClass* Lesson);
		void ClearNewHighlights();
		void ClearItemIdFromUnviewedStoreItems(int32_t ItemId);
		void ClearItemIdFromUnviewedItems(int32_t ItemId);
		void ClearHighlights();
		void AddPreviewedStoreItem(int32_t ItemId);
		void AddPreviewedCosmeticItem(int32_t ItemId);
		void AddFavoritedServer(const struct FBlueprintFindSessionResult& NewFavoritedServer);
		void AddEquippedUpgrade();
		void AddEquippedItem();
		void AddCloudDelegates();
		void AddAxisMappingIfNotExisting(const class FName& NewBinding, const struct FKey& DefaultKey, float NewScale, bool bGamepad);
		void AddActionMappingIfNotExisting(const class FName& NewBinding, const struct FKey& DefaultKey, bool bGamepad);
		void AddActionMapping(struct FInputActionKeyMapping* KeyMapping);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSPlayerStart
	 * Size -> 0x0040 (FullSize[0x0290] - InheritedSize[0x0250])
	 */
	class AINSPlayerStart : public APlayerStart
	{
	public:
		unsigned char                                              UnknownData_2KAA[0x8];                                   // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bEnabled;                                                // 0x0258(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTeamSpecific;                                           // 0x0259(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x025A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P1N5[0x5];                                   // 0x025B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASpawnZone*                                          AssociatedSpawnZone;                                     // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundscapeDefinition*                               SoundscapeOverride;                                      // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdjustedLocation;                                       // 0x0270(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIU2[0x3];                                   // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AdjustedLocation;                                        // 0x0274(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastPlayerSpawnTime;                                     // 0x0280(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2024[0xC];                                   // 0x0284(0x000C) MISSED OFFSET (PADDING)

	public:
		void SetAssociatedSpawnZone(class ASpawnZone* Zone);
		void GetSpawnLocation(struct FVector* OutLocation);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSPlayerState
	 * Size -> 0x0650 (FullSize[0x0970] - InheritedSize[0x0320])
	 */
	class AINSPlayerState : public APlayerState
	{
	public:
		unsigned char                                              UnknownData_MMT0[0x8];                                   // 0x0320(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsPlaying;                                              // 0x0328(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInCinematicMode;                                        // 0x0329(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CGYK[0x6];                                   // 0x032A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnIsPlayingStateChanged;                                 // 0x0330(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bIsFriend;                                               // 0x0340(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDeveloper;                                            // 0x0341(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasDeveloperTag;                                        // 0x0342(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5FS4[0x5];                                   // 0x0343(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerUpdateDeveloperStatusDelegate;                   // 0x0348(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		int32_t                                                    ScoreboardBadge;                                         // 0x0358(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4L23[0x4];                                   // 0x035C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerUpdateScoreboardBadgeStatusDelegate;             // 0x0360(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bInSpawnZone;                                            // 0x0370(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasLeftSpawnZone;                                       // 0x0371(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bConfirmedLoadout;                                       // 0x0372(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZMVE[0x5];                                   // 0x0373(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TotalFriendlyFireDamageDealt;                            // 0x0378(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VMND[0x4];                                   // 0x037C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerStatGroup                                    MatchStats;                                              // 0x0380(0x00E0) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FPlayerStatGroupMinimal                             ReplicatedMatchStats;                                    // 0x0460(0x0018) BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic
		struct FPlayerStatGroup                                    RoundStats;                                              // 0x0478(0x00E0) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S0LF[0x50];                                  // 0x0558(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastTeamKill;                                            // 0x05A8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentTeamKillCount;                                    // 0x05AC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x05B0(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PreviousTeamId;                                          // 0x05B1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N1ZU[0x2];                                   // 0x05B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TeamChangeTime;                                          // 0x05B4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTeamChange;                                            // 0x05B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UPlayerClass*                                        PlayerClass;                                             // 0x05C8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ActiveObjectiveId;                                       // 0x05D0(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C7HQ[0x7];                                   // 0x05D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AObjectiveBase*                                      ActiveObjective;                                         // 0x05D8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnActiveObjectiveChangedDelegate;                        // 0x05E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class AObjectiveBase*                                      KilledOnObjective;                                       // 0x05F0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerExperience;                                        // 0x05F8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BVUM[0x4];                                   // 0x05FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPlayerUpdateExperienceDelegate;                        // 0x0600(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerSpawnedDelegate;                                 // 0x0610(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerClassChanged;                                    // 0x0620(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerResupplied;                                      // 0x0630(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerKilledSoldierDelegate;                           // 0x0640(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerKilledSoldierInVehicleDelegate;                  // 0x0650(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerTakeOverSeatDelegate;                            // 0x0660(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnScoreObjectiveCapturedDelegate;                        // 0x0670(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnScoreObjectiveResetDelegate;                           // 0x0680(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveDestroyedDelegate;                            // 0x0690(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFirstBloodDelegate;                                    // 0x06A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDownedFireSupportDelegate;                             // 0x06B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             DesignatedDriverDelegate;                                // 0x06C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObserverCalledFireSupportDelegate;                     // 0x06D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnObjectiveBeginOverlapDelegate;                         // 0x06E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDamageIgnoredDelegate;                                 // 0x06F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerDeathDelegate;                                   // 0x0700(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnRequestFireSupport;                                    // 0x0710(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSelectNewFireSupport;                                  // 0x0720(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnShouldHintAmmoCheck;                                   // 0x0730(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnHintSpeedReloadSuppressedLowAmmo;                      // 0x0740(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnShouldHintSuppression;                                 // 0x0750(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnShouldHintStamina;                                     // 0x0760(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFireDelegate;                                          // 0x0770(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCycleFiremodeDelegate;                                 // 0x0780(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSightDelegate;                                         // 0x0790(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMeleeAttackDelegate;                                   // 0x07A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnReloadDelegate;                                        // 0x07B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSpeedReloadDelegate;                                   // 0x07C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAmmoCheckDelegate;                                     // 0x07D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDryFireDelegate;                                       // 0x07E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnScavengeMagazineDelegate;                              // 0x07F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnItemEquipDelegate;                                     // 0x0800(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnEquipDelegate;                                         // 0x0810(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFocusDelegate;                                         // 0x0820(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnWeaponUpgradeInstalledDelegate;                        // 0x0830(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDoorPeekedDelegate;                                    // 0x0840(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDoorOpenedDelegate;                                    // 0x0850(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDoorKickedDelegate;                                    // 0x0860(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G81D[0x8];                                   // 0x0870(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnVaultDelegate;                                         // 0x0878(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSprintDelegate;                                        // 0x0888(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnEndSprintDelegate;                                     // 0x0898(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPositionUpdateDelegate;                                // 0x08A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLeanDelegate;                                          // 0x08B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAutoLeanPossibleDelegate;                              // 0x08C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnStanceChangeDelegate;                                  // 0x08D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnNewSeatDelegate;                                       // 0x08E8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSupplyCrateInteraction;                                // 0x08F8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TArray<struct FSelectedCosmetic>                           Cosmetics;                                               // 0x0908(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CosmeticsSet;                                            // 0x0918(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TUSF[0x7];                                   // 0x0919(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCosmeticCache*                                      CosmeticsCache;                                          // 0x0920(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H034[0x18];                                  // 0x0928(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USharedCosmeticState*                                SharedCosmeticState;                                     // 0x0940(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FScriptMulticastDelegate                             OnSetPlayerNameDelegate;                                 // 0x0948(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerIsMutedChangedDelegate;                          // 0x0958(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class USandstormStatsCollectionComponent*                  GameStats;                                               // 0x0968(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetIsPlaying(bool InIsPlaying);
		void ResetRoundStats();
		void PreLoadCosmetics();
		void OnRep_TeamId();
		void OnRep_ScoreboardBadge();
		void OnRep_PlayerExperience();
		void OnRep_PlayerClass();
		void OnRep_HasDeveloperTag();
		void OnRep_Cosmetics();
		void OnRep_ActiveObjectiveId();
		void OnKilledOther(const struct FSoldierKillInfo& SoldierKillInfo);
		bool IsSpectatingSpectator();
		bool IsFactionValid();
		bool IsDedicatedSpectator();
		void IncrementScore(int32_t Amount, bool bIncrementTeam, EScoreType ScoreType);
		bool HasSelectedSpecialClass();
		bool HasSelectedOfficer();
		bool HasSelectedObserver();
		struct FUniqueNetIdRepl GetUniqueNetId();
		void GetUniqueIdStringWithPlatform(class FString* OutUniqueId);
		void GetUniqueIdString(class FString* OutUniqueId);
		class FName GetUniqueIdPlatform();
		class ATeamInfo* GetTeamInfo();
		unsigned char GetTeamId();
		class USharedCosmeticState* GetSharedCosmeticState();
		class ATeamInfo* GetPreviousTeamInfo();
		bool GetNemesisStatsForCopy(class AINSPlayerState* PlayerState, struct FNemesisStats* OutStats);
		bool GetIsPlaying();
		struct FLinearColor GetColor(class AINSPlayerState* RelativePlayer);
		class AINSSoldier* FindSoldier();
		void ClientUpdateSoldierPosition(class AINSSoldier* Soldier, bool bCanLean);
		void ClientUpdateLastRoundMostUsed(const struct FPlayerRoundSummary& RoundSummary);
		void ClientUpdateLastRoundExperience(const struct FPlayerRoundExpSummary& ExpResult);
		void ClientScoreObjectiveReset(class AObjectiveCapturable* Objective);
		void ClientScoreObjectiveCaptured(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners);
		void ClientOnSight(class AItemWeapon* Weapon);
		void ClientOnSeatTakenOver(class AINSCharacter* OldCharacter, class AController* Controller);
		void ClientOnReload(class AItemWeapon* Weapon, bool bSpeedReload);
		void ClientOnPlayerSpawned(class AINSSoldier* Player);
		void ClientOnOpenDoor(class ADoor* Door, bool bKicked);
		void ClientOnObserverCalledFireSupport();
		void ClientOnMeleeAttack(class AItemWeapon* Weapon);
		void ClientOnKilledOtherInVehicle(const struct FSoldierKillInfo& SoldierKillInfo);
		void ClientOnFirstBlood();
		void ClientOnFire(class AItemWeapon* Weapon);
		void ClientOnEquip(class AINSSoldier* Soldier, class AItemEquipable* Item);
		void ClientOnDryFire(class AItemWeapon* Weapon);
		void ClientOnDownedFireSupport();
		void ClientOnBeginOverlapObjective(class AObjectiveBase* Objective);
		void ClientOnAmmoCheck(class AItemWeapon* Weapon);
		void ClientObjectiveDestroyed(class AObjectiveDestructible* Objective, bool bFromRig);
		void ClearSharedCosmeticState();
		void ChangePlayerClass(class UPlayerClass* NewPlayerClass);
		void AwardTaglineWithFloatContext(class UClass* TaglineClass, float ContextValue, bool bAsPercentage);
		void AwardTaglineWithContext(class UClass* TaglineClass, int32_t ContextValue);
		void AwardTagline(class UClass* TaglineClass);
		void AddTagline(const struct FPlayerAwardedTagline& TaglineAward);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSProjectileMovementComponent
	 * Size -> 0x0020 (FullSize[0x01F0] - InheritedSize[0x01D0])
	 */
	class UINSProjectileMovementComponent : public UProjectileMovementComponent
	{
	public:
		float                                                      AccelerationRate;                                        // 0x01D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccelerationStartTime;                                   // 0x01D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccelerationDuration;                                    // 0x01D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreFoliage;                                          // 0x01DC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EDGD[0x3];                                   // 0x01DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AProjectileBase*                                     OuterProjectile;                                         // 0x01E0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q54L[0x8];                                   // 0x01E8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSPushGameMode
	 * Size -> 0x0088 (FullSize[0x0A30] - InheritedSize[0x09A8])
	 */
	class AINSPushGameMode : public AINSMultiplayerMode
	{
	public:
		int32_t                                                    RoundTimeExtension;                                      // 0x09A8(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackerWavesPerObjective;                               // 0x09AC(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackerWaveDPR;                                         // 0x09B0(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackerWaveTimer;                                       // 0x09B4(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefenderWavesPerObjective;                               // 0x09B8(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefenderWaveDPR;                                         // 0x09BC(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefenderWaveTimer;                                       // 0x09C0(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1VSR[0x4];                                   // 0x09C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AObjectiveBase*                                      ActiveObjective;                                         // 0x09C8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       AttackerReinforcementSystem;                             // 0x09D0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       DefenderReinforcementSystem;                             // 0x09D8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasLastStand;                                           // 0x09E0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLastStand;                                              // 0x09E1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WFJS[0x2];                                   // 0x09E2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpawnProtectionLastStandAddtionalTime;                   // 0x09E4(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLastStandDelegate;                                     // 0x09E8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      LastStandSetupDelay;                                     // 0x09F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdvanceAttackerSpawnsDelay;                              // 0x09FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_DisableInitialSpawns;                        // 0x0A00(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastManStandingClockTime;                                // 0x0A08(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WavesDepletedClockTime;                                  // 0x0A0C(0x0004) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_27SY[0x20];                                  // 0x0A10(0x0020) MISSED OFFSET (PADDING)

	public:
		void RespawnAttackingTeamPostObjective();
		void OnWavesDepleted_DisableAutoBalance(class UReinforcementSystemComponent* Component);
		void OnWaveGained_ReenableAutoBalance(class UReinforcementSystemComponent* Component, int32_t OldWaveCount);
		void OnLastStandDelegate__DelegateSignature();
		void LastStandDeferredSetup();
		void DisableInitialSpawnZones();
		void AdvanceAttackerSpawns();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSRangeMode
	 * Size -> 0x0030 (FullSize[0x09D8] - InheritedSize[0x09A8])
	 */
	class AINSRangeMode : public AINSMultiplayerMode
	{
	public:
		unsigned char                                              UnknownData_GJQ0[0x8];                                   // 0x09A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnRangeResetDelegate;                                    // 0x09B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TArray<struct FLoadoutWeapon>                              NightStartingItems;                                      // 0x09C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanRequestSquad;                                        // 0x09D0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanRequestVehicle;                                      // 0x09D1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanRequestHelicopter;                                   // 0x09D2(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1WOZ[0x5];                                   // 0x09D3(0x0005) MISSED OFFSET (PADDING)

	public:
		void SetPlayerAndBotTeam(unsigned char NewPlayerTeam, unsigned char NewBotTeam);
		void ResetRange();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RichPresenceManager
	 * Size -> 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
	 */
	class URichPresenceManager : public UGameInstanceSubsystem
	{
	public:
		unsigned char                                              UnknownData_YITT[0x68];                                  // 0x0030(0x0068) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSandboxGameMode
	 * Size -> 0x0000 (FullSize[0x09A8] - InheritedSize[0x09A8])
	 */
	class AINSSandboxGameMode : public AINSMultiplayerMode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSingleRequestQueryQueue
	 * Size -> 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
	 */
	class UINSSingleRequestQueryQueue : public UObject
	{
	public:
		unsigned char                                              UnknownData_9RZ5[0x88];                                  // 0x0028(0x0088) MISSED OFFSET (PADDING)

	public:
		void OnComplete(bool bSuccess);
		void OnCancelFindComplete(bool bSuccess);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSFindSessionCallbackProxy
	 * Size -> 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
	 */
	class UINSFindSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
	{
	public:
		class FScriptMulticastDelegate                             OnSuccess;                                               // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFailure;                                               // 0x0040(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JM50[0x88];                                  // 0x0050(0x0088) MISSED OFFSET (PADDING)

	public:
		void STATIC_SortServerListEntries(TArray<class UServerListEntry*>* ServerList, EServerListSortType SortType, bool bInverse);
		void OnCompleted(bool bSuccess);
		class UServerListEntry* STATIC_MakeServerListEntry(const struct FBlueprintFindSessionResult& Result);
		class UServerListEntry* STATIC_MakeDummyServerListEntry(const class FText& Name, const class FText& Map, const class FText& Mode, int32_t Players, int32_t MaxPlayers, int32_t Ping, bool bPassworded, bool bOfficialRuleset, bool bRanked, bool bModded, const struct FBlueprintFindSessionResult& ServerToJoin);
		void STATIC_JoinSession(class UObject* WorldContextObject, int32_t LocalUserNum, const struct FBlueprintFindSessionResult& Result, const class FString& ServerPassword);
		bool STATIC_IsVersusServer(const struct FBlueprintFindSessionResult& Result);
		bool STATIC_IsUsingOfficialRuleset(const struct FBlueprintFindSessionResult& Result);
		bool STATIC_IsRunningMutators(const struct FBlueprintFindSessionResult& Result);
		bool STATIC_IsRunningMods(const struct FBlueprintFindSessionResult& Result);
		bool STATIC_IsRankedServer(const struct FBlueprintFindSessionResult& Result);
		bool STATIC_IsPasswordProtected(const struct FBlueprintFindSessionResult& Result);
		bool STATIC_IsCoopServer(const struct FBlueprintFindSessionResult& Result);
		class FString STATIC_GetServerName(const struct FBlueprintFindSessionResult& Result);
		EServerEntryType STATIC_GetServerEntryType(const struct FBlueprintFindSessionResult& Result);
		int32_t STATIC_GetPingInMs(const struct FBlueprintFindSessionResult& Result);
		int32_t STATIC_GetMaxPlayers(const struct FBlueprintFindSessionResult& Result);
		class FString STATIC_GetLevel(const struct FBlueprintFindSessionResult& Result);
		class FString STATIC_GetGamemode(const struct FBlueprintFindSessionResult& Result);
		int32_t STATIC_GetCurrentPlayers(const struct FBlueprintFindSessionResult& Result);
		class UINSFindSessionCallbackProxy* STATIC_FindServerSessionsFiltered(class UObject* WorldContextObject, class APlayerController* PlayerController, int32_t MaxResults, bool bUseLAN, bool bUseFavorite, const struct FServerBrowserPreferences& Filters, class UINSSingleRequestQueryQueue* Queue);
		class UINSFindSessionCallbackProxy* STATIC_FindServerSessions(class UObject* WorldContextObject, class APlayerController* PlayerController, int32_t MaxResults, bool bUseLAN, bool bCoopSearch, bool bVersusSearch, class UINSSingleRequestQueryQueue* Queue);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSJoinSessionCallbackProxy
	 * Size -> 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
	 */
	class UINSJoinSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
	{
	public:
		class FScriptMulticastDelegate                             OnSuccess;                                               // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFailure;                                               // 0x0040(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2YI5[0xF0];                                  // 0x0050(0x00F0) MISSED OFFSET (PADDING)

	public:
		class UINSJoinSessionCallbackProxy* STATIC_JoinSession(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FBlueprintFindSessionResult& SearchResult, const class FString& ServerPassword);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSessionHelper
	 * Size -> 0x0128 (FullSize[0x0150] - InheritedSize[0x0028])
	 */
	class UINSSessionHelper : public UObject
	{
	public:
		class UClass*                                              BeaconClientClass;                                       // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AINSMatchBeaconClient*                               PartyBeaconClient;                                       // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HQET[0xD8];                                  // 0x0038(0x00D8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CurrentSessionName;                                      // 0x0110(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EPartyReservationResult                                    LastBeaconResponse;                                      // 0x0118(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EUTSessionHelperJoinState                                  CurrentJoinState;                                        // 0x0119(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EINSSessionHelperJoinResult                                CurrentJoinResult;                                       // 0x011A(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_0LG8[0x35];                                  // 0x011B(0x0035) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSignificanceManager
	 * Size -> 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
	 */
	class UINSSignificanceManager : public USignificanceManager
	{
	public:
		unsigned char                                              UnknownData_L7H8[0x8];                                   // 0x0120(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSkeletalMeshComponent
	 * Size -> 0x0084 (FullSize[0x0B60] - InheritedSize[0x0ADC])
	 */
	class UINSSkeletalMeshComponent : public USkeletalMeshComponent
	{
	public:
		float                                                      MeshFOV;                                                 // 0x0ADC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseParentFOV;                                           // 0x0AE0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseFOVMultiplier;                                       // 0x0AE1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H6UQ[0x2];                                   // 0x0AE2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FOVMultiplier;                                           // 0x0AE4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SocketsToTransform[0x50];                                // 0x0AE8(0x0050) UNKNOWN PROPERTY: SetProperty
		bool                                                       bLoadingSkeletalMesh;                                    // 0x0B38(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZMB5[0x27];                                  // 0x0B39(0x0027) MISSED OFFSET (PADDING)

	public:
		bool UsesCustomFOV();
		void ReprojectTransform(struct FTransform* InOutTransform);
		void ReprojectMatrix(struct FMatrix* InMatrix);
		void OnSkeletalMeshLoaded();
		float GetCustomFOV();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSkeletalMeshMerge
	 * Size -> 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
	 */
	class UINSSkeletalMeshMerge : public UObject
	{
	public:
		unsigned char                                              UnknownData_UVMV[0x20];                                  // 0x0028(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        MergeTaskTimer;                                          // 0x0048(0x0008) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCosmeticCache*                                      Cache;                                                   // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UCN2[0x18];                                  // 0x0058(0x0018) MISSED OFFSET (PADDING)

	public:
		void Tick();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSkirmishGameMode
	 * Size -> 0x0018 (FullSize[0x09C0] - InheritedSize[0x09A8])
	 */
	class AINSSkirmishGameMode : public AINSMultiplayerMode
	{
	public:
		int16_t                                                    DefaultReinforcementWaves;                               // 0x09A8(0x0002) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int16_t                                                    CaptureBonusWaves;                                       // 0x09AA(0x0002) Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2DI6[0x4];                                   // 0x09AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UReinforcementSystemComponent*                       FactionOneReinforcementSystem;                           // 0x09B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UReinforcementSystemComponent*                       FactionTwoReinforcementSystem;                           // 0x09B8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		int32_t GetTotalActiveObjectives();
		int32_t GetNumActiveObjectivesOwnedForTeam(unsigned char TeamId, bool bIncludeContested);
		bool CheckWinConditions();
		void CheckCustomEliminationRules();
		void CheckAllPointsSecure();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSoldier
	 * Size -> 0x18D0 (FullSize[0x1FF0] - InheritedSize[0x0720])
	 */
	class AINSSoldier : public AINSCharacter
	{
	public:
		unsigned char                                              UnknownData_PJG2[0x20];                                  // 0x0720(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EUsablePriority                                            UsePriority;                                             // 0x0740(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9LID[0x7];                                   // 0x0741(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCosmeticItem*>                               SpawnedCosmetics;                                        // 0x0748(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAI;                                                   // 0x0758(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RCRG[0x7];                                   // 0x0759(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USharedCosmeticState*                                FallbackSharedCosmeticState;                             // 0x0760(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMesh*                                       PlaceholderCharacterMesh;                                // 0x0768(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UFactionDefinition*                                  PlaceholderCosmeticFaction;                              // 0x0770(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bCurrentAppearanceInvalidated;                           // 0x0778(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C58U[0x7];                                   // 0x0779(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             Delegate_OnMergedMeshSet;                                // 0x0780(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FPlayerClassAttributes                              PlayerClassAttributes;                                   // 0x0790(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IC2A[0x4];                                   // 0x07CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnClassAttributesUpdatedDelegate;                        // 0x07D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UPlayerClass*                                        PlayerClass;                                             // 0x07E0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlayerClassChanged;                                    // 0x07E8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UPlayerClassComponent*                               PlayerClassComponent;                                    // 0x07F8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPlayerClass*                                        LastPlayerClass;                                         // 0x0800(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      RequestRadioTimestamp;                                   // 0x0808(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RequestBackupTimestamp;                                  // 0x080C(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0Z3H[0x8];                                   // 0x0810(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSSkeletalMeshComponent*                           ArmMesh1P;                                               // 0x0818(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSSkeletalMeshComponent*                           WeaponMesh1P;                                            // 0x0820(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I1MP[0x8];                                   // 0x0828(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSSkeletalMeshComponent*                           BodyMesh1P;                                              // 0x0830(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USkeletalMeshComponent*>                      Mesh3PAttachedMeshes;                                    // 0x0838(0x0010) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewModelFOV;                                            // 0x0848(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseTurnRateMouse;                                       // 0x084C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseLookUpRateMouse;                                     // 0x0850(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseTurnRateGamepad;                                     // 0x0854(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseLookUpRateGamepad;                                   // 0x0858(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamePadFocusMultiplier;                                  // 0x085C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeLockOnAngleThreshold;                              // 0x0860(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeLockOnMaxMultiplier;                               // 0x0864(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseStrafeLockOn;                                        // 0x0868(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M254[0x3];                                   // 0x0869(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxWaterDepthForProne;                                   // 0x086C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F64D[0x18];                                  // 0x0870(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSPawnSensingComponent*                            PawnSensing;                                             // 0x0888(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPawnNoiseEmitterComponent*                          PawnNoiseEmitter;                                        // 0x0890(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGivenInventory;                                         // 0x0898(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YWM7[0x7];                                   // 0x0899(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              DefaultInventory[0x10];                                  // 0x08A0(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<class AItemBase*>                                   Inventory;                                               // 0x08B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, class AItemGrenade*>                         OrderedInventoryGrenades;                                // 0x08C0(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class AItemEquipable*                                      CurrentWeapon;                                           // 0x0910(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemEquipable*                                      PreviousWeapon;                                          // 0x0918(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemEquipable*                                      PendingWeapon;                                           // 0x0920(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemEquipable*                                      SimulatedPendingWeapon;                                  // 0x0928(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemEquipable*                                      CurrentPrimaryWeapon;                                    // 0x0930(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<TWeakObjectPtr<class AItemBase>>                    DroppedItems;                                            // 0x0938(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FStoredAmmo>                                 Ammo;                                                    // 0x0948(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastResupplyTime;                                        // 0x0958(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1YYR[0x4];                                   // 0x095C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             NotifyInventoryItemAdded;                                // 0x0960(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             NotifyInventoryItemRemoved;                              // 0x0970(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnInventoryChangedDelegate;                              // 0x0980(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0990(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SimulatedWeight;                                         // 0x0994(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  MaxStaminaByWeight;                                      // 0x0998(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FCharacterCollisionPrevention>               IgnoredCharacters;                                       // 0x0A20(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PT0I[0x4];                                   // 0x0A30(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CachedPlayerSpeed;                                       // 0x0A34(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLandedFromJump;                                         // 0x0A38(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bJumped;                                                 // 0x0A39(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HM61[0x2];                                   // 0x0A3A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LandingVelocity;                                         // 0x0A3C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LandingTime;                                             // 0x0A40(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpLandWeaponRestrictTime;                              // 0x0A44(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSurfaceReactionPair                                JumpReaction;                                            // 0x0A48(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FSurfaceReactionPair                                LandReaction;                                            // 0x0A58(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FSurfaceReactionPair                                ProneReaction;                                           // 0x0A68(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FSurfaceReactionPair                                UnproneReaction;                                         // 0x0A78(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      TimeBetweenJumps;                                        // 0x0A88(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BunnyhopTimer;                                           // 0x0A8C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastBreachTime;                                          // 0x0A90(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToKickDoor;                                          // 0x0A94(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalTimeToKickDoor;                                     // 0x0A98(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorBreachTimer;                                         // 0x0A9C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalTimeToKickDoorTimer;                                // 0x0AA0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ReplicatedbIsKickInProgress;                             // 0x0AA4(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsKickInProgress;                                       // 0x0AA5(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5YHP[0x2];                                   // 0x0AA6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             Delegate_OnDoorKick;                                     // 0x0AA8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class ADoor*                                               DoorToKick;                                              // 0x0AB8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorKickYawPivot;                                        // 0x0AC0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoorKickYawLimit;                                        // 0x0AC4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESoldierStance                                             Stance;                                                  // 0x0AC8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESoldierStance                                             ReplicatedStance;                                        // 0x0AC9(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MRGW[0x1];                                   // 0x0ACA(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESoldierStance                                             DesiredStance;                                           // 0x0ACB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESoldierStance                                             ReplicatedDesiredStance;                                 // 0x0ACC(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReloadingProneTransition;                               // 0x0ACD(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELadderState                                               LadderState;                                             // 0x0ACE(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TNS2[0x1];                                   // 0x0ACF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInertialEasingContainer1D                          CrawlingEasing;                                          // 0x0AD0(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bWasCrawling;                                            // 0x0AE8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TYDR[0x3];                                   // 0x0AE9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CrawlingTime;                                            // 0x0AEC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrawlingGraceTime;                                       // 0x0AF0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInertialEasingContainer1D                          SprintEasing;                                            // 0x0AF4(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X9BJ[0x4];                                   // 0x0B0C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StanceDownProneTime;                                     // 0x0B10(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StanceDoubleClickTime;                                   // 0x0B14(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESoldierStanceTransition                                   CurrentStanceTransition;                                 // 0x0B18(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8WPM[0x3];                                   // 0x0B19(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StanceTransitionTime;                                    // 0x0B1C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInSprintMode;                                           // 0x0B20(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInWalkMode;                                             // 0x0B21(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9DA2[0xA];                                   // 0x0B22(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bPressedSprint;                                          // 0x0B2C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPressedSprintDuringWeaponInteraction;                   // 0x0B2D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LKDU[0x1];                                   // 0x0B2E(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bReachedSprintingSpeed;                                  // 0x0B2F(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bToggledSprint;                                          // 0x0B30(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPressedWalk;                                            // 0x0B31(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D2O9[0x2];                                   // 0x0B32(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FatalFallSpeed;                                          // 0x0B34(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SafeFallSpeed;                                           // 0x0B38(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProneYawLimit;                                           // 0x0B3C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProneYawPivot;                                           // 0x0B40(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SlideYawLimit;                                           // 0x0B44(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SlideYawPivot;                                           // 0x0B48(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderYawLimit;                                          // 0x0B4C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderADSYawLimit;                                       // 0x0B50(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderYawPivot;                                          // 0x0B54(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodYawPivot;                                           // 0x0B58(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodYawLimit;                                           // 0x0B5C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseYawPivot;                                             // 0x0B60(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           BipodPronePitchLimits;                                   // 0x0B64(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           BipodLowestStandingPitchLimits;                          // 0x0B6C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           BipodHighestStandingPitchLimits;                         // 0x0B74(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodMaxPitchHeight;                                     // 0x0B7C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodMinPitchHeight;                                     // 0x0B80(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VaultYawPivot;                                           // 0x0B84(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VaultYawLimit;                                           // 0x0B88(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZMW[0x294];                                 // 0x0B8C(0x0294) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bFocusMode;                                              // 0x0E20(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0O8H[0x3];                                   // 0x0E21(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FocusTime;                                               // 0x0E24(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NextFocusTime;                                           // 0x0E28(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxFocusTime;                                            // 0x0E2C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M4TO[0x18];                                  // 0x0E30(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  FocusTimeByStamina;                                      // 0x0E48(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  FocusCooldownByStamina;                                  // 0x0ED0(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      SimulatedStamina;                                        // 0x0F58(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stamina;                                                 // 0x0F5C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStamina;                                              // 0x0F60(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinStaminaToBreachDoor;                                  // 0x0F64(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintStaminaConsumptionRate;                            // 0x0F68(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpStaminaConsumption;                                  // 0x0F6C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreachingStaminaConsumption;                             // 0x0F70(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaRecoveryRate;                                     // 0x0F74(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaRecoveryStandFactor;                              // 0x0F78(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaRecoveryCrouchFactor;                             // 0x0F7C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaRecoveryProneFactor;                              // 0x0F80(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaRecoveryMoveFactor;                               // 0x0F84(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaRecoveryVehicleFactor;                            // 0x0F88(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGamepadHoldingSprint;                                   // 0x0F8C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KZ2M[0x1];                                   // 0x0F8D(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bPressedFire;                                            // 0x0F8E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPressedAltFire;                                         // 0x0F8F(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPressedSights;                                          // 0x0F90(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPressedToggleSights;                                    // 0x0F91(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bToggledSights;                                          // 0x0F92(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPressedReload;                                          // 0x0F93(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReloadPressTime;                                         // 0x0F94(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GT1X[0x4];                                   // 0x0F98(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CachedViewHeight;                                        // 0x0F9C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            LastControlRotation;                                     // 0x0FA0(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      CameraAnimationAlpha;                                    // 0x0FAC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSmoothTransition                                   SmoothTransition;                                        // 0x0FB0(0x0060) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      StandEyeHeight;                                          // 0x1010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProneEyeHeight;                                          // 0x1014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInertialEasingContainer1D                          CrouchViewEasing;                                        // 0x1018(0x0018) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FInertialEasingContainer1D                          ProneViewEasing;                                         // 0x1030(0x0018) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                DeathCameraSocketName;                                   // 0x1048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SideRollSpeed;                                           // 0x1050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SideRollAngle;                                           // 0x1054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewBobFrequency;                                        // 0x1058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewBobAmplitude;                                        // 0x105C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchIronsightOffset;                                   // 0x1060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TurningSpringSensitivity1P;                              // 0x1064(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MovementSpringMaxSpeed1P;                                // 0x106C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MovementSpringMaxOffset1P;                               // 0x1074(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDampingEasingContainer3D                           TurningSpring1P;                                         // 0x107C(0x0040) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FDampingEasingContainer3D                           MovementSpring1P;                                        // 0x10BC(0x0040) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FInertialEasingContainer1D                          IntertiaSpring1P;                                        // 0x10FC(0x0018) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FDampingEasingContainer3D                           SightTransitionDiveSpring1P;                             // 0x1114(0x0040) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FInertialEasingContainer1D                          SightTransitionDiveInertia1P;                            // 0x1154(0x0018) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      SightsTransitionDive1P;                                  // 0x116C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MeshOffsetCrouching1P;                                   // 0x1170(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MeshOffsetProne1P;                                       // 0x117C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MeshOffsetBase1P;                                        // 0x1188(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MeshOffsetPointShooting1P;                               // 0x1194(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyStanceMeshOffset;                                  // 0x11A0(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V3BF[0x3];                                   // 0x11A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MeshZOffset;                                             // 0x11A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MeshZOffsetProne;                                        // 0x11A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FreeaimAlpha1P;                                          // 0x11AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector*                                        MeshPitchOffsetCurve1P;                                  // 0x11B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AINSPlayerState*                                     INSPlayerState;                                          // 0x11B8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class APlayerState>                         LastPlayerState;                                         // 0x11C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1MXV[0x4];                                   // 0x11C8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimedUsableActor                                   CurrentHeldUsableActor;                                  // 0x11CC(0x001C) BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic
		float                                                      UseTapTime;                                              // 0x11E8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseSphereSize;                                           // 0x11EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseSphereSizeVehicle;                                    // 0x11F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseDistance;                                             // 0x11F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUseActorInteractedDelegate;                            // 0x11F8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bIncapacitated;                                          // 0x1208(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_44X8[0x3];                                   // 0x1209(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DeathFadeOutTimeFromHeadshot;                            // 0x120C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeathFadeOutTime;                                        // 0x1210(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BBZB[0x4];                                   // 0x1214(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  LandingViewDipScale;                                     // 0x1218(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BFUJ[0x8];                                   // 0x12A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        DeathUnpossesTimer;                                      // 0x12A8(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchExplosiveDamageModifier;                           // 0x12B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProneExplosiveDamageModifier;                            // 0x12B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastBulletId;                                            // 0x12B8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C749[0x4];                                   // 0x12BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AController*                                         KilledBy;                                                // 0x12C0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDeathCamera                                        DeathCamera;                                             // 0x12C8(0x0070) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bCameraIsTargetingKillLocation;                          // 0x1338(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FVAG[0x7];                                   // 0x1339(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     ParticleSystemHeadshot;                                  // 0x1340(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventHeadshot;                                         // 0x1348(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeadshotAudioAttenuationDist;                            // 0x1350(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQIH[0x4];                                   // 0x1354(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       AkEventBulletShot;                                       // 0x1358(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BulletHitAudioAttenuationDist;                           // 0x1360(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03FG[0x4];                                   // 0x1364(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            Freeaim;                                                 // 0x1368(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ReplicatedFreeaim;                                       // 0x1374(0x0004) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            FreeaimSimulatedProxy;                                   // 0x1378(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      FreeaimSprintCenterTime;                                 // 0x1384(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JME0[0x8];                                   // 0x1388(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ServerUpdateFreeaimTimeout;                              // 0x1390(0x0004) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FRotator                                            AimPunchAngle;                                           // 0x1394(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             AimPunchAngleVel;                                        // 0x13A0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchRecoilAccumulator;                                  // 0x13AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawRecoilAccumulator;                                    // 0x13B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastRecoilTime;                                          // 0x13B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoilTimeRemaining;                                     // 0x13B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoilShots;                                             // 0x13BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            ViewPunchAngle;                                          // 0x13C0(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             WeaponLocationBob;                                       // 0x13CC(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponHeightBob;                                         // 0x13D8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            WeaponRotationBob;                                       // 0x13DC(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LCWF[0xC];                                   // 0x13E8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SwayFactor;                                              // 0x13F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESuppressionContext                                        SuppressionContext;                                      // 0x13F8(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1KWO[0x3];                                   // 0x13F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Suppression;                                             // 0x13FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionHoldTime;                                     // 0x1400(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionDecayRate;                                    // 0x1404(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionMaxHoldTime;                                  // 0x1408(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashDuration;                                           // 0x140C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashFadeTime;                                           // 0x1410(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashAlpha;                                              // 0x1414(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  SensitivityScalingForBlindness;                          // 0x1418(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      StunDuration;                                            // 0x14A0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFactionAnimationStyle                                     FactionWeaponAnimationStyle;                             // 0x14A4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHardcoreMovementAnimations;                             // 0x14A5(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x14A6(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInRestrictedArea;                                       // 0x14A7(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RestrictedAreaCount;                                     // 0x14A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOutsidePlayableArea;                                    // 0x14A9(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PlayableAreaCount;                                       // 0x14AA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXMT[0x1];                                   // 0x14AB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayableAreaLeaveTime;                                   // 0x14AC(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayableAreaKillTime;                                    // 0x14B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RestrictedAreaEnterTime;                                 // 0x14B4(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponRestrictionTime;                                   // 0x14B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoredByAI;                                            // 0x14BC(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BKV4[0x3];                                   // 0x14BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSAISquad*                                         AISquad;                                                 // 0x14C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponent;                                             // 0x14C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  LoopedEventAkComponent;                                  // 0x14D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  StaminaAkComponent;                                      // 0x14D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UVoiceComponent>                      ActiveVoiceComponent;                                    // 0x14E0(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UINSAudioComponent*                                  AkTempComponent;                                         // 0x14E8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAkAudioEvent*                                       AkEventStaminaBreathing;                                 // 0x14F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventLeanOutFP;                                        // 0x14F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventLeanInFP;                                         // 0x1500(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventLeanOutTP;                                        // 0x1508(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventLeanInTP;                                         // 0x1510(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventLadderSlide;                                      // 0x1518(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventLadderSlideOff;                                   // 0x1520(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventLadderSlideOn;                                    // 0x1528(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventFallDamage;                                       // 0x1530(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToPlayFullSlideAudio;                                // 0x1538(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoverySoundQueueThreshold;                             // 0x153C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoverySoundPlayThreshold;                              // 0x1540(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PY0S[0xC];                                   // 0x1544(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharacterDialogueComponent*                         CharacterDialogueComponent;                              // 0x1550(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharacterDialogueDictionary*                        DialogueDictionary;                                      // 0x1558(0x0008) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFireSupportRequest                                 LastOfficerRequest;                                      // 0x1560(0x0038) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DEAJ[0x8];                                   // 0x1598(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_QueuedDialogue;                              // 0x15A0(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FCharacterResponseRequest                           LastQueuedDialogue;                                      // 0x15A8(0x0040) NativeAccessSpecifierPrivate
		struct FTimerHandle                                        ObserverResponseTimerHandle;                             // 0x15E8(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FFireSupportRequest                                 LastFireSupportRequest;                                  // 0x15F0(0x0038) NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VA8L[0x8];                                   // 0x1628(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  LeanCurveStandingStationary;                             // 0x1630(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  LeanCurveStandingMoving;                                 // 0x16B8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  LeanCurveCrouchingStationary;                            // 0x1740(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  LeanCurveCrouchingMoving;                                // 0x17C8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      LeanStandingYOffset;                                     // 0x1850(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeanCrouchingYOffset;                                    // 0x1854(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeanSpeed;                                               // 0x1858(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VehicleLeanSpeed;                                        // 0x185C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeanAutoWallDistance;                                    // 0x1860(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeanAutoClearDistance;                                   // 0x1864(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeanRollAmount;                                          // 0x1868(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReplicatedLeanAmount;                                    // 0x186C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeanAmount;                                              // 0x1870(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeanTarget;                                              // 0x1874(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FPAutoLeanAmount;                                        // 0x1878(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FPAutoLeanTarget;                                        // 0x187C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELeanDirection                                             LeanDirection;                                           // 0x1880(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YLRP[0x3];                                   // 0x1881(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LeanAutoDistanceInvalidate;                              // 0x1884(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAtMaxLean;                                              // 0x1888(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FDXY[0x17];                                  // 0x1889(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PainEffectWeight;                                        // 0x18A0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PainEffectTime;                                          // 0x18A4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionDirtDuration;                                 // 0x18A8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastSuppressionTime;                                     // 0x18AC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageSuppressionIncrement;                              // 0x18B0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageSuppressionHoldTime;                               // 0x18B4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ExplosionCenterUV;                                       // 0x18B8(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y7NP[0x4];                                   // 0x18C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UFoliageInteractionComponent*                        FoliageInteractionComponent;                             // 0x18C8(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AProjectileSmokeGrenade*>                     SmokeGrenades;                                           // 0x18D0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRelaxed;                                              // 0x18E0(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LUFY[0x7];                                   // 0x18E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundscapeComponent*                                SoundscapeComponent;                                     // 0x18E8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CurrentWeaponSwitch;                                     // 0x18F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class FString, float>                                 FootstepRTPCModifiers;                                   // 0x18F8(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  FootstepDelayBySpeed;                                    // 0x1948(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      FootstepSurfaceTraceLength;                              // 0x19D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PC5I[0x4];                                   // 0x19D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USurfaceReaction*                                    FootstepSurfaceReaction_1P;                              // 0x19D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    FootstepSurfaceReaction_3P;                              // 0x19E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    FootstepSurfaceReaction_Sprinting_1P;                    // 0x19E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    FootstepSurfaceReaction_Sprinting_3P;                    // 0x19F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    FootstepSurfaceReaction_Crawling_1P;                     // 0x19F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    FootstepSurfaceReaction_Crawling_3P;                     // 0x1A00(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    FootstepSurfaceReaction_Layered;                         // 0x1A08(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    FootstepSurfaceReaction_Sliding_1P;                      // 0x1A10(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    FootstepSurfaceReaction_Sliding_3P;                      // 0x1A18(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   BloodMaterial;                                           // 0x1A20(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FootOffsetLeft;                                          // 0x1A28(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FootOffsetRight;                                         // 0x1A2C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           FootNormalLeft;                                          // 0x1A30(0x000C) BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           FootNormalRight;                                         // 0x1A3C(0x000C) BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IKUpdateRate;                                            // 0x1A48(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IKTraceLengthStanding;                                   // 0x1A4C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IKTraceLengthCrouching;                                  // 0x1A50(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ZYG[0xC];                                   // 0x1A54(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPhysicalMaterial*                                   FootprintSurfaceLeft;                                    // 0x1A60(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPhysicalMaterial*                                   FootprintSurfaceRight;                                   // 0x1A68(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_22TV[0x20];                                  // 0x1A70(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULagCompensationComponent*                           LagCompensationComponent;                                // 0x1A90(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNB1[0x4];                                   // 0x1A98(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UseDelay;                                                // 0x1A9C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HOFH[0x8];                                   // 0x1AA0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsSliding;                                              // 0x1AA8(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_K2DM[0x7];                                   // 0x1AA9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StaminaCostToSlide;                                      // 0x1AB0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8OT8[0xC];                                   // 0x1AB4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LandedOnTopOfSuppressionValue;                           // 0x1AC0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LandedOnTopOfSuppressionHoldTime;                        // 0x1AC4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRuntimeFloatCurve                                  VelocityImpactDamage;                                    // 0x1AC8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FRuntimeFloatCurve                                  StaminaLossFromFallCurve;                                // 0x1B50(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FRuntimeFloatCurve                                  SuprressionFromFallCurve;                                // 0x1BD8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FRuntimeFloatCurve                                  SpeedLossHoldTimeFromFallCurve;                          // 0x1C60(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FRuntimeFloatCurve                                  SpeedLossScalingFromFallCurve;                           // 0x1CE8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		float                                                      SpeedLossHoldTime;                                       // 0x1D70(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SpeedLossFromFallVelocityModifier;                       // 0x1D74(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SpeedLossFromFallScalingRecoveryRate;                    // 0x1D78(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bRecoveringFromVault;                                    // 0x1D7C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSlideStrafeMode;                                        // 0x1D7D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8DI6[0x2];                                   // 0x1D7E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  MeleeStaminaFrac;                                        // 0x1D80(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		float                                                      MeleeSuppressionHoldTime;                                // 0x1E08(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EVehicleStance                                             VehicleStance;                                           // 0x1E0C(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEAR[0x3];                                   // 0x1E0D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInertialEasingContainer1D                          DuckViewEasing;                                          // 0x1E10(0x0018) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             DuckViewOffset;                                          // 0x1E28(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             VehicleViewCache;                                        // 0x1E34(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XWOM[0x58];                                  // 0x1E40(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       AKScavengeEvent;                                         // 0x1E98(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AKStartResupplyEvent;                                    // 0x1EA0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AKEndResupplyEvent;                                      // 0x1EA8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScavengeAudioAttenuationDist;                            // 0x1EB0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChargeTurnRate;                                          // 0x1EB4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialParameterCollection*                        PlayerCollection;                                        // 0x1EB8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9J5S[0x8];                                   // 0x1EC0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bVaulting;                                               // 0x1EC8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0CEH[0x7];                                   // 0x1EC9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVaultSmoothTransition                              VaultCameraSmoothTransition;                             // 0x1ED0(0x0070) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UCurveVector*                                        LowVaultCameraOffset;                                    // 0x1F40(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector*                                        LowClimbCameraOffset;                                    // 0x1F48(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector*                                        HighVaultCameraOffset;                                   // 0x1F50(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector*                                        HighClimbCameraOffset;                                   // 0x1F58(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VaultZOffsetPivot;                                       // 0x1F60(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVaultAction                                               ReplicatedVaultAction;                                   // 0x1F64(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQVA[0x3];                                   // 0x1F65(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAimAssistTargetComponent*                           AimAssistTarget;                                         // 0x1F68(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldUseFastPathAnimations;                            // 0x1F70(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VTP8[0x3];                                   // 0x1F71(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastRenderTime;                                          // 0x1F74(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreviousLastRenderTime;                                  // 0x1F78(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LastMoveFallingContext;                                  // 0x1F7C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MouthSocketName;                                         // 0x1F84(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J582[0x4];                                   // 0x1F8C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     BreathParticleSystem;                                    // 0x1F90(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreathingMinFrequency;                                   // 0x1F98(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreathingMaxFrequency;                                   // 0x1F9C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastBreathEffectTime;                                    // 0x1FA0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DVQ1[0x4];                                   // 0x1FA4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     SpectatorParticle;                                       // 0x1FA8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            SpawnedSpectatorParticle;                                // 0x1FB0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OTU7[0x10];                                  // 0x1FB8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             Delegate_OnAmmoGained;                                   // 0x1FC8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate
		class FScriptMulticastDelegate                             Delegate_OnResupplyAmmo;                                 // 0x1FD8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_T0GH[0x8];                                   // 0x1FE8(0x0008) MISSED OFFSET (PADDING)

	public:
		void UpdateWeightMovementParameters();
		void UpdateLocalRTPC();
		void UpdateFirstPersonVisibility();
		void UnequipAllItems(class AItemEquipable* IgnoreItem, bool bInstant);
		void SpawnRandomInventoryFromAvailableItems();
		void SoldierPreDoorKick(bool KickWillSucceed, class ADoor* Door);
		bool ShouldDealDamageInSpawnZone();
		void SetWeight(float NewWeight);
		bool SetStance(ESoldierStance NewStance, bool bClientSimulation);
		void SetStamina(float NewStaminaValue);
		void SetMaxWaterDepthForProne(float InMaxWaterDepth);
		void SetInSpawnZone(bool bSpawnZone);
		void SetFocusMode(bool bNewState, bool bFromReplication);
		void ServerUse(class AActor* UseActor, const struct FHitResult& HitResult);
		void ServerUpdateInputLeanDirection(ELeanDirection NewInputLeanDirection);
		void ServerUpdateFreeaim(int32_t CompressedAngle);
		void ServerStopSlide();
		void ServerSoldierPreDoorKick(bool KickWillSucceed, class ADoor* Door);
		void ServerSoldierDoorKick(class ADoor* Door);
		void ServerSetFocusMode(bool bNewState);
		void ServerSetCameraIsTargetingKillLocation(bool bActive);
		void ServerOnUseReleased();
		void ServerMelee();
		void ServerInteractGearInSlot(EItemSlot GearSlot);
		void ServerInformBulletHit(const struct FClientBulletHit& BulletHit);
		void ServerHandleVehicleUse();
		void ServerEquipInventoryItem(class AItemEquipable* Item);
		void ServerDoSelectInventorySlot(EItemSlot Slot);
		void ServerBreachDoor(class ADoor* Door);
		void ServerAttemptToSlide();
		void Server_SetVehicleStance(EVehicleStance NewStance);
		void Server_FindWeaponForDriver();
		void Server_DriverPutAwayWeapon();
		bool SelectInventorySlot(EItemSlot Slot);
		bool SelectFirstAvailableInventoryItem();
		void Revive();
		bool Resupply();
		void ResetResupplyCooldown();
		bool RemoveMagazine(class UClass* AmmoType, int32_t NumToRemove);
		void RemoveInventoryItems(bool bForce);
		bool RemoveFromInventory(class AItemBase* Item);
		void RemoveCosmetics();
		void RefreshFirstPersonCosmeticVisibility();
		bool ReequipWeapon(bool bFallbackSelectFirst);
		void RecoverStamina(float Amount);
		void RecalculateWeight();
		void PlaySurfaceReactionPair(const struct FSurfaceReactionPair& Pair, const struct FHitResult& Trace);
		void PlaySurfaceReactionGround(const struct FSurfaceReactionPair& Pair);
		void PlaySurfaceReaction(const struct FSurfaceReactionPair& Pair, const struct FHitResult& Trace, const struct FWWiseData& CustomAudioData);
		void PlayQueuedResponse();
		void PlayPainSound(class UINSDamageType* DamageType, float Damage, bool bWasFriendlyFire, bool bHeadshot);
		void PlayObserverThank();
		void PlayGenericSoundEventMulticast(class UAkAudioEvent* Event);
		void PlayGenericParticleEffectMulticast(class UParticleSystem* Event, const struct FVector& Location);
		void PlayFallDamageMulticast();
		bool PlayDialogue(const struct FCharacterResponseRequest& SpeakRequest);
		void PlayCharacterSoundEvent(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent);
		void PerformResupply();
		void OnSoundscapeUpdate(const struct FSoundscapeStateRepl& State);
		void OnSlideStopped(float SlideTransitionDuration);
		void OnResponseSpoken(ECharacterResponse Response);
		void OnResponseInterrupted(ECharacterResponse Response);
		void OnReserveAmmoUpdated();
		void OnRep_Weight();
		void OnRep_VehicleStance();
		void OnRep_Vaulting();
		void OnRep_TeamId();
		void OnRep_Stamina();
		void OnRep_ReplicatedStance();
		void OnRep_ReplicatedFreeaim();
		void OnRep_ReplicatedDesiredStance();
		void OnRep_PlayerClass();
		void OnRep_PendingWeapon();
		void OnRep_KilledBy();
		void OnRep_KickInProgress();
		void OnRep_IsAI();
		void OnRep_Inventory();
		void OnRep_Incapacitated();
		void OnRep_FocusMode();
		void OnRep_DialogueDictionary();
		void OnRep_CurrentWeapon();
		void OnRep_CurrentHeldUsableActor();
		void OnRep_Ammo();
		void OnFireSupportFinishedSuccesfully(class AFireSupportBase* FireSupport);
		void OnCharacterMovementChanged(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
		void MulticastStopActiveDialogue();
		void MulticastSpeakPlayDialogue(const struct FCharacterResponseRequest& SpeakRequest, uint32_t Seed);
		void MulticastSoldierPreDoorKick(bool KickWillSucceed, class ADoor* Door);
		void MulticastScavenge(class AItemWeapon* Weapon);
		void MulticastOnUseActorInteracted(class AActor* UsingActor, EUseItem Item);
		void MulticastMelee();
		void MulticastLanded(const struct FWWiseData& AudioData, const struct FHitResult& GroundTrace);
		void MulticastIncrementSuppression(float Increment, float HoldTime, ESuppressionContext InSuppressionContext, float DistToSrc);
		void MulticastIncrementRecoil(const struct FRotator& RecoilIncrement, const struct FVector& RecoilViewIncrement, float AimPunchFrac, float RecoilPunchAdditiveFactor, bool bIncludeOwner);
		void MulticastBlind(float BlindHoldTime, float BlindFadeTime, float BlindAlpha, float SuppressionIncrement, float FlashSuppressionHoldTime);
		void MulticastApplyStun(float InStunDuration);
		void Multicast_ShowLagCompensationDebug(const struct FVector& ServerPosition, const struct FVector& CompensatedPosition, float DistanceFromReportedHit);
		void LoadSelectedCosmetics();
		int32_t ItemCapacityForSlot(EItemSlot Slot);
		bool IsWeaponRestricted();
		bool IsViewTarget();
		bool IsVehicle();
		bool IsUsingGamepad();
		bool IsUseProgressInTapTime();
		bool IsUseInProgress();
		bool IsStunned();
		bool IsStanding();
		bool IsSprinting();
		bool IsSpecialPlayerClass();
		bool IsRestricted();
		bool IsReloading();
		bool IsProne();
		bool IsPressingWeaponInteractionKey();
		bool IsOutsidePlayableArea();
		bool IsOfficer();
		bool IsObserver();
		bool IsNearSupplyCrate(float Tolerance);
		bool IsMoving();
		bool IsLeaning();
		bool IsInProneTransition();
		bool IsFullyCrawling();
		bool IsFocusing();
		bool IsFirstPersonViewTarget();
		bool IsDoorKickInProgress();
		bool IsCurrentlySliding();
		bool IsCrouching();
		bool IsCrawling();
		bool IsCompletelyBlind();
		bool IsClimbing();
		bool IsClientUpdating();
		bool IsBusy();
		bool IsBlind();
		bool IsAtSprintingSpeed();
		bool IsAimingDownSights();
		void InvalidatePlayerAppearance(bool bClearCosmeticCache);
		void InteractWeaponUpgrade(EWeaponUpgradeSlot InSlot);
		void InteractWeaponUnderbarrelUpgrade();
		void InteractWeaponStockUpgrade();
		void InteractWeaponSiderailUpgrade();
		void InteractWeaponOpticUpgrade();
		void InteractGearInSlot(EItemSlot GearSlot, bool bFallbackEquipable);
		void InteractGearAccessoryCycleOptic();
		void InteractGearAccessory();
		bool InStanceTransition();
		bool InSpawnZone();
		void IncrementSuppression(float Increment, float HoldTime, ESuppressionContext InSuppressionContext, float DistToSrc);
		void IncrementScore(int32_t Amount);
		void IncrementRecoil(const struct FRotator& RecoilIncrement, const struct FVector& RecoilViewIncrement, float AimPunchFrac, float RecoilPunchAdditiveFactor);
		void IncrementFreeaim(const struct FRotator& Amount);
		void Incapacitate();
		bool HasTeamInfoReplicated();
		bool HasRadio();
		bool HasNearbyRadio();
		bool HasJustLandedJump();
		bool HasJumped();
		bool HasInventoryItem(class UClass* ItemClass);
		void GiveInventoryItems(bool bSelectFirstItem);
		void GiveAmmoFromStoredAmmo(TArray<struct FStoredAmmo> StoredAmmo);
		void GiveAmmoForWeapon(class AItemWeapon* Weapon, int32_t Amount);
		void GiveAmmo(class UClass* AmmoType, int32_t Amount, class UClass* AmmoTypeOverride, int32_t MaxCarryOverride);
		float GetWeight();
		class UINSSkeletalMeshComponent* GetWeaponMesh1P();
		float GetWalkingFrac();
		float GetUseProgress();
		float GetUseElapsedTime();
		float GetTopSpeedFraction();
		float GetTopSpeed();
		float GetToleranceForNonSprintingFire();
		float GetTimeSinceLastRenderTime();
		float GetTimeOutsidePlayableArea();
		unsigned char GetTeamId();
		class ATeamInfo* GetTeam();
		float GetStaminaFrac();
		float GetStamina();
		float GetSprintAlpha();
		void GetSortedEquipableItems(TArray<class AItemEquipable*>* OutEquipables);
		struct FRotator GetShootAngles();
		class USharedCosmeticState* GetSharedCosmeticState();
		class UINSPawnSensingComponent* GetSensingComponent();
		int32_t GetReserveAmmoForWeapon(class AItemWeapon* Weapon);
		int32_t GetReserveAmmo(class UClass* AmmoType);
		float GetRemoteViewPitch();
		float GetRelativeMeshZForStance(ESoldierStance NewStance);
		float GetRelativeMeshZForCurrentStance();
		float GetRecentMaxVelocity(float Time);
		struct FVector GetRecentLocalVelocity(float Time);
		float GetRadioSignalQuality(float Distance);
		class AItemEquipable* GetPreviousItemInSlot(EItemSlot Slot, class AItemEquipable* CurrentItem, bool bFallbackToLast, bool bIgnoreCanEquip);
		EPlayerSpeedClassification GetPlayerSpeedClassification();
		class AINSPlayerController* GetPlayerController();
		class AItemEquipable* GetPendingOrActiveItem();
		class AItemEquipable* GetPendingItem();
		int32_t GetNumNearbyTeammates(float Radius);
		bool GetNextMagazine(class UClass* AmmoType, struct FStoredMagazine* OutMagazine);
		class AItemEquipable* GetNextItemInSlot(EItemSlot Slot, class AItemEquipable* CurrentItem, bool bFallbackToFirst, bool bIgnoreCanEquip);
		int32_t GetNextBulletId();
		class ASupplyCrate* GetNearbySupplyCrate(float Tolerance);
		TArray<class AItemRadio*> GetNearbyRadios();
		float GetMovingFrac();
		class UCosmeticItem* GetMergedMesh();
		float GetMeleeStaminaFrac();
		float GetMaxLeaningViewXOffset(ELeanDirection NewInputLeanDirection, bool bMoving);
		int32_t GetMaxAmmoForWeapon(class AItemWeapon* Weapon);
		int32_t GetMaxAmmo(class UClass* AmmoContainer);
		float GetLeaningViewYOffset(float DesiredLeanAmount);
		float GetLeaningViewXOffset(float DesiredLeanAmount);
		float GetLastMovementTimeServer();
		class AItemBase* GetItemInSlot(EItemSlot Slot);
		class AItemBase* GetItemInInventory(class UClass* ItemClass);
		int32_t GetItemEquippedCountByClass(class UClass* ItemClass);
		int32_t GetItemEquippedCount(class AItemBase* ItemClass);
		struct FVector GetGroundLocation();
		class AItemGrenade* GetGrenadeInInventory(bool bLethal);
		class AItemGear* GetGearInSlot(EItemSlot GearSlot);
		class AItemFirearm* GetFirearmInCategory(EFirearmCategory Category, bool bIncludingNonConsumingItems);
		int32_t GetFirearmCategoryEquipLimit(EFirearmCategory Category);
		class UFactionDefinition* GetFactionDefinition();
		int32_t GetEquippedItemSlotsMask();
		int32_t GetEquippedCountInFirearmCategory(EFirearmCategory Category, bool bIncludingNonConsumingItems);
		void GetEquipableItems(TArray<class AItemEquipable*>* OutEquipables);
		class AItemEquipable* GetEquipableInSlot(EItemSlot Slot);
		ESoldierStance GetDesiredStance();
		class FName GetCurrentWeaponSwitch();
		class AItemEquipable* GetCurrentWeapon();
		class AActor* GetCurrentUseActor();
		float GetCrawlingAlpha();
		struct FHitResult GetComplexGroundTrace();
		class APawn* GetClosestRadioSupportPawn();
		class APawn* GetClosestOfficerPawn();
		class UINSSkeletalMeshComponent* GetBodyMesh1P();
		float GetBlindFrac();
		class UINSSkeletalMeshComponent* GetArmMesh1P();
		struct FStoredAmmo GetAmmo(class UClass* AmmoType);
		class UINSAISquad* GetAISquad();
		class AINSAISoldierController* GetAIController();
		int32_t GetAdditionalAmmoForWeapon(class AItemWeapon* Weapon);
		unsigned char GetActiveObjectiveId();
		class AObjectiveBase* GetActiveObjective();
		void FinishObserverResponse();
		bool FindUseActors(TArray<struct FUsableActor>* OutUsableActors, float DistanceOverride, float RadiusOverride);
		class AActor* FindUseActor(struct FHitResult* OutHitResult);
		class ADoor* FindDoor();
		bool EquipInventoryItem(class AItemEquipable* Item, bool bFromServer);
		void DropWeapons();
		void DrainStamina(float Amount);
		int32_t CountItemsInSlot(EItemSlot Slot, bool bIncludingNonConsumingItems);
		void ClientSetHeldUsableActor(const struct FTimedUsableActor& UsableActorInfo);
		void ClientOnResupplyStartEndSoundFeedback(bool bStartResupply);
		void ClientOnResupplyAmmo();
		void ClientOnGatheredAmmo(class AItemWeapon* FromWeapon, bool bPlaySound);
		void ClientIncrementSuppression(float Increment, float HoldTime, ESuppressionContext InSuppressionContext, float DistToSrc, const struct FVector& Origin);
		void ClientEquipInventoryItem(class AItemEquipable* Item, class AItemEquipable* Previous);
		void CenterFreeaim(float Fraction);
		bool CanShowCosmeticEffects();
		bool CanScore();
		bool CanChangeStance();
		void CancelUse();
		void CancelSprint();
		struct FVector CalcViewLocation(bool bApplyLeanOffset, bool bApplyViewBob);
		void CalcRecoilOffset(struct FVector* Position, struct FRotator* Angles, const struct FRotator& OriginalAngles);
		float CalcFocusFraction();
		void BlueprintUpdateFirstPersonVisibility(bool bIsFirstPersonVisible);
		void BlueprintOnStanceChanged(ESoldierStance OldStance);
		void BlueprintCalcCamera(float DeltaTime, const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV);
		void Blind(float BlindHoldTime, float BlindFadeTime, float BlindAlpha, float SuppressionIncrement, float FlashSuppressionHoldTime);
		void BeginObserverResponse();
		void ApplyStun(float InStunDuration);
		void ApplyAttributes(const struct FPlayerClassAttributes& Attributes);
		void AmmoGatheredDelegate__DelegateSignature();
		bool AllowWeaponReload();
		bool AllowWeaponFocus();
		bool AllowWeaponFire();
		bool AllowUseInVehicle();
		bool AllowSprint();
		bool AllowRun();
		bool AllowResupply();
		bool AllowMove();
		bool AllowJumpShoot();
		bool AllowFreeaim();
		bool AllowFiremodeToggle();
		bool AllowEquipmentPhysics();
		bool AllowAimDownSights();
		void AddWeight(float Delta);
		void AddViewPunchRotator(const struct FRotator& ViewPunchIncrement);
		void AddViewPunch(float Pitch, float Yaw, float Roll);
		bool AddToInventory(class AItemBase* Item, bool bFromReplication);
		void AddCosmetic(const struct FSelectedCosmetic& Cosmetic, bool bDeferInit);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSpectatorPawn
	 * Size -> 0x0090 (FullSize[0x0338] - InheritedSize[0x02A8])
	 */
	class AINSSpectatorPawn : public ASpectatorPawn
	{
	public:
		TWeakObjectPtr<class AINSPlayerState>                      MostRecentViewedPlayer;                                  // 0x02A8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        CameraModes;                                             // 0x02B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentSpectatorMode;                                    // 0x02C0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OD8F[0x4];                                   // 0x02C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bAllowNextPlayerInScoreboard : 1;                        // 0x02C8(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowFreeRoamPlayerCycle;                               // 0x02C9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCameraSmoothing;                                     // 0x02CA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H2CI[0x1];                                   // 0x02CB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FreeRoamCharacterDistance;                               // 0x02CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FreeRoamVehicleDistance;                                 // 0x02D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5GPK[0x5C];                                  // 0x02D4(0x005C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AdminMenuWidget;                                         // 0x0330(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void ToggleAdminMenu();
		void SpectatePreviousPlayer();
		void SpectatePlayerOnTeam(unsigned char TeamIndex, int32_t Offset, bool bIgnoreDead);
		void SpectateNextPlayer();
		void SetViewTargetPlayerState(class APlayerState* InPlayerState);
		void SetViewTarget(class AActor* Target, const struct FViewTargetTransitionParams& TransitionParams);
		void Server_AdminCheat(const class FString& Command);
		void ResetCameraPosition();
		void AdminCheat(const class FString& Command);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SurvivalWaveConfig
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class USurvivalWaveConfig : public UDataAsset
	{
	public:
		TArray<struct FSurvivalCustomWave>                         CustomWaves;                                             // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSurvivalSpecialWave>                        SpecialWaves;                                            // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSurvivalFinalWave                                  FinalWaveSettings;                                       // 0x0050(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSurvivalGameMode
	 * Size -> 0x01B0 (FullSize[0x0C80] - InheritedSize[0x0AD0])
	 */
	class AINSSurvivalGameMode : public AINSCoopMode
	{
	public:
		class AINSSurvivalGameState*                               SurvivalGameState;                                       // 0x0AD0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoundTimeExtension;                                      // 0x0AD8(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumWaves;                                                // 0x0ADC(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentWave;                                             // 0x0AE0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableExtractionObjective;                              // 0x0AE4(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExtractionInProgress;                                   // 0x0AE5(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ETB[0x2];                                   // 0x0AE6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExtractionObjectiveHoldTime;                             // 0x0AE8(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExtractionSpawnStopTime;                                 // 0x0AEC(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotDPRRespawnFinal;                                      // 0x0AF0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotDPRRespawnFirst;                                      // 0x0AF4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumBotsPerCompletedObjective;                        // 0x0AF8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumBotsPerCompletedObjective;                        // 0x0AFC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResetLoadoutOnNewRound;                                 // 0x0B00(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7M76[0x3];                                   // 0x0B01(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ObjectiveDefendDistance;                                 // 0x0B04(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotMinimumSpawnRange;                                    // 0x0B08(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotMaximumSpawnRange;                                    // 0x0B0C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotRespawnDistance;                                      // 0x0B10(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotSpawnDelay;                                           // 0x0B14(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotRespawnDelay;                                         // 0x0B18(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotRepositionDelay;                                      // 0x0B1C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotFleeDuration;                                         // 0x0B20(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HHAK[0x4];                                   // 0x0B24(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SurvivalWaveConfigAssetPath[0x28];                       // 0x0B28(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              SurvivalNightTimeWaveConfigAssetPath[0x28];              // 0x0B50(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class USurvivalWaveConfig*                                 SurvivalWaveConfig;                                      // 0x0B78(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USurvivalWaveConfig*                                 SurvivalNightTimeWaveConfig;                             // 0x0B80(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AObjectiveBase*>                              ObjectiveOrder;                                          // 0x0B88(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ExtractionFireSupport[0x28];                             // 0x0B98(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bUseSpecialWaves;                                        // 0x0BC0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5KTR[0x3];                                   // 0x0BC1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SpecialWaveFrequency;                                    // 0x0BC4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RKI2[0xB8];                                  // 0x0BC8(0x00B8) MISSED OFFSET (PADDING)

	public:
		void SkipToExtraction();
		void SetupObjectives();
		void SetOverrideWaveConfig(class USurvivalWaveConfig* InWaveConfig);
		void PopulateHelicopterWithPlayers();
		bool IsFinalWave();
		class USurvivalWaveConfig* GetWaveConfig();
		class USurvivalScenarioData* GetSurvivalScenarioData();
		class AVehicleHoveringBase* FindExtractionHelicopter();
		void ActivateNextObjective();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSSurvivalGameState
	 * Size -> 0x0068 (FullSize[0x06A8] - InheritedSize[0x0640])
	 */
	class AINSSurvivalGameState : public AINSMultiplayerGameState
	{
	public:
		int32_t                                                    CurrentWave;                                             // 0x0640(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalWaves;                                              // 0x0644(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDefendingExtractionPoint;                             // 0x0648(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESurvivalWaveType                                          CurrentWaveType;                                         // 0x0649(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LB72[0xE];                                   // 0x064A(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnCurrentWaveChangedDelegate;                            // 0x0658(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnTotalWavesChangedDelegate;                             // 0x0668(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDefendingExtractionPointChangeDelegate;                // 0x0678(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             SurvivalPrepareNextWaveDelegate;                         // 0x0688(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             SurvivalIncomingWaveDelegate;                            // 0x0698(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void SetCurrentWave(int32_t NewCurrentWave);
		void OnSurvivalWaveChangedDelegate__DelegateSignature(int32_t NewWave);
		void OnSurvivalPrepareNextWaveDelegate__DelegateSignature();
		void OnSurvivalIncomingWaveDelegate__DelegateSignature(ESurvivalWaveType WaveType);
		void OnSurvivalDefendExtractionPointDelegate__DelegateSignature(bool bIsDefending);
		void OnRep_TotalWaves();
		void OnRep_IsDefending();
		void OnRep_CurrentWave();
		void Multicast_SurvivalPrepareNextWaveEvent();
		void Multicast_SurvivalIncomingWaveEvent(ESurvivalWaveType NewCurrentWaveType);
		void Multicast_StartHelicopterSequence(class ALevelSequenceActor* Sequence, class AVehicleHoveringBase* Helicopter);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.InsurgencyGlobals
	 * Size -> 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
	 */
	class UInsurgencyGlobals : public UObject
	{
	public:
		struct FSoftObjectPath                                     GameUIDataRef;                                           // 0x0028(0x0018) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGameUIData*                                         GameUIData;                                              // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.INSWorldSettings
	 * Size -> 0x02E0 (FullSize[0x0680] - InheritedSize[0x03A0])
	 */
	class AINSWorldSettings : public AWorldSettings
	{
	public:
		TArray<struct FDefaultScenarios>                           DefaultScenarios;                                        // 0x03A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundscapeDefinition*                               DefaultSoundscape;                                       // 0x03B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<TWeakObjectPtr<class UAkComponent>>                 PendingSoundscapeComponents;                             // 0x03B8(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<TWeakObjectPtr<class ASoundscapeEmitter>>           PendingSoundscapeEmitters;                               // 0x03C8(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, class FName>                             LightingScenarios;                                       // 0x03D8(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bRandomLightingScenario;                                 // 0x0428(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0EP7[0x3];                                   // 0x0429(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                DefaultLightingScenario;                                 // 0x042C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysNight;                                            // 0x0434(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3Y37[0x3];                                   // 0x0435(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LoadedLightingScenario;                                  // 0x0438(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8XZE[0x10];                                  // 0x0440(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                  TacticalMapMaterial;                                     // 0x0450(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LevelCenter;                                             // 0x0458(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBox                                                LevelBounds;                                             // 0x0464(0x001C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             ScenarioCenter;                                          // 0x0480(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBox                                                ScenarioBounds;                                          // 0x048C(0x001C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TMap<class FName, class UMaterialInterface*>               TacticalMapMaterialLightingOverride;                     // 0x04A8(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      CompassOffset;                                           // 0x04F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DF35[0x4];                                   // 0x04FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UAkAudioBank*>                                LevelBanks;                                              // 0x0500(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             DefaultBankNames;                                        // 0x0510(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             UIBankNames;                                             // 0x0520(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             BaseBankNames;                                           // 0x0530(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRaycastDistance;                                      // 0x0540(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AZD1[0x4];                                   // 0x0544(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              BenchmarkSublevels[0x50];                                // 0x0548(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              BenchmarkSequences[0x50];                                // 0x0598(0x0050) UNKNOWN PROPERTY: SetProperty
		bool                                                       bShowBreath;                                             // 0x05E8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S7RZ[0x7];                                   // 0x05E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     BreathParticleSystemOverride;                            // 0x05F0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AdditionalGameTags[0x50];                                // 0x05F8(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_TQ61[0x20];                                  // 0x0648(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULevelSequencePlayer*                                SequencePlayer;                                          // 0x0668(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class ALevelSequenceActor*                                 SequencePlayerActor;                                     // 0x0670(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bAutomatedBenchmark;                                     // 0x0678(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7Q4Y[0x7];                                   // 0x0679(0x0007) MISSED OFFSET (PADDING)

	public:
		void OnRep_LoadedLightingScenario();
		void LoadAndPlayBenchmarkSequence(bool bAutomated);
		void BenchmarkOnStop();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.IntroCameraActor
	 * Size -> 0x0010 (FullSize[0x07A0] - InheritedSize[0x0790])
	 */
	class AIntroCameraActor : public ACameraActor
	{
	public:
		bool                                                       bEnabled;                                                // 0x0790(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HDTP[0xF];                                   // 0x0791(0x000F) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.InventoryComponent
	 * Size -> 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
	 */
	class UInventoryComponent : public UActorComponent
	{
	public:
		TArray<struct FInventorySlot>                              InventoryItems;                                          // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             InventoryChangedDelegate;                                // 0x00C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void SortItems();
		void RemoveItem(int32_t ItemIdx);
		void PurgeItems();
		void OnRep_InventoryItems();
		void InventoryChangedDelegate__DelegateSignature();
		bool HasItemInSlot(EItemSlot Slot);
		void GiveItemsReverse(class AINSSoldier* Consumer, bool bConsumeItems);
		void GiveItems(class AINSSoldier* Consumer, bool bConsumeItems);
		class AItemBase* GiveItemAt(int32_t ItemIdx, class AINSSoldier* Consumer, bool bDeferSpawn, bool bConsumeItem);
		void GiveFallbackItems(class AINSSoldier* Consumer);
		void GetInventoryItemsFilteredByItemSlot(TArray<struct FInventorySlot>* OutItems, EItemSlot Slot);
		void EmptyItems(bool bIgnoreLockedSlots);
		bool ContainsItem(bool bIncludeChildren);
		void CollectFallbackItemsFor(TArray<class UClass*>* OutFallbackItems);
		void CollectFallbackItems(TArray<class UClass*>* OutFallbackItems);
		void CheckFallbackFor(class AINSSoldier* Consumer);
		void BlueprintOnGiveItem(const struct FInventorySlot& Slot, class AItemBase* SpawnedItem);
		void AddItem(const struct FInventorySlot& Slot, bool bSortNow);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemBase
	 * Size -> 0x09D8 (FullSize[0x0BF8] - InheritedSize[0x0220])
	 */
	class AItemBase : public AActor
	{
	public:
		unsigned char                                              UnknownData_4KBZ[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EItemSlot                                                  ItemSlot;                                                // 0x0230(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_63ZY[0x3];                                   // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BundleItemID;                                            // 0x0234(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bConsumesCapacity;                                       // 0x0238(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZB8N[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EquipLimit;                                              // 0x023C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRestrictSubSlot;                                        // 0x0240(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IGNS[0x3];                                   // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinSubSlot;                                              // 0x0244(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSubSlot;                                              // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPreviewActor;                                           // 0x024C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TSK8[0x3];                                   // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AProfileCharacter*                                   PreviewPawn;                                             // 0x0250(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ItemName;                                                // 0x0258(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                ItemDescription;                                         // 0x0270(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FItemIcons                                          ItemIcons;                                               // 0x0288(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FLessonInputAction>                          Actions;                                                 // 0x0298(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDropped;                                              // 0x02A8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SRJ9[0x3];                                   // 0x02A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastDropTime;                                            // 0x02AC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_CheckPhysicsSleep;                           // 0x02B0(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AINSSoldier*                                         PawnOwner;                                               // 0x02B8(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AINSSoldier>                          PreviousOwner;                                           // 0x02C0(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerController*                                   LocalPlayerController;                                   // 0x02C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDrop;                                                // 0x02D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartDropped;                                           // 0x02D1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P6YE[0x2];                                   // 0x02D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Weight;                                                  // 0x02D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BaseSupplyCost;                                          // 0x02D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_81Z6[0x4];                                   // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SkeletalMesh3P[0x28];                                    // 0x02E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FScriptMulticastDelegate                             OnMesh3PLoadedDelegate;                                  // 0x0308(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UINSSkeletalMeshComponent*                           Mesh3P;                                                  // 0x0318(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldAttachedToThirdPersonMesh;                        // 0x0320(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMeshUseMasterPoseComponent;                             // 0x0321(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JNFK[0x6];                                   // 0x0322(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              RequiredAudioBanks[0x50];                                // 0x0328(0x0050) UNKNOWN PROPERTY: SetProperty
		class USurfaceReaction*                                    CollisionSurfaceReaction;                                // 0x0378(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionEventMinSpeed;                                  // 0x0380(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionEventMaxSpeed;                                  // 0x0384(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastCollisionEvent;                                      // 0x0388(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionEventMinTimeBetween;                            // 0x038C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X3MD[0x48];                                  // 0x0390(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AnimationRotation;                                       // 0x03D8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZOOP[0x4];                                   // 0x03DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCharacterAnim                                      ThirdPersonCharacterAnimsNative;                         // 0x03E0(0x07F8) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XCOT[0x20];                                  // 0x0BD8(0x0020) MISSED OFFSET (PADDING)

	public:
		void SetThirdPersonMeshesVisibility(bool bVisible, bool bPropagateToChildren);
		void ReattachMasterPosedChildMeshes(class USkinnedMeshComponent* NewParent);
		void PlaySoundEventPairOnOwner(struct FAkComponentCameraPair* AudioEvent);
		void PlaySoundEventOnOwnerFromView(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent);
		void PlaySoundEventOnOwner(class UAkAudioEvent* Event, bool bThirdPerson);
		void OnThirdPersonMeshesVisibilityChanged(bool bVisible, bool bPropagateToChildren);
		void OnSpawnedPreviewActor(bool bFirstPerson, class UPlayerInventoryComponent* PlayerInventory);
		void OnRep_PawnOwner();
		void MigrateStructsToNative();
		bool IsOwnerLocallyControlled();
		float GetWeight();
		EItemSlot GetRepresentativeItemSlot();
		class USkeletalMeshComponent* GetOwnerMesh3P();
		class UINSSkeletalMeshComponent* GetMesh3P();
		float GetDroppedLifeSpan();
		bool DropItem();
		void DetachMeshFromPawn();
		bool ConsumesSlotCapacity();
		void CheckPhysicsSleep();
		bool CanShowCosmeticEffects();
		bool CanBeDropped();
		void BlueprintSpawnedPreviewActor(bool bFirstPerson, class UPlayerInventoryComponent* PlayerInventory);
		void BlueprintPreItemRemovedFromInventory();
		void BlueprintPostItemRemovedFromInventory(class AINSSoldier* PreviousOwnerPawn);
		void BlueprintOnPickedUp();
		void BlueprintOnDropped();
		void BlueprintOnDetachMeshFromPawn(class UINSSkeletalMeshComponent* Mesh);
		void BlueprintOnDeath();
		void BlueprintOnAttachMeshToPawn(class UINSSkeletalMeshComponent* Mesh);
		void BlueprintCalcOwnerCamera(float DeltaTime, struct FMinimalViewInfo* OutResult);
		void AttachMeshToPawn();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemEquipable
	 * Size -> 0x0EC8 (FullSize[0x1AC0] - InheritedSize[0x0BF8])
	 */
	class AItemEquipable : public AItemBase
	{
	public:
		unsigned char                                              UnknownData_TKIG[0x10];                                  // 0x0BF8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EUsablePriority                                            UsePriority;                                             // 0x0C08(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanPickup;                                              // 0x0C09(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XHME[0x6];                                   // 0x0C0A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             ItemEquipDelegate;                                       // 0x0C10(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bPreviouslyEquipped;                                     // 0x0C20(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YZAQ[0x7];                                   // 0x0C21(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             ItemUnequipDelegate;                                     // 0x0C28(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bUseCustomBackAttach;                                    // 0x0C38(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SSVK[0x3];                                   // 0x0C39(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                UnequippedAttachmentSocket;                              // 0x0C3C(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCachedAnimTimes;                                        // 0x0C44(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9AZR[0x3];                                   // 0x0C45(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EquipDuration;                                           // 0x0C48(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FirstEquipDuration;                                      // 0x0C4C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWantsFirstEquip;                                        // 0x0C50(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0FKO[0x3];                                   // 0x0C51(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnderbarrelTransitionDuration;                           // 0x0C54(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UnequipDuration;                                         // 0x0C58(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowUseInVehicle;                                      // 0x0C5C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_31LN[0xB];                                   // 0x0C5D(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EEquipableState                                            EquipableState;                                          // 0x0C68(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEquipableState                                            SimulatedEquipableState;                                 // 0x0C69(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GM21[0x6];                                   // 0x0C6A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSAudioComponent*                                  WeaponAudioComponent;                                    // 0x0C70(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalRTPCState;                                         // 0x0C78(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZLPA[0x7];                                   // 0x0C79(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnMesh1PLoadedDelegate;                                  // 0x0C80(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              SkeletalMesh1P[0x28];                                    // 0x0C90(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UINSSkeletalMeshComponent*                           Mesh1P;                                                  // 0x0CB8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPickedUp;                                               // 0x0CC0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5PM4[0x3];                                   // 0x0CC1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FreeaimSensitivity;                                      // 0x0CC4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FreeaimDistance;                                         // 0x0CC8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FreeaimScreenWeaponRatio;                                // 0x0CCC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadFreeaimSensitivity;                               // 0x0CD0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadFreeaimDistance;                                  // 0x0CD4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadFreeaimScreenWeaponRatio;                         // 0x0CD8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V1AH[0x4];                                   // 0x0CDC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFirstPersonAnims                                   FirstPersonAnimations;                                   // 0x0CE0(0x09F8) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FThirdPersonAnims                                   ThirdPersonAnimations;                                   // 0x16D8(0x03B8) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bAllowVaultingFire;                                      // 0x1A90(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowVaultingMelee;                                     // 0x1A91(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_84AR[0x2];                                   // 0x1A92(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ItemPickupTime;                                          // 0x1A94(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          ItemPickupUIIcon;                                        // 0x1A98(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          ItemScavengeUIIcon;                                      // 0x1AA0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReleaseFireOnOpenRadialMenu;                            // 0x1AA8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceWeaponAudioComponentAlwaysActive;                  // 0x1AA9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1LPT[0x16];                                  // 0x1AAA(0x0016) MISSED OFFSET (PADDING)

	public:
		void UpdateLocalRTPC();
		bool ShouldShowItemsOnBack();
		bool ShouldPlayFirstEquip();
		void SetWeaponRTPC(const class FString& RTPCName, float Value);
		void SetEquipableState(EEquipableState NewState);
		int32_t PlaySoundEventPair(struct FAkComponentCameraPair* AudioEvent);
		int32_t PlaySoundEventFromView(class UAkAudioEvent* FirstPersonEvent, class UAkAudioEvent* ThirdPersonEvent);
		int32_t PlaySoundEvent(class UAkAudioEvent* Event, bool bApplySpeedOfSound);
		void OnRep_EquipableState();
		void ItemUnequipDelegate__DelegateSignature(bool bInstant, class AItemEquipable* SwitchingTo);
		void ItemEquipDelegate__DelegateSignature(bool bInstant, class AItemEquipable* SwitchingFrom, bool bWantsFirstEquip);
		bool IsViewTarget();
		bool IsUnequippingOrUnequipped();
		bool IsUnequipping();
		bool IsUnequipped();
		bool IsOwnerUsingGamepad();
		bool IsMeshVisibleWhenUnequipped();
		bool IsFreeaimEnabled();
		bool IsFirstPersonViewTarget();
		bool IsEquippingOrEquipped();
		bool IsEquipping();
		bool IsEquippedOrNearlyEquipped(float Tolerance);
		bool IsEquipped();
		bool IsAIControlled();
		float GetUnequipDurationModifier(bool bSwitchingFrom);
		class AINSSoldier* GetOwningPawn();
		class UINSSkeletalMeshComponent* GetMesh1P();
		float GetFreeaimFraction();
		float GetEquipDurationModifier(bool bSwitchingFrom);
		EEquipableState GetEquipableState();
		class AController* GetController();
		void ClientCancelUnequip();
		void ClientCancelEquip();
		bool CanEquipBlueprint();
		void BlueprintOnUpdateFirstPersonVisibility(bool bFirstPersonVisibile);
		void BlueprintOnUnequipped();
		void BlueprintOnUnequip();
		void BlueprintOnEquipped();
		void BlueprintOnEquip();
		void BlueprintOnAttachToBack(class UINSSkeletalMeshComponent* Mesh);
		void AttachMeshToBack();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemWeapon
	 * Size -> 0x0360 (FullSize[0x1E20] - InheritedSize[0x1AC0])
	 */
	class AItemWeapon : public AItemEquipable
	{
	public:
		unsigned char                                              UnknownData_2P57[0x60];                                  // 0x1AC0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnUpgradeMesh1PLoadedDelegate;                           // 0x1B20(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUpgradeAllMeshes1PLoadedDelegate;                      // 0x1B30(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUpgradeMesh3PLoadedDelegate;                           // 0x1B40(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUpgradeAllMeshes3PLoadedDelegate;                      // 0x1B50(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FZ4R[0x18];                                  // 0x1B60(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWeaponFallbackModel>                        FallbackModels1P;                                        // 0x1B78(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponFallbackModel>                        FallbackModels3P;                                        // 0x1B88(0x0010) Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponUpgradeSlot                                         SlotForForceAnim;                                        // 0x1B98(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FC2S[0x7];                                   // 0x1B99(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnUpgradeInstalledDelegate;                              // 0x1BA0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUpgradeRemovedDelegate;                                // 0x1BB0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TMap<EWeaponUpgradeSlot, class UWeaponUpgradeComponent*>   EquippedUpgrades;                                        // 0x1BC0(0x0050) BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UpgradeTags[0x50];                                       // 0x1C10(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<struct FListOfMutualInclusionsUpgrades>             MutualInclusionsUpgrades;                                // 0x1C60(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      IntegratedUpgrades;                                      // 0x1C70(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanAttach;                                              // 0x1C80(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S1UK[0x7];                                   // 0x1C81(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AttachUsing;                                             // 0x1C88(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemWeapon*                                         AttachedParent;                                          // 0x1C90(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMuzzleAttachment;                                    // 0x1C98(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMuzzleComponentAttached;                                // 0x1C99(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9SO0[0x2];                                   // 0x1C9A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptDelegate                                      OverrideShotOrigin;                                      // 0x1C9C(0x0010) Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FScriptDelegate                                      OverrideShotDirection;                                   // 0x1CAC(0x0010) Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y0IZ[0x4];                                   // 0x1CBC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      AcceptedAmmo;                                            // 0x1CC0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisposableWeapon;                                       // 0x1CD0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LZRY[0x7];                                   // 0x1CD1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DefaultAmmoContainer;                                    // 0x1CD8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoundCapacity;                                           // 0x1CE0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSinglyLoaded;                                           // 0x1CE4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSinglyLoadedOnEmpty;                                    // 0x1CE5(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpeedReloadUsesMagazineReloads;                         // 0x1CE6(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDumpAmmoOnReload;                                       // 0x1CE7(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClosedBolt;                                             // 0x1CE8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBeltFed;                                                // 0x1CE9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInfiniteAmmo;                                           // 0x1CEA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveOnEmpty;                                          // 0x1CEB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P9QQ[0x4];                                   // 0x1CEC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              LoadedAmmoContainer;                                     // 0x1CF0(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                          CachedMaterials;                                         // 0x1CF8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XY9K[0x10];                                  // 0x1D08(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              PendingAmmoContainer;                                    // 0x1D18(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              VisibleAmmoContainer[0x28];                              // 0x1D20(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class UINSSkeletalMeshComponent*                           AmmoMesh1P;                                              // 0x1D48(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSSkeletalMeshComponent*                           AmmoMesh3P;                                              // 0x1D50(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DefaultAmmoType;                                         // 0x1D58(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              LoadedAmmoType;                                          // 0x1D60(0x0008) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LoadedAmmo;                                              // 0x1D68(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SimulatedLoadedAmmo;                                     // 0x1D6C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7VG6[0x2];                                   // 0x1D70(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bChamberedRound;                                         // 0x1D72(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSimulatedChamberedRound;                                // 0x1D73(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowMelee;                                             // 0x1D74(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowMeleeProne;                                        // 0x1D75(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_98GQ[0x2];                                   // 0x1D76(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMeleeConfig                                        GenericMeleeConfig;                                      // 0x1D78(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bInGenericMeleeAttack;                                   // 0x1DB8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XRRU[0x3];                                   // 0x1DB9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GenericMeleeAttackRemainingTime;                         // 0x1DBC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBash;                                                 // 0x1DC0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3M4N[0x7];                                   // 0x1DC1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_GenericMeleeAttackDelay;                     // 0x1DC8(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPrimitiveComponent*>                         GenericMeleeAffectedComponents;                          // 0x1DD0(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGenericMeleeAttackDelegate;                            // 0x1DE0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      NextGenericMeleeAttack;                                  // 0x1DF0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveOnDeath;                                          // 0x1DF4(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3KA3[0x3];                                   // 0x1DF5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                BarrelSocketName;                                        // 0x1DF8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSingleHanded;                                           // 0x1E00(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDriverWield;                                         // 0x1E01(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreRestrictedAreaGraceTime;                          // 0x1E02(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMountedShootVectorsUseLocation;                         // 0x1E03(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFromFireSupport;                                        // 0x1E04(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I51W[0x3];                                   // 0x1E05(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     MountedComponent;                                        // 0x1E08(0x0008) ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UUGW[0x8];                                   // 0x1E10(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bMeleeCharging;                                          // 0x1E18(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VGGZ[0x7];                                   // 0x1E19(0x0007) MISSED OFFSET (PADDING)

	public:
		void WeaponUpgradeRemovedDelegate__DelegateSignature(class UWeaponUpgradeComponent* Upgrade);
		void WeaponUpgradeInstalledDelegate__DelegateSignature(class UWeaponUpgradeComponent* Upgrade);
		bool UsesReloadSequences();
		bool UsesMagazineReloads();
		void UpdateVisibleAmmoContainerToDefault(bool bForceFirstPerson);
		void UpdateVisibleAmmoContainerForMeshes(class UClass* NewContainer, class USkeletalMeshComponent* ParentMesh1P, bool bForce1P, class USkeletalMeshComponent* ParentMesh3P, bool bForce3P);
		void UpdateVisibleAmmoContainerForMesh(class UClass* NewContainer, class USkeletalMeshComponent* ParentMesh, bool bFirstPerson, bool bForce);
		void UpdateVisibleAmmoContainer(class UClass* NewContainer, bool bForceFirstPerson, bool bForceThirdPerson);
		void UpdateUpgradeFallbackThirdPersonMeshes();
		void UpdateUpgradeFallbackFirstPersonMeshes(class USkeletalMeshComponent* ParentSkeletalMesh);
		class FName UpdateSocketName(const class FName& ParentSocket);
		void UpdateLoadedAmmo(int32_t NewLoadedAmmo);
		class UWeaponUpgradeComponent* SpawnWeaponUpgrade(class UClass* UpgradeClass);
		bool ShouldRemoveOnUnequip();
		void SetChamberedRound(bool bNewChamberedRound);
		void ServerInformGenericMeleeHit(const struct FHitResult& Hit);
		void ServerDoGenericMeleeAttack();
		void ServerCheckEmpty();
		void Server_OnMeleeChargeEnd();
		void Server_OnMeleeChargeBegin();
		void RemoveFirstPersonUpgradeMeshes();
		void RemoveFirstPersonAttachedMeshes();
		void ReloadLoadAmmo();
		void PullBolt();
		class UClass* PeekPendingAmmoContainer();
		void OnRep_PendingAmmoContainer();
		void OnRep_MountedComponent();
		void OnRep_MeleeCharging();
		void OnRep_LoadedAmmoContainer();
		void OnRep_LoadedAmmo();
		void OnRep_ChamberedRound();
		void OnRep_AttachedParent();
		void OnGenericMeleeAttackDelegate__DelegateSignature(bool bBash);
		void OnAmmoUpdated();
		bool NeedsBoltPull();
		void MountWeaponOnComponent(class USceneComponent* Component, const class FName& SocketName);
		int32_t MagazineCapacity();
		void LoadAmmo();
		bool IsWeaponHasMutualInclusionsUpgrades();
		bool IsWeaponFull();
		bool IsWeaponAttachedTo(class AItemWeapon* Other);
		bool IsValidLoadedAmmo();
		bool IsSingleReload();
		bool IsOpenBolt();
		bool IsMounted();
		bool IsAttackRestricted();
		bool IsAttached();
		bool IsAtLargestMagazine();
		bool IsAmmoContainerSupported(class UClass* AmmoType);
		void InteractUpgradeSlot(EWeaponUpgradeSlot Slot);
		bool InGenericMeleeAttack();
		void IncrementLoadedAmmo(int32_t AddedAmmo);
		bool HasVisibleMagazine();
		bool HasUpgradeWithTag(const class FName& Tag);
		bool HasUpgradeInSlot(EWeaponUpgradeSlot Slot);
		bool HasRoundInChamber();
		bool HasMovableUpgrade();
		bool HasLoadedAmmo();
		bool HasAttachedMagazine();
		void GiveDefaultAmmo();
		class UWeaponUpgradeComponent* GetUpgradeInSlot(EWeaponUpgradeSlot Slot);
		int32_t GetReserveAmmo();
		class UAmmoContainer* GetPendingAmmoContainer();
		int32_t GetNextMagazineSize();
		void GetMutualInclusionsUpgrades(class UClass* Upgrade);
		class UWeaponUpgradeComponent* GetMovableUpgrade();
		class USceneComponent* GetMountedComponent();
		class UAmmoType* GetLoadedAmmoType();
		float GetLoadedAmmoFrac();
		class UAmmoContainer* GetLoadedAmmoContainer();
		int32_t GetLoadedAmmo();
		int32_t GetLargestMagazine();
		int32_t GetEquippedUpgradeSlotsMask();
		class UClass* GetDefaultAmmoType();
		class UClass* GetDefaultAmmoContainerType();
		int32_t GetCompatibleAmmo(TArray<struct FStoredAmmo> Ammo);
		void GenericMeleeAttack();
		void EquipMountedWeapon(class AINSCharacter* Character);
		void DoGenericMeleeAttack();
		void DestroyVisibleAmmoContainerMesh(bool bFirstPerson);
		void DecrementAmmo(int32_t Amount);
		bool ConsumesAmmo();
		void CheckEmpty();
		void ChamberRound();
		bool CanGenericMeleeAttack();
		void CalcShotOriginDelegate__DelegateSignature(struct FVector* OutShotOrigin);
		void CalcShotDirectionDelegate__DelegateSignature(struct FVector* OutShotDirection);
		void CalcShootVectors(struct FVector* OutShootPosition, struct FVector* OutShootDirection);
		void CalcShootOffset(struct FVector* Location, struct FRotator* Rotation);
		void BroadcastGenericMeleeHit(const struct FHitResult& Hit);
		void BroadcastDoGenericMeleeAttack();
		void BlueprintOnUpdateVisibleAmmoContainer(bool bVisible);
		void BeginGenericMeleeAttack();
		void AddChildMesh(struct FWeaponAttachedModel* AttachedModel, class USkeletalMeshComponent* ParentMeshComponent, bool bIsFirstPerson);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemAimableWeapon
	 * Size -> 0x01F0 (FullSize[0x2010] - InheritedSize[0x1E20])
	 */
	class AItemAimableWeapon : public AItemWeapon
	{
	public:
		bool                                                       bAllowEnterPointShootMode;                               // 0x1E20(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAimingDownSights;                                       // 0x1E21(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bQueuedAimingDownSights;                                 // 0x1E22(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasScope;                                               // 0x1E23(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasOptic;                                               // 0x1E24(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowAimDownSights;                                     // 0x1E25(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EY14[0x2];                                   // 0x1E26(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AimDownSightsTime;                                       // 0x1E28(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimDownSightsFOV;                                        // 0x1E2C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAimDownSightsFOVAbsolute;                               // 0x1E30(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSmoothAimDownSightsFOV;                                 // 0x1E31(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideMeshFullyZoomed;                                    // 0x1E32(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YE5P[0x1];                                   // 0x1E33(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AimDownSightsViewModelFOV;                               // 0x1E34(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimDownSightsViewModelFocusFOV;                          // 0x1E38(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimDownSightsViewModelDistance;                          // 0x1E3C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimDownSightsViewModelAngle;                             // 0x1E40(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseParentSight;                                         // 0x1E44(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2BSW[0x1B];                                  // 0x1E45(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              EnterADSThirdPerson[0x28];                               // 0x1E60(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ExitADSThirdPerson[0x28];                                // 0x1E88(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              EnterADSFirstPerson[0x28];                               // 0x1EB0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ExitADSFirstPerson[0x28];                                // 0x1ED8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FRuntimeFloatCurve                                  AimDownSightsSpeedByWeight;                              // 0x1F00(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  SprintAimDownSightsSpeedByWeight;                        // 0x1F88(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic

	public:
		void ToggleSights();
		bool ShouldEnterPointShootMode();
		void SetSights(bool bNewAimingDownSights, bool bFromReplication);
		void ServerSetSights(bool bNewAimingDownSights);
		void OnRep_AimingDownSights();
		bool IsRaisingOrLoweringSights();
		bool IsFullySighted();
		bool IsAimingDownSights();
		bool IsAimingDownScope();
		float GetZoomProgress();
		float GetCachedSightsFraction();
		void ExitSights();
		void EnterSights();
		bool CanAimDownSights();
		float CalcSightsFraction();
		void BlueprintOnToggleSights(bool bNewAimingDownSights, bool bFromReplication);
		bool AllowSightsChange();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemPickup
	 * Size -> 0x0128 (FullSize[0x0348] - InheritedSize[0x0220])
	 */
	class AItemPickup : public AActor
	{
	public:
		unsigned char                                              UnknownData_S2LI[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSAudioComponent*                                  AkComponent;                                             // 0x0230(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_EnablePickup;                                // 0x0238(0x0008) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USkeletalMesh*                                       SkeletalMesh3P;                                          // 0x0240(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         StaticMesh3P;                                            // 0x0248(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsePhysics;                                             // 0x0250(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPickupType                                                ItemPickupType;                                          // 0x0251(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisabled;                                               // 0x0252(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartDisabled;                                          // 0x0253(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickupDisableTimer;                                      // 0x0254(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGiveAmmoOnPickup;                                       // 0x0258(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGiveMaxAmmo;                                            // 0x0259(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDestroyOldWeaponOnPickup;                               // 0x025A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemSlot                                                  ItemEquipmentSlot;                                       // 0x025B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OT6O[0x4];                                   // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnPickedupDelegate;                                      // 0x0260(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnClearAmmoDelegate;                                     // 0x0270(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              LinkedObjective[0x28];                                   // 0x0280(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_CH36[0x8];                                   // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSSkeletalMeshComponent*                           Mesh3P;                                                  // 0x02B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                StaticMesh3PComponent;                                   // 0x02B8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShadowDisabled;                                         // 0x02C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bReplicateItemClass;                                     // 0x02C1(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RYOK[0x6];                                   // 0x02C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ItemClass;                                               // 0x02C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      Upgrades;                                                // 0x02D0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_ResetItemClassNextFrame;                     // 0x02E0(0x0008) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                DefaultUseText;                                          // 0x02E8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          DefaultUseImage;                                         // 0x0300(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          TacticalMapImage;                                        // 0x0308(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       PickupEvent;                                             // 0x0310(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UINSSkeletalMeshComponent*>                   Attachments;                                             // 0x0318(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAddtoGameStateItemPickupCache;                          // 0x0328(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayOnTacticalMap;                                   // 0x0329(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R3NW[0x1E];                                  // 0x032A(0x001E) MISSED OFFSET (PADDING)

	public:
		void ResetPickup();
		void OnSetItemClass();
		void OnRep_Upgrades();
		void OnRep_ItemClass();
		void OnRep_Disabled();
		void OnPickupEnabledOrDisabled(bool bNewIsDisabled);
		void OnLinkedObjectiveActivated(bool bNewState, class AObjectiveBase* Objective);
		void OnItemClassChanged();
		void Multicast_SetDisabled(bool IsDisabled);
		void Multicast_PlayPickupEvent();
		void ItemPickupDelegate__DelegateSignature(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier);
		bool IsPickupDisabled();
		void EnablePickup();
		void DisablePickup(float PickupTimer);
		void ClearAmmoDelegate__DelegateSignature(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemAmmoPickup
	 * Size -> 0x0050 (FullSize[0x0398] - InheritedSize[0x0348])
	 */
	class AItemAmmoPickup : public AItemPickup
	{
	public:
		TMap<EFirearmCategory, int32_t>                            AmmoToGiveForCategory;                                   // 0x0348(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemGear
	 * Size -> 0x0040 (FullSize[0x0C38] - InheritedSize[0x0BF8])
	 */
	class AItemGear : public AItemBase
	{
	public:
		bool                                                       bStayAttached;                                           // 0x0BF8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KHUK[0x7];                                   // 0x0BF9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      ProtectedDamageTypes;                                    // 0x0C00(0x0010) Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterCosmeticAttachedModel>             AttachmentSubmodels;                                     // 0x0C10(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UINSSkeletalMeshComponent*>                   AttachmentMeshComponents;                                // 0x0C20(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemGearLevel                                             GearLevel;                                               // 0x0C30(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6CT4[0x7];                                   // 0x0C31(0x0007) MISSED OFFSET (PADDING)

	public:
		bool ShouldSpawnAttachmentMesh(const class FName& AttachmentSocket);
		void Interact();
		void BlueprintOnTransferToRagdoll(class ARagdoll* Ragdoll);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemAmmoVest
	 * Size -> 0x0180 (FullSize[0x0DB8] - InheritedSize[0x0C38])
	 */
	class AItemAmmoVest : public AItemGear
	{
	public:
		TMap<EItemSlot, int32_t>                                   AdditionalEquipmentSlots;                                // 0x0C38(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              AdditionalAmmoByAmmoContainer[0x50];                     // 0x0C88(0x0050) UNKNOWN PROPERTY: MapProperty
		TMap<EItemSlot, float>                                     AdditionalAmmoByWeight;                                  // 0x0CD8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<EFirearmCategory, struct FAmmoVestExtraAmmo>          AdditionalAmmoByFirearmCategory;                         // 0x0D28(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bRanInitialChecks;                                       // 0x0D78(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VXA4[0x7];                                   // 0x0D79(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSSoldier*                                         INSSoldier;                                              // 0x0D80(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AProfileCharacter*                                   ProfileCharacter;                                        // 0x0D88(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Faction;                                                 // 0x0D90(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFemale;                                               // 0x0D98(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GEGK[0x7];                                   // 0x0D99(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCosmeticItem*                                       BackPackCosmetic;                                        // 0x0DA0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCosmeticItem*                                       CarrierCosmetic;                                         // 0x0DA8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemGearLevel                                             CurrentArmourLevel;                                      // 0x0DB0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F8E8[0x7];                                   // 0x0DB1(0x0007) MISSED OFFSET (PADDING)

	public:
		void UpdatePreviewVisuals(bool bPreviewFemale, EItemGearLevel PreviewArmorLevel);
		void UpdateEquipmentVisualsInternal(bool bForce, bool bProfile, class UInventoryComponent* Inventory, bool bDontRunOnProfile);
		void UpdateEquipmentVisuals(bool bForce, bool bProfile, class UInventoryComponent* Inventory);
		void UpdateEquipmentChangeInterface();
		void SetCarrierCosmetic(class UCosmeticItem* NewCarrierCosmetic);
		void SetCarrierArmourCombination(EItemGearLevel Item);
		void SetBackpackCosmetic(class UCosmeticItem* NewBackPackCosmetic);
		void OnUpdateCosmeticMeshesMorphs(bool bProfile);
		void OnUpdateCharacterAnimInstance(bool bProfile);
		void OnSettingsChanged();
		void OnMeshLoaded(class UINSSkeletalMeshComponent* INSSkeletalMeshComponent);
		void OnMergedMesh();
		void OnExitVehicle(class UVehicleSeatComponent* VehicleSeat);
		void OnEnteredVehicle(class UVehicleSeatComponent* VehicleSeat);
		void OnAttachMeshToPawn(class UINSSkeletalMeshComponent* Mesh);
		void GetSkeletalMesh3P(EItemGearLevel Item);
		EItemGearLevel GetCurrentArmourLevel();
		int32_t GetAdditionalAmmoForWeapon(class AItemWeapon* Weapon);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemArmor
	 * Size -> 0x0178 (FullSize[0x0DB0] - InheritedSize[0x0C38])
	 */
	class AItemArmor : public AItemGear
	{
	public:
		class UPhysicsAsset*                                       PhysicsAssetOverride;                                    // 0x0C38(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  ImpactSpeedLossByPenetrationPower;                       // 0x0C40(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      ImpactSpeedLossModifier;                                 // 0x0CC8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8VNP[0x4];                                   // 0x0CCC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  RoundSpeedModifierByPenetrationPower;                    // 0x0CD0(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      DamageModifier;                                          // 0x0D58(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FOS0[0x4];                                   // 0x0D5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UClass*, float>                                 DamageTypeModifier;                                      // 0x0D60(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemBinocular
	 * Size -> 0x02B8 (FullSize[0x22C8] - InheritedSize[0x2010])
	 */
	class AItemBinocular : public AItemAimableWeapon
	{
	public:
		unsigned char                                              UnknownData_MN6J[0x18];                                  // 0x2010(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                  PostProcessMaterial;                                     // 0x2028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            SpawnedIndicatorParticle;                                // 0x2030(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     CooldownParticleSystem;                                  // 0x2038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCharacterAnimMisc                                  ThirdPersonMiscAnimsNative;                              // 0x2040(0x0268) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      AimReleaseTime;                                          // 0x22A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6HRJ[0x1C];                                  // 0x22AC(0x001C) MISSED OFFSET (PADDING)

	public:
		float GetAimRotationOffset();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemDetonator
	 * Size -> 0x02A8 (FullSize[0x1D68] - InheritedSize[0x1AC0])
	 */
	class AItemDetonator : public AItemEquipable
	{
	public:
		float                                                      DetonatorTime;                                           // 0x1AC0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B5TY[0x4];                                   // 0x1AC4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_DetonatorAutoSwitch;                         // 0x1AC8(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDetonatorUsedDelegate;                                 // 0x1AD0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              PlantedExplosives;                                       // 0x1AE0(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MAHR[0x7];                                   // 0x1AE1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AProjectileBase*>                             Grenades;                                                // 0x1AE8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AObjectiveDestructible*                              LinkedDestructible;                                      // 0x1AF8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCharacterAnimMisc                                  ThirdPersonMiscAnimsNative;                              // 0x1B00(0x0268) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic

	public:
		void ServerDetonate();
		void OnDetonatorUsedDelegate__DelegateSignature();
		void MulticastDetonate();
		void CheckDetonated();
		void BlueprintOnDetonated();
		void AddGrenade(class AProjectileBase* Projectile);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemFirearm
	 * Size -> 0x23C0 (FullSize[0x43D0] - InheritedSize[0x2010])
	 */
	class AItemFirearm : public AItemAimableWeapon
	{
	public:
		struct FFirearmAnimsGroup                                  FirstPersonFirearmAnims;                                 // 0x2010(0x0E70) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FCharacterAnimFirearm                               ThirdPersonFirearmAnimsNative;                           // 0x2E80(0x0598) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TDBH[0x8];                                   // 0x3418(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCachedFirearmAnimationData                         CachedFirearmAnimationData;                              // 0x3420(0x0100) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		EFirearmBoltState                                          BoltState;                                               // 0x3520(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFirearmBoltState                                          SimulatedBoltState;                                      // 0x3521(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LPIZ[0x2];                                   // 0x3522(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CachedBoltFinishTime;                                    // 0x3524(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CachedBoltCycledTime;                                    // 0x3528(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JEMV[0x4];                                   // 0x352C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UForceFeedbackEffect*                                ForceFeedbackShot;                                       // 0x3530(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoLockOnTraceDistance;                                 // 0x3538(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConsecutiveShots;                                        // 0x353C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFirearmCategory                                           FirearmCategory;                                         // 0x3540(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GIJ4[0x7];                                   // 0x3541(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFirearmConfig                                      WeaponConfig;                                            // 0x3548(0x0788) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K8FV[0xC];                                   // 0x3CD0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bTriggerPullPending;                                     // 0x3CDC(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_446B[0x3];                                   // 0x3CDD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BarrelLengthObstruction;                                 // 0x3CE0(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastBarrelLengthObstructionCheckTime;                    // 0x3CE4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBarrelObstructedByPawn;                                 // 0x3CE8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6RR3[0x7];                                   // 0x3CE9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            SimulatedLoadedAmmoSubContainers;                        // 0x3CF0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            LoadedAmmoSubContainers;                                 // 0x3D00(0x0010) BlueprintVisible, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentMagazine;                                         // 0x3D10(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6N41[0x1];                                   // 0x3D14(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bQueuedReload;                                           // 0x3D15(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F2VR[0x2];                                   // 0x3D16(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      QueuedReloadTime;                                        // 0x3D18(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeHeldToStartAmmoCheck;                                // 0x3D1C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    ActiveAmmoParticleIndex;                                 // 0x3D20(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    ActiveAmmoContainerParticleIndex;                        // 0x3D24(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UParticleSystemComponent*>                    SpawnedBrasses;                                          // 0x3D28(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UParticleSystemComponent*>                    SpawnedShotEjectionBrass;                                // 0x3D38(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystemComponent*                            FlashParticle;                                           // 0x3D48(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystemComponent*                            ShellParticle;                                           // 0x3D50(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    MaxSpawnBrassCount;                                      // 0x3D58(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B4K9[0x4];                                   // 0x3D5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     BrassParticle;                                           // 0x3D60(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     EjectionBrassParticle;                                   // 0x3D68(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UParticleSystem*>                             BrassParticlesSystem;                                    // 0x3D70(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UParticleSystem*>                             EjectionBrassParticleParticlesSystem;                    // 0x3D80(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UParticleSystemComponent>             MuzzleSmoke;                                             // 0x3D90(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MuzzleSmokeEffect[0x28];                                 // 0x3D98(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      MuzzleSmokeStartTime;                                    // 0x3DC0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MuzzleSmokeTimeLeft;                                     // 0x3DC4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MuzzleSmokeFadeInTime;                                   // 0x3DC8(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MuzzleSmokeMinDuration;                                  // 0x3DCC(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MuzzleSmokeMaxDuration;                                  // 0x3DD0(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MuzzleSmokeTimeIncrementPerShot;                         // 0x3DD4(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MuzzleSmokeFadeParameterName;                            // 0x3DD8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MuzzleFlashEffects[0x10];                                // 0x3DE0(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              MuzzleFlashEffectsTP[0x10];                              // 0x3DF0(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              NightMuzzleFlashEffects[0x10];                           // 0x3E00(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              NightMuzzleFlashEffectsTP[0x10];                         // 0x3E10(0x0010) UNKNOWN PROPERTY: ArrayProperty
		class FName                                                MuzzleSocketName;                                        // 0x3E20(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MagazineSocketName;                                      // 0x3E28(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    DustKickupSurfaceReaction;                               // 0x3E30(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOwnerKilledWhileReloading;                              // 0x3E38(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OSYR[0x3];                                   // 0x3E39(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptDelegate                                      AllowFireDelegate;                                       // 0x3E3C(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FScriptDelegate                                      AllowNextShotDelegate;                                   // 0x3E4C(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SS7A[0x4];                                   // 0x3E5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnFireDelegate;                                          // 0x3E60(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDryFireDelegate;                                       // 0x3E70(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFireStartDelegate;                                     // 0x3E80(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFireStopDelegate;                                      // 0x3E90(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCycleFiremodeDelegate;                                 // 0x3EA0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnReloadDelegate;                                        // 0x3EB0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnReloadAfterSwitchMagazineDelegate;                     // 0x3EC0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSwitchMagazineDelegate;                                // 0x3ED0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSwitchMagazineInterruptDelegate;                       // 0x3EE0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSpeedReloadDelegate;                                   // 0x3EF0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnReloadInterruptDelegate;                               // 0x3F00(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnReloadBeginFinishDelegate;                             // 0x3F10(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnBoltCycleDelegate;                                     // 0x3F20(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMagOutDelegate;                                        // 0x3F30(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMagInDelegate;                                         // 0x3F40(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnAmmoCheckDelegate;                                     // 0x3F50(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      SprayAmount;                                             // 0x3F60(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprayAmountIncrement;                                    // 0x3F64(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprayAmountCooldown;                                     // 0x3F68(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFireEnabled;                                            // 0x3F6C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EFirearmFiremode                                           CycleStartFireMode;                                      // 0x3F6D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EFirearmFiremode                                           CurrentFireMode;                                         // 0x3F6E(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FJLW[0x1];                                   // 0x3F6F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FiremodeBurstRemainder;                                  // 0x3F70(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    LastBurstSize;                                           // 0x3F74(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FireStartTime;                                           // 0x3F78(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastFireTime;                                            // 0x3F7C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bWaitingForDelayedProjectile;                            // 0x3F80(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PDS7[0x3];                                   // 0x3F81(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastFiremodeCycleTime;                                   // 0x3F84(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPullingTrigger;                                         // 0x3F88(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPendingFire;                                            // 0x3F89(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_CC6F[0x2];                                   // 0x3F8A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RefireTime;                                              // 0x3F8C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireAnimationEndTime;                                    // 0x3F90(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInInitialDelay;                                         // 0x3F94(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A00N[0x1B];                                  // 0x3F95(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              AkEventFire[0x28];                                       // 0x3FB0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventFire1P[0x28];                                     // 0x3FD8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventFire3P[0x28];                                     // 0x4000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventFireStart[0x28];                                  // 0x4028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventFireStart1P[0x28];                                // 0x4050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventFireStart3P[0x28];                                // 0x4078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventTriggerPull[0x28];                                // 0x40A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventTriggerPull1P[0x28];                              // 0x40C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventTriggerPull3P[0x28];                              // 0x40F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventFireEnd[0x28];                                    // 0x4118(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventFireEnd1P[0x28];                                  // 0x4140(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventFirstEnd3P[0x28];                                 // 0x4168(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bPlayEjectAfterFiringLast;                               // 0x4190(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_STFP[0x3];                                   // 0x4191(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayEjectAfterFiringLastDelay;                           // 0x4194(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AkEventEjectLast1P[0x28];                                // 0x4198(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AkEventEjectLast3P[0x28];                                // 0x41C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FTimerHandle                                        TimerHandle_DelayedFiringAudio;                          // 0x41E8(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayRocketAlertOnFire;                                  // 0x41F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstShotTapEvent;                                      // 0x41F1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSpeedOfSoundWhenFiring;                              // 0x41F2(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayingLoopingAudio;                                    // 0x41F3(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayingLoopingAudio1P;                                  // 0x41F4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayingLoopingAudio3P;                                  // 0x41F5(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JK5L[0x2];                                   // 0x41F6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LastStartFireTimeSeconds;                                // 0x41F8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastStartFireTimeFrac;                                   // 0x41FC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasPlayedTriggerHoldYell;                               // 0x4200(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CT69[0x7];                                   // 0x4201(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ShellEjectParticle[0x28];                                // 0x4208(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                ShellEjectSocketName;                                    // 0x4230(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bManualShellEject;                                       // 0x4238(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowFocusWhileMoving;                                  // 0x4239(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFirearmState                                              FirearmState;                                            // 0x423A(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFirearmState                                              SimulatedFirearmState;                                   // 0x423B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPendingReload;                                          // 0x423C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3N6A[0x3];                                   // 0x423D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PendingReloadTimeout;                                    // 0x4240(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ReloadStartTime;                                         // 0x4244(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ReloadPressedTime;                                       // 0x4248(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPendingAmmoUpdate;                                      // 0x424C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPendingAmmoEject;                                       // 0x424D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_I6PQ[0x2];                                   // 0x424E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CachedReloadFinishTime;                                  // 0x4250(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CachedSwitchMagazineFinishTime;                          // 0x4254(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CachedReloadEjectTime;                                   // 0x4258(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CachedReloadInsertTime;                                  // 0x425C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CachedReloadChamberTime;                                 // 0x4260(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastReloadInterruptTime;                                 // 0x4264(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AmmoCheckFinishTime;                                     // 0x4268(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bStartedAmmoCheck;                                       // 0x426C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_H0VU[0x3];                                   // 0x426D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FReloadTimesGroup                                   DefaultReloadTimes;                                      // 0x4270(0x00E0) Edit, BlueprintVisible, DisableEditOnInstance, EditConst, NoDestructor, NativeAccessSpecifierPublic
		TMap<class UClass*, struct FReloadTimesGroup>              ReloadTimesByContainer;                                  // 0x4350(0x0050) Edit, BlueprintVisible, DisableEditOnInstance, EditConst, NativeAccessSpecifierPublic
		float                                                      EquipRoundChamberDuration;                               // 0x43A0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EquipRoundChamberTime;                                   // 0x43A4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastSpeedReloadFinishTime;                               // 0x43A8(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBipodTimesGroup                                    CachedBipodTimes;                                        // 0x43AC(0x0010) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		float                                                      VaultingRecoilPenalty;                                   // 0x43BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PendingEjectedContainer;                                 // 0x43C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7UNP[0x8];                                   // 0x43C8(0x0008) MISSED OFFSET (PADDING)

	public:
		bool SupportsSpeedReload();
		void StartReload(bool bReloadIfFull, bool bFromClientReplication);
		void StartAmmoCheck(bool bFromClientReplication);
		bool ShouldSingleReload();
		bool ShouldFireTracerRound();
		bool ShouldDryReload();
		void SetFiremode(EFirearmFiremode NewFiremode);
		void SetFireEnabled(bool bNewFireEnabled);
		void SetBoltState(EFirearmBoltState NewBoltState);
		void ServerStartSwitchMagazine(ESwitchingMagazineState SwitchMagazineStateForSave);
		void ServerStartSpeedReload();
		void ServerStartReload();
		void ServerStartAmmoCheck();
		void ServerSetFiringState(bool bNewIsFiring);
		void ServerInterruptSwitchMagazine();
		void ServerInterruptReload();
		void ServerFireWeapon(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& Direction, int32_t RandomSeed, float Timestamp, int32_t ClientBulletId);
		void ServerFinishSwitchMagazine(ESwitchingMagazineState SwitchMagazineStateForSave);
		void ServerDryFire();
		void ServerDelayedFireProjectile(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& ShootDir, int32_t RandomSeed, float ClientTimestamp, int32_t ClientBulletId);
		void ServerCycleFiremode(EFirearmFiremode Firemode);
		void ServerBeginBoltCycle();
		bool ReleaseTrigger();
		bool PullTrigger();
		void PlayEjectAfterFiringLast();
		void OnSwitchMagazineInterruptDelegate__DelegateSignature(float AnimationInterruptTime);
		void OnSwitchMagazineDelegate__DelegateSignature(float RateMultiplier, bool bDryReload);
		void OnSpeedReloadDelegate__DelegateSignature(bool bDryReload, float RateMultiplier);
		void OnRep_FirearmState();
		void OnRep_BoltState();
		void OnReloadInterruptDelegate__DelegateSignature();
		void OnReloadDelegate__DelegateSignature(bool bDryReload, bool bSingleReload, float RateMultiplier);
		void OnReloadAfterSwitchMagazineDelegate__DelegateSignature(bool bDryReload, bool bSingleReload, float RateMultiplier);
		void OnMagOutDelegate__DelegateSignature();
		void OnMagInDelegate__DelegateSignature();
		void OnFireStopDelegate__DelegateSignature();
		void OnFireStop();
		void OnFireStartDelegate__DelegateSignature();
		void OnFireStart();
		void OnFireDelegate__DelegateSignature(const struct FVector& FireOrigin, const struct FVector& FireDirection);
		void OnFire(const struct FVector& Origin, const struct FVector& ShootDir, bool bFromReplication);
		void OnFindParticleSystemForAmmoTypeStaticMesh(bool bIsAmmoContainer);
		void OnDryFireDelegate__DelegateSignature();
		void OnCycleFiremodeDelegate__DelegateSignature(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
		void OnBoltCycleDelegate__DelegateSignature();
		void OnBeginFinishReloadDelegate__DelegateSignature(bool bFromSinglyLoaded);
		void OnAmmoCheckDelegate__DelegateSignature();
		void NetMulticastStartAmmoCheck();
		void MulticastFireWeapon(const struct FVector& Origin, const struct FVector& Direction, int32_t RandomSeed);
		void MulticastFireProjectile(const struct FVector& Origin, const struct FVector_NetQuantizeNormal& ShootDir, int32_t RandomSeed);
		void MulticastDryFire();
		void Multicast_PlayEjectAfterFiringLast();
		bool IsWaitingToFire();
		bool IsTacticalReload();
		bool IsSwitchingMagazineGenus();
		bool IsSwitchingMagazine();
		bool IsSuspendedSwitchingMagazine();
		bool IsSuspendedReloadSwitchingMagazine();
		bool IsSuspendedManualSwitchingMagazine();
		bool IsSuspendedInvalidSwitchingMagazine();
		bool IsSuspendedFireSwitchingMagazine();
		bool IsSpeedReloading();
		bool IsReloadingOrFinishingReload();
		bool IsReloadingInsertLoop();
		bool IsReloading();
		bool IsPullingTrigger();
		bool IsPlayerControlled();
		bool IsNeedSwitchMagazineState();
		bool IsManualAction();
		bool IsLocallyControlled();
		bool IsInStandardReload();
		bool IsInSingleReload();
		bool IsInMagazineStyleReload();
		bool IsInInterruptableState();
		bool IsInFiringAnimation();
		bool IsIdle();
		bool IsFocusing();
		bool IsFiring();
		bool IsFireEnabled();
		bool IsFinishingReload();
		bool IsDryReload();
		bool IsCyclingBolt();
		bool IsCheckingAmmo();
		bool IsChangingFiremode();
		bool IsBoltReady();
		bool IsBarrelObstructed();
		bool IsBarrelAtLeastPartiallyObstructed();
		bool HasMultipleFiremodes();
		bool HasFiremode(EFirearmFiremode Firemode);
		bool HasBipodDeployed();
		struct FReloadTimes GetReloadTimesForState(EFirearmState ReloadState);
		struct FReloadTimesGroup GetReloadTimesForContainer(class UClass* ContainerType);
		float GetRecoilRestRate(int32_t ShotCount);
		float GetProjectileSpread();
		void GetMuzzleSocketFromMesh(class USkeletalMeshComponent* Component, struct FVector* OutShootPosition, struct FVector* OutShootDirection);
		class USkeletalMeshComponent* GetMuzzleMesh(bool bForceFirstPerson);
		void GetMuzzle(struct FVector* OutShootPosition, struct FVector* OutShootDirection, bool bFirstPerson);
		TArray<int32_t> GetLoadedAmmoSubContainers();
		int32_t GetLoadedAmmoSubContainer(int32_t ContainerIndex);
		float GetLastFireTime();
		bool GetFreeaimMuzzle(struct FVector* OutShootPosition, struct FVector* OutShootDirection);
		void GetFirstPersonMuzzle(struct FVector* OutShootPosition, struct FVector* OutShootDirection);
		int32_t GetFiremodeCount();
		EFirearmFiremode GetFiremode();
		EFirearmState GetFirearmState();
		class USkeletalMeshComponent* GetEffectTargetMesh(bool bForceFirstPerson);
		struct FReloadTimes GetContainerReloadTimesForState(class UClass* ContainerType, EFirearmState ReloadState);
		EFirearmBoltState GetBoltState();
		class UWeaponBipodComponent* GetBipod();
		class UClass* GetAmmoContainerForReloadStart();
		void ForceStopFire();
		void ForceChangeFiremode(EFirearmFiremode Firemode);
		void FireWeapon();
		void FireProjectile(const struct FVector& Origin, const struct FVector& ShootDir, int32_t RandomSeed, float ClientTimestamp, int32_t ClientBulletId, bool bClientReplication);
		void FinishBoltCycle();
		void ExecuteSwitchMagazine();
		bool DoesBoltNeedCycling();
		void CreateRecoil();
		void ClientStartSwitchMagazine(ESwitchingMagazineState SwitchMagazineStateForSave);
		void ClientLoadMagAmmo();
		void ClientInterruptSwitchMagazine();
		void ClientInterruptReload();
		void ClientFinishSwitchMagazine(ESwitchingMagazineState SwitchMagazineStateForSave);
		void ClientFinishReloading();
		bool CanSwitchMagazine();
		bool CanStartFire();
		bool CanInterruptFire();
		bool CanFire();
		bool CanContinueFiring();
		void CancelBoltCycle();
		float CalcRecoilModifier();
		void BroadcastFiremodeChange(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
		void BlueprintOnSwitchMagazineInterrupt(float AnimationInterruptTime);
		void BlueprintOnSwitchMagazine();
		void BlueprintOnSpeedReload();
		void BlueprintOnReloadInterrupted();
		void BlueprintOnReloaded();
		void BlueprintOnReloadAfterSwitchMagazine();
		void BlueprintOnReload();
		void BlueprintOnFireStopping();
		void BlueprintOnFireStop();
		void BlueprintOnFireStart();
		void BlueprintOnFire(const struct FVector& Origin, const struct FVector& Direction);
		void BlueprintOnDryFire();
		void BlueprintOnCycleFiremode(EFirearmFiremode OldFiremode, EFirearmFiremode NewFiremode);
		void BlueprintOnBoltCycle();
		void BeginBoltCycle(bool bFromReplication);
		bool AllowNextShotDelegate__DelegateSignature();
		bool AllowNextShot();
		bool AllowFireDelegate__DelegateSignature();
		bool AllowFire();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemInteractableGear
	 * Size -> 0x0A58 (FullSize[0x1690] - InheritedSize[0x0C38])
	 */
	class AItemInteractableGear : public AItemGear
	{
	public:
		struct FTimerHandle                                        TimerHandle_TransitionComplete;                          // 0x0C38(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastInteractTime;                                        // 0x0C40(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractTimeoutTime;                                     // 0x0C44(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFirstPersonAnims                                   FirstPersonAnimations;                                   // 0x0C48(0x09F8) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class USkeletalMesh*                                       Mesh1P;                                                  // 0x1640(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEquipableState                                            EquipableState;                                          // 0x1648(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEquipableState                                            SimulatedEquipableState;                                 // 0x1649(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VTNS[0x2];                                   // 0x164A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EquipDuration;                                           // 0x164C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EquipDurationFallback;                                   // 0x1650(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UnequipDuration;                                         // 0x1654(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UnequipDurationFallback;                                 // 0x1658(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G685[0x4];                                   // 0x165C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             InteractableStateChangedDelegate;                        // 0x1660(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bPutAwayWeaponOnToggle;                                  // 0x1670(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7HH0[0x7];                                   // 0x1671(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_StateChangeDelay;                            // 0x1678(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisallowEquipDuringTransition;                          // 0x1680(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPendingInteract;                                        // 0x1681(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TV62[0x2];                                   // 0x1682(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CachedEquipCancelDisallowTime;                           // 0x1684(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CachedUnequipCancelDisallowTime;                         // 0x1688(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAnimationComplete;                                    // 0x168C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EInteractableGearType                                      InteractableGearType;                                    // 0x168D(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowMesh;                                               // 0x168E(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_JWKZ[0x1];                                   // 0x168F(0x0001) MISSED OFFSET (PADDING)

	public:
		void ToggleGear();
		void SetEquipableState(EEquipableState NewState);
		void OnTransitionComplete();
		void OnRep_EquipableState();
		void OnPutAwayWeaponForToggle(float WeaponUnequipDuration);
		void MulticastOnCanceled();
		bool IsUnequippingOrUnequipped();
		bool IsUnequipping();
		bool IsUnequipped();
		bool IsTransitioningTo();
		bool IsInWeaponTransitionDelay();
		bool IsEquippingOrEquipped();
		bool IsEquipping();
		bool IsEquipped();
		void InteractableStateChangedDelegate__DelegateSignature(class AItemInteractableGear* Gear, EEquipableState NewState);
		EInteractableGearType GetInteractableGearType();
		EEquipableState GetEquipableState();
		void BlueprintInteractableStateChanged(EEquipableState NewState);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemGoggles
	 * Size -> 0x0088 (FullSize[0x1718] - InheritedSize[0x1690])
	 */
	class AItemGoggles : public AItemInteractableGear
	{
	public:
		struct FTimerHandle                                        TimerHandle_MaskTransitionComplete;                      // 0x1690(0x0008) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FTimerHandle                                        AudioCueAudioTimerHandle;                                // 0x1698(0x0008) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bActiveByDefault;                                        // 0x16A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RVR1[0x7];                                   // 0x16A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                  PostProcessMaterial;                                     // 0x16A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDeferBlendableInsertionToCameraManager;                 // 0x16B0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08EA[0x7];                                   // 0x16B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       AkEventToggleOn1P;                                       // 0x16B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventToggleOn3P;                                       // 0x16C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventToggleOff1P;                                      // 0x16C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventToggleOff3P;                                      // 0x16D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayToggleEventsOnInteract;                             // 0x16D8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActive;                                                 // 0x16D9(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCustomExposure;                                      // 0x16DA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5KR2[0x1];                                   // 0x16DB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExposureBiasOffset;                                      // 0x16DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseOverexposedMaterials;                                // 0x16E0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanUseWithBinoculars;                                   // 0x16E1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStaminaAudioSwitch;                                     // 0x16E2(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowInfrared;                                           // 0x16E3(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GogglesEnterEyesDuration;                                // 0x16E4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CacheGogglesEnterEyesTime;                               // 0x16E8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GogglesPlayEquipAudioTime;                               // 0x16EC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GogglesLeaveEyesDuration;                                // 0x16F0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CacheGogglesLeaveEyesTime;                               // 0x16F4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GogglesPlayUnequipAudioTime;                             // 0x16F8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSInTime;                                               // 0x16FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSOutTime;                                              // 0x1700(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnterPointShootModeOnADS;                               // 0x1704(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KJWJ[0x3];                                   // 0x1705(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PointShootInTime;                                        // 0x1708(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PointShootOutTime;                                       // 0x170C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashbangHoldTimeDurationMultiplier;                     // 0x1710(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M3EL[0x4];                                   // 0x1714(0x0004) MISSED OFFSET (PADDING)

	public:
		void OnRep_Active();
		void MulticastPlayToggleAudioCue(bool bEquip);
		void AttachGogglesToComponent(class UINSSkeletalMeshComponent* TargetComponent);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemGrenade
	 * Size -> 0x0730 (FullSize[0x2550] - InheritedSize[0x1E20])
	 */
	class AItemGrenade : public AItemWeapon
	{
	public:
		struct FExplosiveAnimsGroup                                FirstPersonExplosiveAnims;                               // 0x1E20(0x0270) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FCharacterAnimExplosive                             ThirdPersonExplosiveAnimsNative;                         // 0x2090(0x03B0) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FGrenadeConfig                                      GrenadeConfig;                                           // 0x2440(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		EGrenadeState                                              GrenadeState;                                            // 0x2498(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGrenadeState                                              SimulatedGrenadeState;                                   // 0x2499(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGrenadeThrowMode                                          ThrowMode;                                               // 0x249A(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGrenadeThrowMode                                          SimulatedThrowMode;                                      // 0x249B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              GrenadesThrown;                                          // 0x249C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyThrowWithLOS;                                       // 0x249D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q978[0x2];                                   // 0x249E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnGrenadeStateChangedDelegate;                           // 0x24A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGrenadeThrowModeChangedDelegate;                       // 0x24B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGrenadePullbackDelegate;                               // 0x24C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGrenadeBeginCookDelegate;                              // 0x24D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGrenadeBeginThrowDelegate;                             // 0x24E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGrenadeSpawnedDelegate;                                // 0x24F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnGrenadeReloadDelegate;                                 // 0x2500(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnHotGrenadePickedUpDelegate;                            // 0x2510(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EK4P[0x1];                                   // 0x2520(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bPendingPullback;                                        // 0x2521(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPendingThrow;                                           // 0x2522(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_822D[0x5];                                   // 0x2523(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartCookTime;                                           // 0x2528(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HZGW[0x18];                                  // 0x252C(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsHot;                                                  // 0x2544(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bThrowingBack;                                           // 0x2545(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHolding;                                                // 0x2546(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MMFC[0x1];                                   // 0x2547(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AProjectileBase*                                     ProjectileInHand;                                        // 0x2548(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetThrowMode(EGrenadeThrowMode NewThrowMode);
		void SetGrenadeState(EGrenadeState NewGrenadeState);
		void ServerStartCook();
		void ServerSetHold(bool Val);
		void ServerReleaseThrow();
		void ServerPullBack(EGrenadeThrowMode NewThrowMode);
		void OnRep_ThrowMode();
		void OnRep_ProjectileInHand();
		void OnRep_GrenadeState();
		void OnHotGrenadePickedUpDelegate__DelegateSignature();
		void OnGrenadeThrowModeChangedDelegate__DelegateSignature(EGrenadeThrowMode OldThrowMode);
		void OnGrenadeStateChangedDelegate__DelegateSignature(EGrenadeState OldState);
		void OnGrenadeSpawnedDelegate__DelegateSignature(class AProjectileBase* NewProjectile);
		void OnGrenadeReloadDelegate__DelegateSignature();
		void OnGrenadePullbackDelegate__DelegateSignature(EGrenadeThrowMode ThrowMode);
		void OnGrenadeBeginThrowDelegate__DelegateSignature();
		void OnGrenadeBeginCookDelegate__DelegateSignature(EGrenadeThrowMode NewThrowMode);
		bool IsThrowingAndInHand();
		bool IsThrowing();
		bool IsPullingBack();
		bool IsPrimedForThrow();
		bool IsPinPulled();
		bool IsOverhandThrow();
		bool IsInCookingState();
		bool IsGrenadeBusy();
		bool IsCooking();
		float GetUpwardsThrowSpeed();
		float GetThrowSpeed();
		EGrenadeThrowMode GetThrowMode();
		float GetSpawnedGrenadeTimer();
		EGrenadeState GetGrenadeState();
		void DropGrenade(bool bDeath);
		bool CanThrow();
		bool CanPullback();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemHeavyMachineGun
	 * Size -> 0x00C0 (FullSize[0x4490] - InheritedSize[0x43D0])
	 */
	class AItemHeavyMachineGun : public AItemFirearm
	{
	public:
		bool                                                       bCanOverheat;                                            // 0x43D0(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UV6P[0x3];                                   // 0x43D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HeatRate;                                                // 0x43D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoolRate;                                                // 0x43D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverheatedCoolRate;                                      // 0x43DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverheatThreshold;                                       // 0x43E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1BXK[0x4];                                   // 0x43E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              OverheatAudioEvent[0x28];                                // 0x43E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              OverheatMuzzleEffect1P[0x28];                            // 0x4410(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              OverheatMuzzleEffect3P[0x28];                            // 0x4438(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              CooldownAudioEvent[0x28];                                // 0x4460(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      WeaponHeat;                                              // 0x4488(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverheated;                                             // 0x448C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O1EY[0x3];                                   // 0x448D(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemMeleeWeapon
	 * Size -> 0x0510 (FullSize[0x2330] - InheritedSize[0x1E20])
	 */
	class AItemMeleeWeapon : public AItemWeapon
	{
	public:
		int32_t                                                    CurrentAttackIndex;                                      // 0x1E20(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastAttackIndex;                                         // 0x1E24(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientRangeCheckBloat;                                   // 0x1E28(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientVictimDistanceCheck;                               // 0x1E2C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastSwingTime;                                           // 0x1E30(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F8HM[0x4];                                   // 0x1E34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UPrimitiveComponent*>                         AffectedComponents;                                      // 0x1E38(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMeleeAnimsGroup                                    FirstPersonMeleeAnims;                                   // 0x1E48(0x01B0) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FCharacterAnimKnife                                 ThirdPersonMeleeAnimsNative;                             // 0x1FF8(0x02B8) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FMeleeConfig                                        MeleeConfig;                                             // 0x22B0(0x0040) Deprecated, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FMeleeConfig>                                MeleeAttacks;                                            // 0x22F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DefaultDamageTypeClass;                                  // 0x2300(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    DefaultSurfaceReaction;                                  // 0x2308(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMeleeSwingDelegate;                                    // 0x2310(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnMeleeHitDelegate;                                      // 0x2320(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void ServerStartSwing(int32_t AttackIndex);
		void ServerNotifyHit(const struct FHitResult& Hit, float ClientTime);
		bool IsSwinging();
		bool InSwingDelay();
		float GetSwingRemainingTime();
		float GetSwingPercentage();
		float GetNextSwingTime();
		bool CanSwing();
		void BroadcastStartSwing(int32_t AttackIndex);
		void BroadcastHit(const struct FHitResult& Hit);
		void BlueprintOnSwing();
		void BlueprintOnHit(const struct FHitResult& Hit);
		void ApplyDamageForHit(const struct FHitResult& Hit);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemMinigun
	 * Size -> 0x0030 (FullSize[0x44C0] - InheritedSize[0x4490])
	 */
	class AItemMinigun : public AItemHeavyMachineGun
	{
	public:
		float                                                      SpinUpTime;                                              // 0x4490(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DBQS[0x4];                                   // 0x4494(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       SpinUpAudioEvent1P;                                      // 0x4498(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SpinUpAudioEvent3P;                                      // 0x44A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SpinDownAudioEvent1P;                                    // 0x44A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SpinDownAudioEvent3P;                                    // 0x44B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayingSpinUpAudio;                                     // 0x44B8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayingSpinUpAudio1P;                                   // 0x44B9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayingSpinUpAudio3P;                                   // 0x44BA(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EXAJ[0x1];                                   // 0x44BB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpinAmount;                                              // 0x44BC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool IsUsingSpinUpTime();
		bool IsSpunUp();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemNightVision
	 * Size -> 0x0010 (FullSize[0x1728] - InheritedSize[0x1718])
	 */
	class AItemNightVision : public AItemGoggles
	{
	public:
		class UClass*                                              DefaultUpgradeClass;                                     // 0x1718(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QYRA[0x8];                                   // 0x1720(0x0008) MISSED OFFSET (PADDING)

	public:
		class UGearUpgradeComponent* SpawnGearUpgrade(class UClass* UpgradeClass);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemPickupDynamic
	 * Size -> 0x0020 (FullSize[0x0368] - InheritedSize[0x0348])
	 */
	class AItemPickupDynamic : public AItemPickup
	{
	public:
		bool                                                       bRemoveOnRoundReset;                                     // 0x0348(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveOnPickup;                                         // 0x0349(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QX85[0x2];                                   // 0x034A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultLockoutTimer;                                     // 0x034C(0x0004) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AINSSoldier*                                         LockedUser;                                              // 0x0350(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockoutTimeRemaining;                                    // 0x0358(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PJ12[0x4];                                   // 0x035C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_LockOutExpired;                              // 0x0360(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SetPickupItemAndUpgrades(class UClass* InItemClass, TArray<class UClass*> InUpgrades);
		void SetPickupItem(class UClass* InItemClass);
		void SetLockedUser(class AINSSoldier* InLockedUser, float OverrideLockoutTimer);
		void ClearLockedUser();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemRemoteExplosive
	 * Size -> 0x0010 (FullSize[0x2560] - InheritedSize[0x2550])
	 */
	class AItemRemoteExplosive : public AItemGrenade
	{
	public:
		class UClass*                                              DetonatorType;                                           // 0x2550(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemDetonator*                                      ActiveDetonator;                                         // 0x2558(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SwitchToDetonator();
		void OnGrenadeSpawned(class AProjectileBase* NewProjectile);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemPlantedExplosive
	 * Size -> 0x00A0 (FullSize[0x2600] - InheritedSize[0x2560])
	 */
	class AItemPlantedExplosive : public AItemRemoteExplosive
	{
	public:
		bool                                                       bCanPlant;                                               // 0x2560(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlantUprightOnly;                                       // 0x2561(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanThrow;                                               // 0x2562(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VOXY[0x1];                                   // 0x2563(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlantDuration;                                           // 0x2564(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlantTraceDistance;                                      // 0x2568(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            PlantExplosiveRotation;                                  // 0x256C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bPlanting;                                               // 0x2578(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X1S0[0x7];                                   // 0x2579(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_Planting;                                    // 0x2580(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2VA9[0x8];                                   // 0x2588(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          PlantTransform;                                          // 0x2590(0x0030) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UPrimitiveComponent>                  PlantAttachComponent;                                    // 0x25C0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlantStartDelegate;                                    // 0x25C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlantAbandonedDelegate;                                // 0x25D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPlantFinishedDelegate;                                 // 0x25E8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RS23[0x8];                                   // 0x25F8(0x0008) MISSED OFFSET (PADDING)

	public:
		bool TracePlantTargetDest(struct FHitResult* OutHitResult, const struct FVector& FromLocation, const struct FVector& DestLocation);
		bool TracePlantTarget(struct FHitResult* OutHitResult);
		void SetupPlant(const struct FHitResult& PlantTrace);
		void SetPlantLocationFromTrace(const struct FHitResult& PlantTrace);
		void ServerStartPlant();
		void ServerPlantAbandoned();
		void OnRep_Planting();
		void OnPlantStartDelegate__DelegateSignature();
		void OnPlantFinishedDelegate__DelegateSignature();
		void OnPlantAbandonedDelegate__DelegateSignature();
		void MulticastOnPlantComplete();
		void ClientAbandonPlant();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemRadio
	 * Size -> 0x0018 (FullSize[0x0C50] - InheritedSize[0x0C38])
	 */
	class AItemRadio : public AItemGear
	{
	public:
		class USphereComponent*                                    RadioRadiusComponent;                                    // 0x0C38(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSSoldier*>                                 OverlappingOfficers;                                     // 0x0C40(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void RadiusEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void RadiusBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemRevolver
	 * Size -> 0x0040 (FullSize[0x4410] - InheritedSize[0x43D0])
	 */
	class AItemRevolver : public AItemFirearm
	{
	public:
		struct FTimerHandle                                        TimerHandle_SetChambers;                                 // 0x43D0(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<ERevolverChamberState>                              ChamberStates;                                           // 0x43D8(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentChamberIndex;                                     // 0x43E8(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D3A3[0x4];                                   // 0x43EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnChamberStatesUpdateDelegate;                           // 0x43F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnActiveChamberUpdatedDelegate;                          // 0x4400(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void OnRep_CurrentChamberIndex();
		void OnRep_ChamberStates();
		void OnChamberStatesUpdateDelegate__DelegateSignature();
		void OnActiveChamberUpdatedDelegate__DelegateSignature();
		bool HasAnyChamberInState(ERevolverChamberState ChamberState);
		ERevolverChamberState GetCurrentChamberState();
		int32_t CountFiredChambers();
		int32_t CountChambersInState(ERevolverChamberState ChamberState);
		bool AreAllChambersEmpty();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItemStripper
	 * Size -> 0x0060 (FullSize[0x02B8] - InheritedSize[0x0258])
	 */
	class AItemStripper : public ATriggerVolume
	{
	public:
		unsigned char                                              UnknownData_UI63[0x8];                                   // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bStartEnabled;                                           // 0x0260(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0261(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceRemoval;                                           // 0x0262(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7H6L[0x5];                                   // 0x0263(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              IgnoreItemSlots[0x50];                                   // 0x0268(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.OptionsMenu
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class UOptionsMenu : public UUserWidget
	{
	public:
		bool                                                       bShowApplyButton;                                        // 0x0230(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasUnsavedChanges;                                      // 0x0231(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDirtiesLocalProfile;                                    // 0x0232(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2OIE[0x1];                                   // 0x0233(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ProfileBlocksToInvalidate;                               // 0x0234(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowResetButton;                                        // 0x0238(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V18A[0x7];                                   // 0x0239(0x0007) MISSED OFFSET (PADDING)

	public:
		void SavePlayerSettings();
		void ResetToDefaults();
		void RefreshSettings();
		void MarkSettingsDirty();
		class UINSGameUserSettings* GetUserSettings();
		class UINSPlayerLocalProfile* GetLocalProfile();
		void BlueprintResetToDefaults();
		void BlueprintRefreshSettings();
		void BlueprintApplyChanges();
		void ApplyChanges();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KeyBindingsMenu
	 * Size -> 0x0020 (FullSize[0x0260] - InheritedSize[0x0240])
	 */
	class UKeyBindingsMenu : public UOptionsMenu
	{
	public:
		TArray<struct FKeyBindingSection>                          KeyBindingSections;                                      // 0x0240(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             RefreshAllKeysDelegate;                                  // 0x0250(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void UpdateKeyBindings();
		void UpdateKeyBinding(const struct FKeyBindingOption& Binding, const struct FInputChord& NewInput);
		void SaveKeyMappings();
		void ResetBindingsToDefaults();
		void RemoveAllMappingsFromKeyWithExemptions(const struct FKey& Key, TArray<class FName> ExemptActions);
		void RemoveAllMappingsFromKey(const struct FKey& Key);
		void RemoveActionMapping(struct FInputActionKeyMapping* KeyMapping);
		void RefreshAllKeysDelegate__DelegateSignature();
		void RefreshAllKeys();
		bool HasKeyConflict(const struct FKeyBindingOption& Binding, const struct FKey& TestKey, class FName* OutConflictingAction);
		void GetLocalizedActionName(const class FName& Action, class FText* OutLocalized);
		TMap<class FName, struct FActionMapList> GetActionMappings();
		void ApplyDirtyKeyBindings();
		void AddActionMapping(struct FInputActionKeyMapping* KeyMapping);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KeyHintDecorator
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UKeyHintDecorator : public URichTextBlockDecorator
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KeyIconImageData
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UKeyIconImageData : public UDataAsset
	{
	public:
		TMap<struct FKey, class UTexture2D*>                       KeyToTextureMap;                                         // 0x0030(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KeyIconSettings
	 * Size -> 0x0268 (FullSize[0x02A0] - InheritedSize[0x0038])
	 */
	class UKeyIconSettings : public UDeveloperSettings
	{
	public:
		unsigned char                                              UnknownData_S8LN[0x40];                                  // 0x0038(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              KeyIconsPC[0x28];                                        // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              KeyIconsPS4[0x28];                                       // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              KeyIconsX1[0x28];                                        // 0x00C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UKeyIconImageData*                                   LoadedKeyIconsPC;                                        // 0x00F0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UKeyIconImageData*                                   LoadedKeyIconsPS4;                                       // 0x00F8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UKeyIconImageData*                                   LoadedKeyIconsX1;                                        // 0x0100(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UnboundText;                                             // 0x0108(0x0018) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FSlateBrush                                         FallbackBrush;                                           // 0x0120(0x0088) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FSlateBrush                                         FallbackOuterBrush;                                      // 0x01A8(0x0088) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FSlateFontInfo                                      FallbackFont;                                            // 0x0230(0x0050) Edit, BlueprintVisible, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMargin                                             FallbackPadding;                                         // 0x0280(0x0010) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FLinearColor                                        FallbackBackgroundColor;                                 // 0x0290(0x0010) Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KeyIconWidget
	 * Size -> 0x0310 (FullSize[0x0418] - InheritedSize[0x0108])
	 */
	class UKeyIconWidget : public UWidget
	{
	public:
		struct FLessonInputAction                                  Input;                                                   // 0x0108(0x0070) Edit, BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic
		bool                                                       bVisibleToKeyboard;                                      // 0x0178(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVisibleToGamepad;                                       // 0x0179(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q894[0x6];                                   // 0x017A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         FallbackBrush;                                           // 0x0180(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSlateBrush                                         FallbackOuterBrush;                                      // 0x0208(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSlateFontInfo                                      FallbackFont;                                            // 0x0290(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMargin                                             FallbackPadding;                                         // 0x02E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FLinearColor                                        FallbackBackgroundColor;                                 // 0x02F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FKey                                                FallbackKey;                                             // 0x0300(0x0018) Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UnboundText;                                             // 0x0318(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bShowWhenUnbound;                                        // 0x0330(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QASV[0x7];                                   // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKey                                                IconKey;                                                 // 0x0338(0x0018) BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGamepadIcon;                                            // 0x0350(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOwnerUsingGamepad;                                      // 0x0351(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsingImage;                                             // 0x0352(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayingFallbackKey;                                  // 0x0353(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VRV3[0xC4];                                  // 0x0354(0x00C4) MISSED OFFSET (PADDING)

	public:
		void UpdateAction(const struct FLessonInputAction& NewAction);
		bool SetKey(const struct FKey& InKey);
		void SetFallbackKey(const struct FKey& InFallbackKey);
		void RebuildKeyIcon();
		void OnUsingControllerUpdated(bool bUsingController, EeInputIconType NewIconType);
		void OnSettingsUpdated();
		bool IsUsingGamepad();
		class UTexture2D* GetTextureForKey(const struct FKey& InKey);
		class UTexture2D* GetTextureForInput();
		struct FKey GetKeyForInput(bool bIsUsingGamepad);
		EeInputIconType GetInputIconType();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SandstormAchievement
	 * Size -> 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
	 */
	class USandstormAchievement : public UObject
	{
	public:
		class AINSPlayerState*                                     LocalPlayerState;                                        // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PlatformStatName;                                        // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W53L[0x18];                                  // 0x0038(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnLeaderboardReadComplete(bool bWasSuccessful);
		void IncrementPlatformStat(const class FName& InStatName);
		void BlueprintInit(class AINSPlayerState* PlayerState);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KillAchievement
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class UKillAchievement : public USandstormAchievement
	{
	public:
		unsigned char                                              UnknownData_LEFQ[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnRecievedKill(const struct FSoldierKillInfo& SoldierKillInfo);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FirstBloodAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UFirstBloodAchievement : public UKillAchievement
	{
	public:
		void OnRecievedFirstBlood(class AINSPlayerController* Killer);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FlaccidParalysisAchievement
	 * Size -> 0x0008 (FullSize[0x0060] - InheritedSize[0x0058])
	 */
	class UFlaccidParalysisAchievement : public UKillAchievement
	{
	public:
		unsigned char                                              UnknownData_P0JL[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnOwningSoldierKilled();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GroundedAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UGroundedAchievement : public UKillAchievement
	{
	public:
		void OnDownedFireSupport(class AINSPlayerController* Killer);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PersonalAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UPersonalAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HitAndRunAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UHitAndRunAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PointShootingAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UPointShootingAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MountAndGunAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UMountAndGunAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KnockKnockAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UKnockKnockAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ShotgunShotgunAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UShotgunShotgunAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.EfficientAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UEfficientAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ItsAllInTheReflxesAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UItsAllInTheReflxesAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.HSLDAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UHSLDAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WallbangerAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UWallbangerAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ThanksStationAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UThanksStationAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.JR50Achievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UJR50Achievement : public UKillAchievement
	{
	public:
		void OnRecievedVehicleKill(const struct FSoldierKillInfo& SoldierKillInfo);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RoadHazardAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class URoadHazardAchievement : public UKillAchievement
	{
	public:
		void OnRecievedVehicleKill(const struct FSoldierKillInfo& SoldierKillInfo);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RuthlessAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class URuthlessAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CinematicAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UCinematicAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ExploitativeAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UExploitativeAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LuckyAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class ULuckyAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BlindFireAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UBlindFireAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.BangedAchievement
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UBangedAchievement : public UKillAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TraumaAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UTraumaAchievement : public USandstormAchievement
	{
	public:
		void OnDismemberRagdoll(class ARagdoll* Ragdoll, class AController* Controller);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KillerInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UKillerInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KitPreviewActor
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class AKitPreviewActor : public AActor
	{
	public:
		bool                                                       bAutoRegisterPlayer;                                     // 0x0220(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YF09[0x3];                                   // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AINSBasePlayerController>             OwnerPC;                                                 // 0x0224(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UFactionDefinition>                   CachedFactionDefinition;                                 // 0x022C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TXMT[0x4];                                   // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UArrowComponent*                                     ArrowComponent;                                          // 0x0238(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void RegisterPlayer(class AINSBasePlayerController* InPlayerController);
		void OnUpdatePlayerClass(class UFactionDefinition* FactionDefinition, class UPlayerClass* PlayerClass);
		void OnUpdateInventory(class UPlayerInventoryComponent* InventoryComponent);
		void OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo);
		void OnPlayerClassChanged(class UPlayerClass* PlayerClass);
		void OnInventoryChanged();
		void OnFirstPersonWeaponMeshSet(class UINSSkeletalMeshComponent* NewMesh);
		class UPlayerInventoryComponent* GetOwnerInventory();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KitPreviewCharacter
	 * Size -> 0x0038 (FullSize[0x0278] - InheritedSize[0x0240])
	 */
	class AKitPreviewCharacter : public AKitPreviewActor
	{
	public:
		class UCapsuleComponent*                                   PreviewCapsuleComponent;                                 // 0x0240(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AProfileCharacter*                                   SpawnedCharacter;                                        // 0x0248(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCharacterCosmeticsAllowed;                              // 0x0250(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9EA7[0x7];                                   // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CharacterAnimClass;                                      // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemBase*                                           PrimaryWeapon;                                           // 0x0260(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AItemBase*>                                   OtherItems;                                              // 0x0268(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KitPreviewWeapon
	 * Size -> 0x0048 (FullSize[0x0288] - InheritedSize[0x0240])
	 */
	class AKitPreviewWeapon : public AKitPreviewActor
	{
	public:
		class UClass*                                              WeaponAnimClass;                                         // 0x0240(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemBase*                                           SpawnedItem;                                             // 0x0248(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemSlot                                                  CurrentItemSlot;                                         // 0x0250(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6S6M[0x3];                                   // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentItemSubSlot;                                      // 0x0254(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FStoredInventoryItem                                CurrentWeapon;                                           // 0x0258(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnViewedWeaponSlotUpdated;                               // 0x0270(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4NFJ[0x8];                                   // 0x0280(0x0008) MISSED OFFSET (PADDING)

	public:
		void UpdateWeaponModel(const struct FStoredInventoryItem& Item);
		void UpdateViewedWeaponSlot(EItemSlot Slot, int32_t SubSlot, bool bForceRefresh);
		void SetWeaponModel(const struct FStoredInventoryItem& Item, bool ForceRefresh);
		void SetUpgradeCustomDepth(EWeaponUpgradeSlot UpgradeSlot, bool RenderCustomDepth);
		void RemoveWeapon();
		void OutlineUpgradeInSlot(EWeaponUpgradeSlot UpgradeSlot);
		void OnViewedWeaponSlotUpdated__DelegateSignature();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KitSelectMenu
	 * Size -> 0x00B0 (FullSize[0x0338] - InheritedSize[0x0288])
	 */
	class UKitSelectMenu : public UMainMenuPanelWidget
	{
	public:
		bool                                                       bForMainMenu;                                            // 0x0288(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SUIW[0x7];                                   // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWidgetSwitcher*                                     ItemTypeSwitcher;                                        // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        FirearmAttributes;                                       // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              CurrentlyHoveredItemClass;                               // 0x02A0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              CurrentlyHoveredUpgradeClass;                            // 0x02A8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              LastSelectedItemClass;                                   // 0x02B0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EItemSlot                                                  LastShoppingItemSlot;                                    // 0x02B8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KFIF[0x3];                                   // 0x02B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LastShoppingItemSubSlot;                                 // 0x02BC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHoverUnequipIntended;                                   // 0x02C0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_889X[0x3];                                   // 0x02C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxWeight;                                               // 0x02C4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_G48P[0x70];                                  // 0x02C8(0x0070) MISSED OFFSET (PADDING)

	public:
		void UpdateFirearmAttributes(EItemSlot CurrentItemSlot, int32_t CurrentItemSubSlot, class UKitSelect_ItemAttribute* CaliberAttribute, class UKitSelect_ItemAttribute* MuzzleVelocityAttribute, class UKitSelect_ItemAttribute* PenetrationAttribute, class UKitSelect_ItemAttribute* EffectiveRangeAttribute, class UKitSelect_ItemAttribute* MagSizeAttribute, class UKitSelect_ItemAttribute* FireModesAttribute, class UKitSelect_ItemAttribute* FireRateAttribute, class UKitSelect_ItemAttribute* VerticalHandlingAttribute, class UKitSelect_ItemAttribute* HorizontalHandlingAttribute);
		void RefreshStoredWeightData();
		bool IsEquippedItemVisibleInSlot(EItemSlot ItemSlot);
		bool HasWeaponUpgradeEquipped(class UClass* WeaponUpgrade, EItemSlot ItemSlot, int32_t SubSlot);
		bool HasItemInSlot(EItemSlot ItemSlot, int32_t SubSlot);
		bool HasItemEquipped(class UClass* Item, int32_t SubSlot);
		class UPlayerInventoryComponent* GetPlayerInventory();
		class UPlayerClass* GetPlayerClass();
		bool GetIsShoppingListActive();
		float GetEquippedTotalWeightPercent();
		bool DoHasActiveHoverComparison();
		void DoDetermineFireModeImages(class UClass* InFirearmClass, TArray<class UTexture2D*>* OutFireModeImages);
		float CalculateTotalWeightPercentWithHoveredUpgrade(class UClass* NewUpgradeClass, EItemSlot UpgradeItemSlot);
		float CalculateTotalWeightPercentWithHoveredItem(class UClass* NewItemClass, int32_t ItemSubslot);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KitSelect_ItemAttribute
	 * Size -> 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
	 */
	class UKitSelect_ItemAttribute : public UUserWidget
	{
	public:
		float                                                      InfoProgressPercent;                                     // 0x0230(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InfoComparisonPercent;                                   // 0x0234(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                InfoText;                                                // 0x0238(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                DifferenceInfoText;                                      // 0x0250(0x0018) BlueprintVisible, NativeAccessSpecifierPublic

	public:
		void DoSetImages(TArray<class UTexture2D*> ImagesSelected, TArray<class UTexture2D*> ImagesHovered);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KitSelect_ItemButton
	 * Size -> 0x0178 (FullSize[0x03A8] - InheritedSize[0x0230])
	 */
	class UKitSelect_ItemButton : public UUserWidget
	{
	public:
		class UNamedSlot*                                          HighlightsNotificationSlot;                              // 0x0230(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                            SizeBox_2;                                               // 0x0238(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBorder*                                             Background;                                              // 0x0240(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          LeftTextWidget;                                          // 0x0248(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              WeaponIcon;                                              // 0x0250(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          SupplyCostWidget;                                        // 0x0258(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UCanvasPanel*                                        UnequipButtonCanvas;                                     // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             Button_1;                                                // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBorder*                                             LeftSelectHighlight;                                     // 0x0270(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               BackgroundInvalidationBox;                               // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               NameInvalidationBox;                                     // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               IconInvalidationBox;                                     // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgColor;                                           // 0x0290(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgHoverColor;                                      // 0x02A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgSelectedColor;                                   // 0x02B0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgCanNotPurchaseColor;                             // 0x02C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgCanNotPurchaseHoverColor;                        // 0x02D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgColor;                                           // 0x02E0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgHoverColor;                                      // 0x02F0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgSelectedColor;                                   // 0x0300(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgCanNotPurchaseColor;                             // 0x0310(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgCanNotPurchaseHoverColor;                        // 0x0320(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              ItemClass;                                               // 0x0330(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LoadoutCategoryIndex;                                    // 0x0338(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SubSlot;                                                 // 0x033C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelected;                                               // 0x0340(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNewGear;                                              // 0x0341(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemSlot                                                  ItemSlot;                                                // 0x0342(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPurchasable;                                            // 0x0343(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHovered;                                                // 0x0344(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XKZ4[0x63];                                  // 0x0345(0x0063) MISSED OFFSET (PADDING)

	public:
		void UpdateNotificationVisibility();
		void UpdateItemData(class UClass* InItemClass, int32_t InSubSlot, bool bInSelected, bool bInIsNewGear, bool bLoadoutChanged, int32_t InLoadoutCategoryIndex);
		void SetUnequipButtonVisibility();
		void SetColorScrollingTextWidget(const struct FLinearColor& FgColor);
		void RefreshColors();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.KitSelect_UpgradeButton
	 * Size -> 0x0138 (FullSize[0x0368] - InheritedSize[0x0230])
	 */
	class UKitSelect_UpgradeButton : public UUserWidget
	{
	public:
		class UBorder*                                             MainButtonArea;                                          // 0x0230(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          SupplyCostWidget;                                        // 0x0238(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     LeftTab;                                                 // 0x0240(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               UnequipInvalidationBox;                                  // 0x0248(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               BackgroundInvalidationBox;                               // 0x0250(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               NameInvalidationBox;                                     // 0x0258(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgColor;                                           // 0x0260(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgHoverColor;                                      // 0x0270(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgSelectedColor;                                   // 0x0280(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgUnPurchasableColor;                              // 0x0290(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonBgUnPurchaseableHoverColor;                        // 0x02A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgColor;                                           // 0x02B0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgHoverColor;                                      // 0x02C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgSelectedColor;                                   // 0x02D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgUnPurchasableColor;                              // 0x02E0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        ButtonFgUnPurchasableHoverColor;                         // 0x02F0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              UpgradeClass;                                            // 0x0300(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemSlot                                                  ParentItemSlot;                                          // 0x0308(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CI5K[0x3];                                   // 0x0309(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SupplyCost;                                              // 0x030C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSupplyCostVisible;                                      // 0x0310(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelected;                                               // 0x0311(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPurchasable;                                            // 0x0312(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldHide;                                             // 0x0313(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNewGear;                                              // 0x0314(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V0XR[0x3];                                   // 0x0315(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UpgradePrintName;                                        // 0x0318(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bHovered;                                                // 0x0330(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JHT5[0x37];                                  // 0x0331(0x0037) MISSED OFFSET (PADDING)

	public:
		void UpdateVisualComponents();
		void UpdateUpgradeData(class UClass* InUpgradeClass, EItemSlot InParentItemSlot, int32_t InSupplyCost, bool bInSupplyCostVisible, bool bInSelected, bool bInPurchasable, bool bInIsNewGear);
		void SetScrollingText();
		void SetColorScrollingTextWidget(const struct FLinearColor& FgColor);
		void RefreshColors();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Ladder
	 * Size -> 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
	 */
	class ALadder : public AActor
	{
	public:
		unsigned char                                              UnknownData_O312[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EUsablePriority                                            UsePriority;                                             // 0x0228(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MZ3B[0x7];                                   // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInstancedStaticMeshComponent*                       ModularMeshComponent;                                    // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                TopMeshComponent;                                        // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                BottomMeshComponent;                                     // 0x0240(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       BoxComponent;                                            // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELadderType                                                LadderType;                                              // 0x0250(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6AH0[0x7];                                   // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBoxComponent*                                       TopBoxComponent;                                         // 0x0258(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderTopThreshold;                                      // 0x0260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderBottomThreshold;                                   // 0x0264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderOffset;                                            // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimationOffset;                                         // 0x026C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ModularLadderPieces;                                     // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0V4Q[0x4];                                   // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          LadderUpUIIcon;                                          // 0x0278(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          LadderDownUIIcon;                                        // 0x0280(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          LadderSlideUIIcon;                                       // 0x0288(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          LadderExitUIIcon;                                        // 0x0290(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8WO[0x8];                                   // 0x0298(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LagCompensationComponent
	 * Size -> 0x04B0 (FullSize[0x0560] - InheritedSize[0x00B0])
	 */
	class ULagCompensationComponent : public UActorComponent
	{
	public:
		class USkeletalMeshComponent*                              BodyComponent;                                           // 0x00B0(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompensateActorPosition;                                // 0x00B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRecordBodies;                                           // 0x00B9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TI7D[0x4A6];                                 // 0x00BA(0x04A6) MISSED OFFSET (PADDING)

	public:
		void RewindToTime(float Time);
		void RestorePosition();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LessonArea
	 * Size -> 0x0088 (FullSize[0x02E0] - InheritedSize[0x0258])
	 */
	class ALessonArea : public AVolume
	{
	public:
		class UClass*                                              AssociatedLesson;                                        // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AssociatedLessonPS4;                                     // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AssociatedLessonXBOX;                                    // 0x0268(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HintDisplayTime;                                         // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceHintDisplay;                                       // 0x0274(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHintShouldQueue;                                        // 0x0275(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPauseOnDisplay;                                         // 0x0276(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B2AN[0x1];                                   // 0x0277(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ControllersHinted[0x50];                                 // 0x0278(0x0050) UNKNOWN PROPERTY: SetProperty
		bool                                                       bEnabled;                                                // 0x02C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9OWY[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnLessonTriggered;                                       // 0x02D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void ToggleLesson(bool bNewEnabled);
		void OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void LessonAreaEventDelegate__DelegateSignature(class AINSBasePlayerController* PlayerController);
		bool HasHintedController(class AINSBasePlayerController* Controller);
		void ControllerConfirmedHint(class AINSBasePlayerController* Controller);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LessonLoadingWidget
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class ULessonLoadingWidget : public UUserWidget
	{
	public:
		unsigned char                                              UnknownData_WL79[0x28];                                  // 0x0230(0x0028) MISSED OFFSET (PADDING)

	public:
		void SetLessonVideo();
		void OnVideoAsyncLoadComplete();
		void OnLessonVideoLoadedEvent();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LightSampler
	 * Size -> 0x0078 (FullSize[0x0298] - InheritedSize[0x0220])
	 */
	class ALightSampler : public AInfo
	{
	public:
		unsigned char                                              UnknownData_3R2B[0x78];                                  // 0x0220(0x0078) MISSED OFFSET (PADDING)

	public:
		void UntrackNamedLightSource(const class FName& Name);
		void TrackNamedLightSource(const class FName& Name, const struct FVector& Position, float Intensity, float Radius, class UActorComponent* Parent, float InnerConeAngle, float OuterConeAngle, const struct FVector& Direction);
		float GetVolumetricLightingIntensity(const struct FVector& Position);
		struct FLinearColor GetVolumetricLightingForPosition(const struct FVector& Position);
		struct FLinearColor GetVolumetricLighting(const struct FVector& Position);
		float GetUnfilteredVolumetricLightingIntensity(const struct FVector& Position);
		struct FLinearColor GetUnfilteredVolumetricLightingForPosition(const struct FVector& Position);
		struct FLinearColor GetUnfilteredVolumetricLighting(const struct FVector& Position);
		float GetLightingIntensity(const struct FVector& Position);
		TArray<struct FSampledLightSource> GetDynamicLightSources(const struct FVector& Position);
		float GetDynamicLightIntensityFromSources(TArray<struct FSampledLightSource> LightSources);
		float GetDynamicLightIntensity(const struct FVector& Position);
		void DrawDebugInformation();
		bool AffectsBoundsVirtualSource(const struct FSampledLightSource& LightSource, const struct FBoxSphereBounds& Bounds);
		void AddLightSource(const struct FVector& Position, float Intensity, float Duration, float Radius, class UActorComponent* Parent, float InnerConeAngle, float OuterConeAngle, const struct FVector& Direction);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LightStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class ULightStatics : public UBlueprintFunctionLibrary
	{
	public:
		class ALightSampler* STATIC_GetLightSampler(class UObject* WorldContextObject);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LoadCollectibleItemDataAsync
	 * Size -> 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
	 */
	class ULoadCollectibleItemDataAsync : public UBlueprintAsyncActionBase
	{
	public:
		class FScriptMulticastDelegate                             OnItemDataLoaded;                                        // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1Y0E[0x28];                                  // 0x0040(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOnlineItemClaimResponse>                    Results;                                                 // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		class ULoadCollectibleItemDataAsync* STATIC_LoadCollectibleItemData(class UObject* WorldContextObject, TArray<int32_t> InItemIds);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LoadingScreenSettings
	 * Size -> 0x1580 (FullSize[0x15B8] - InheritedSize[0x0038])
	 */
	class ULoadingScreenSettings : public UDeveloperSettings
	{
	public:
		TMap<class FString, struct FLoadingScreenMap>              Maps;                                                    // 0x0038(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic
		TMap<class FString, struct FLoadingScreenMap>              MapThumbnails;                                           // 0x0088(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic
		struct FTextBlockStyle                                     StyleGamemode;                                           // 0x00D8(0x0268) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FTextBlockStyle                                     StyleLevel;                                              // 0x0340(0x0268) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FTextBlockStyle                                     StyleGamemodeHints;                                      // 0x05A8(0x0268) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FTextBlockStyle                                     StyleLoadingText;                                        // 0x0810(0x0268) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FTextBlockStyle                                     StyleRandomHint;                                         // 0x0A78(0x0268) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FSlateBrush                                         BrushDetailsPanel;                                       // 0x0CE0(0x0088) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FSlateBrush                                         BrushHintPanel;                                          // 0x0D68(0x0088) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FSlateBrush                                         BrushRulesDivider;                                       // 0x0DF0(0x0088) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FTextBlockStyle                                     StyleMotdHeader;                                         // 0x0E78(0x0268) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FTextBlockStyle                                     StyleMotdBody;                                           // 0x10E0(0x0268) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FSlateBrush                                         BrushMotdBackground;                                     // 0x1348(0x0088) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FSlateBrush                                         BrushMotdAccent;                                         // 0x13D0(0x0088) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		unsigned char                                              DefaultLoadingScreenTexture[0x28];                       // 0x1458(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FSlateBrush                                         LoadingScreenSpinnerBrush;                               // 0x1480(0x0088) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		struct FSlateBrush                                         HintBulletBrush;                                         // 0x1508(0x0088) Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
		unsigned char                                              LoadingHintDatatable[0x28];                              // 0x1590(0x0028) UNKNOWN PROPERTY: SoftObjectProperty

	public:
		void GetThumbnailForLevel(const class FString& LevelName, const class FString& Lighting);
		void GetLoadingScreenTextureAsset(const class FString& Name, const class FString& LightingName);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LoadingScreenStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class ULoadingScreenStatics : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_HideViewportLoadingScreen(class UObject* WorldContext);
		float STATIC_GetLoadingScreenProgress(const class FName& PackageName);
		TArray<struct FLoadingScreenHint> STATIC_GetLoadingHints();
		void STATIC_DisplayViewportLoadingScreen(class UObject* WorldContext, const struct FLoadingScreenSetup& Setup);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.LocalizableObjectInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class ULocalizableObjectInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MagazineDebris
	 * Size -> 0x0000 (FullSize[0x0250] - InheritedSize[0x0250])
	 */
	class AMagazineDebris : public APhysicalDebris
	{
	public:
		void SetFromAmmoContainer(class UClass* AmmoContainerClass);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MainMenuWidget
	 * Size -> 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
	 */
	class UMainMenuWidget : public UUserWidget
	{
	public:
		unsigned char                                              UnknownData_16HY[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bShouldDisplayPostMatch;                                 // 0x0238(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldDisplayServerBrowser;                             // 0x0239(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsViewingPostMatch;                                     // 0x023A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R68F[0x5];                                   // 0x023B(0x0005) MISSED OFFSET (PADDING)

	public:
		void InitMenu();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MainMenuSettings
	 * Size -> 0x0090 (FullSize[0x00C8] - InheritedSize[0x0038])
	 */
	class UMainMenuSettings : public UDeveloperSettings
	{
	public:
		struct FSoftObjectPath                                     WelcomeScreenMap;                                        // 0x0038(0x0018) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MainMenuMap;                                             // 0x0050(0x0018) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     WelcomeScreenMapConsole;                                 // 0x0068(0x0018) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MainMenuMapConsole;                                      // 0x0080(0x0018) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMainMenuMusic                                      Music;                                                   // 0x0098(0x0020) Edit, Config, NativeAccessSpecifierPublic
		TArray<struct FHolidayMainMenuTakeover>                    HolidayTakeovers;                                        // 0x00B8(0x0010) Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapIconWidget
	 * Size -> 0x0040 (FullSize[0x0270] - InheritedSize[0x0230])
	 */
	class UMapIconWidget : public UUserWidget
	{
	public:
		int32_t                                                    DefaultZOrder;                                           // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseBackgroundLayer;                                     // 0x0234(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S4HK[0x3];                                   // 0x0235(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             IconWorldLocation;                                       // 0x0238(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            IconWorldRotation;                                       // 0x0244(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bFitIconWithinMapBounds;                                 // 0x0250(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFollowRotation;                                         // 0x0251(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRotateEntireWidget;                                     // 0x0252(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JLZX[0x1];                                   // 0x0253(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FollowRotationOffset;                                    // 0x0254(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdatedFrequently;                                      // 0x0258(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveOnTeamChange;                                     // 0x0259(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWantsTeamChangeEvent;                                   // 0x025A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_78Y8[0x5];                                   // 0x025B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTacticalMapWidget*                                  TacticalMap;                                             // 0x0260(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              IconImage;                                               // 0x0268(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void BlueprintOnTeamChange(unsigned char TeamId, class ATeamInfo* TeamInfo);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapActorWidget
	 * Size -> 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
	 */
	class UMapActorWidget : public UMapIconWidget
	{
	public:
		unsigned char                                              UnknownData_BDVJ[0x8];                                   // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SizeToActorScale;                                        // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8JCR[0x4];                                   // 0x027C(0x0004) MISSED OFFSET (PADDING)

	public:
		bool UpdateFollowActor();
		void SizeToActorBounds();
		void SetToTeamColor(bool bHasNoTeam);
		void GetRepresentativeLocation(struct FVector* OutLocation, struct FRotator* OutRotation);
		class AActor* GetFollowedActor();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapIconPointOfInterestWidget
	 * Size -> 0x0008 (FullSize[0x0288] - InheritedSize[0x0280])
	 */
	class UMapIconPointOfInterestWidget : public UMapActorWidget
	{
	public:
		unsigned char                                              UnknownData_5ZMN[0x8];                                   // 0x0280(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapItemPickupWidget
	 * Size -> 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
	 */
	class UMapItemPickupWidget : public UMapActorWidget
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapRestrictedAreaWidget
	 * Size -> 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
	 */
	class UMapRestrictedAreaWidget : public UMapActorWidget
	{
	public:
		TArray<struct FVector2D>                                   AreaClipBounds;                                          // 0x0280(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		class ARestrictedArea* GetFollowedRestrictedArea();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapSoldierWidget
	 * Size -> 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
	 */
	class UMapSoldierWidget : public UMapActorWidget
	{
	public:
		bool                                                       bLocalViewTarget;                                        // 0x0280(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsHovered;                                              // 0x0281(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N70S[0xE];                                   // 0x0282(0x000E) MISSED OFFSET (PADDING)

	public:
		void UpdatePlayerZOrder();
		void OnUpdateObjective(class AINSPlayerState* PlayerState, class AObjectiveBase* NewActiveObjective);
		class AINSSoldier* GetFollowedSoldier();
		void BlueprintOnUpdateObjective(class AINSPlayerState* PlayerState, class AObjectiveBase* NewActiveObjective);
		void BlueprintOnUpdateLocalViewTarget();
		void BlueprintOnObjectiveStateChange();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapSpawnZoneWidget
	 * Size -> 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
	 */
	class UMapSpawnZoneWidget : public UMapActorWidget
	{
	public:
		class ASpawnZone* GetFollowedSpawnZone();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapSupplyCrateActor
	 * Size -> 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
	 */
	class UMapSupplyCrateActor : public UMapActorWidget
	{
	public:
		class ASupplyCrate* GetFollowedCrate();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapVehicleWidget
	 * Size -> 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
	 */
	class UMapVehicleWidget : public UMapActorWidget
	{
	public:
		class AVehicleBase* GetFollowedVehicle();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapVoteManager
	 * Size -> 0x0188 (FullSize[0x01B0] - InheritedSize[0x0028])
	 */
	class UMapVoteManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_7RT4[0x20];                                  // 0x0028(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bOldMapVoteRandomization;                                // 0x0048(0x0001) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H3KM[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MapVoteTimer;                                            // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EM9C[0x10];                                  // 0x0050(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMapVoteOption                                      WinningOption;                                           // 0x0060(0x00A8) NativeAccessSpecifierPrivate
		TArray<struct FMapVoteOption>                              RemainingVoteOptions;                                    // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FMapVoteOption>                              CurrentVoteOptions;                                      // 0x0118(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_S4B4[0x88];                                  // 0x0128(0x0088) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapVoteButtonInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UMapVoteButtonInterface : public UInterface
	{
	public:
		void SetVoteCount(int32_t NewVoteCount);
		void SetLocalVoteState(bool bSelected);
		void PlayWinningVoteAnimation();
		void PlayLosingVoteAnimation();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MapVoteWidget
	 * Size -> 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
	 */
	class UMapVoteWidget : public UUserWidget
	{
	public:
		bool                                                       bCanVoteRefresh;                                         // 0x0230(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMapVoteSelection                                          SelectedVoteOption;                                      // 0x0231(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JUXX[0x2];                                   // 0x0232(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EndTimeWorldSec;                                         // 0x0234(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMapVoteOption>                              VoteChoices;                                             // 0x0238(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2FHY[0x10];                                  // 0x0248(0x0010) MISSED OFFSET (PADDING)

	public:
		void SubmitMapVote(EMapVoteSelection Selection);
		void RestoreWidgetFocus();
		void OnVoteWinnerChosen(EMapVoteSelection Selection);
		void OnVoteCountUpdated(TArray<struct FMapVoteCount> Data);
		void OnMapVoteStarted(TArray<struct FMapVoteOption> Maps, float EndTime, bool bInCanVoteRefresh);
		void OnLocalOptionSelected(EMapVoteSelection Selection);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProfileCharacter
	 * Size -> 0x00C8 (FullSize[0x0348] - InheritedSize[0x0280])
	 */
	class AProfileCharacter : public APawn
	{
	public:
		class UINSLocalPlayer*                                     LocalPlayer;                                             // 0x0280(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSSkeletalMeshComponent*                           Mesh;                                                    // 0x0288(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CosmeticMeshesLoadedCount;                               // 0x0290(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8UIV[0x4];                                   // 0x0294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSelectedCosmetic>                           AppliedCosmetics;                                        // 0x0298(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UCosmeticItem*>                               SpawnedCosmetics;                                        // 0x02A8(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSwitchFactionDelegate;                                 // 0x02B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UPlayerClass*                                        PreviewPlayerClass;                                      // 0x02C8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemBase*                                           SpawnedCarrier;                                          // 0x02D0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemBase*                                           SpawnedArmor;                                            // 0x02D8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDoNotPlaySpecialMontage;                                // 0x02E0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCustomIdleAnim;                                      // 0x02E1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHidePreviewWeapon;                                      // 0x02E2(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2EMH[0x1];                                   // 0x02E3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AnimationRotation;                                       // 0x02E4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemBase*                                           WeaponModel3P;                                           // 0x02E8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O3MR[0x10];                                  // 0x02F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProfileCharacterCosmeticState                      CurrentSelectedState;                                    // 0x0300(0x0038) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                Faction;                                                 // 0x0338(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USharedCosmeticState*                                SharedCosmeticState;                                     // 0x0340(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void UpdateVisibility();
		void StopAnimMontage(class UAnimMontage* AnimMontage);
		void SpawnPreviewWeaponWithUpgrades();
		void SpawnPreviewWeapon();
		void SetPreviewWeapon(class AItemBase* PreviewWeapon);
		void SetMeshVisibility(bool bVisible);
		void SetCosmeticsFromState(struct FProfileCharacterCosmeticState* NewCosmeticState);
		void SetCosmeticMeshVisibility(bool bVisible);
		void RemovePreviewWeapon();
		void RemoveCosmeticByClass(class UClass* Cosmetic);
		void RefreshAppliedCosmetics();
		float PlayAnimMontage(class UAnimMontage* AnimMontage, float InPlayRate, const class FName& StartSectionName);
		void OnSwitchFaction();
		void OnProfileBlockLoaded(EProfileBlockType Type, bool bFromCloud);
		void OnCustomizeMenuChanged(bool bIsCustomizing);
		void OnCosmeticMeshesLoaded(class UCosmeticItem* Cosmetic);
		void OnAllCosmeticMeshesLoaded();
		void InitProfileCharacter(class UINSLocalPlayer* InPlayer);
		class USharedCosmeticState* GetSharedCosmeticState();
		class UAnimMontage* GetCurrentMontage();
		void DetachCosmeticFromMesh(class UClass* Cosmetic);
		void DetachAllCosmeticsFromMesh();
		void AttachCosmeticToMesh(const struct FSelectedCosmetic& SelectedCosmetic, bool bStartVisible);
		void AttachCosmeticsToMesh();
		void ApplyCosmetic(const struct FSelectedCosmetic& SelectedCosmetic);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MarketingProfileCharacter
	 * Size -> 0x01A8 (FullSize[0x04F0] - InheritedSize[0x0348])
	 */
	class AMarketingProfileCharacter : public AProfileCharacter
	{
	public:
		unsigned char                                              LoadedCosmetics[0x10];                                   // 0x0348(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_IJLB[0x8];                                   // 0x0358(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     HeadNode1;                                               // 0x0360(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Head;                                       // 0x0368(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     FootNode_L;                                              // 0x0370(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Foot_L;                                     // 0x0378(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     FootNode_R;                                              // 0x0380(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Foot_R;                                     // 0x0388(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NMNQ[0x8];                                   // 0x0390(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     KneeNode_L_2;                                            // 0x0398(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Knee_L;                                     // 0x03A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_513R[0x8];                                   // 0x03A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     KneeNode_R_2;                                            // 0x03B0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Knee_R;                                     // 0x03B8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     HandNode_L;                                              // 0x03C0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Hand_L;                                     // 0x03C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PBXO[0x8];                                   // 0x03D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     ElbowNode_L_2;                                           // 0x03D8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Elbow_L;                                    // 0x03E0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     HandNode_R;                                              // 0x03E8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Hand_R;                                     // 0x03F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ITRN[0x8];                                   // 0x03F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     ElbowNode_R_2;                                           // 0x0400(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Elbow_R;                                    // 0x0408(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     Spine1Node;                                              // 0x0410(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Spine_2;                                    // 0x0418(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     Spine2Node;                                              // 0x0420(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Spine_3;                                    // 0x0428(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     Spine3Node;                                              // 0x0430(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Spine_4;                                    // 0x0438(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     Spine4Node;                                              // 0x0440(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Spine_5;                                    // 0x0448(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     ShoulderNode_L;                                          // 0x0450(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Shoulder_L;                                 // 0x0458(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     ShoulderNode_R;                                          // 0x0460(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Shoulder_R;                                 // 0x0468(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     WeaponNode;                                              // 0x0470(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_Weapon;                                     // 0x0478(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     WeaponMagNode;                                           // 0x0480(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                AnimModifier_WeaponMag;                                  // 0x0488(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UStaticMeshComponent*>                        AnimModifierComponents;                                  // 0x0490(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0D1P[0x50];                                  // 0x04A0(0x0050) MISSED OFFSET (PADDING)

	public:
		void LoadCosmetics();
		void GetWeaponFallbackDetails(const struct FWeaponFallbackModel& InWeaponFallbackModel, int32_t* OutSlot, EAttachmentFallbackMode* OutFallbackMode);
		void BP_UpdateEnum(const class FString& EnumName, TArray<class FName> Names);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MenuGameMode
	 * Size -> 0x0000 (FullSize[0x0308] - InheritedSize[0x0308])
	 */
	class AMenuGameMode : public AGameMode
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MenuPartyWidget
	 * Size -> 0x0050 (FullSize[0x02D8] - InheritedSize[0x0288])
	 */
	class UMenuPartyWidget : public UMainMenuPanelWidget
	{
	public:
		class UClass*                                              WaitingDialogWidgetClass;                                // 0x0288(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              RestrictionDialogWidgetClass;                            // 0x0290(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              ReturningDialogWidgetClass;                              // 0x0298(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGenericDialogWidget*                                WaitingDialogWidget;                                     // 0x02A0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGenericDialogWidget*                                RestrictionDialogWidget;                                 // 0x02A8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGenericDialogWidget*                                ReturningDialogWidget;                                   // 0x02B0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              bPerformCreating : 1;                                    // 0x02B8(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PU77[0x17];                                  // 0x02B9(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bHadUserFocus;                                           // 0x02D0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_P22O[0x7];                                   // 0x02D1(0x0007) MISSED OFFSET (PADDING)

	public:
		void UpdateWaitingDialogInfoBP();
		void UpdateReturningDialogInfoBP();
		void UpdateRestrictionDialogInfoBP(const class FText& InConfirmableText);
		void TryEnterParty();
		void RemoveExistingDialogs();
		void ReactOnPrivilegeResult(EUserPrivilegeResult PrivilegeResult);
		void OnPlatformConnectionStatusChanged(bool bIsConnected);
		void OnDeclineReturningDialog();
		void OnCofirmeReturningDialog();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MenuPlayerCameraManager
	 * Size -> 0x0120 (FullSize[0x3480] - InheritedSize[0x3360])
	 */
	class AMenuPlayerCameraManager : public AINSPlayerCameraManager
	{
	public:
		TArray<struct FMenuExternalLight>                          CharacterCustomizationLights;                            // 0x3360(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMenuExternalLight>                          DefaultMenuLights;                                       // 0x3370(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPostProcessComponent*                               CharacterCustomizePostProcess;                           // 0x3380(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8N3G[0x8];                                   // 0x3388(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bUsingCustomizationLights;                               // 0x3390(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G7AD[0x3];                                   // 0x3391(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LightToggleElapsedTime;                                  // 0x3394(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightBlendTime;                                          // 0x3398(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WUV1[0x4];                                   // 0x339C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ACameraActor*                                        MainCamera;                                              // 0x33A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ECharacterAppearanceSlot, class ACameraActor*>        CosmeticSlotCameras;                                     // 0x33A8(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		TMap<ECharacterAppearanceSlot, struct FCameraForSubSlot>   SubSlotCamerasForSlot;                                   // 0x33F8(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
		ECharacterAppearanceSlot                                   CurrentCosmeticSlot;                                     // 0x3448(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UF40[0x3];                                   // 0x3449(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentCosmeticSubSlot;                                  // 0x344C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACameraActor*                                        LoadoutCharacterCamera;                                  // 0x3450(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACameraActor*                                        LoadoutWeaponCamera;                                     // 0x3458(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ACameraActor*                                        AppearanceCharacterCamera;                               // 0x3460(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             SetUsingCustomizationLightsEvent;                        // 0x3468(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6NOT[0x8];                                   // 0x3478(0x0008) MISSED OFFSET (PADDING)

	public:
		void SwitchToMainCamera();
		void SwitchToLoadoutCamera(bool bCharacter);
		void SwitchToCosmeticCamera(ECharacterAppearanceSlot CosmeticSlot, int32_t SubSlot, bool bForce);
		void SwitchToAppearanceCamera();
		void SmoothTransitionToCamera(class ACameraActor* DesiredCamera);
		void SetUsingCustomizationLightsEvent__DelegateSignature(bool bEnabled);
		void SetUsingCustomizationLights(bool bNewUsingCustomizationLights);
		void SetupMainCamera(class ACameraActor* InMainCamera);
		void SetLoadoutCameras(class ACameraActor* InLoadoutCharacterCamera, class ACameraActor* InLoadoutWeaponCamera);
		void SetAppearanceCamera(class ACameraActor* InAppearanceCharacterCamera);
		void RegisterMenuDynamicLights(TArray<class ALight*> InCustomizationLights, TArray<class ALight*> InDefaultLights);
		void RegisterCosmeticCameras(TMap<ECharacterAppearanceSlot, class ACameraActor*> InCosmeticSlotCameras, TMap<ECharacterAppearanceSlot, struct FCameraForSubSlot> InSubSlotCamerasForSlot);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MenuPlayerController
	 * Size -> 0x00C0 (FullSize[0x08F8] - InheritedSize[0x0838])
	 */
	class AMenuPlayerController : public AINSBasePlayerController
	{
	public:
		class UClass*                                              DebugMenuWidget;                                         // 0x0838(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUserWidget*                                         ActiveDebugMenuWidget;                                   // 0x0840(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoadingCosmetics;                                       // 0x0848(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E6QA[0x7];                                   // 0x0849(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              AvailableCosmetics[0x10];                                // 0x0850(0x0010) UNKNOWN PROPERTY: ArrayProperty
		class FScriptMulticastDelegate                             RefreshCosmeticsDelegate;                                // 0x0860(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             PlayerClassChangedDelegate;                              // 0x0870(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class AProfileCharacter*                                   PreviewCharacter;                                        // 0x0880(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AKitPreviewCharacter*                                KitPreviewCharacter;                                     // 0x0888(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AKitPreviewWeapon*                                   KitPreviewWeapon;                                        // 0x0890(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnKitPreviewActorsSet;                                   // 0x0898(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UPlayerInventoryComponent*                           KitMenuInventory;                                        // 0x08A8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMainMenuLoadoutData                                MenuLoadoutData;                                         // 0x08B0(0x0020) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bLoadingMenuSquadLayouts;                                // 0x08D0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoadedMenuSquadLayouts;                                 // 0x08D1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_41QY[0x6];                                   // 0x08D2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnRefreshMenuSquadLayoutsDelegate;                       // 0x08D8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		TArray<class UMenuSquadLayout*>                            LoadedMenuSquadLayouts;                                  // 0x08E8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetupKitPreviewActors(class AKitPreviewCharacter* NewPreviewCharacter, class AKitPreviewWeapon* NewPreviewWeapon);
		void SetPreviewCharacter(class AProfileCharacter* NewPreviewCharacter);
		void SetLoadoutMenuSupplyPoints(int32_t SupplyPoints);
		void SetLoadoutMenuSquadLayoutCollection(class UMenuSquadLayout* MenuSquadLayout, int32_t SectionIndex);
		void SetLoadoutMenuSquadLayoutAndClass(class USquadLayout* SquadLayout, class UPlayerClass* PlayerClass, bool bIsNight);
		void SaveLoadoutMenuLoadout(bool bIsNight);
		void RefreshMenuSquadLayoutsDelegate__DelegateSignature();
		void RefreshCosmeticsDelegate__DelegateSignature();
		void PlayerClassChangedDelegate__DelegateSignature(class UPlayerClass* PlayerClass);
		void OnAvailableCosmeticsLoaded();
		void LoadMenuSquadLayouts();
		void KitPreviewActorsSetDelegate__DelegateSignature(class AKitPreviewCharacter* KitPreviewCharacter, class AKitPreviewWeapon* KitPreviewWeapon);
		void ClearLoadoutMenuData();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MenuSquadLayout
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UMenuSquadLayout : public UPrimaryDataAsset
	{
	public:
		class UFactionDefinition*                                  Faction;                                                 // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMenuSquadLayoutSection>                     Sections;                                                // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ModalPopupWidget
	 * Size -> 0x00B0 (FullSize[0x02E0] - InheritedSize[0x0230])
	 */
	class UModalPopupWidget : public UUserWidget
	{
	public:
		class FText                                                MessageText;                                             // 0x0230(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                ConfirmText;                                             // 0x0248(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                CancelText;                                              // 0x0260(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BUI5[0x30];                                  // 0x0278(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKeyEvent                                           KeyEvent;                                                // 0x02A8(0x0038) BlueprintVisible, NativeAccessSpecifierPublic

	public:
		void SetVisibleConfirmBtn(bool bVisible);
		void SetVisibleCancelBtn(bool bVisible);
		void OnUpdatedText();
		void OnConfirmed();
		void OnCancelled();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ModData
	 * Size -> 0x00E8 (FullSize[0x0118] - InheritedSize[0x0030])
	 */
	class UModData : public UDataAsset
	{
	public:
		class FText                                                InGameName;                                              // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FString                                              WebsiteUrl;                                              // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequiredByClients;                                      // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MG6T[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FModPrimaryAssetDirectory>                   PrimaryAssetDirectories;                                 // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, struct FLoadingScreenMap>              LoadingScreens;                                          // 0x0070(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<class FString, struct FLoadingScreenMap>              MapThumbnails;                                           // 0x00C0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bOnlyContainsMaps;                                       // 0x0110(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WY08[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ModSubsystem
	 * Size -> 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
	 */
	class UModSubsystem : public UEngineSubsystem
	{
	public:
		unsigned char                                              UnknownData_B7NP[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ServerDefaultMapPostModLoad;                             // 0x0048(0x0010) ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMountedMod>                                 ModList;                                                 // 0x0058(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EModPrimaryAssetType, struct FModPrimaryAssetDescription> ModPrimaryAssetTypes;                                    // 0x0068(0x0050) Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5JUW[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (PADDING)

	public:
		void RenewToken();
		void OnSubscribedModActivated(const struct FModState& ModState, bool bIsUpToDate);
		void OnOnlineAuthStateChanged(EModPlatformAuthState NewAuthState);
		void OnModDeactivatedFromCloud(const struct FModState& ModState);
		void OnInitialServerModDownloadsComplete();
		void OnAcceptedServiceTerms();
		void FindThumbnailForLevel(const class FString& LevelName, const class FString& Lighting);
		void FindLoadingScreenForLevel(const class FString& LevelName, const class FString& Lighting);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MountedWeapon
	 * Size -> 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
	 */
	class AMountedWeapon : public AActor
	{
	public:
		unsigned char                                              UnknownData_V3FQ[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                MountedGunBase;                                          // 0x0228(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                MountedGunYaw;                                           // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                YawAttachPoint;                                          // 0x0238(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                WeaponAttachPoint;                                       // 0x0240(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVehicleSeatComponent*                               VehicleSeat;                                             // 0x0248(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              WeaponClass;                                             // 0x0250(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              WeaponAnimInstanceClass;                                 // 0x0258(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          HintImage;                                               // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnMountedWeaponReplicated();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MusicDirector
	 * Size -> 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
	 */
	class UMusicDirector : public UObject
	{
	public:
		unsigned char                                              UnknownData_A3VW[0x48];                                  // 0x0028(0x0048) MISSED OFFSET (PADDING)

	public:
		void OnUIMusicBanksLoaded();
		void MusicDirectorStateUpdate__DelegateSignature(EMusicDirectorState OldState, EMusicDirectorState NewState);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MusicManagerComponent
	 * Size -> 0x00C0 (FullSize[0x02B0] - InheritedSize[0x01F0])
	 */
	class UMusicManagerComponent : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_0YTA[0xA8];                                  // 0x01F0(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGameMusicComponent>                         ActiveComponents;                                        // 0x0298(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_B358[0x8];                                   // 0x02A8(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnPlayerMusicUpdated(const struct FPlayingMusic& PlayingMusic);
		void OnMusicDirectorStateChange(EMusicDirectorState OldState, EMusicDirectorState NewState);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator
	 * Size -> 0x0230 (FullSize[0x02E0] - InheritedSize[0x00B0])
	 */
	class UMutator : public UActorComponent
	{
	public:
		class FText                                                DisplayName;                                             // 0x00B0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic
		class FText                                                Author;                                                  // 0x00C8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x00E0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              MutualExclusionGroups[0x50];                             // 0x00F8(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              MinimumCompatibleGamemode[0x28];                         // 0x0148(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FRulesetGameModeRulesMinimal                        GlobalRules;                                             // 0x0170(0x00C0) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              GameModeRules[0x50];                                     // 0x0230(0x0050) UNKNOWN PROPERTY: MapProperty
		TArray<class FName>                                        AdditionalGameTags;                                      // 0x0280(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompetitiveRules;                                       // 0x0290(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideGameModeText;                                   // 0x0291(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VXBA[0x6];                                   // 0x0292(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                OverridenGameModeName;                                   // 0x0298(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bFormatOverrideGameModeName;                             // 0x02B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A8GV[0x7];                                   // 0x02B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FText>                                        OverridenGameModeRules;                                  // 0x02B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAppendOverridenRules;                                   // 0x02C8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N9MF[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSoftObjectPath>                             AdditionalAssets;                                        // 0x02D0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool OnTextMessageSent(class AINSPlayerController* Speaker, const class FText& Message, bool bTeamOnly);
		void OnTeamInitialized(class ATeamInfo* Team);
		void OnSwapSides();
		void OnRoundStarted();
		void OnRoundReset();
		void OnRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningTeam);
		void OnPlayerTeamChanged(class AController* Controller, unsigned char NewTeamId, bool bForced, bool bDidKillPlayer);
		bool OnPlayerTakeAnyDamage(class AINSSoldier* Victim, class AController* Attacker, class AActor* DamageCauser, float* OutDamage);
		void OnPlayerSpawned(class AINSSoldier* Soldier, class AController* NewPlayer, const struct FRotator& StartRotation);
		void OnPlayerPostInitialize(class AController* Controller);
		void OnPlayerLogout(class AController* Controller);
		void OnPlayerLogin(class APlayerController* PlayerController, const class FString& Portal, const class FString& Options);
		void OnPlayerKilledAnyDamage(class AINSSoldier* Victim, float KillingDamage, class AController* Killer, class AController* Assister, class AActor* DamageCauser);
		void OnPlayerClassChanged(class AController* Controller, class UPlayerClass* PlayerClass);
		void OnObjectiveRigged(class AObjectiveDestructible* Objective, class AINSSoldier* Rigger, class AProjectileBase* SpawnedExplosive);
		void OnObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers, bool bCanScore);
		void OnObjectiveChangeOwnership(class AObjectiveBase* Objective, unsigned char NewOwners);
		void OnObjectiveBeginRig(class AObjectiveDestructible* Objective, class AINSSoldier* Rigger);
		void OnGameStateInitialized(class AINSGameState* InGameState);
		void OnGameOver();
		void OnFactionsInitialized(TArray<class ATeamInfo*> Teams);
		void OnCaptureObjectiveStartCapture(class AObjectiveCapturable* Objective, unsigned char NewCapturingTeam);
		void OnCaptureObjectiveProgressTick(class AObjectiveCapturable* Objective, unsigned char CapturingTeamId, unsigned char TeamWithMostPlayersId, TArray<class AINSPlayerState*> Tickers);
		void OnCaptureObjectiveProgressReset(class AObjectiveCapturable* Objective, TArray<class AINSPlayerState*> Resetters, float MaxCaptureProgress);
		void OnCaptureObjectiveChangeOwnership(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers, bool bCanScore);
		void InitializeMutatorPostLoad();
		void InitializeMutator(class AINSGameMode* GameMode, const class FString& Options);
		bool GivePlayerInventory(class AINSSoldier* Player, bool bFromResupply);
		bool GetRulesForGameModeCopy(class UClass* GameMode, struct FRulesetGameModeRulesMinimal* OutRules);
		void GetRequiredAssets();
		class AINSGameMode* GetOwnerGameMode();
		bool CanItemDrop(class AItemBase* Item, class AINSSoldier* Owner, bool* bCanDrop);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MutatorStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UMutatorStatics : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_GetMutatorDisplayNames(TArray<class FName> InNames, TArray<class FText>* OutDisplayNames);
		void STATIC_GetMutatorDisplayName(const class FName& InName, class FText* OutDisplayName);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_CoopBase
	 * Size -> 0x00B0 (FullSize[0x0390] - InheritedSize[0x02E0])
	 */
	class UMutator_CoopBase : public UMutator
	{
	public:
		class USquadLayout*                                        AllFactionsBotSquadLayoutOverride;                       // 0x02E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              BotSquadLayoutOverride[0x50];                            // 0x02E8(0x0050) UNKNOWN PROPERTY: MapProperty
		class UCheckpointCounterAttackTypes*                       CounterAttackOverride;                                   // 0x0338(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CounterAttackOverridesByFaction[0x50];                   // 0x0340(0x0050) UNKNOWN PROPERTY: MapProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_HeadshotOnly
	 * Size -> 0x0008 (FullSize[0x02E8] - InheritedSize[0x02E0])
	 */
	class UMutator_HeadshotOnly : public UMutator
	{
	public:
		bool                                                       bCheckMeleeDamage;                                       // 0x02E0(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAffectsHumans;                                          // 0x02E1(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAffectsBots;                                            // 0x02E2(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CPLW[0x5];                                   // 0x02E3(0x0005) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_HotPotato
	 * Size -> 0x0058 (FullSize[0x0338] - InheritedSize[0x02E0])
	 */
	class UMutator_HotPotato : public UMutator
	{
	public:
		unsigned char                                              GrenadeClass[0x28];                                      // 0x02E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              ThrowbackWeaponClass[0x28];                              // 0x0308(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       bIgnoreHeadshots;                                        // 0x0330(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBotsOnly;                                               // 0x0331(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KZXF[0x6];                                   // 0x0332(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_LoadoutBase
	 * Size -> 0x0020 (FullSize[0x0300] - InheritedSize[0x02E0])
	 */
	class UMutator_LoadoutBase : public UMutator
	{
	public:
		TArray<struct FLoadoutWeapon>                              Items;                                                   // 0x02E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRandomizeSelection;                                     // 0x02F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStripItems;                                             // 0x02F1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStripLockedItems;                                       // 0x02F2(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPurchaseItems;                                          // 0x02F3(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLockLoadout;                                            // 0x02F4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLockItemSlots;                                          // 0x02F5(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_45CN[0x2];                                   // 0x02F6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LockedItemSlots;                                         // 0x02F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyToBots;                                            // 0x02FC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSkipLoadoutMenu;                                        // 0x02FD(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ADYF[0x2];                                   // 0x02FE(0x0002) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_NoDrops
	 * Size -> 0x0008 (FullSize[0x02E8] - InheritedSize[0x02E0])
	 */
	class UMutator_NoDrops : public UMutator
	{
	public:
		bool                                                       bAffectsHumans;                                          // 0x02E0(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAffectsBots;                                            // 0x02E1(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7Y3W[0x6];                                   // 0x02E2(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_OutpostBase
	 * Size -> 0x0030 (FullSize[0x0310] - InheritedSize[0x02E0])
	 */
	class UMutator_OutpostBase : public UMutator
	{
	public:
		unsigned char                                              OverrideWaveConfig[0x28];                                // 0x02E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UOutpostWaveConfig*                                  LoadedOverrideWaveConfig;                                // 0x0308(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_SupplyBase
	 * Size -> 0x0010 (FullSize[0x02F0] - InheritedSize[0x02E0])
	 */
	class UMutator_SupplyBase : public UMutator
	{
	public:
		int32_t                                                    InitialSupply;                                           // 0x02E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideMaxSupply;                                      // 0x02E4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1ZRA[0x3];                                   // 0x02E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxSupply;                                               // 0x02E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowLoadoutSaving;                                     // 0x02EC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RTWT[0x3];                                   // 0x02ED(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_SurvivalBase
	 * Size -> 0x0090 (FullSize[0x0370] - InheritedSize[0x02E0])
	 */
	class UMutator_SurvivalBase : public UMutator
	{
	public:
		unsigned char                                              OverrideWaveConfig[0x28];                                // 0x02E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class USurvivalWaveConfig*                                 LoadedOverrideWaveConfig;                                // 0x0308(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              OverrideNightWaveConfig[0x28];                           // 0x0310(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class USurvivalWaveConfig*                                 LoadedOverrideNightWaveConfig;                           // 0x0338(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              OverrideWeaponCratePool[0x28];                           // 0x0340(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class URandomWeaponCrateDataAsset*                         LoadedOverrideWeaponCratePool;                           // 0x0368(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_Ultralethal
	 * Size -> 0x0000 (FullSize[0x02E0] - InheritedSize[0x02E0])
	 */
	class UMutator_Ultralethal : public UMutator
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Mutator_Vampirism
	 * Size -> 0x0008 (FullSize[0x02E8] - InheritedSize[0x02E0])
	 */
	class UMutator_Vampirism : public UMutator
	{
	public:
		bool                                                       bCountFriendlyFire;                                      // 0x02E0(0x0001) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9JLO[0x3];                                   // 0x02E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxHealth;                                               // 0x02E4(0x0004) BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavAreaExtended
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	class UNavAreaExtended : public UNavArea
	{
	public:
		unsigned char                                              UnknownData_EQLV[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavArea_DeathArea
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UNavArea_DeathArea : public UNavAreaExtended
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavArea_DynamicAccurateObstacle
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_DynamicAccurateObstacle : public UNavArea_Obstacle
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavArea_Hazard
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UNavArea_Hazard : public UNavAreaExtended
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavArea_SelectedEntrance
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_SelectedEntrance : public UNavArea_Default
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavArea_SmokeArea
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UNavArea_SmokeArea : public UNavAreaExtended
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavArea_UnwantedEntrance
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavArea_UnwantedEntrance : public UNavArea_Obstacle
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavQueryFilter_ExcludeDanger
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavQueryFilter_ExcludeDanger : public UNavigationQueryFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavQueryFilter_ExcludeHazards
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavQueryFilter_ExcludeHazards : public UNavigationQueryFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NavQueryFilter_IgnoreDeathArea
	 * Size -> 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
	 */
	class UNavQueryFilter_IgnoreDeathArea : public UNavigationQueryFilter
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NoiseLibrary
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UNoiseLibrary : public UBlueprintFunctionLibrary
	{
	public:
		float STATIC_SmoothNoise(int32_t X);
		float STATIC_PerlinNoise(float X, float Persistence, int32_t Octaves);
		float STATIC_Noise(int32_t N);
		float STATIC_InterpolatedNoise(float X);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.NonVaultingVolume
	 * Size -> 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
	 */
	class ANonVaultingVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UObjectiveAchievement : public USandstormAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveCapturedAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UObjectiveCapturedAchievement : public USandstormAchievement
	{
	public:
		void OnRecievedObjectiveCaptured(class AINSPlayerController* PC, class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CarryingAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UCarryingAchievement : public USandstormAchievement
	{
	public:
		void OnRecievedObjectiveCaptured(class AINSPlayerController* PC, class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TurfWarAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UTurfWarAchievement : public USandstormAchievement
	{
	public:
		void OnRecievedObjectiveReset(class AINSPlayerController* PC, class AObjectiveCapturable* Objective);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveDestructableAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UObjectiveDestructableAchievement : public USandstormAchievement
	{
	public:
		void OnRecievedObjectiveDestroy(class AINSPlayerController* PC, class AObjectiveDestructible* Objective, bool bFromRig);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SpecialDeliveryAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class USpecialDeliveryAchievement : public UObjectiveDestructableAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SelfDestructiveAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class USelfDestructiveAchievement : public UObjectiveDestructableAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DrainedAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UDrainedAchievement : public UObjectiveDestructableAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveAction
	 * Size -> 0x0010 (FullSize[0x03C8] - InheritedSize[0x03B8])
	 */
	class AObjectiveAction : public AObjectiveBase
	{
	public:
		EObjectiveActionType                                       ActionType;                                              // 0x03B8(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8HR9[0x7];                                   // 0x03B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_CompletionDelay;                             // 0x03C0(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetActionCompleted();
		void OnEndObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnBeginObjectiveOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void ActionPerformedBySoldier(class AINSSoldier* Soldier, EObjectiveActionType InputActionType, float CompletionDelay);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveBriefing
	 * Size -> 0x0080 (FullSize[0x02B0] - InheritedSize[0x0230])
	 */
	class UObjectiveBriefing : public UUserWidget
	{
	public:
		class UTextBlock*                                          BriefingHeading;                                         // 0x0230(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHorizontalBox*                                      CaptureObjectiveList;                                    // 0x0238(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USizeBox*                                            ObjectiveBriefingContainer;                              // 0x0240(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBorder*                                             ObjectiveBriefingTeamColorBorder;                        // 0x0248(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextBlock*                                          ObjectiveTypePopupText;                                  // 0x0250(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextBlock*                                          ObjectiveTypeScoreboardText;                             // 0x0258(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWidgetSwitcher*                                     ObjectiveTypeTextSwitcher;                               // 0x0260(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPopUp;                                                  // 0x0268(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVisible;                                                // 0x0269(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bQueued;                                                 // 0x026A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_V6TO[0x1];                                   // 0x026B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastObjectiveBriefingStartTime;                          // 0x026C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ObjectiveBriefingDuration;                               // 0x0270(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2E4W[0x4];                                   // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ObjectiveBriefingObjectiveTypeText;                      // 0x0278(0x0018) BlueprintVisible, Protected, NativeAccessSpecifierProtected
		bool                                                       bLastObjectiveWasAttack;                                 // 0x0290(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bFadingIn;                                               // 0x0291(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bFadingOut;                                              // 0x0292(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2ZKV[0x1];                                   // 0x0293(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FadeStartTime;                                           // 0x0294(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FadeDuration;                                            // 0x0298(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPendingObjectiveUpdate;                                 // 0x029C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GGXC[0x3];                                   // 0x029D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastObjectiveUpdateTimestamp;                            // 0x02A0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ObjectiveUpdateDelay;                                    // 0x02A4(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AINSPlayerController*                                CurrentPlayerController;                                 // 0x02A8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void PopulateObjectiveBriefing(bool bNewObjective);
		void OnScoreboardOpened();
		void OnQueueObjectiveBriefing();
		void OnObjectiveDestroyed(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Attackers);
		void OnObjectiveCaptured(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
		void OnExitSpawnZone();
		class UUserWidget* DoCreateDestructibleObjectiveIcon();
		class UUserWidget* DoCreateCapturingObjectiveIcon();
		void CheckForObjectiveUpdateQueue(unsigned char ObjectiveId);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveCharacter
	 * Size -> 0x0020 (FullSize[0x03D8] - InheritedSize[0x03B8])
	 */
	class AObjectiveCharacter : public AObjectiveBase
	{
	public:
		class UClass*                                              CharacterClass;                                          // 0x03B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AINSSoldier*                                         SpawnedCharacter;                                        // 0x03C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AINSAISoldierController*                             SpawnedController;                                       // 0x03C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Y137[0x8];                                   // 0x03D0(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveDestructible
	 * Size -> 0x0200 (FullSize[0x05B8] - InheritedSize[0x03B8])
	 */
	class AObjectiveDestructible : public AObjectiveBase
	{
	public:
		unsigned char                                              UnknownData_OXKH[0x10];                                  // 0x03B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                MeshComponent;                                           // 0x03C8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         MeshDefault;                                             // 0x03D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         MeshDamaged;                                             // 0x03D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         MeshDisabled;                                            // 0x03E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         MeshDestroyed;                                           // 0x03E8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMaterialSwap>                               DamagedMaterialSwap;                                     // 0x03F0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMaterialSwap>                               CleanMaterialSwap;                                       // 0x0400(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDestructibleObjectiveState                                State;                                                   // 0x0410(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V88X[0x7];                                   // 0x0411(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent*                            ParticleSystemComponent;                                 // 0x0418(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ParticleSystemDamaged;                                   // 0x0420(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ParticleSystemDisabled;                                  // 0x0428(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ParticleSystemDestroyed;                                 // 0x0430(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AudioComponent;                                          // 0x0438(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEventDamaged;                                       // 0x0440(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEventDisabled;                                      // 0x0448(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEventDestroyed;                                     // 0x0450(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEventRig;                                           // 0x0458(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEventRigCancel;                                     // 0x0460(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDecoy;                                                  // 0x0468(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTakeDamage;                                             // 0x0469(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckDamageType;                                        // 0x046A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckFriendlyFire;                                      // 0x046B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowUnknownDamageSources;                              // 0x046C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T77Y[0x3];                                   // 0x046D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialHealth;                                           // 0x0470(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Health;                                                  // 0x0474(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageLogComponent*                                 DamageLogComponent;                                      // 0x0478(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KZ0M[0x24];                                  // 0x0480(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UseYawViewLimit;                                         // 0x04A4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          RigUIIcon;                                               // 0x04A8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowRigging;                                           // 0x04B0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H613[0x7];                                   // 0x04B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UClass*, float>                                 DamageTypeModifiersMap;                                  // 0x04B8(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      RiggingTime;                                             // 0x0508(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K55D[0x4];                                   // 0x050C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              RiggingExplosiveType[0x28];                              // 0x0510(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class FName                                                RiggingAttachSocket;                                     // 0x0538(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AProjectileBase*>                             RiggedExplosives;                                        // 0x0540(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSSoldier*>                                 CurrentRiggers;                                          // 0x0550(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AItemRemoteExplosive*>                        CurrentlyRiggingExplosives;                              // 0x0560(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionDamageMinAmount;                                // 0x0570(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionDamageMaxAmount;                                // 0x0574(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionDamageMinRadius;                                // 0x0578(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionDamageMaxRadius;                                // 0x057C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ExplosionDamageTypeClass;                                // 0x0580(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShellShockRadius;                                        // 0x0588(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShellShockDuration;                                      // 0x058C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionPhysicsForce;                                   // 0x0590(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MF96[0x4];                                   // 0x0594(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UExplosionPenetrationSettings*                       ExplosionPenetrationSettings;                            // 0x0598(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FoliageExplosionRadiusFactor;                            // 0x05A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FoliageInteractionLifeSpan;                              // 0x05A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnDestructibleObjectiveStateChangedDelegate;             // 0x05A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void OnStateChanged();
		void OnRigObjective(class AINSSoldier* Pawn);
		void OnRep_State();
		void OnPlayDestructionEffects();
		void OnObjectiveDestroyed(class AController* EventInstigator, class AActor* DamageCauser, unsigned char OriginalOwners);
		void OnDestructibleObjectiveStateChangedDelegate__DelegateSignature(class AObjectiveDestructible* Objective, EDestructibleObjectiveState NewState);
		void MulticastPlayDestructionEffects();
		void MulticastCancelRigObjective(class AINSSoldier* Pawn);
		void MulticastBeginRigObjective(class AINSSoldier* Pawn);
		bool IsPlanter(class AINSSoldier* Soldier);
		bool IsDisabledOrDestroyed();
		bool IsDisabled();
		bool IsDestroyed();
		bool IsDecoy();
		bool HasRiggedExplosives();
		bool HasLiveRiggedExplosives();
		class AProjectileBase* GetPlantedProjectile(class AINSSoldier* Soldier);
		void ChangeState(EDestructibleObjectiveState NewState);
		bool BlueprintCanTakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
		void ApplyExplosionDamageAndPhysics(class AController* EventInstigator, class AActor* DamageCauser);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveIcon
	 * Size -> 0x00F0 (FullSize[0x0320] - InheritedSize[0x0230])
	 */
	class UObjectiveIcon : public UUserWidget
	{
	public:
		bool                                                       bShowCaptureProgress;                                    // 0x0230(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowCaptureProgressSpectator;                           // 0x0231(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFloatingIcon;                                           // 0x0232(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8OMC[0x1];                                   // 0x0233(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceScaleMin;                                        // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceScaleMax;                                        // 0x0238(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceAlphaMin;                                        // 0x023C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceAlphaMax;                                        // 0x0240(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceUnitsMin;                                        // 0x0244(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceUnitsMax;                                        // 0x0248(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlphaIronsightMin;                                       // 0x024C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlphaIronsightMax;                                       // 0x0250(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlphaMin;                                                // 0x0254(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlphaMax;                                                // 0x0258(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeDotMin;                                              // 0x025C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeDotMax;                                              // 0x0260(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DotMin;                                                  // 0x0264(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DotMax;                                                  // 0x0268(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DotScaleMin;                                             // 0x026C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DotScaleMax;                                             // 0x0270(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Distance;                                                // 0x0274(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOnScreen;                                             // 0x0278(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LQD6[0x3];                                   // 0x0279(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DotAngle;                                                // 0x027C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultBackgroundAlpha;                                  // 0x0280(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DefaultBackgroundAlphaInactive;                          // 0x0284(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BackgroundAlpha;                                         // 0x0288(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BackgroundAlphaInactive;                                 // 0x028C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DefaultFillAlpha;                                        // 0x0290(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DefaultFillAlphaInactive;                                // 0x0294(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FillAlpha;                                               // 0x0298(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FillAlphaInactive;                                       // 0x029C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DefaultBorderAlpha;                                      // 0x02A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DefaultBorderAlphaInactive;                              // 0x02A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BorderAlpha;                                             // 0x02A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BorderAlphaInactive;                                     // 0x02AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bActiveObjective;                                        // 0x02B0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KM6M[0x7];                                   // 0x02B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            BackgroundTexture;                                       // 0x02B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                            CapturePointTexture;                                     // 0x02C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                            BackgroundDestructibleTexture;                           // 0x02C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture*                                            DestructibleTexture;                                     // 0x02D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YXEM[0x28];                                  // 0x02D8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextBlock*                                          TextObjectiveLetter;                                     // 0x0300(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UScaleBox*                                           IconScaleBox;                                            // 0x0308(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              CaptureProgress;                                         // 0x0310(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBorder*                                             ObjectiveBorder;                                         // 0x0318(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void UpdateProgress(class UImage* Image);
		void UpdateIconProgress(float OpacityAlpha);
		void UpdateIcon(float InDistance, float InFrontDot, float InRightDot, float InIronsightFrac, bool bInIsOnScreen);
		bool ShouldShowObjectiveCaptureProgress();
		void SetObjective(class AObjectiveBase* NewObjective);
		void OnSetObjective(class AObjectiveBase* NewObjective);
		void OnRemoveObjective(class AObjectiveBase* OldObjective);
		void OnPlayerChangeTeam(unsigned char TeamId, class ATeamInfo* TeamInfo);
		void OnObjectiveIsCounterAttacked(bool bNewCounterAttackState, class AObjectiveBase* InObjective);
		void OnObjectiveChangeOwner(class AObjectiveBase* InObjective, unsigned char NewOwners);
		void OnObjectiveChangeCapturingTeam(class AObjectiveBase* InObjective, unsigned char NewCapturers);
		void OnObjectiveActive(bool bNewActiveState, class AObjectiveBase* InObjective);
		void OnDestructibleObjectiveStateChanged(class AObjectiveDestructible* InObjective, EDestructibleObjectiveState NewState);
		bool IsObjectiveContested();
		EObjectiveType GetObjectiveType();
		EObjectiveRelationship GetObjectiveRelationship();
		class FText GetObjectiveLetter();
		struct FLinearColor GetObjectiveIconFillColorAndOpacity();
		struct FLinearColor GetObjectiveIconColorAndOpacity();
		struct FLinearColor GetObjectiveIconBorderColorAndOpacity();
		float GetObjectiveDistance();
		struct FLinearColor GetObjectiveColor();
		float GetObjectiveCaptureProgress();
		class AObjectiveBase* GetObjective();
		struct FSlateColor GetMainOpacity();
		struct FSlateBrush GetIconMaterial();
		struct FSlateColor GetIconCaptureProgressColorAndOpacity();
		ESlateVisibility GetIconBorderVisibility();
		class FText GetFormattedObjectiveDistance();
		struct FLinearColor GetCapturingColor();
		struct FSlateBrush GetBackgroundMaterial();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ObjectiveTruck
	 * Size -> 0x0020 (FullSize[0x05D8] - InheritedSize[0x05B8])
	 */
	class AObjectiveTruck : public AObjectiveDestructible
	{
	public:
		TArray<class UPhysicalMaterial*>                           WeakPointMaterials;                                      // 0x05B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UseSocket;                                               // 0x05C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxUseSocketDistance;                                    // 0x05D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DOP7[0x4];                                   // 0x05D4(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.OnlineInventorySubsystem
	 * Size -> 0x01A8 (FullSize[0x01D8] - InheritedSize[0x0030])
	 */
	class UOnlineInventorySubsystem : public ULocalPlayerSubsystem
	{
	public:
		unsigned char                                              UnknownData_9JNE[0x28];                                  // 0x0030(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LastCosmeticVoiceSamplePlayed;                           // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OJFB[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnActiveClaimDialogFocusDelegate;                        // 0x0060(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCosmeticEquippedDelegate;                              // 0x0070(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCosmeticRemovedFromSlotDelegate;                       // 0x0080(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnPreferredFactionChangedDelegate;                       // 0x0090(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnReceivedNewItemClaims;                                 // 0x00A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		int64_t                                                    LastInventoryRequestTime;                                // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     InventoryRequestRetries;                                 // 0x00B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6D83[0x17];                                  // 0x00B9(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnQueryEntitlementsComplete;                             // 0x00D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bLoadingEntitledItems;                                   // 0x00E0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3K77[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOnlineInventoryOwnedItem>                   EntitledItems;                                           // 0x00E8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnOwnedItemsLoadingCompleteDelegate;                     // 0x00F8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnRequestPurchaseInventoryUpdated;                       // 0x0108(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FString                                              PlayerInventoryRequestError;                             // 0x0118(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EntitlementsOSS;                                         // 0x0128(0x0008) ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1GJF[0x8];                                   // 0x0130(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, class UClass*>                         PlatformClaimItems;                                      // 0x0138(0x0050) UObjectWrapper, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_0ULE[0x50];                                  // 0x0188(0x0050) MISSED OFFSET (PADDING)

	public:
		bool ValidateCosmeticOwnership(struct FProfileCharacterCosmeticState* State);
		void SwitchToFaction(class FName* SelectedFaction);
		void SwitchFaction();
		void SetSelectedPresetName(const class FText& InPresetName);
		void SetSecuritySelectedGender(ECharacterGender NewGender);
		void SaveCurrentStateAsPreset(class FText* PresetName, class FText* PresetDesignation);
		void ResetCurrentCosmeticStateToDefault();
		void RequestPlayerBalance();
		void RequestInventoryTransaction(int32_t ItemDefId);
		void ReQueryEntitlements();
		void RemovePreset(class FText* PresetName);
		void RemoveCosmeticsInSlot(ECharacterAppearanceSlot Slot, int32_t SubSlot, bool bCallDelegate);
		void RemoveCosmeticFromShoppingCart(int32_t ItemId);
		void RemoveCosmeticFromCurrentState(const struct FSelectedCosmetic& Cosmetic);
		void RefreshEntitledCosmetics();
		void RandomizeCosmeticsForPreferredFaction();
		void PlaySampleFromCosmeticVoiceDictionary(int32_t ItemId);
		void PlayRadialSampleFromCosmeticVoiceDictionary(int32_t ItemId, int32_t SampleIndex);
		bool PlayerOwnsItemId(int32_t ItemId);
		bool OpenPlatformStoreUI();
		bool OpenDLCLinkForBundle(class UClass* BundleClass);
		void OnStoreComplete__DelegateSignature();
		void OnShowStoreUIClosed(bool bPurchased);
		void OnRequestSellInventoryUpdated__DelegateSignature();
		void OnRequestPurchaseInventoryUpdated__DelegateSignature(int32_t ItemDefId);
		void OnRequestInventoryTransactionListCompleted__DelegateSignature();
		void OnRequestInventoryTransactionInitCompleted__DelegateSignature();
		void OnRequestInventoryTransactionCompleted__DelegateSignature();
		void OnReceivedNewItemClaims__DelegateSignature(const struct FOnlineItemClaimResult& Claims);
		void OnQueryEntitlementsComplete__DelegateSignature();
		void OnPreferredFactionChangedDelegate__DelegateSignature(const class FName& Faction);
		void OnOwnedItemsLoadingCompleteDelegate__DelegateSignature();
		void OnCosmeticRemovedFromSlotDelegate__DelegateSignature(ECharacterAppearanceSlot Slot, int32_t SubSlot);
		void OnCosmeticEquippedDelegate__DelegateSignature(const struct FSelectedCosmetic& Cosmetic, ECharacterAppearanceSlot Slot, int32_t SubSlot, bool bActive);
		void LoadPreset(class FText* PresetName);
		bool IsEntitledToCosmetic(class UClass* Cosmetic);
		bool IsCosmetictItemUnview(class UClass* CosmeticClass, int32_t ItemId);
		bool IsCosmeticIdEquipped(int32_t ItemId, bool bIncludeBase);
		bool IsCosmeticEquippedInCurrentState(const struct FSelectedCosmetic& Cosmetic);
		bool IsCosmeticEquipped(class UClass* Cosmetic, bool bActive);
		bool HasPreOrderEntitlement();
		bool HasEquippedCosmeticForSlot(ECharacterAppearanceSlot Slot, int32_t SubSlot);
		void GrantCosmeticEntitlement(class UClass* Cosmetic, bool bShouldEquip);
		void GiveDefaultCosmeticsForPreferredFaction();
		int32_t GetTotalEntitledCosmeticsForSubSlot(ECharacterAppearanceSlot Slot, int32_t SubSlot, bool bActive);
		int32_t GetTotalEntitledCosmeticsForSlot(ECharacterAppearanceSlot Slot, bool bActive);
		TArray<int32_t> GetTauntSamplesForCosmetic(int32_t ItemId);
		int32_t GetRandomOwnedCosmeticInSlotForState(const struct FProfileCharacterCosmeticState& CosmeticState, ECharacterAppearanceSlot Slot, int32_t SubSlot);
		struct FProfileCharacterCosmeticState GetPresetCosmeticStateByName(class FText* PresetName);
		int32_t GetLastKnownBalance();
		class UClass* GetEquippedCosmeticForSlot(ECharacterAppearanceSlot Slot, int32_t SubSlot);
		TArray<class UClass*> GetEntitledCosmeticsInSlot(ECharacterAppearanceSlot Slot, int32_t SubSlot, bool bActive);
		class UClass* GetDefaultCosmeticForSlot(const class FName& Faction, ECharacterAppearanceSlot Slot, int32_t SubSlot);
		TArray<class UClass*> GetCosmeticVariationsArray(class UClass* CosmeticClass);
		void GetCosmeticVariations(class UClass* CosmeticClass, TArray<struct FSelectedCosmetic>* CosmeticVariations);
		void GetCosmeticsCountForSlot(const class FName& FactionRestriction, ECharacterAppearanceSlot Slot, int32_t SubSlot, int32_t* CountOwned, int32_t* CountTotal);
		class UClass* GetCosmeticByItemDefId(int32_t ItemDefId);
		struct FProfileCharacterCosmeticState GetCharacterCosmeticState(const class FName& FactionName, bool bIncludeShoppingCart);
		void GetAvailableScoreboardBadges(TArray<struct FScoreboardBadge>* OutBadges);
		void EquipCosmeticByItemId(int32_t ItemId);
		void EquipCosmetic(const struct FSelectedCosmetic& Cosmetic);
		void EmptyShoppingCart(class FName* SelectedFaction);
		bool DoesPlayerOwnCosmeticItemId(int32_t ItemId);
		bool DoesPlayerOwnCosmetic(const struct FSelectedCosmetic& Cosmetic);
		bool DoesPlayerOwnCompetitiveCosmeticItemId(int32_t ItemId);
		bool DoesCosmeticSlotSupportEmpty(ECharacterAppearanceSlot Slot, int32_t SubSlot, const class FName& Faction);
		bool DoesCosmeticSlotContainSubSlots(ECharacterAppearanceSlot Slot);
		bool DoesCosmeticHaveParent(class UClass* Cosmetic);
		bool DoesCosmeticHaveChildren(class UClass* Cosmetic, bool bEquippedOnly);
		bool CanPurchase();
		void AttemptToClaimTutorialCredits();
		void AddNewStoredCosmeticState(class FText* NewStateName);
		void AddCosmeticToShoppingCart(int32_t ItemId);
		void AddCosmeticToCurrentState(const struct FSelectedCosmetic& NewCosmetic);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.OnlineStoreSubsystem
	 * Size -> 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
	 */
	class UOnlineStoreSubsystem : public ULocalPlayerSubsystem
	{
	public:
		unsigned char                                              UnknownData_I1ZP[0x30];                                  // 0x0030(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlatformStoreItemsList                             PlatformStoreItemsList;                                  // 0x0060(0x0010) NativeAccessSpecifierPrivate
		class UStoreHandlerBase*                                   StoreHandler;                                            // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2F4A[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              StoreItems[0x10];                                        // 0x0080(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_NS37[0x18];                                  // 0x0090(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.OSSStatusWidget
	 * Size -> 0x0088 (FullSize[0x02B8] - InheritedSize[0x0230])
	 */
	class UOSSStatusWidget : public UUserWidget
	{
	public:
		EOSSNetworkState                                           PlatformState;                                           // 0x0230(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3NO4[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                PlatformError;                                           // 0x0238(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                PlatformErrorDesc;                                       // 0x0250(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EOSSNetworkState                                           NewWorldState;                                           // 0x0268(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NAOE[0x7];                                   // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                NewWorldError;                                           // 0x0270(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                NewWorldErrorDesc;                                       // 0x0288(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UHorizontalBox*                                      HorizPlatformBox;                                        // 0x02A0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ONZ9[0x10];                                  // 0x02A8(0x0010) MISSED OFFSET (PADDING)

	public:
		void OnPlatformStateUpdated(EOSSNetworkState OldState, EOSSNetworkState NewState);
		void OnNewWorldStateUpdated(EOSSNetworkState OldState, EOSSNetworkState NewState);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.OutpostHUD
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class UOutpostHUD : public UUserWidget
	{
	public:
		class UINSGameUserSettings* GetINSUserSettings();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PainCausingVolumeComponent
	 * Size -> 0x0028 (FullSize[0x0460] - InheritedSize[0x0438])
	 */
	class UPainCausingVolumeComponent : public UBoxComponent
	{
	public:
		unsigned char                                              UnknownData_70L9[0x4];                                   // 0x0438(0x0004) Fix Super Size
		float                                                      TickRate;                                                // 0x043C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageTypeClass;                                         // 0x0440(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TickTimerHandle;                                         // 0x0448(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSSoldier*>                                 TrackedActors;                                           // 0x0450(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnEndAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PerFrameCallQueueWorldSubsystem
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class UPerFrameCallQueueWorldSubsystem : public UWorldSubsystem
	{
	public:
		class UPerFrameCallQueue*                                  PerFrameCallQueue;                                       // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		class UPerFrameCallQueue* GetPerFrameCallQueue();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PerFrameCallQueue
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	class UPerFrameCallQueue : public UObject
	{
	public:
		unsigned char                                              UnknownData_892N[0x18];                                  // 0x0028(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayableArea
	 * Size -> 0x0018 (FullSize[0x0270] - InheritedSize[0x0258])
	 */
	class APlayableArea : public AVolume
	{
	public:
		TArray<class AINSSoldier*>                                 TouchingPlayers;                                         // 0x0258(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWorldHasScenarioPlayableAreas;                          // 0x0268(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScenarioArea;                                           // 0x0269(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayableAreaType                                          PlayableAreaType;                                        // 0x026A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5SRI[0x5];                                   // 0x026B(0x0005) MISSED OFFSET (PADDING)

	public:
		void OnEndAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		bool IsValidPlayableArea();
		bool IsScenarioPlayableArea();
		bool IsOverviewArea();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerAccountStatusAsync
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class UPlayerAccountStatusAsync : public UBlueprintAsyncActionBase
	{
	public:
		class FScriptMulticastDelegate                             OnGetStatusComplete;                                     // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D7J4[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)

	public:
		class UPlayerAccountStatusAsync* STATIC_BeginGetAccountStatus(int32_t UserId);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerClass
	 * Size -> 0x02E8 (FullSize[0x0310] - InheritedSize[0x0028])
	 */
	class UPlayerClass : public UObject
	{
	public:
		class FText                                                PrintName;                                               // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                PrintDescription;                                        // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UTexture2D*                                          ClassIcon;                                               // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerClassFlags;                                        // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_09U6[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          SpecialUIClassIcon;                                      // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          SpecialUIOverviewClassIcon;                              // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowCosmetics;                                         // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowChargeStun;                                        // 0x0079(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A0UM[0x6];                                   // 0x007A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMesh*                                       MeshCharacter;                                           // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMesh*                                       MeshCharacterCosmeticBase;                               // 0x0088(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCharacterAttachedModel>                     CharacterAttachedMeshes;                                 // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMesh*                                       MeshArms;                                                // 0x00A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharacterDialogueDictionary*                        VoiceDictionary;                                         // 0x00A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DefaultGear[0x50];                                       // 0x00B0(0x0050) UNKNOWN PROPERTY: SetProperty
		struct FPlayerAllowedEquipment                             AllowedEquipment;                                        // 0x0100(0x00F0) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              AllowedEquipmentCollections[0x50];                       // 0x01F0(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              ExcludedItems[0x10];                                     // 0x0240(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              ExcludedWeaponUpgrades[0x10];                            // 0x0250(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<class UClass*>                                      ItemsToDestroyOnDeath;                                   // 0x0260(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBotPriorityClass;                                       // 0x0270(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBotRandomizeLoadout;                                    // 0x0271(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U264[0x6];                                   // 0x0272(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBotSkillConfig*                                     CustomBotSkillConfig;                                    // 0x0278(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventLoopedSoundWhileRunning;                          // 0x0280(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoopedSoundShouldIgnoreDialogComponent;                 // 0x0288(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7FJR[0x7];                                   // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ComponentClass;                                          // 0x0290(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAttributeOverrides;                                  // 0x0298(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H728[0x3];                                   // 0x0299(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerClassAttributes                              AttributeOverrides;                                      // 0x029C(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		float                                                      MeleeDamageOutputMultiplier;                             // 0x02D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GameStatsKey;                                            // 0x02DC(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SAK4[0x4];                                   // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLoadoutWeapon>                              DefaultItems;                                            // 0x02E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FSelectedCosmetic>                           ClassSpecialCosmetics;                                   // 0x02F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyClassSpecialCosmetics;                              // 0x0308(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowedEquipmentOnly;                                   // 0x0309(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E0ZZ[0x6];                                   // 0x030A(0x0006) MISSED OFFSET (PADDING)

	public:
		bool PlayerClassHasFlag(EPlayerClassFlags CheckFlag);
		TArray<struct FLoadoutWeapon> GetDefaultItems(bool bIsNight);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerClassComponent
	 * Size -> 0x0000 (FullSize[0x01F0] - InheritedSize[0x01F0])
	 */
	class UPlayerClassComponent : public USceneComponent
	{
	public:
		void OnKilled(class AINSSoldier* Soldier);
		void OnDeactivate(class AINSSoldier* Soldier);
		void OnActivate(class AINSSoldier* Soldier);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerClassVIP
	 * Size -> 0x0010 (FullSize[0x0320] - InheritedSize[0x0310])
	 */
	class UPlayerClassVIP : public UPlayerClass
	{
	public:
		TArray<struct FLoadoutWeapon>                              DefaultNightItems;                                       // 0x0310(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerDetailsWidget
	 * Size -> 0x0040 (FullSize[0x0270] - InheritedSize[0x0230])
	 */
	class UPlayerDetailsWidget : public UUserWidget
	{
	public:
		class FString                                              PlatformId;                                              // 0x0230(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          AssignedAvatar;                                          // 0x0240(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayerName;                                              // 0x0248(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AN2I[0x18];                                  // 0x0258(0x0018) MISSED OFFSET (PADDING)

	public:
		void RequestDetails(const class FString& SteamId, bool bNameOnly);
		void OnTextureUpdated(class UTexture2D* Texture);
		void OnNameUpdated(const class FString& Name);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerEquipmentCollection
	 * Size -> 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
	 */
	class UPlayerEquipmentCollection : public UDataAsset
	{
	public:
		unsigned char                                              Items[0x50];                                             // 0x0030(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              WeaponUpgrades[0x50];                                    // 0x0080(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		bool ContainsWeaponUpgrade(class UClass* Upgrade);
		bool ContainsItem(class UClass* Item);
		void AppendWeaponUpgradesToUpgradeArray(TArray<class UClass*>* OutUpgradeArray);
		void AppendWeaponUpgradesToSoftUpgradeArray();
		void AppendItemsToSoftItemArray();
		void AppendItemsToItemArray(TArray<class UClass*>* OutItemsArray);
		void AppendAllowedEquipmentArray(TArray<struct FPlayerAllowedEquipment>* OutAllowedEquipmentArray);
		void AddWeaponUpgradesToSet();
		void AddItemsToSet();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerInventoryComponent
	 * Size -> 0x0158 (FullSize[0x0228] - InheritedSize[0x00D0])
	 */
	class UPlayerInventoryComponent : public UInventoryComponent
	{
	public:
		class AINSPlayerController*                                OuterPlayerController;                                   // 0x00D0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForMainMenu;                                            // 0x00D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XW6N[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             PurchaseFailDelegate;                                    // 0x00E0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             RefundFailDelegate;                                      // 0x00F0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             AvailableSupplyChangedDelegate;                          // 0x0100(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             TotalSupplyChangedDelegate;                              // 0x0110(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bLoadoutLocked;                                          // 0x0120(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KC6R[0x3];                                   // 0x0121(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LockedItemSlots;                                         // 0x0124(0x0004) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalSupply;                                             // 0x0128(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AvailableSupply;                                         // 0x012C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastAwardedSupply;                                       // 0x0130(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastPurchaseActionTimestamp;                             // 0x0134(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FiremodePreferences[0x50];                               // 0x0138(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              OpticPreferences[0x50];                                  // 0x0188(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              PointShootPreferences[0x50];                             // 0x01D8(0x0050) UNKNOWN PROPERTY: MapProperty

	public:
		void UpdatePointShootPreference(bool Mode);
		void UpdateOpticPreference(int32_t Mode);
		void UpdateFiremodePreference(EFirearmFiremode Firemode);
		void SetLoadout(TArray<struct FBasicLoadoutItem> Loadout);
		void SetItemSlotLocked(EItemSlot ItemSlot, bool Blocked);
		void ServerUpdatePointShootPreference(class UClass* PointShootClass, bool Mode);
		void ServerUpdateOpticPreference(class UClass* OpticClass, int32_t Mode);
		void ServerUpdateFiremodePreference(class UClass* FirearmClass, EFirearmFiremode Firemode);
		void ServerSetLoadout(TArray<struct FBasicLoadoutItem> Loadout);
		void ServerResetLoadout(bool bIsNight);
		void ServerRefundWeaponUpgrade(int32_t WeaponIndex);
		void ServerRefundItem(int32_t Index);
		void ServerPurchaseWeaponUpgrade(int32_t PurchaseIndex);
		void ServerPurchaseItem(int32_t SubSlot);
		void ServerEmptyLoadout();
		void ResetSupplyPoints();
		void ResetLoadoutToPlayerClass(class UPlayerClass* PlayerClass, bool bIsNight);
		void ResetLoadoutLocks();
		void ResetLoadout(bool bIsNight);
		ERefundResult RefundWeaponUpgrade(int32_t WeaponIndex, class UClass* UpgradeClass);
		ERefundResult RefundItem(int32_t Index, bool bCheckSlots, bool bForceLocked);
		EPurchaseResult PurchaseWeaponUpgrade(int32_t PurchaseIndex, class UClass* UpgradeClass);
		void PurchaseLoadoutItem(const struct FLoadoutWeapon& PurchaseWeapon);
		void PurchaseItems(TArray<struct FLoadoutWeapon> InLoadout);
		EPurchaseResult PurchaseItem(class UClass* ItemClass, int32_t SubSlot, bool bLockSlot, bool bSortNow, bool bCheckRedirect);
		void PlayerInventorySupplyChangedDelegate__DelegateSignature(int32_t AvailableSupply);
		void PlayerInventoryRefundFailDelegate__DelegateSignature(ERefundResult Result);
		void PlayerInventoryPurchaseFailDelegate__DelegateSignature(EPurchaseResult Result);
		void OnRep_TotalSupply();
		void OnRep_AvailableSupply();
		bool IsWeaponUpgradeAllowedOnWeapon(class UClass* Upgrade, class UClass* Weapon, bool bIsAlreadyAllowed);
		bool IsWeaponUpgradeAllowed(class UClass* Upgrade);
		bool IsItemSlotLocked(EItemSlot CheckSlot);
		bool IsItemAllowed(class UClass* Item);
		bool HasUpgradeInSlot(int32_t PurchaseIndex, EWeaponUpgradeSlot UpgradeSlot);
		bool HasUpgradeBeenAttachedToWeapon(class UClass* Weapon, class UClass* Upgrade);
		bool HasAllowedWeaponUpgradesForWeapon(class UClass* For);
		bool HasAllowedItemsForSlot(EItemSlot Slot);
		void GiveInventoryItems();
		class UClass* GetUpgradeMutalExclusion(int32_t PurchaseIndex, class UClass* Upgrade);
		int32_t GetSupplyCostForWeaponUpgradeClass(class UClass* WeaponUpgradeClass);
		int32_t GetSupplyCostForWeaponUpgrade(class UWeaponUpgradeComponent* WeaponUpgradeInstance);
		int32_t GetSupplyCostForItemClass(class UClass* ItemClass);
		int32_t GetSupplyCostForItem(class AItemBase* ItemInstance);
		void GetSubslotUnlockItems(EItemSlot Slot, int32_t SubSlot, TArray<class UClass*>* OutItems);
		class USquadLayout* GetSquadLayout();
		int32_t GetSpentSupply();
		bool GetShouldShowSupplyCostForWeaponUpgradeClass(class UClass* WeaponUpgradeClass);
		void GetPotentialCapacityForSlots(TMap<EItemSlot, int32_t>* OutSlotMap);
		int32_t GetPotentialCapacityForSlot(EItemSlot Slot);
		class AINSPlayerState* GetOuterPlayerState();
		class UPlayerClass* GetOuterPlayerClass();
		class UFactionDefinition* GetOuterFaction();
		void GetMutualInclusionsUpgradesForWeapon(class UClass* Upgrade);
		void GetLoadout(TArray<struct FBasicLoadoutItem>* OutLoadout, bool bIncludeLocked);
		int32_t GetItemSlotValue(EItemSlot Slot, int32_t SubSlot);
		int32_t GetItemIndexForSlot(EItemSlot Slot, int32_t SubSlot);
		int32_t GetItemEquippedCount(class UClass* Item);
		int32_t GetItemCountForSlot(EItemSlot Slot);
		struct FStoredInventoryItem STATIC_GetInventoryItem(class UClass* UpgradeForDisplay, const struct FInventorySlot& Weapon);
		bool GetHideIfCannotPurchase(class UClass* Upgrade);
		int32_t GetFirearmsInCategoryCount(EFirearmCategory Category);
		int32_t GetFirearmCategoryLimit(EFirearmCategory Category);
		void GetFilteredWeaponUpgradesForWeaponInSlot(TArray<class UClass*> InUpgrades, class UClass* For, EWeaponUpgradeSlot UpgradeSlot, TArray<class UClass*>* OutResults);
		void GetFilteredWeaponUpgradesForWeapon(TArray<class UClass*> InUpgrades, class UClass* For, TArray<class UClass*>* OutResults);
		void GetFilteredWeaponUpgradesForSlot(TArray<class UClass*> InUpgrades, EWeaponUpgradeSlot UpgradeSlot, TArray<class UClass*>* OutResults);
		void GetFilteredItemsForSlot(TArray<class UClass*> InItems, EItemSlot Slot, TArray<class UClass*>* OutResults, int32_t SubSlot);
		int32_t GetCapacityForSlot(EItemSlot Slot);
		int32_t GetAvailableItemSlot(EItemSlot Slot);
		void GetAllowedWeaponUpgradesForWeaponInSlot(class UClass* For, EWeaponUpgradeSlot UpgradeSlot, TArray<class UClass*>* OutResults);
		void GetAllowedWeaponUpgradesForWeapon(class UClass* For, TArray<class UClass*>* OutResults);
		void GetAllowedWeaponUpgradesForPlayerWithoutSort(TArray<class UClass*>* OutResults);
		void GetAllowedWeaponUpgradesForPlayer(TArray<class UClass*>* OutResults);
		void GetAllowedItemsWithoutSort(TArray<class UClass*>* OutResults);
		void GetAllowedItemsForSlot(EItemSlot Slot, TArray<class UClass*>* OutResults, int32_t SubSlot);
		void GetAllowedItems(TArray<class UClass*>* OutResults);
		void GearCheckWeaponSlots();
		void ForwardInventoryPreferences(class UINSPlayerLocalProfile* Profile);
		void EmptyLoadout(bool bForceLocked);
		void ClientRefundFail(ERefundResult Result);
		void ClientPurchaseFail(EPurchaseResult Result);
		EPurchaseResult CanPurchaseWeaponUpgrade(int32_t PurchaseIndex, class UClass* Upgrade, bool bIsAlreadyAllowed);
		EPurchaseResult CanPurchaseItem(class UClass* Item, int32_t SubSlot, bool bIsAlreadyAllowed);
		void AwardSupplyPoints(int32_t Amount);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerReportsAsync
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UPlayerReportsAsync : public UBlueprintAsyncActionBase
	{
	public:
		class FScriptMulticastDelegate                             OnSendReportComplete;                                    // 0x0030(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UINSGameInstance*                                    INSGameInstance;                                         // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HEBH[0x68];                                  // 0x0048(0x0068) MISSED OFFSET (PADDING)

	public:
		class UPlayerReportsAsync* STATIC_BeginReportSubmit(class UINSGameInstance* INSGameInstance, EReportCategoryEnum Category, const struct FUniqueNetIdRepl& ReporterId, const struct FUniqueNetIdRepl& TargetId, const class FString& Comments);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerVoteWidget
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class UPlayerVoteWidget : public UUserWidget
	{
	public:
		void RestoreWidgetFocus();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerVotingComponent
	 * Size -> 0x0108 (FullSize[0x01B8] - InheritedSize[0x00B0])
	 */
	class UPlayerVotingComponent : public UActorComponent
	{
	public:
		struct FTimerHandle                                        TimerHandle_ResetVote;                                   // 0x00B0(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FVotableIssue>                               VoteIssuesConfig;                                        // 0x00B8(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UVoteIssue*>                                  VoteIssues;                                              // 0x00C8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FReplicatedVoteInfo                                 ReplicatedVoteInfo;                                      // 0x00D8(0x0048) BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             VoteDataChangedDelegate;                                 // 0x0120(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UVoteIssue*                                          ActiveVoteIssue;                                         // 0x0130(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              EligibleTeamId;                                          // 0x0138(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_84Q7[0x7];                                   // 0x0139(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FQueuedVote>                                 QueuedVotes;                                             // 0x0140(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9YUC[0x50];                                  // 0x0150(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerVoteTimeout;                                       // 0x01A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CAJ2[0x4];                                   // 0x01A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_VoteTimeout;                                 // 0x01A8(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      VoteTime;                                                // 0x01B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PostVoteTime;                                            // 0x01B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void VoteDataChangedDelegate__DelegateSignature();
		void ResetVoteWithDelay(float Time);
		void ResetVote();
		void OnVoteTimeout();
		void OnVoteConcluded();
		void OnRep_ReplicatedVoteInfo();
		bool IsVoteInProgress();
		bool IsEligibleVoter(class APlayerState* PlayerState);
		bool HasVotePassed();
		bool HasVoteFailed();
		bool HasVoteConcluded();
		bool HasRecentlyVoted(class APlayerState* PlayerState);
		class UVoteIssue* GetVoteIssueForClass(class UClass* Issue);
		float GetLastVoteTime(class APlayerState* PlayerState);
		void GetEligibleVoters(TArray<class APlayerState*>* OutPlayers);
		int32_t CountEligibleVoters();
		bool CanVoteStart();
		bool CanStartVote(class APlayerState* PlayerState);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayerVotingStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UPlayerVotingStatics : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_GetVoteSuccessTextForVoteInfo(const struct FReplicatedVoteInfo& VoteInfo, class FText* OutSuccessText);
		void STATIC_GetVotePromptTextForVoteInfo(const struct FReplicatedVoteInfo& VoteInfo, class FText* OutVotePrompt);
		class UVoteIssue* STATIC_GetVoteIssueDefaults(class UClass* VoteIssueClass);
		void STATIC_FormatVotingParameters(const class FText& FormattingText, const struct FReplicatedVoteInfo& VoteInfo, class FText* OutVotePrompt);
		bool STATIC_DoesIssueNeedPlayerList(class UClass* VoteIssueClass);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlaylistFeature
	 * Size -> 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
	 */
	class UPlaylistFeature : public UDataAsset
	{
	public:
		class FText                                                Name;                                                    // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UTexture2D*                                          ThumbnailImage;                                          // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Image[0x28];                                             // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<class FText>                                        Rules;                                                   // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Playlist
	 * Size -> 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
	 */
	class UPlaylist : public UPrimaryDataAsset
	{
	public:
		class FString                                              Key;                                                     // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlaylistType                                              Type;                                                    // 0x0040(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelectedByDefault;                                      // 0x0041(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_THQ2[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    AvgMatchLengthMinutesMin;                                // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AvgMatchLengthMinutesMax;                                // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayersTeam1;                                            // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayersTeamConsole1;                                     // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayersVersusAI;                                        // 0x0088(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I98A[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PlayersTeam2;                                            // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayersTeamConsole2;                                     // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlaylistLightingType                                      LightingType;                                            // 0x0094(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VHZI[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          HeaderTexture;                                           // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPlaylistFeature*>                            Features;                                                // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlaylistBrowserWidget
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class UPlaylistBrowserWidget : public UUserWidget
	{
	public:
		ENetworkState                                              NewWorldState;                                           // 0x0230(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENetworkState                                              PlatformState;                                           // 0x0231(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AUV6[0x6];                                   // 0x0232(0x0006) MISSED OFFSET (PADDING)

	public:
		void OnUpdateNetworkStatus(bool bIsConnectedToWorldServices);
		TArray<class UPlaylist*> GetPlaylistsOfType(EPlaylistType Type);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PointOfInterestActorComponent
	 * Size -> 0x0040 (FullSize[0x0230] - InheritedSize[0x01F0])
	 */
	class UPointOfInterestActorComponent : public USceneComponent
	{
	public:
		class UTexture2D*                                          Icon;                                                    // 0x01F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowInProximity;                                        // 0x01F8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowOnlyClosest;                                        // 0x01F9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowOnTacticalMap;                                      // 0x01FA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideTacticalMapZ;                                   // 0x01FB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TacticalMapZOrder;                                       // 0x01FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideTacticalMapIcon;                                // 0x0200(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YP75[0x7];                                   // 0x0201(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          TacticalMapIcon;                                         // 0x0208(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptDelegate                                      ShouldShowInProximityDelegate;                           // 0x0210(0x0010) ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FScriptDelegate                                      ShouldShowOnTacticalMapDelegate;                         // 0x0220(0x0010) ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic

	public:
		bool ShouldShowOnTacticalMap(class AINSSoldier* ForPlayer);
		bool ShouldShowInProximity(class AINSSoldier* ForPlayer);
		void SetShouldShowOnTacticalMapEvent(const class FScriptDelegate& Event);
		void SetShouldShowInProximityEvent(const class FScriptDelegate& Event);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PointShootingUpgradeInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UPointShootingUpgradeInterface : public UInterface
	{
	public:
		bool ShouldEnterPointShootMode();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PostMergeManager
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	class UPostMergeManager : public UObject
	{
	public:
		unsigned char                                              UnknownData_22SE[0x18];                                  // 0x0028(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProfaneWordCollection
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UProfaneWordCollection : public UDataAsset
	{
	public:
		TArray<struct FProfaneWord>                                ProfaneWords;                                            // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool DoesContainProfaneWord(const class FString& inString, class FString* OutString);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProjectileBase
	 * Size -> 0x0118 (FullSize[0x0338] - InheritedSize[0x0220])
	 */
	class AProjectileBase : public AActor
	{
	public:
		unsigned char                                              UnknownData_I5BG[0x18];                                  // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bThrownBack;                                             // 0x0238(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VWQT[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AController>                          OriginalInstigator;                                      // 0x023C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachedToPawn;                                         // 0x0244(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D2ZY[0x3];                                   // 0x0245(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UShapeComponent*                                     CollisionComp;                                           // 0x0248(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSProjectileMovementComponent*                     ProjectileMovement;                                      // 0x0250(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExplicitVelocity;                                       // 0x0258(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BF0O[0x3];                                   // 0x0259(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             InitialVelocity;                                         // 0x025C(0x000C) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ProjectileName;                                          // 0x0268(0x0018) Edit, NativeAccessSpecifierPublic
		class UClass*                                              DamageTypeClass;                                         // 0x0280(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x0288(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bProportionalImpactDamage;                               // 0x028C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E5F4[0x3];                                   // 0x028D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ImpulseFactor;                                           // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AController>                          InstigatorController;                                    // 0x0294(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6FOI[0x4];                                   // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              InstigatorActorClass;                                    // 0x02A0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AItemWeapon>                          OriginatingWeapon;                                       // 0x02A8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              OriginatingWeaponClass;                                  // 0x02B0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x02B8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemovedWhenStopped;                                     // 0x02B9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JOWH[0x6];                                   // 0x02BA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       LaunchSound;                                             // 0x02C0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponentProjectileSounds;                             // 0x02C8(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       IncomingSound;                                           // 0x02D0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IncomingSoundTime;                                       // 0x02D8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SOUP[0x4];                                   // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_IncomingSound;                               // 0x02E0(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SX6F[0x10];                                  // 0x02E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     TrailParticle;                                           // 0x02F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            TrailParticleRotation;                                   // 0x0300(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_81PL[0x4];                                   // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent*                            SpawnedTrailParticle;                                    // 0x0310(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     SpectatorParticle;                                       // 0x0318(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            SpawnedSpectatorParticle;                                // 0x0320(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundscapeComponent*                                SoundscapeComponent;                                     // 0x0328(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CurrentWeaponSwitch;                                     // 0x0330(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SetupThrow(const struct FTransform& Transform, float ThrowSpeed);
		void SetEstimatedFlightTimeAndLocation(float FlightTime, const struct FVector& Location);
		void PlayIncomingAudio();
		void OnSoundscapeUpdate(const struct FSoundscapeStateRepl& State);
		void OnRep_InitialVelocity();
		void OnProjectileStopped(const struct FHitResult& HitResult);
		void Multicast_SetupThrow(const struct FTransform& Transform, float ThrowSpeed);
		void DetachFromUser();
		void BroadcastIncomingAudio();
		void AttachToUser(class AINSSoldier* User);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProjectileGrenade
	 * Size -> 0x01F0 (FullSize[0x0528] - InheritedSize[0x0338])
	 */
	class AProjectileGrenade : public AProjectileBase
	{
	public:
		unsigned char                                              UnknownData_NU9W[0x10];                                  // 0x0338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_GrenadeRestTimer;                            // 0x0348(0x0008) NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          ThrowbackUIIcon;                                         // 0x0350(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                StaticMeshComponent;                                     // 0x0358(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMeshCollision;                                       // 0x0360(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMeshPhysics;                                         // 0x0361(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisabled;                                               // 0x0362(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X2X6[0x1];                                   // 0x0363(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpawnTime;                                               // 0x0364(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideMeshAfterDetonating;                                // 0x0368(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableCollisionAfterDetonating;                        // 0x0369(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0IRM[0x6];                                   // 0x036A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ExplosionDamageTypeClass;                                // 0x0370(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionRadius;                                         // 0x0378(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionForce;                                          // 0x037C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionDamage;                                         // 0x0380(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CY52[0x4];                                   // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UExplosionPenetrationSettings*                       ExplosionPenetrationSettings;                            // 0x0388(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionLifeSpan;                                       // 0x0390(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStopMovementOnExplode;                                  // 0x0394(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NYRJ[0x3];                                   // 0x0395(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FoliageExplosionRadiusFactor;                            // 0x0398(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FoliageInteractionLifeSpan;                              // 0x039C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSurfaceReactionOutput                              ExplosionSurfaceReactionComponents;                      // 0x03A0(0x0018) BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    ExplosionSurfaceReaction;                                // 0x03B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    BounceSurfaceReaction;                                   // 0x03C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BounceSpeedMin;                                          // 0x03C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BounceSpeedMax;                                          // 0x03CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterResponse                                         ThrowCharacterResponse;                                  // 0x03D0(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4M08[0x7];                                   // 0x03D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CameraShakeClass;                                        // 0x03D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraShakeRadius;                                       // 0x03E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraShakeFalloff;                                      // 0x03E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShellShockRadius;                                        // 0x03E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShellShockDuration;                                      // 0x03EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDetonated;                                              // 0x03F0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NRZ3[0x7];                                   // 0x03F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class AItemDetonator*, TWeakObjectPtr<class APawn>>   RigDetonators;                                           // 0x03F8(0x0050) UObjectWrapper, NativeAccessSpecifierPublic
		float                                                      ExplodeTime;                                             // 0x0448(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDud;                                                    // 0x044C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bImpactFuse;                                             // 0x044D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FFH4[0x2];                                   // 0x044E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ArmTimer;                                                // 0x0450(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CookTimer;                                               // 0x0454(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DetonateTimer;                                           // 0x0458(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IH4F[0x4];                                   // 0x045C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USphereComponent*                                    VisibilityBlockerComponent;                              // 0x0460(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlanted;                                                // 0x0468(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDropOffPlantedObject;                                // 0x0469(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRigged;                                                 // 0x046A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IB04[0x5];                                   // 0x046B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 PlantAttachmentComponent;                                // 0x0470(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              PlantAttachmentActor;                                    // 0x0478(0x0008) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       PlantSound;                                              // 0x0480(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECharacterResponse                                         LandResponse;                                            // 0x0488(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M3SG[0x7];                                   // 0x0489(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ShrapnelProjectile;                                      // 0x0490(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShrapnelMinCount;                                        // 0x0498(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShrapnelMaxCount;                                        // 0x049C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            ShrapnelMinAngle;                                        // 0x04A0(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            ShrapnelMaxAngle;                                        // 0x04AC(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ShrapnelToSpawn;                                         // 0x04B8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W9DL[0x4];                                   // 0x04BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AProjectileBase*>                             SpawnedShrapnels;                                        // 0x04C0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NRVZ[0x11];                                  // 0x04D0(0x0011) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bHitReaction;                                            // 0x04E1(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReactBullets;                                           // 0x04E2(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReactExplosion;                                         // 0x04E3(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReactOther;                                             // 0x04E4(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReactAllowSelfDamage;                                   // 0x04E5(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReactFriendlyFire;                                      // 0x04E6(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V4C8[0x1];                                   // 0x04E7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ReactDamageThreshold;                                    // 0x04E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ReactDelayRange;                                         // 0x04EC(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AController>                          ReactInstigatorController;                               // 0x04F4(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JHUP[0x4];                                   // 0x04FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      IgnoredDamageActors;                                     // 0x0500(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFragType;                                               // 0x0510(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EUsablePriority                                            UsePriority;                                             // 0x0511(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4YHS[0x6];                                   // 0x0512(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ThrowbackWeaponClass;                                    // 0x0518(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachToObjectOnStop;                                   // 0x0520(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3FLS[0x7];                                   // 0x0521(0x0007) MISSED OFFSET (PADDING)

	public:
		void StopActiveGrenadeSurfaceReactions();
		void SetPlantAttachmentActor(class AActor* InActor, class UPrimitiveComponent* InAttachedComponent);
		void SetCookTimer(float Timer);
		void PlayGrenadeSurfaceReactionWithHit(class USurfaceReaction* InSurfaceReaction, const struct FHitResult& HitResult);
		void PlayGrenadeSurfaceReactionAtLocation(class USurfaceReaction* InSurfaceReaction, const struct FVector& HitLocation);
		void PlayGrenadeSurfaceReaction(class USurfaceReaction* InSurfaceReaction);
		void PlayGrenadeBounce(const struct FHitResult& ImpactResult, float Scale);
		bool PendingDetonationOrHasDetonated();
		void OnProjectileBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
		void OnPlantParentEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
		void OnGrenadeHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnGrenadeBounced(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
		void OnAttachedBreakableBroken();
		void MulticastExplodeAt(const struct FVector& HitLocation, const struct FHitResult& HitResult);
		void Multicast_PlantedBreakOff();
		void MakeDudAndDestroy();
		void MakeDud();
		bool IsDetonationTimerActive();
		bool HasTimedFuze();
		float GetExplosionElapsedTime();
		float GetCookRemainingTime();
		void ExplodeAt(const struct FVector& HitLocation, const struct FHitResult& HitResult);
		void Explode();
		void Detonate();
		void ClearCookTimer();
		void BlueprintOnExplode(const struct FVector& Location);
		void ApplyExplosionDamage(const struct FVector& HitLocation);
		void ApplyExplosionCustomDamage(const struct FVector& HitLocation, float InDamage, float InRadius, bool bApplyForce, bool bDoShellShock);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProjectileFlashbang
	 * Size -> 0x0018 (FullSize[0x0540] - InheritedSize[0x0528])
	 */
	class AProjectileFlashbang : public AProjectileGrenade
	{
	public:
		float                                                      FlashAlpha;                                              // 0x0528(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashRadius;                                             // 0x052C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashHoldTime;                                           // 0x0530(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashFadeTime;                                           // 0x0534(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionHoldTimeFactor;                               // 0x0538(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionHoldTime;                                     // 0x053C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		float GetPercentageFlashed(const struct FVector& HitLocation, const struct FVector& VictimLocation, class AINSSoldier* Victim);
		void DoFlashEffect(const struct FVector& HitLocation);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProjectileMine
	 * Size -> 0x0068 (FullSize[0x0590] - InheritedSize[0x0528])
	 */
	class AProjectileMine : public AProjectileGrenade
	{
	public:
		unsigned char                                              ActorWhitelist[0x50];                                    // 0x0528(0x0050) UNKNOWN PROPERTY: SetProperty
		float                                                      MinimumMass;                                             // 0x0578(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DetectRadius;                                            // 0x057C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTriggerFriendlies;                                      // 0x0580(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2TL7[0x7];                                   // 0x0581(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USphereComponent*                                    MineCollisionComponent;                                  // 0x0588(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnMineBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		bool CanActorTriggerMine(class AActor* TriggerActor);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProjectilePlantableGrenade
	 * Size -> 0x0000 (FullSize[0x0528] - InheritedSize[0x0528])
	 */
	class AProjectilePlantableGrenade : public AProjectileGrenade
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProjectileRocket
	 * Size -> 0x0028 (FullSize[0x0550] - InheritedSize[0x0528])
	 */
	class AProjectileRocket : public AProjectileGrenade
	{
	public:
		class UBoxComponent*                                       SuppressionBoxComponent;                                 // 0x0528(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionAmountMin;                                    // 0x0530(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuppressionAmountMax;                                    // 0x0534(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SuppressionBoxHalfSize;                                  // 0x0538(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z97P[0x4];                                   // 0x0544(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       FlyByAudioEvent;                                         // 0x0548(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void SuppressTarget(class AINSSoldier* Soldier);
		void OnSuppressionBoxOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnSuppressionBoxEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProjectileSmokeGrenade
	 * Size -> 0x00E0 (FullSize[0x0608] - InheritedSize[0x0528])
	 */
	class AProjectileSmokeGrenade : public AProjectileGrenade
	{
	public:
		class UMaterialInterface*                                  OverlayBlendable;                                        // 0x0528(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmokeOverlayFadeDistance;                                // 0x0530(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B600[0x4];                                   // 0x0534(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  VisibilityRadiusCurve;                                   // 0x0538(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      AIVisibilityRadiusIncrease;                              // 0x05C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KSD2[0x4];                                   // 0x05C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     SimpleParticleSystem;                                    // 0x05C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            SimpleParticleSystemComponent;                           // 0x05D0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SimpleAudioEvent;                                        // 0x05D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              SmokeOverlayColor;                                       // 0x05E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G4SR[0x4];                                   // 0x05E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerSmokeCloud;                                         // 0x05E8(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastSmokeRadius;                                         // 0x05F0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LastHitLocation;                                         // 0x05F4(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9UKJ[0x8];                                   // 0x0600(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnEndBlockerOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnBeginBlockerOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ProjectileThermiteGrenade
	 * Size -> 0x0050 (FullSize[0x0658] - InheritedSize[0x0608])
	 */
	class AProjectileThermiteGrenade : public AProjectileSmokeGrenade
	{
	public:
		float                                                      AreaDamageFrequency;                                     // 0x0608(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AreaDamageMinRadius;                                     // 0x060C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AreaDamageMaxRadius;                                     // 0x0610(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AreaDamageFleeRadius;                                    // 0x0614(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AreaDamageGrowSpeed;                                     // 0x0618(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AreaDamageAmount;                                        // 0x061C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AreaDamageTime;                                          // 0x0620(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4FGN[0x4];                                   // 0x0624(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       BurnEndAudioEvent;                                       // 0x0628(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanExtinguish;                                          // 0x0630(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GTS5[0x3];                                   // 0x0631(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumBurnTimeBeforeExtinguish;                         // 0x0634(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USurfaceReaction*                                    ExtinguishSurfaceReaction;                               // 0x0638(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFinishedBurning;                                        // 0x0640(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8GYG[0x7];                                   // 0x0641(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_AreaDamage;                                  // 0x0648(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTimerHandle                                        TimerHandle_Extinguish;                                  // 0x0650(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		bool IsLocationThreatenedByFire(const struct FVector& Location);
		void Extinguish();
		void DoExtinguish();
		void BroadcastExtinguish();
		void BroadcastAreaDamageEnd();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PropBreakable
	 * Size -> 0x0218 (FullSize[0x0438] - InheritedSize[0x0220])
	 */
	class APropBreakable : public AActor
	{
	public:
		unsigned char                                              UnknownData_LYPB[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                PrintName;                                               // 0x0230(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		EComponentMobility                                         PropMobility;                                            // 0x0248(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PB1C[0x7];                                   // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         Mesh;                                                    // 0x0250(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMaterialSwap>                               OverrideMaterials;                                       // 0x0258(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreakable;                                              // 0x0268(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnBroken;                                            // 0x0269(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowBreakthrough;                                      // 0x026A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClientsideOnly;                                         // 0x026B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClientDamagePrediction;                                 // 0x026C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQA8[0x3];                                   // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Health;                                                  // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReplicateHealth;                                        // 0x0274(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDamageFilter;                                        // 0x0275(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6GEA[0x2];                                   // 0x0276(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      DamageTypeFilter;                                        // 0x0278(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDamageFilterIsBlacklist;                                // 0x0288(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFragile;                                              // 0x0289(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyTakeExplosiveDamage;                                // 0x028A(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideMeshOnBreak;                                        // 0x028B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGibifyOnBreak;                                          // 0x028C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveDecalsOnBreak;                                    // 0x028D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V5J0[0x2];                                   // 0x028E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         MeshBroken;                                              // 0x0290(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMaterialSwap>                               BreakMaterials;                                          // 0x0298(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInflictBreakDamage;                                     // 0x02A8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IHK3[0x3];                                   // 0x02A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BreakDamageAmount;                                       // 0x02AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              BreakDamageTypeClass;                                    // 0x02B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreakDamageRadius;                                       // 0x02B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             BreakDamageOffset;                                       // 0x02BC(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreakDamageForce;                                        // 0x02C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IRNH[0x4];                                   // 0x02CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              BreakDamageCameraShakeClass;                             // 0x02D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreakDamageCameraShakeRadius;                            // 0x02D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreakDamageCameraShakeFalloff;                           // 0x02DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreakDamageShellShockRadius;                             // 0x02E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BreakDamageShellShockDuration;                           // 0x02E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnablePhysics;                                          // 0x02E8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartAwake;                                             // 0x02E9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreakOnTouch;                                           // 0x02EA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreakOnVault;                                           // 0x02EB(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5UIS[0x4];                                   // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     BreakParticle;                                           // 0x02F0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            BreakParticleComponent;                                  // 0x02F8(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       BreakSound;                                              // 0x0300(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachBreakEffects;                                     // 0x0308(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QLPL[0x3];                                   // 0x0309(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EffectAttachSocket;                                      // 0x030C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8E3J[0x4];                                   // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       HealthyLoopEventStart;                                   // 0x0318(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       HealthyLoopEventEnd;                                     // 0x0320(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       BrokenLoopEventStart;                                    // 0x0328(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       BrokenLoopEventEnd;                                      // 0x0330(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WXQZ[0x8];                                   // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          LoopingAudioOffset;                                      // 0x0340(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      LoopingAudioOcclusionRate;                               // 0x0370(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3HUU[0x4];                                   // 0x0374(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSAudioComponent*                                  LoopingAudioComponent;                                   // 0x0378(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7BMY[0x8];                                   // 0x0380(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGib>                                        Gibs;                                                    // 0x0388(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GibLifetime;                                             // 0x0398(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreakableGibs;                                          // 0x039C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGibsUseBreakableCollision;                              // 0x039D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DVCE[0x2];                                   // 0x039E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GibHealth;                                               // 0x03A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GibImpulseScale;                                         // 0x03A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGibPhysics;                                             // 0x03A8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4H6L[0x7];                                   // 0x03A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     GibBreakParticle;                                        // 0x03B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BounceSpeedMin;                                          // 0x03B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BounceSpeedMax;                                          // 0x03BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAppliedBreakDamage;                                     // 0x03C0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLocallyBroken;                                        // 0x03C1(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBrokenAuthority;                                        // 0x03C2(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IVFW[0x5];                                   // 0x03C3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnBreakDelegate;                                         // 0x03C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		bool                                                       bSeeThrough;                                             // 0x03D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8M7T[0x7];                                   // 0x03D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USurfaceReaction*                                    PhysicsPropSurfaceReaction;                              // 0x03E0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSoundscapeLoaded;                                       // 0x03E8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UU2P[0x7];                                   // 0x03E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                MeshComponent;                                           // 0x03F0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPropLODInfo                                        PropLODInfo;                                             // 0x03F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AC8I[0x30];                                  // 0x0400(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastNotify;                                              // 0x0430(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      MinTimeBetweenNotifies;                                  // 0x0434(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void SetupMeshCollision(class UStaticMeshComponent* InMeshComponent);
		void SetBrokenMaterials(class UStaticMeshComponent* AffectedComponent);
		void ResetBreakable();
		void RemoveChildDecals();
		void OnReset();
		void OnRep_Health();
		void OnRep_bBrokenAuthority();
		void MulticastBreak(const struct FDamageEvent& DamageEvent);
		bool IsBroken();
		void InflictBreakDamage(class AController* EventInstigator);
		class APropGib* ConvertToGib();
		void ChangeMesh();
		bool CanBreakThrough();
		void Break(const struct FDamageEvent& DamageEvent);
		void BlueprintOnHealthChanged();
		void BlueprintOnBreak();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PropFan
	 * Size -> 0x0038 (FullSize[0x0470] - InheritedSize[0x0438])
	 */
	class APropFan : public APropBreakable
	{
	public:
		class UStaticMeshComponent*                                BladeMeshComponent;                                      // 0x0438(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         BladeMesh;                                               // 0x0440(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URotatingMovementComponent*                          RotatingMovementComponent;                               // 0x0448(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationRate;                                            // 0x0450(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCeilingFan;                                             // 0x0454(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayingFanAudio;                                        // 0x0455(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BF9M[0x2];                                   // 0x0456(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSAudioComponent*                                  AudioComponent;                                          // 0x0458(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StartAudioEvent;                                         // 0x0460(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StopAudioEvent;                                          // 0x0468(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void UpdateFanSpeed(float NewFanSpeed);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PropGib
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class APropGib : public AActor
	{
	public:
		unsigned char                                              UnknownData_BXDF[0x8];                                   // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                MeshComponent;                                           // 0x0228(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBreak;                                               // 0x0230(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZHY6[0x3];                                   // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Health;                                                  // 0x0234(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     BreakParticle;                                           // 0x0238(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PropVehicle
	 * Size -> 0x00D0 (FullSize[0x02F0] - InheritedSize[0x0220])
	 */
	class APropVehicle : public AActor
	{
	public:
		unsigned char                                              UnknownData_Y75D[0x18];                                  // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                PrintName;                                               // 0x0238(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTransform                                          InitialTransform;                                        // 0x0250(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		class UStaticMeshComponent*                                VehicleMesh;                                             // 0x0280(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                         DestroyedMesh;                                           // 0x0288(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UStaticMesh*                                         CleanMesh;                                               // 0x0290(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVehicleEnginePart*                                  EnginePart;                                              // 0x0298(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                            EngineParticleEffect;                                    // 0x02A0(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                            VehicleBlowUpParticleEffect;                             // 0x02A8(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UINSAudioComponent*                                  AkComponentEngineSounds;                                 // 0x02B0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventModularFireStop;                                  // 0x02B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventModularFire;                                      // 0x02C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UBoxComponent*                                       VehicleFireBox;                                          // 0x02C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FireDamageTickRate;                                      // 0x02D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FireDamage;                                              // 0x02D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_F3JX[0xC];                                   // 0x02D8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      VehicleFireFadeTime;                                     // 0x02E4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ONAD[0x8];                                   // 0x02E8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RadialMenu
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	class URadialMenu : public UObject
	{
	public:
		TArray<struct FRadialCommand>                              Commands;                                                // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Ragdoll
	 * Size -> 0x0508 (FullSize[0x0728] - InheritedSize[0x0220])
	 */
	class ARagdoll : public AActor
	{
	public:
		unsigned char                                              UnknownData_9K3V[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URagdollMeshComponent*                               RagdollMesh;                                             // 0x0230(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPhysicalAnimationComponent*                         PhysicalAnimationComponent;                              // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              DismembermentSet[0x28];                                  // 0x0240(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UBloodSplatterData*                                  BloodSplatterData;                                       // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UINSAudioComponent*                                  VoiceAudioComponent;                                     // 0x0270(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVehicleSeatComponent*                               VehicleSeatComponent;                                    // 0x0278(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAttachedToSeat;                                         // 0x0280(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_YRBG[0x7];                                   // 0x0281(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLimbGroupInstanceData>                      LimbGroupInstanceData;                                   // 0x0288(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        QueuedLimbs;                                             // 0x0298(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UPrimitiveComponent*>                         ReplacementMeshComponents;                               // 0x02A8(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UPrimitiveComponent*>                         CapMeshComponents;                                       // 0x02B8(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FConstraintInstance                                 BaseConstraintInstance;                                  // 0x02C8(0x01B8) Protected, NativeAccessSpecifierProtected
		class USceneComponent*                                     DefaultRoot;                                             // 0x0480(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FTransform>                                  BoneSpaceTransferTransforms;                             // 0x0488(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FTransform>                                  CachedComponentSpaceTransferTransforms;                  // 0x0498(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FBodyVelocityData>                           StoredBodyData;                                          // 0x04A8(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TMap<class FName, struct FBoneDamageMod>                   BoneDamageModifiers;                                     // 0x04B8(0x0050) Protected, NativeAccessSpecifierProtected
		struct FVector                                             CachedDamageForce;                                       // 0x0508(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             CachedHitPosition;                                       // 0x0514(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                CachedLimbName;                                          // 0x0520(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CachedDamageAmount;                                      // 0x0528(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TimeOfDeath;                                             // 0x052C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TimeOfDismemberment;                                     // 0x0530(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TimeOfInteraction;                                       // 0x0534(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TimeOfSplatter;                                          // 0x0538(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BleedOutTime;                                            // 0x053C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bBrainActivity;                                          // 0x0540(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bVaporized;                                              // 0x0541(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bDisableTickAfterTears;                                  // 0x0542(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2Q05[0x1];                                   // 0x0543(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PreviousTickVelocitySizeSquared;                         // 0x0544(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldUpdatePhysicsOnNextTick;                          // 0x0548(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldEnablePhysicsOnNextTick;                          // 0x0549(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bSleeveless;                                             // 0x054A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_JTZU[0x1];                                   // 0x054B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TornLimbs;                                               // 0x054C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        TornLimbSockets;                                         // 0x0550(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FDeathAnimation                                     DeathAnimation;                                          // 0x0560(0x0040) NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FVector                                             InitialVelocity;                                         // 0x05A0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_81D3[0x4];                                   // 0x05AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInstanceDynamic*>                    DynamicMaterialInstances;                                // 0x05B0(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              DamageTypes[0x50];                                       // 0x05C0(0x0050) UNKNOWN PROPERTY: SetProperty
		TMap<ECharacterAppearanceSlot, class UMaterialInstanceDynamic*> ClothingData;                                            // 0x0610(0x0050) Protected, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                            BurnParticleSystemComponent;                             // 0x0660(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UParticleSystemComponent*>                    AttachedParticles;                                       // 0x0668(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        SkinTint;                                                // 0x0678(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		uint32_t                                                   StableTicks;                                             // 0x0688(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShouldCreateBloodPool;                                  // 0x068C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bTickingBloodPool;                                       // 0x068D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OKZX[0x2];                                   // 0x068E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BloodPoolCreationTime;                                   // 0x0690(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TimeOfIgnition;                                          // 0x0694(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIgnited;                                                // 0x0698(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHidingMaterialSections;                                 // 0x0699(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4QM1[0x6];                                   // 0x069A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDecalComponent*                                     BloodPoolDecalComponent;                                 // 0x06A0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DAOF[0x80];                                  // 0x06A8(0x0080) MISSED OFFSET (PADDING)

	public:
		void VisualizeDebugInformation();
		void Vaporize(bool bShouldObliterate);
		void UpdateMaterialSlotVisibility(bool bNotViewTarget);
		void UpdateBloodPool();
		void TearRandomLimbs(int32_t Limbs);
		TArray<class FName> TearLimb(const class FName& LimbName);
		void SprinkleSprayDecals();
		void SimplifiedDamage(float DamageAmount, class UClass* DamageType, const struct FVector& HitPosition, const struct FVector& DamageForce, class AController* Killer, class AActor* DamageCauser, bool bApplyModifiers);
		void SetupSkinTint(class UMaterialInstanceDynamic* Material, bool bStoreSkinTint, bool bApplySkinTint);
		void SetDismembermentSet(class UDismembermentSet* DismembermentSetIn);
		void RefreshDismembermentData();
		void QueueTearLimb(const class FName& LimbName);
		void PopQueuedLimb();
		void OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		class URagdollMeshComponent* GetMesh();
		float GetDamageModifierForLimb(const class FName& LimbName);
		void EnablePhysicsForComponent(class UMeshComponent* Component, bool bShouldEnable);
		void DamageLimb(const class FName& LimbName, float DamageAmount);
		void CreateRagdollBloodSplatter(const struct FVector& HitPosition, const struct FVector& HitDirection, bool bDismemberment, bool bHeadshot, bool bVaporized);
		void CreateMaterialsForMesh(class UMeshComponent* MeshComponent, bool bStoreSkinTint, bool bApplySkinTint, const class FName& LimbName);
		void CreateBloodPool();
		void ConstrainLimb(const class FName& LimbName, const struct FVector& BoneLocation, const struct FQuat& BoneRotation, class UMeshComponent* LimbComponent);
		void ConfigureRagdollMesh(class USkeletalMeshComponent* SkeletalMeshComponent, class UPhysicsAsset* PhysicsAsset);
		void ConfigurePhysicsAnimation();
		void ConfigureMaterialEffects();
		void CheckForSuddenVelocityChanges();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RagdollManager
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	class URagdollManager : public UObject
	{
	public:
		int32_t                                                    RagdollMaximum;                                          // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1AOW[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FManagedRagdoll>                             Ragdolls;                                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RagdollMeshComponent
	 * Size -> 0x00C4 (FullSize[0x0BA0] - InheritedSize[0x0ADC])
	 */
	class URagdollMeshComponent : public USkeletalMeshComponent
	{
	public:
		unsigned char                                              UnknownData_T4D6[0x4];                                   // 0x0ADC(0x0004) Fix Super Size
		unsigned char                                              UnknownData_T931[0xC0];                                  // 0x0AE0(0x00C0) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RandomWeaponCrate
	 * Size -> 0x0148 (FullSize[0x0368] - InheritedSize[0x0220])
	 */
	class ARandomWeaponCrate : public AActor
	{
	public:
		unsigned char                                              UnknownData_BTG1[0x18];                                  // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class URandomWeaponCrateDataAsset*                         CrateData;                                               // 0x0238(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartEnabled;                                           // 0x0240(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeControlledBySpawnZone;                             // 0x0241(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0242(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOpened;                                                 // 0x0243(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActive;                                               // 0x0244(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInUse;                                                // 0x0245(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasTotalUseLimit;                                       // 0x0246(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_57IC[0x1];                                   // 0x0247(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TotalUseLimit;                                           // 0x0248(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalUses;                                               // 0x024C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasPerUserUseLimit;                                     // 0x0250(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NB1S[0x3];                                   // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PerUserUseLimit;                                         // 0x0254(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSSoldier*>                                 RestrictedUsers;                                         // 0x0258(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSSoldier*>                                 CurrentUsers;                                            // 0x0268(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PerUserTotalUses[0x50];                                  // 0x0278(0x0050) UNKNOWN PROPERTY: MapProperty
		bool                                                       bLinkUseLimits;                                          // 0x02C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResupplyLoadout;                                        // 0x02C9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHealPlayer;                                             // 0x02CA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KDG1[0x5];                                   // 0x02CB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              LinkedWeaponCrates[0x10];                                // 0x02D0(0x0010) UNKNOWN PROPERTY: ArrayProperty
		float                                                      OpenTimer;                                               // 0x02E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V0EZ[0x4];                                   // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         MeshOpened;                                              // 0x02E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         MeshInactive;                                            // 0x02F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         MeshActive;                                              // 0x02F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                StaticMeshComponent;                                     // 0x0300(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     WeaponSpawnLocationComponent;                            // 0x0308(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemPickupDynamic*                                  ActiveWeaponPickup;                                      // 0x0310(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockoutTimer;                                            // 0x0318(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbandonedTimeOut;                                        // 0x031C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          UseImage;                                                // 0x0320(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          ProximityImage;                                          // 0x0328(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowOnTacticalMap;                                      // 0x0330(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I5BO[0x7];                                   // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPointOfInterestActorComponent*                      PointOfInterestComponent;                                // 0x0338(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseYawViewLimit;                                         // 0x0340(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZGN2[0x4];                                   // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       EnableSound;                                             // 0x0348(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       OpenSound;                                               // 0x0350(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMagGrabIsEnabled;                                       // 0x0358(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_F2KZ[0x7];                                   // 0x0359(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          UseSupplyImage;                                          // 0x0360(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void SpawnRandomWeapon(class AINSSoldier* ForUser);
		bool ShowShowPointOfInterest(class AINSSoldier* ForPlayer);
		void SetOpened(bool bNewOpened);
		void SetEnabled(bool bNewEnabled);
		void SetCrateDataAsset(class URandomWeaponCrateDataAsset* NewCrateData);
		void ResupplyLoadout(class AINSSoldier* Pawn);
		void ResetUseLimits();
		void PlaySoundEffect(class UAkAudioEvent* InSoundEffect);
		void OnRep_Opened();
		void OnRep_Enabled();
		void OnPickupPickedUp(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier);
		void OnPickupDestroyed(class AActor* DestroyedActor);
		void OnPickupClearAmmo(class AItemEquipable* PickedUpItem, class AINSSoldier* Soldier);
		void OnCrateOpened(class AINSSoldier* OpenedBy);
		void IncrementTotalUseCount(int32_t Amount, bool bIncrementLinked);
		void IncrementPlayerUseCount(class AINSSoldier* ForPlayer, int32_t Amount, bool bIncrementTotal, bool bIncrementLinked);
		void GiveLoadoutItems(class AINSSoldier* Pawn, bool bExcludePrimaryFromRemoval);
		void GetLinkedWeaponCrates(TArray<class ARandomWeaponCrate*>* OutLinkedCrates);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RandomWeaponCrateDataAsset
	 * Size -> 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
	 */
	class URandomWeaponCrateDataAsset : public UDataAsset
	{
	public:
		TArray<struct FWeaponCrateWeaponPool>                      WeaponPools;                                             // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPlayerEquipmentCollection*>                  UpgradeCollections;                                      // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PotentialUpgrades[0x10];                                 // 0x0050(0x0010) UNKNOWN PROPERTY: ArrayProperty
		float                                                      UnspecifiedSlotUpgradeChance;                            // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z0T1[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EWeaponUpgradeSlot, float>                            SpecificSlotUpgradeChance;                               // 0x0068(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<class UWeaponUpgradeFilter*>                        Filters;                                                 // 0x00B8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		float GetTotalWeaponPoolChance();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponUpgradeFilterTest
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class UWeaponUpgradeFilterTest : public UDataAsset
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponUpgradeFilter
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class UWeaponUpgradeFilter : public UDataAsset
	{
	public:
		EFilterAction                                              FilterAction;                                            // 0x0030(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FSP6[0x3];                                   // 0x0031(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_4V0C[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UPlayerEquipmentCollection*>                  EquipmentCollections;                                    // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              WeaponUpgrades[0x10];                                    // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<struct FWeaponUpgradeFilterPair>                    Filters;                                                 // 0x0058(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponUpgradeTagFilter
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UWeaponUpgradeTagFilter : public UWeaponUpgradeFilterTest
	{
	public:
		unsigned char                                              MatchedTags[0x50];                                       // 0x0030(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponUpgradeEquippedFilter
	 * Size -> 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
	 */
	class UWeaponUpgradeEquippedFilter : public UWeaponUpgradeFilterTest
	{
	public:
		unsigned char                                              EquippedItems[0x50];                                     // 0x0030(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ReinforcementSystemComponent
	 * Size -> 0x0060 (FullSize[0x0110] - InheritedSize[0x00B0])
	 */
	class UReinforcementSystemComponent : public UActorComponent
	{
	public:
		class FScriptDelegate                                      DeductReinforcementWaveDelegate;                         // 0x00B0(0x0010) BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnWaveDepletionDelegate;                                 // 0x00C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnWaveGainDelegate;                                      // 0x00D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x00E0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F9EL[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATeamInfo*                                           Team;                                                    // 0x00E8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InitialWaves;                                            // 0x00F0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CSF8[0x3];                                   // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DeadPlayerRatio;                                         // 0x00F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RespawnDelay;                                            // 0x00F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutomaticRespawn;                                       // 0x00FC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWavePending;                                            // 0x00FD(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GPHN[0x2];                                   // 0x00FE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSGameMode*                                        OuterGameMode;                                           // 0x0100(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LO7F[0x8];                                   // 0x0108(0x0008) MISSED OFFSET (PADDING)

	public:
		void StartWave(float Delay);
		bool ShouldTriggerReinforcementWave();
		bool ShouldDeductReinforcementWave();
		void SetWaves(int32_t Waves);
		void OnWaveGainDelegate__DelegateSignature(class UReinforcementSystemComponent* ReinforcementSystemComponent, int32_t OldWaveCount);
		void OnWaveDepletionDelegate__DelegateSignature(class UReinforcementSystemComponent* ReinforcementSystemComponent);
		void OnRoundReset();
		void OnPlayerDeath();
		int32_t GetWaves();
		void ExecuteRapidDeployment(bool bDeductWave);
		void DeductWave();
		bool DeductReinforcementWaveDelegate__DelegateSignature(class UReinforcementSystemComponent* ReinforcementSystemComponent);
		void CheckStartWave();
		bool CanRedeployPlayers();
		void CancelWave(bool bInformTeam);
		void AddWaves(int32_t Waves);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RenderTargetController
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	class URenderTargetController : public UObject
	{
	public:
		class UINSLocalPlayer*                                     OuterLocalPlayer;                                        // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UTextureRenderTarget2D*>                      RenderTargetTextures;                                    // 0x0030(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		class UTextureRenderTarget2D* GetTextureRenderTarget(ERenderTargetSlot TargetType);
		void GetDesiredResolutionForTarget(ERenderTargetSlot TargetType, struct FIntPoint* OutSize);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RestrictedArea
	 * Size -> 0x0028 (FullSize[0x0280] - InheritedSize[0x0258])
	 */
	class ARestrictedArea : public AVolume
	{
	public:
		unsigned char                                              UnknownData_EJP1[0x8];                                   // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bEnabled;                                                // 0x0260(0x0001) Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              TeamId;                                                  // 0x0261(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowOnMinimap;                                          // 0x0262(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowBothTeam;                                           // 0x0263(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UV7I[0x4];                                   // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASpawnZone*                                          LinkedSpawnZone;                                         // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSSoldier*>                                 RestrictedPlayers;                                       // 0x0270(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool ShouldBeRestricted(class AINSSoldier* TargetSoldier);
		void SetEnabled(bool bState);
		void OnEndAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnBeginAreaOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		bool IsEnabled();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RestrictedFireSupportVolume
	 * Size -> 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
	 */
	class ARestrictedFireSupportVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RichTextTeamColorDecorator
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class URichTextTeamColorDecorator : public URichTextBlockDecorator
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RoundResetComponent
	 * Size -> 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
	 */
	class URoundResetComponent : public UActorComponent
	{
	public:
		ERoundResetBehavior                                        ResetBehavior;                                           // 0x00B0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZV7[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnRoundResetDelegate;                                    // 0x00B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.RoundResetInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class URoundResetInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Ruleset
	 * Size -> 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
	 */
	class URuleset : public UObject
	{
	public:
		TArray<struct FRulesetProperty>                            GlobalRules;                                             // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCompetitiveRuleset;                                   // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyToChildGameModes;                                  // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7365[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              GameModeRules[0x50];                                     // 0x0040(0x0050) UNKNOWN PROPERTY: MapProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SABERUtilsWidgetWorldSubsystem
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	class USABERUtilsWidgetWorldSubsystem : public UWorldSubsystem
	{
	public:
		class USABERUtilsWidget*                                   UtilsWidgetInstance;                                     // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		class USABERUtilsWidget* GetUtilsWidgetWorldSubsystem();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SABERUtilsWidget
	 * Size -> 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
	 */
	class USABERUtilsWidget : public UObject
	{
	public:
		bool                                                       bShowOnlineStore;                                        // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowAmbushModeProperties;                               // 0x0029(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableNewsWidgetsForConsoles;                          // 0x002A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableReplaysForConsoles;                              // 0x002B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisablePartyButtonForConsoles;                          // 0x002C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableProfanityFilterSettingForConsoles;               // 0x002D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableBindsSettingSectionForConsoles;                  // 0x002E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableTextChatForConsoles;                             // 0x002F(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableSubmitFeedbackForConsoles;                       // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableCompetitiveModeForConsoles;                      // 0x0031(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableDLCContentForConsoles;                           // 0x0032(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableInventoryForConsoles;                            // 0x0033(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableVideoSettingsForConsoles;                        // 0x0034(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisablePlayerStatisticsForConsoles;                     // 0x0035(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableSectionHistoryForConsoles;                       // 0x0036(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableCreditMenuForConsole;                            // 0x0037(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableOtherScenariosButton;                            // 0x0038(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableSectionAchievementsForConsoles;                  // 0x0039(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisablePlayerCounterForConsoles;                        // 0x003A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisablePostMatchStatsForConsoles;                       // 0x003B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableScoreboardViewProfileEOS;                        // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableServerBrowserForConsoles;                        // 0x003D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableOnlineStoreForConsoles;                          // 0x003E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableReportButtonForConsoles;                         // 0x003F(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FeedbackURL;                                             // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool STATIC_IsShippingBuild();
		class USABERUtilsWidget* STATIC_GetUtilsWidgetInstance();
		bool STATIC_GetShowOnlineStore();
		bool STATIC_GetShowAmbushModeProperties();
		class FString STATIC_GetFeedbackURL();
		bool STATIC_GetDisableVideoSettingsForConsoles();
		bool STATIC_GetDisableTextChatForConsoles();
		bool STATIC_GetDisableSubmitFeedbackForConsoles();
		bool STATIC_GetDisableShootingRangePropsShadows();
		bool STATIC_GetDisableServerBrowserForConsoles();
		bool STATIC_GetDisableSectionHistoryForConsoles();
		bool STATIC_GetDisableSectionAchievementsForConsoles();
		bool STATIC_GetDisableScoreboardViewProfileEOS();
		bool STATIC_GetDisableReportButtonForConsoles();
		bool STATIC_GetDisableReplaysForConsoles();
		bool STATIC_GetDisableProfanityFilterSettingForConsoles();
		bool STATIC_GetDisablePostMatchStatsForConsoles();
		bool STATIC_GetDisablePlayerStatisticsForConsoles();
		bool STATIC_GetDisablePlayerCounterForConsoles();
		bool STATIC_GetDisablePartyButtonForConsoles();
		bool STATIC_GetDisableOtherScenarioButton();
		bool STATIC_GetDisableOnlineStoreForConsoles();
		bool STATIC_GetDisableNewsWidgetsForConsoles();
		bool STATIC_GetDisableInventoryForConsoles();
		bool STATIC_GetDisableFilterCommunityForConsoles();
		bool STATIC_GetDisableDLCContentForConsoles();
		bool STATIC_GetDisableCreditMenuForConsoles();
		bool STATIC_GetDisableCompetitiveModeForConsoles();
		bool STATIC_GetDisableBindsSettingSectionForConsoles();
		class USABERUtilsWidget* STATIC_Get();
		class FString STATIC_ConvertUniqueNetIdReplToString(const struct FUniqueNetIdRepl& UniqueId);
		struct FUniqueNetIdRepl STATIC_ConvertStringToUniqueNetIdRepl(const class FString& InStringUniqueId);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SemperParatus
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class USemperParatus : public USandstormAchievement
	{
	public:
		unsigned char                                              UnknownData_D55Q[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnDamagedBlocked(float Damage, class UClass* DamageTypeClass, class AController* EventInstigator, class AActor* DamageCauser);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TakeTheWheelAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UTakeTheWheelAchievement : public USandstormAchievement
	{
	public:
		void OnSeatTakenOver(class AINSCharacter* OldCharacter, class AController* Controller);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.DesignatedDriverAchievement
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	class UDesignatedDriverAchievement : public USandstormAchievement
	{
	public:
		void OnDesignatedDriver(class AINSBasePlayerController* PC);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.MVPAchievement
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class UMVPAchievement : public USandstormAchievement
	{
	public:
		unsigned char                                              UnknownData_YZYK[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnRoundOver(ERoundConclusion RoundEndReason, unsigned char WinningFaction, TArray<struct FOtherPlayerAwardedTagline> Taglines);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PlayToWin
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class UPlayToWin : public USandstormAchievement
	{
	public:
		unsigned char                                              UnknownData_RHUB[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnRecievedObjectiveCaptured(class AINSPlayerController* PC, class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ThereForYou
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class UThereForYou : public USandstormAchievement
	{
	public:
		unsigned char                                              UnknownData_5538[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnRequestSupport(class AINSPlayerController* PlayerController);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.GameModeAchievement
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class UGameModeAchievement : public USandstormAchievement
	{
	public:
		unsigned char                                              UnknownData_FVO8[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnMatchEnd(unsigned char WinningFaction, class UClass* GameMode);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CTBVictory
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UCTBVictory : public UGameModeAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SkirmishVictory
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class USkirmishVictory : public UGameModeAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.FirefightVictory
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UFirefightVictory : public UGameModeAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.PushVictory
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UPushVictory : public UGameModeAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.CheckpointVictory
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UCheckpointVictory : public UGameModeAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WetFeet
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	class UWetFeet : public UGameModeAchievement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SandstormGauntletBenchmarkReplay
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class USandstormGauntletBenchmarkReplay : public UGauntletTestController
	{
	public:
		unsigned char                                              UnknownData_FILJ[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SandstormGauntletBootTest
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	class USandstormGauntletBootTest : public UGauntletTestControllerBootTest
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SandstormGauntletBotGameplay
	 * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
	 */
	class USandstormGauntletBotGameplay : public UGauntletTestController
	{
	public:
		unsigned char                                              UnknownData_99K3[0x30];                                  // 0x0030(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SandstormGauntletGeneratePakOrder
	 * Size -> 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
	 */
	class USandstormGauntletGeneratePakOrder : public UGauntletTestController
	{
	public:
		unsigned char                                              UnknownData_UQ6G[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SandstormGauntletLevelFlythrough
	 * Size -> 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
	 */
	class USandstormGauntletLevelFlythrough : public UGauntletTestController
	{
	public:
		unsigned char                                              UnknownData_ZD83[0x30];                                  // 0x0030(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        HealthSnapshotTimer;                                     // 0x0060(0x0008) Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnHealthSnapshot();
		void OnBenchmarkStart();
		void OnBenchmarkFinished();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SandstormGauntletSmokeBuild
	 * Size -> 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
	 */
	class USandstormGauntletSmokeBuild : public UGauntletTestController
	{
	public:
		unsigned char                                              UnknownData_4NI0[0x70];                                  // 0x0030(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        HealthSnapshotTimer;                                     // 0x00A0(0x0008) Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		void OnHealthSnapshot();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SandstormStatsCollectionComponent
	 * Size -> 0x0020 (FullSize[0x0150] - InheritedSize[0x0130])
	 */
	class USandstormStatsCollectionComponent : public UGameStatsCollectionComponent
	{
	public:
		unsigned char                                              UnknownData_6CML[0x20];                                  // 0x0130(0x0020) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ScenarioBase
	 * Size -> 0x0138 (FullSize[0x0168] - InheritedSize[0x0030])
	 */
	class UScenarioBase : public UPrimaryDataAsset
	{
	public:
		class FText                                                ScenarioName;                                            // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic
		class FString                                              Map;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Level[0x28];                                             // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UClass*                                              GameMode;                                                // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DefaultLightingScenario;                                 // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideScenarioImage;                                  // 0x0090(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2A0Q[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          ScenarioImage;                                           // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      URLOptions;                                              // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTheaterDefinition*                                  DefaultTheater;                                          // 0x00B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FScenarioSublevel>                           Sublevels;                                               // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAdditionalScenarioActors>                   AdditionalActors;                                        // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FObjectiveInfo>                              Objectives;                                              // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FObjectiveGroup>                             ObjectiveGroups;                                         // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AdditionalGameTags[0x50];                                // 0x00F8(0x0050) UNKNOWN PROPERTY: SetProperty
		class UGameModeScenarioData*                               GameModeData;                                            // 0x0148(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSequenceHelper;                                      // 0x0150(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BHWR[0x7];                                   // 0x0151(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USequenceHelperBase*>                         SequenceHelpersContainer;                                // 0x0158(0x0010) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ScenarioLevelFactory
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AScenarioLevelFactory : public AActor
	{
	public:
		class USphereComponent*                                    Root;                                                    // 0x0220(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ScenarioMission
	 * Size -> 0x0030 (FullSize[0x0198] - InheritedSize[0x0168])
	 */
	class UScenarioMission : public UScenarioBase
	{
	public:
		unsigned char                                              PlayerTeam;                                              // 0x0168(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              EnemyTeam;                                               // 0x0169(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BG7C[0x6];                                   // 0x016A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      StartingSpawnZoneNames;                                  // 0x0170(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsesMissionObjectives;                                  // 0x0180(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RPMN[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FObjectiveInfoMissions>                      MissionObjectives;                                       // 0x0188(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ScenarioMultiplayer
	 * Size -> 0x0040 (FullSize[0x01A8] - InheritedSize[0x0168])
	 */
	class UScenarioMultiplayer : public UScenarioBase
	{
	public:
		unsigned char                                              AttackingTeam;                                           // 0x0168(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WD8P[0x7];                                   // 0x0169(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              NeutralSpawnZones[0x10];                                 // 0x0170(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<struct FObjectiveInfo>                              SecondaryObjectives;                                     // 0x0180(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCustomGameConfig;                                    // 0x0190(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IEIM[0x7];                                   // 0x0191(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCustomGameConfig                                   CustomGameConfig;                                        // 0x0198(0x0010) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ScoreboardBadgeSettings
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UScoreboardBadgeSettings : public UDeveloperSettings
	{
	public:
		TArray<struct FScoreboardBadge>                            AvailableBadges;                                         // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool IsValidBadgeIndex(int32_t BadgeIndex);
		class UScoreboardBadgeSettings* STATIC_GetScoreboardBadgeSettings();
		void GetScoreboardBadgeImage(int32_t BadgeIndex);
		int32_t GetItemIdFromBadgeIndex(int32_t BadgeIndex);
		int32_t GetBadgeIndexByItemId(int32_t ItemId);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ScoreboardBase
	 * Size -> 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
	 */
	class UScoreboardBase : public UUserWidget
	{
	public:
		unsigned char                                              UnknownData_X5PY[0x8];                                   // 0x0230(0x0008) MISSED OFFSET (PADDING)

	public:
		void OnScoreboardShown();
		void OnScoreboardHidden();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ServerListEntry
	 * Size -> 0x0148 (FullSize[0x0170] - InheritedSize[0x0028])
	 */
	class UServerListEntry : public UObject
	{
	public:
		class FText                                                ServerName;                                              // 0x0028(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    Ping;                                                    // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Players;                                                 // 0x0044(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPlayers;                                              // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TF3G[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                GameMode;                                                // 0x0050(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Level;                                                   // 0x0068(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FString                                              LevelName;                                               // 0x0080(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPasswordProtected;                                      // 0x0090(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRanked;                                                 // 0x0091(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EServerEntryType                                           ServerType;                                              // 0x0092(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PM7Y[0x5];                                   // 0x0093(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int64_t>                                            ModList;                                                 // 0x0098(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        Mutators;                                                // 0x00A8(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBlueprintFindSessionResult                         ServerToJoin;                                            // 0x00B8(0x00B8) BlueprintVisible, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SharedCosmeticState
	 * Size -> 0x01B8 (FullSize[0x01E0] - InheritedSize[0x0028])
	 */
	class USharedCosmeticState : public UObject
	{
	public:
		class UClass*                                              HeadCosmetic;                                            // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        SkinColor;                                               // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECosmeticEyeColor                                          EyeColor;                                                // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CZYH[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                HeadMorph;                                               // 0x0044(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasHair;                                                // 0x004C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasGoatee;                                              // 0x004D(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasBeard;                                               // 0x004E(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasMuttonChop;                                          // 0x004F(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFemale;                                               // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FFRN[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        HairColor;                                               // 0x0054(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        HairTipColor;                                            // 0x0064(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HeadGearMorph;                                           // 0x0074(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EyewearHeadMorph;                                        // 0x007C(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCharacterMorphMacro                                HeadMorphStandard;                                       // 0x0084(0x0008) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FCharacterMorphMacro                                HeadMorphExtreme;                                        // 0x008C(0x0008) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NP7T[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       HeadFacialReferencePose;                                 // 0x0098(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstance*                                   EyeMaterial;                                             // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTuckedShirt;                                            // 0x00A8(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTuckedPants;                                            // 0x00A9(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasHeadgear;                                            // 0x00AA(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasFacewear;                                            // 0x00AB(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasEyewear;                                             // 0x00AC(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KCKN[0x3];                                   // 0x00AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TorsoMorph;                                              // 0x00B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMouthVisible;                                         // 0x00B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7MBU[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              TorsoCosmetic;                                           // 0x00C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              FeetCosmetic;                                            // 0x00C8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              HandCosmetic;                                            // 0x00D0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EyewearMorphSuffix;                                      // 0x00D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LegEquipmentMorph;                                       // 0x00E0(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FacewearMorph;                                           // 0x00E8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCosmeticColorGroup                                 CamoColor;                                               // 0x00F0(0x0050) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		float                                                      CamoScaleMultiplier;                                     // 0x0140(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRandomCamoShift;                                        // 0x0144(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OOKC[0x3];                                   // 0x0145(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            CamoTexture;                                             // 0x0148(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        TattooLeftChannel;                                       // 0x0150(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        TattooRightChannel;                                      // 0x0160(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            TattooLeftTexture1P;                                     // 0x0170(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            TattooLeftTexture3P;                                     // 0x0178(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            TattooRightTexture1P;                                    // 0x0180(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            TattooRightTexture3P;                                    // 0x0188(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGearCombination                                           GearCombination;                                         // 0x0190(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SH3G[0x3];                                   // 0x0191(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                FootLegMorph;                                            // 0x0194(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMorphTargetPair                                    HandGloveMorph;                                          // 0x019C(0x000C) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FMorphTargetPair                                    HandGloveMorphForTorso;                                  // 0x01A8(0x000C) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bHandFingerlessGloves;                                   // 0x01B4(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHandNoFingerGloves;                                     // 0x01B5(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHandFlightGloves;                                       // 0x01B6(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N7ZV[0x1];                                   // 0x01B7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TorsoMorphShortSleeve;                                   // 0x01B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TorsoMorphElbows;                                        // 0x01BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTorsoShortSleeve;                                       // 0x01C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTorsoElbows;                                            // 0x01C1(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTorsoGhillie;                                           // 0x01C2(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6HGW[0x1];                                   // 0x01C3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Faction;                                                 // 0x01C4(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HairMorph;                                               // 0x01CC(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNVGSoftharness;                                         // 0x01D4(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFullFaceWear;                                           // 0x01D5(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCoveringFaceWear;                                       // 0x01D6(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTuckedFacewear;                                         // 0x01D7(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCoveringHeadGear;                                       // 0x01D8(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFullHeadGear;                                           // 0x01D9(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNewMorphingSystem;                                      // 0x01DA(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K842[0x5];                                   // 0x01DB(0x0005) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SmartActor
	 * Size -> 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
	 */
	class ASmartActor : public AActor
	{
	public:
		float                                                      Timeout;                                                 // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EBotBehaviorPriority                                       BehaviorPriority;                                        // 0x0224(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PTE5[0x3];                                   // 0x0225(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumDistance;                                         // 0x0228(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_0JIZ[0x4];                                   // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSAISoldierController*                             InteractingBot;                                          // 0x0230(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_JGTB[0x8];                                   // 0x0238(0x0008) MISSED OFFSET (PADDING)

	public:
		bool ShouldFinish(class AINSAISoldierController* Me);
		void SetEnabled(bool bNewEnabled);
		void OnUpdate(class AINSAISoldierController* Me);
		void OnStart(class AINSAISoldierController* Me);
		void OnFinish(class AINSAISoldierController* Me);
		bool HasVisibleEnemyAndWithinRadiusToSmartActor(class AINSAISoldierController* Me, float Radius);
		bool CanInteract(class AINSAISoldierController* Me);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SoldierMovementComponent
	 * Size -> 0x09D0 (FullSize[0x14A0] - InheritedSize[0x0AD0])
	 */
	class USoldierMovementComponent : public UCharacterMovementComponent
	{
	public:
		float                                                      ServerLastMovementWorldTime;                             // 0x0AD0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CachedWeight;                                            // 0x0AD4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseMaxAcceleration;                                     // 0x0AD8(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSprintSpeed;                                          // 0x0ADC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRunSpeed;                                             // 0x0AE0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRunSpeedCrouched;                                     // 0x0AE4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxProneSpeed;                                           // 0x0AE8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SEEG[0x4];                                   // 0x0AEC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  StaminaSprintSpeedFrac;                                  // 0x0AF0(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  WeightSprintSpeedFrac;                                   // 0x0B78(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      ProneHalfHeight;                                         // 0x0C00(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProneDelay;                                              // 0x0C04(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProneTime;                                               // 0x0C08(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UnproneTime;                                             // 0x0C0C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwimTime;                                                // 0x0C10(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UnSwimTime;                                              // 0x0C14(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderShuffleStepTime;                                   // 0x0C18(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderTransitionTime;                                    // 0x0C1C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderADSTransitionTime;                                 // 0x0C20(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastStanceChangeTime;                                    // 0x0C24(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LastUpdatePawnLocation;                                  // 0x0C28(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            LastUpdatePawnRotation;                                  // 0x0C34(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFindFloorResult                                    LastJumpFloor;                                           // 0x0C40(0x0094) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bJustJumped;                                             // 0x0CD4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NCY9[0x3];                                   // 0x0CD5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SideMoveFraction;                                        // 0x0CD8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BackMoveFraction;                                        // 0x0CDC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeanMaxSpeedFraction;                                    // 0x0CE0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightsSpeedFraction;                                     // 0x0CE4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  AccelerationByWeight;                                    // 0x0CE8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  FrictionByWeight;                                        // 0x0D70(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  AccelerationBySprintSpeed;                               // 0x0DF8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  BlindnessSpeedScaling;                                   // 0x0E80(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      WaterImpairedMovementScaling;                            // 0x0F08(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaterImpairedMovementCap;                                // 0x0F0C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaterDepth;                                              // 0x0F10(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Wetness;                                                 // 0x0F14(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInWater;                                                // 0x0F18(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O3I3[0x3];                                   // 0x0F19(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxLadderClimbSpeed;                                     // 0x0F1C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxLadderSlideSpeed;                                     // 0x0F20(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxLadderSprintClimbSpeed;                               // 0x0F24(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderTopEnterTransitionTime;                            // 0x0F28(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderTopExitTransitionTime;                             // 0x0F2C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ALadder*                                             AttachedLadder;                                          // 0x0F30(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELadderState                                               LadderState;                                             // 0x0F38(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELadderState                                               LadderTransitionState;                                   // 0x0F39(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2BHA[0x2];                                   // 0x0F3A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LadderTransitionLocation;                                // 0x0F3C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LadderJumpDirectionalVelocity;                           // 0x0F48(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SlideHalfHeight;                                         // 0x0F4C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  SlideSpeedCurve;                                         // 0x0F50(0x0088) Edit, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  WeightSlideSpeedMultiplier;                              // 0x0FD8(0x0088) Edit, NativeAccessSpecifierPublic
		float                                                      SlideSlowDownRate;                                       // 0x1060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumSlideAngle;                                       // 0x1064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedToStopSlidingThreshhold;                            // 0x1068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SlideDirection;                                          // 0x106C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentSlideSpeed;                                       // 0x1078(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentGroundAngle;                                      // 0x107C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PostSlideStandBanDuration;                               // 0x1080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BackSideStepAccelModifier;                               // 0x1084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClimbNonMovementForwardCheckDistance;                    // 0x1088(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClimbMovementForwardCheckDistance;                       // 0x108C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVaultAction                                               CurrentVaultAction;                                      // 0x1090(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVaultAction                                               DesiredVaultAction;                                      // 0x1091(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MYQC[0x2];                                   // 0x1092(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             VaultTraceImpactPoint;                                   // 0x1094(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentVaultFallDistance;                                // 0x10A0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YYRT[0x4];                                   // 0x10A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveVector*                                        KneeToWaistVaultVelocity;                                // 0x10A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector*                                        KneeToWaistClimbVelocity;                                // 0x10B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector*                                        WaistToChestVaultVelocity;                               // 0x10B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector*                                        WaistToChestClimbVelocity;                               // 0x10C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetVaultLocation;                                     // 0x10C8(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J54A[0x4];                                   // 0x10D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CheckForVaultActionsFrequency;                           // 0x10D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GTVH[0x4];                                   // 0x10DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  SlopeSpeedScale;                                         // 0x10E0(0x0088) Edit, Protected, NativeAccessSpecifierProtected
		struct FRuntimeFloatCurve                                  ClimbStaminaScaling;                                     // 0x1168(0x0088) Edit, Protected, NativeAccessSpecifierProtected
		struct FVaultSmoothTransition                              VaultSmoothTransition;                                   // 0x11F0(0x0070) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		float                                                      VaultingKneeOffset;                                      // 0x1260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VaultingWaistOffset;                                     // 0x1264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VaultingChestOffset;                                     // 0x1268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VaultDirectionalVelocity;                                // 0x126C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      JumpVaultDirectionalVelocty;                             // 0x1270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             VaultDirection;                                          // 0x1274(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VaultTraceLength;                                        // 0x1280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VaultRunningTraceLength;                                 // 0x1284(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ClimbDisplacement;                                       // 0x1288(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VaultDisplacement;                                       // 0x128C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      HeightDisplacement;                                      // 0x1290(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XLZ0[0x4];                                   // 0x1294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveVector*                                        CurrentVaultCurve;                                       // 0x1298(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                RootSocketName;                                          // 0x12A0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VaultRadiusCheck;                                        // 0x12A8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      KneeToWaistVaultStaminaCost;                             // 0x12AC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      WaistToChestVaultStaminaCost;                            // 0x12B0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      KneeToWaistClimbStaminaCost;                             // 0x12B4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      WaistToChestClimbStaminaCost;                            // 0x12B8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VaultLookPitchTolerance;                                 // 0x12BC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VaultForwardDisplacementValue;                           // 0x12C0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ClimbForwardDisplacementValue;                           // 0x12C4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ClimbDotProdcutTolerance;                                // 0x12C8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bWantsToClimb;                                           // 0x12CC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_QF63[0x3];                                   // 0x12CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      VaultNormalThreshold;                                    // 0x12D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LandscapeVaultNormalThreshold;                           // 0x12D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      InitialSpeedFromVault;                                   // 0x12D8(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      InitialVaultSpeedCancelThreshold;                        // 0x12DC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AINSSoldier*                                         SoldierOwner;                                            // 0x12E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KNU6[0x10];                                  // 0x12E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PostChargeSprintBanDuration;                             // 0x12F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChargeBeginTime;                                         // 0x12FC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ChargeStaminaCost;                                       // 0x1300(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChargeRecoilEndTime;                                     // 0x1304(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ChargeRecoilDuration;                                    // 0x1308(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ChargeVictimLaunchStrength;                              // 0x130C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ChargeRecoilDamageVelocityModifier;                      // 0x1310(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ChargeStunDuration;                                      // 0x1314(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BaseChargeSpeed;                                         // 0x1318(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PYCM[0x4];                                   // 0x131C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  ChargeSpeedMultiplierOverTime;                           // 0x1320(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		struct FRuntimeFloatCurve                                  ChargeSpeedStaminaScaling;                               // 0x13A8(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected
		float                                                      ChargeDamage;                                            // 0x1430(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FullSprintValue;                                         // 0x1434(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastChargeTime;                                          // 0x1438(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SprintValue;                                             // 0x143C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SlideMultiplier;                                         // 0x1440(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedMultiplier;                                         // 0x1444(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintMultiplier;                                        // 0x1448(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintValueIncreaseSpeed;                                // 0x144C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SprintValueDecreaseSpeed;                                // 0x1450(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XWR7[0x4];                                   // 0x1454(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             Delegate_OnChargeBegin;                                  // 0x1458(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnChargeEnd;                                    // 0x1468(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnChargeHit;                                    // 0x1478(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FTimerHandle                                        WaterTraceTimer;                                         // 0x1488(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OV0X[0x10];                                  // 0x1490(0x0010) MISSED OFFSET (PADDING)

	public:
		void Server_ToggleLadderADS(ELadderState ViewState);
		void Server_StopVaulting();
		void Server_PerformVaultAction(const struct FVector& Location, EVaultAction VaultAction, const struct FVector& InVaultTraceImpactPoint, float Speed);
		void Server_LeapFromLadder();
		void Server_ExitLadder(ELadderState ExitState);
		void Server_EnterLadder(ELadderState ExitState, class ALadder* Ladder);
		void Server_EndCharge();
		void Server_ChargeHit(class AActor* HitActor);
		void Server_Charge();
		void Server_CancelVault();
		void Multicast_HandleChargeRecoil();
		bool IsVaultActionClimbAction();
		bool IsCurrentlyVaulting();
		bool InChargeMode();
		bool HasSprintEnoughForFullSprint();
		float GetWalkingMaxSpeed();
		float GetTimeSinceLastCharge();
		ESoldierStance GetStance();
		float GetMovementSpeedScaling();
		float GetMaxWalkingSpeed();
		float GetMaxSprintSpeed();
		float GetMaxSpeedForStance(ESoldierStance Stance);
		float GetMaxSpeedForCurrentStance();
		float GetMaxSlideSpeed();
		float GetMaxRunSpeed();
		float GetMaxProneSpeed();
		float GetHeightForStance(ESoldierStance Stance);
		void ClientExitLadder(ELadderState ExitState);
		bool CanPerformVaultAction();
		bool AllowVaulting();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SoldierPathFollowingComponent
	 * Size -> 0x02A8 (FullSize[0x0500] - InheritedSize[0x0258])
	 */
	class USoldierPathFollowingComponent : public UPathFollowingComponent
	{
	public:
		class USoldierMovementComponent*                           SoldierMoveComp;                                         // 0x0258(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_C5SR[0x234];                                 // 0x0260(0x0234) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RecentPathsSegmentsMaxSize;                              // 0x0494(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UHJ2[0x10];                                  // 0x0498(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StuckTimeMax;                                            // 0x04A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      CrouchTimeMax;                                           // 0x04AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    PathAvoidanceTimesMax;                                   // 0x04B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    PathJumpTimesMax;                                        // 0x04B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    PathCrouchTimesMax;                                      // 0x04B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    PathRepathTimesMax;                                      // 0x04BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      AvoidanceForceMultiplier;                                // 0x04C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      AvoidanceSearchDistance;                                 // 0x04C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RNYL[0x18];                                  // 0x04C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ADoor*>                                       BlockingDoorsForThisPathSegment;                         // 0x04E0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class ADoor>                                LastBlockingDoor;                                        // 0x04F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_X99A[0x8];                                   // 0x04F8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SoundscapeComponent
	 * Size -> 0x0290 (FullSize[0x0480] - InheritedSize[0x01F0])
	 */
	class USoundscapeComponent : public USceneComponent
	{
	public:
		unsigned char                                              UnknownData_NYQ0[0x18];                                  // 0x01F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoundscapeStateRepl                                ReplicatedState;                                         // 0x0208(0x01C0) Net, Transient, RepNotify, NativeAccessSpecifierPrivate
		class USoundscapeDefinition*                               BaseIndoorDefinition;                                    // 0x03C8(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USoundscapeDefinition*                               OutdoorSoundscape;                                       // 0x03D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USoundscapeDefinition*                               OutdoorFallbackSoundscape;                               // 0x03D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class USoundscapeDefinition*, float>                  IndoorSoundscapes;                                       // 0x03E0(0x0050) NativeAccessSpecifierPrivate
		class ASoundscapeTriggerDoor*                              ClosestTransitionSphere;                                 // 0x0430(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class ASoundscapeTriggerDoor*>                      ActiveTransitionVolumes;                                 // 0x0438(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class ASoundscapeOutdoorVolume*>                    ActiveOutdoorVolumes;                                    // 0x0448(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_18R2[0x10];                                  // 0x0458(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OutdoorAmount;                                           // 0x0468(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FI74[0x14];                                  // 0x046C(0x0014) MISSED OFFSET (PADDING)

	public:
		void SoundscapeUpdate__DelegateSignature(const struct FSoundscapeStateRepl& State);
		void OnRep_ReplicatedState();
		void OnRep_BaseIndoorDefinition();
		void OnEndTouchingTransitionSphere(class ASoundscapeTriggerDoor* TriggerActor);
		void OnEndTouchingOutdoorVolume(class ASoundscapeOutdoorVolume* TriggerActor);
		void OnBeginTouchingTransitionSphere(class ASoundscapeTriggerDoor* TriggerActor);
		void OnBeginTouchingOutdoorVolume(class ASoundscapeOutdoorVolume* TriggerActor);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SoundscapeDefinition
	 * Size -> 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
	 */
	class USoundscapeDefinition : public UDataAsset
	{
	public:
		class UAkAudioEvent*                                       EntryEvent;                                              // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class UAkAuxBus*, float>                              AuxBusValues;                                            // 0x0038(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FName                                                WeaponSwitchValue;                                       // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SoundscapeEmitter
	 * Size -> 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
	 */
	class ASoundscapeEmitter : public AActor
	{
	public:
		float                                                      AuxScale;                                                // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TXYU[0x4];                                   // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class USoundscapeDefinition*>                       AssociatedSoundscapes;                                   // 0x0228(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  SoundscapeComponent;                                     // 0x0238(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReceiveEnvironmentUpdates;                              // 0x0240(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A4RY[0x17];                                  // 0x0241(0x0017) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SoundscapeOutdoorVolume
	 * Size -> 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
	 */
	class ASoundscapeOutdoorVolume : public AVolume
	{
	public:
		unsigned char                                              VolumePriority;                                          // 0x0258(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VL85[0x7];                                   // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoundscapeDefinition*                               Definition;                                              // 0x0260(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SoundscapeState
	 * Size -> 0x00E0 (FullSize[0x0108] - InheritedSize[0x0028])
	 */
	class USoundscapeState : public UObject
	{
	public:
		unsigned char                                              UnknownData_PZ9V[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class UAkComponent>>                 RegisteredComponents;                                    // 0x0030(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class USoundscapeDefinition*, struct FEmitterRegister> RegisteredEmitters;                                      // 0x0040(0x0050) NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_366V[0x78];                                  // 0x0090(0x0078) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SoundscapeTriggerDoor
	 * Size -> 0x0030 (FullSize[0x0258] - InheritedSize[0x0228])
	 */
	class ASoundscapeTriggerDoor : public ATriggerBox
	{
	public:
		class USoundscapeDefinition*                               SoundscapeFront;                                         // 0x0228(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USoundscapeDefinition*                               SoundscapeBack;                                          // 0x0230(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutomaticTransitionRadius;                              // 0x0238(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0P5D[0x3];                                   // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TransitionCapsulePadding;                                // 0x023C(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequireLineOfSight;                                     // 0x0240(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XXVZ[0x7];                                   // 0x0241(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCapsuleComponent*                                   TransitionCapsule;                                       // 0x0248(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     LineOfSightLocation;                                     // 0x0250(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void OnTransitionSphereEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		void OnTransitionSphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnSoundscapeTriggerEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SpawnerBase
	 * Size -> 0x0088 (FullSize[0x02A8] - InheritedSize[0x0220])
	 */
	class ASpawnerBase : public AActor
	{
	public:
		unsigned char                                              UnknownData_KYU2[0x10];                                  // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bOnlySpawnActiveRound;                                   // 0x0230(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MD5X[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASpawnZone*                                          LinkedSpawnZone;                                         // 0x0238(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBotSkillConfig*                                     CustomBotSkillConfig;                                    // 0x0240(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SpawnerPawnClass;                                        // 0x0248(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPlayerClass*>                                PawnPlayerClasses;                                       // 0x0250(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x0260(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnAutomatically;                                     // 0x0261(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnWithReinforcements;                                // 0x0262(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRegisteredReinforcementCallback;                        // 0x0263(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpawnLimitPerRound;                                      // 0x0264(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpawnQuota;                                              // 0x0268(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TimesSpawnedThisRound;                                   // 0x026C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<TWeakObjectPtr<class APawn>>                        SpawnedPawns;                                            // 0x0270(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_DeferredSpawn;                               // 0x0280(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USkeletalMeshComponent*>                      PreviewMeshes;                                           // 0x0288(0x0010) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9AIO[0x10];                                  // 0x0298(0x0010) MISSED OFFSET (PADDING)

	public:
		void SpawnPawns();
		void SetTeamId(unsigned char NewTeamId);
		void ResetKilledPawns();
		void OnTeamReinforced(int32_t PlayersSpawned);
		void OnSpawnedControllerPossessed(class APawn* NeWPawn);
		void OnLinkedSpawnZoneToggled(bool bNewState);
		bool IsUnderSpawnQuota();
		bool IsSpawnRestricted();
		TArray<class APawn*> GetSpawnedPawns();
		int32_t GetNumKilledPawns();
		int32_t GetExistingPawnCount();
		bool GameStateAllowsSpawning();
		void DeferredSpawnPawns(float Delay);
		void CleanupSpawnedPawns();
		void CheckPawnAbandonment();
		bool CanSpawnPawns();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SpawnerSquad
	 * Size -> 0x0010 (FullSize[0x02B8] - InheritedSize[0x02A8])
	 */
	class ASpawnerSquad : public ASpawnerBase
	{
	public:
		int32_t                                                    NumberToSpawn;                                           // 0x02A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3TSC[0x4];                                   // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeletalMesh*                                       PreviewSkeletalMesh;                                     // 0x02B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SpawnerVehicle
	 * Size -> 0x0058 (FullSize[0x0300] - InheritedSize[0x02A8])
	 */
	class ASpawnerVehicle : public ASpawnerBase
	{
	public:
		int32_t                                                    SeatsToFill;                                             // 0x02A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HFLY[0x4];                                   // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              PassengerPawnClass;                                      // 0x02B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PassengerAIClass;                                        // 0x02B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpawnerVehicleType                                        VehicleSpawnerType;                                      // 0x02C0(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F0R8[0x7];                                   // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              InsertionTargetPoint;                                    // 0x02C8(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      InsertionNavigationPoints;                               // 0x02D0(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AVehicleNavTarget*>                           VehicleNavigationTargets;                                // 0x02E0(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class APawn*>                                       SpawnedPassengers;                                       // 0x02F0(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		bool IsSpawnObstructed();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SpawnProtectedDamageReflectMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class USpawnProtectedDamageReflectMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SpawnProtectedMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class USpawnProtectedMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SpawnZone
	 * Size -> 0x0070 (FullSize[0x02D8] - InheritedSize[0x0268])
	 */
	class ASpawnZone : public APhysicsVolume
	{
	public:
		unsigned char                                              UnknownData_NGOL[0x8];                                   // 0x0268(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bStartEnabled;                                           // 0x0270(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0271(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TTSG[0x6];                                   // 0x0272(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnSpawnZoneToggleDelegate;                               // 0x0278(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x0288(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PVGC[0x7];                                   // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      ControlledActors;                                        // 0x0290(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AINSPlayerStart*>                             PlayerStarts;                                            // 0x02A0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      TrackedActors;                                           // 0x02B0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ARestrictedArea*>                             RestrictedAreas;                                         // 0x02C0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnsVehicles;                                         // 0x02D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X2QJ[0x7];                                   // 0x02D1(0x0007) MISSED OFFSET (PADDING)

	public:
		void SetTeamId(unsigned char NewTeamId);
		void SetEnabled(bool bNewState);
		void OnSpawnZoneToggledDelegate__DelegateSignature(bool bNewState);
		void OnRep_Enabled();
		void AssociateRestrictedArea(class ARestrictedArea* Area);
		void AssociatePlayerStart(class AINSPlayerStart* PlayerStart);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SpawnZoneCounterAttack
	 * Size -> 0x0000 (FullSize[0x02D8] - InheritedSize[0x02D8])
	 */
	class ASpawnZoneCounterAttack : public ASpawnZone
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SpawnZoneTriggeredActorInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class USpawnZoneTriggeredActorInterface : public UInterface
	{
	public:
		void OnSpawnZoneEnabled(class ASpawnZone* InSpawnZone, bool bNewEnabled);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SquadLayout
	 * Size -> 0x02F8 (FullSize[0x0320] - InheritedSize[0x0028])
	 */
	class USquadLayout : public UObject
	{
	public:
		class FText                                                PrintName;                                               // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FPlayerAllowedEquipment                             SquadAdditionalEquipment;                                // 0x0040(0x00F0) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FPlayerAllowedEquipment                             SquadExcludedEquipment;                                  // 0x0130(0x00F0) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              AllowedEquipmentCollections[0x50];                       // 0x0220(0x0050) UNKNOWN PROPERTY: SetProperty
		TArray<struct FPlayerClassLimit>                           ClassSlots;                                              // 0x0270(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, struct FPlayerClassLimit>                SpecialClassSlots;                                       // 0x0280(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    Capacity;                                                // 0x02D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAttributeOverrides;                                  // 0x02D4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KNT4[0x3];                                   // 0x02D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerClassAttributes                              AttributeOverrides;                                      // 0x02D8(0x003C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_65QB[0x4];                                   // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBotSkillConfig*                                     CustomBotSkillConfig;                                    // 0x0318(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool HasPlayerClassInLayout(class UPlayerClass* InPlayerClass);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StatAchievement
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	class UStatAchievement : public USandstormAchievement
	{
	public:
		class FName                                                StatName;                                                // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StationDialogueDictionary
	 * Size -> 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
	 */
	class UStationDialogueDictionary : public UDataAsset
	{
	public:
		TArray<struct FStationPhrase>                              StationPhrases;                                          // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FStationFireSupportStatusPhraseContainer>    FireSupportStatusPhrases;                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StatisticsManager
	 * Size -> 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
	 */
	class UStatisticsManager : public UObject
	{
	public:
		TArray<class UStatisticsRound*>                            Rounds;                                                  // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FStatisticsRoundSummaryResult>               RoundResults;                                            // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TMap<class FString, class UStatisticsPlayer*>              PlayerStatsMap;                                          // 0x0048(0x0050) NativeAccessSpecifierPrivate

	public:
		void VehicleDestroyedEvent(class AController* KillerPlayer, TArray<class AController*> AssisterPlayers);
		void ObjectiveEvent(int32_t ObjectiveId, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
		void ObjectiveDestroyedEvent(class AObjectiveDestructible* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
		void ObjectiveCapturedEvent(class AObjectiveCapturable* Objective, unsigned char OldOwners, unsigned char NewOwners, TArray<class AINSPlayerState*> Capturers);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StatisticsPlayer
	 * Size -> 0x0288 (FullSize[0x02B0] - InheritedSize[0x0028])
	 */
	class UStatisticsPlayer : public UObject
	{
	public:
		unsigned char                                              UnknownData_I8O4[0x1D0];                                 // 0x0028(0x01D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_PlayerClock;                                 // 0x01F8(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, struct FStatisticsPlayerStatClass>     PlayerClasses;                                           // 0x0200(0x0050) NativeAccessSpecifierPublic
		TWeakObjectPtr<class AController>                          MyPlayerController;                                      // 0x0250(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   StatsPlayerId;                                           // 0x0258(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayerName;                                              // 0x0260(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UniqueId;                                                // 0x0270(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   SessionId;                                               // 0x0280(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x0288(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RKCA[0x3];                                   // 0x0289(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GameJoinTime;                                            // 0x028C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GameLeaveTime;                                           // 0x0290(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              GameLeaveReason;                                         // 0x0294(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2XCH[0x3];                                   // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Score;                                                   // 0x0298(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LastKnownPosition;                                       // 0x029C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStatisticsPlayerStanceFlags                               LastKnownStanceFlags;                                    // 0x02A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStatisticsPlayerSightFlags                                LastKnownSightFlags;                                     // 0x02A9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZA2L[0x6];                                   // 0x02AA(0x0006) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StatisticsProfile
	 * Size -> 0x01F8 (FullSize[0x0220] - InheritedSize[0x0028])
	 */
	class UStatisticsProfile : public UObject
	{
	public:
		struct FStatisticsPlayerProfile                            Profile;                                                 // 0x0028(0x01B8) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EeWeaponStatsSortState                                     WeaponStatsSortState;                                    // 0x01E0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YYXE[0x7];                                   // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StatsFilterMapState;                                     // 0x01E8(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StatsFilterGameTypeState;                                // 0x01F8(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StatsFilterModeState;                                    // 0x0208(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StatsFilterTeamIdState;                                  // 0x0218(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_751C[0x4];                                   // 0x021C(0x0004) MISSED OFFSET (PADDING)

	public:
		void SetWeaponStatsSortState(EeWeaponStatsSortState NewFilterState);
		void Reset();
		void ParseProfileFromJsonString(class FString* profileJson);
		TArray<struct FStatisticsPlayerWinRecordItem> GetWinRecord();
		class FString GetWinPercentForMode(class FString* ModeName);
		class FString GetWinPercentForMap(class FString* MapName);
		void GetWeaponStats(TArray<struct FStatisticsPlayerWeaponStats>* inArray);
		class FString GetTimePlayedForMode(class FString* ModeName);
		class FString GetTimePlayedForMap(class FString* MapName);
		TMap<class FString, struct FStatisticsPlayerWeaponStats> GetStatsForWeapons(TArray<class FString>* WeaponNames, bool bFilterByGameType, bool bFilterByMode, bool bFilterByMap);
		int32_t GetScore();
		struct FStatisticsPlayerProfileScenarioStats GetScenarioStatsSummary(bool bFilterMap, bool bFilterMode, bool bFilterGameType, bool bFilterTeam);
		int32_t STATIC_GetRankTierForRank(int32_t PlayerLevel);
		int32_t STATIC_GetRankTierForExp(int32_t PlayerExperience);
		float STATIC_GetRankProgressPercent(int32_t PlayerExperience);
		int32_t STATIC_GetRankPrestigeForExp(int32_t PlayerExperience);
		int32_t STATIC_GetRankLevelThresholdForTier(int32_t RankTier);
		int32_t STATIC_GetRankLevelThreshold(int32_t RankLevel);
		int32_t STATIC_GetRankLevelForRank(int32_t PlayerRank);
		int32_t STATIC_GetRankLevelForExp(int32_t PlayerExperience);
		int32_t STATIC_GetRankExperienceThreshold(int32_t PlayerRank);
		TArray<struct FStatisticsPlayerClassStats> GetPlayerClassStats();
		float STATIC_GetNextRankProgressPercent(int32_t PlayerCurrentExperience, int32_t NextPlayerRank);
		int32_t STATIC_GetNextRankExperienceThreshold(int32_t PlayerExperience);
		class FString GetMostUsedWeaponForGameTypeAndTeam(class FText* GameType, int32_t GameTeam, float* PercentKillsOfTotal);
		class FString GetMostUsedClassForGameTypeAndTeam(class FText* GameType, int32_t GameTeam, float* PercentTimeOfTotal);
		int32_t GetKills();
		int32_t GetExperience();
		int32_t GetDeaths();
		int32_t STATIC_GetCurrentRankExperienceThreshold(int32_t PlayerExperience);
		int32_t STATIC_GetCurrentRank(int32_t PlayerExperience);
		int32_t GetBalance();
		void GetAvailableModesForWeaponStats(TArray<class FString>* inArray, bool bFilterByMap, bool bFilterByGameType);
		void GetAvailableModesForScenarioStats(TArray<class FString>* inArray, bool bFilterByTeam, bool bFilterByGameType, bool bFilterByMap);
		void GetAvailableMapsForWeaponStats(TArray<class FString>* inArray, bool bFilterByGameType);
		void GetAvailableMapsForScenarioStats(TArray<class FString>* inArray, bool bFilterByTeam, bool bFilterByGameType, bool bFilterByMode);
		void GetAvailableGameTypesForWeaponStats(TArray<class FString>* inArray);
		class FString DescribeWinRatio(int32_t Wins, int32_t Games);
		class FString STATIC_DescribeTimePlayedAsHoursMinutes(int32_t TimePlayed);
		class FString STATIC_DescribeTimePlayed(int32_t TimePlayed);
		class FString DescribeKillDeathRatio(int32_t Kills, int32_t Deaths);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StatisticsRound
	 * Size -> 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
	 */
	class UStatisticsRound : public UObject
	{
	public:
		bool                                                       bRoundOver;                                              // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6V87[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   RoundId;                                                 // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   GameId;                                                  // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoundStartTime;                                          // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoundEndTime;                                            // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              WinningTeam;                                             // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERoundConclusion                                           WinReason;                                               // 0x0049(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InternalRoundNumber;                                     // 0x004A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MF14[0x5];                                   // 0x004B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UStatisticsPlayer*>                           PlayerStats;                                             // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FStatisticsKillEvent>                        KillEvents;                                              // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FStatisticsObjectiveEvent>                   ObjectiveEvents;                                         // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StoreItem
	 * Size -> 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
	 */
	class UStoreItem : public UPrimaryDataAsset
	{
	public:
		EStoreItemCategory                                         ItemCategory;                                            // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SCS3[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                InternalItemName;                                        // 0x0034(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InternalOperationName;                                   // 0x003C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EP70[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FCollectiblePlatformClaim>        Claims;                                                  // 0x0048(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<class FName, struct FCollectiblePlatformClaim>        ClaimsBeta;                                              // 0x0098(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    ItemId;                                                  // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasDiscount;                                            // 0x00EC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShown;                                                  // 0x00ED(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOwned;                                                  // 0x00EE(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V4E9[0x1];                                   // 0x00EF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          BackgroundTexture;                                       // 0x00F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          ItemMiniTexture;                                         // 0x00F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StoreBundle
	 * Size -> 0x0010 (FullSize[0x0110] - InheritedSize[0x0100])
	 */
	class UStoreBundle : public UStoreItem
	{
	public:
		unsigned char                                              IncomingItems[0x10];                                     // 0x0100(0x0010) UNKNOWN PROPERTY: ArrayProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StoreHandlerBase
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	class UStoreHandlerBase : public UObject
	{
	public:
		unsigned char                                              UnknownData_MI90[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOnlineStoreSubsystem*                               StoreSubsystem;                                          // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StoreHandlerEOS
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UStoreHandlerEOS : public UStoreHandlerBase
	{
	public:
		unsigned char                                              UnknownData_MP1R[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StoreHandlerSteam
	 * Size -> 0x0030 (FullSize[0x0068] - InheritedSize[0x0038])
	 */
	class UStoreHandlerSteam : public UStoreHandlerBase
	{
	public:
		unsigned char                                              UnknownData_AVVZ[0x30];                                  // 0x0038(0x0030) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StoreItemsList
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UStoreItemsList : public UDataAsset
	{
	public:
		unsigned char                                              PlatformStoreItems[0x10];                                // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Structure
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class AStructure : public AActor
	{
	public:
		TArray<class UStaticMeshComponent*>                        StructureComponents;                                     // 0x0220(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StructureCollection
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	class UStructureCollection : public UObject
	{
	public:
		TArray<class UStructureElement*>                           Elements;                                                // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.StructureElement
	 * Size -> 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
	 */
	class UStructureElement : public UObject
	{
	public:
		EStructureElementType                                      Type;                                                    // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ROUU[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         Mesh;                                                    // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LH9T[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          PivotOffset;                                             // 0x0040(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SupplyCrate
	 * Size -> 0x0148 (FullSize[0x0580] - InheritedSize[0x0438])
	 */
	class ASupplyCrate : public APropBreakable
	{
	public:
		unsigned char                                              UnknownData_PHD1[0x8];                                   // 0x0438(0x0008) Fix Super Size
		unsigned char                                              UnknownData_OYW5[0x2C];                                  // 0x0440(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UseYawViewLimit;                                         // 0x046C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResupplyTimeoutTime;                                     // 0x0470(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XPL2[0x4];                                   // 0x0474(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          LoadoutIcon;                                             // 0x0478(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          ResupplyIcon;                                            // 0x0480(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveOnRoundReset;                                     // 0x0488(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IGEK[0x3];                                   // 0x0489(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ResupplyTime;                                            // 0x048C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASpawnZone*                                          LinkedSpawnZone;                                         // 0x0490(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLinkedSpawnZoneActive;                                  // 0x0498(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActive;                                               // 0x0499(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6KPO[0x6];                                   // 0x049A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AObjectiveBase*                                      LinkedObjective;                                         // 0x04A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRandomizedSpawn;                                        // 0x04A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8JQ3[0x3];                                   // 0x04A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpawnChance;                                             // 0x04AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDestroyIfRandomizeSpawnFails;                           // 0x04B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1SSC[0x7];                                   // 0x04B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent*                                MeshLidComponent;                                        // 0x04B8(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSmoothTransition                                   SmoothTransition;                                        // 0x04C0(0x0060) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FRotator                                            TargetLidRotation;                                       // 0x0520(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            ClosedLidRotation;                                       // 0x052C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            OpenedLidRotation;                                       // 0x0538(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bCloseWhenEmpty;                                         // 0x0544(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T80X[0x3];                                   // 0x0545(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TimesAllowedToBeUsed;                                    // 0x0548(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UsesLeft;                                                // 0x054C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMagGrabIsEnabled;                                       // 0x0550(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSingleUsePerPlayer;                                     // 0x0551(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EPYN[0x6];                                   // 0x0552(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APlayerController*>                           PlayersWhoHaveResupplied;                                // 0x0558(0x0010) Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZULB[0x8];                                   // 0x0568(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPointOfInterestActorComponent*                      PointOfInterestComponent;                                // 0x0570(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          CrateIcon;                                               // 0x0578(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool ShowShowPointOfInterest(class AINSSoldier* ForPlayer);
		void SetMeshLidAnimation(const struct FRotator& NewTargetRotation);
		void PerformResupplyForPlayer(class AINSSoldier* Pawn);
		void OpenSupplyCrate();
		void OnSpawnZoneToggled(bool bNewState);
		void OnRep_UsesLeft();
		void OnRep_PlayersWhoHaveResupplied();
		void OnRep_LinkedSpawnZoneActive();
		void OnRep_IsActive();
		void OnObjectiveActive(bool bNewState, class AObjectiveBase* Objective);
		void CloseSupplyCrate();
		void BlueprintOnUsesLeftUpdated();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SupplyGainMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class USupplyGainMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SurfaceReaction
	 * Size -> 0x0108 (FullSize[0x0130] - InheritedSize[0x0028])
	 */
	class USurfaceReaction : public UObject
	{
	public:
		TArray<struct FSurfaceReactionInfo>                        Reactions;                                               // 0x0028(0x0010) ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PhysicalMaterialReactions[0x50];                         // 0x0038(0x0050) UNKNOWN PROPERTY: MapProperty
		TMap<EPhysicalSurface, struct FSurfaceReactionInfo>        SurfaceTypeReactions;                                    // 0x0088(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bParticlesRequireComponentVisible;                       // 0x00D8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAudioComponentMaxDistance;                           // 0x00D9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HPDY[0x2];                                   // 0x00DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AudioComponentMaxDistance;                               // 0x00DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPhysicalSurface                                           MidAirSurfaceType;                                       // 0x00E0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8SOD[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SurfaceSwitchGroup;                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SurfaceTypeGroup;                                        // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SurfaceSwitchAkEvent;                                    // 0x0108(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachSound;                                            // 0x0110(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachEffect;                                           // 0x0111(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayMidAirReaction;                                     // 0x0112(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseLocalPlayerAuxBusses;                                // 0x0113(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyOcclusion;                                         // 0x0114(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P1TI[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WaterSwitchMaxPuddleLevel;                               // 0x0118(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaterSwitchMaxShallowLevel;                              // 0x011C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SkeletalMeshDecalDepthMultiplier;                        // 0x0120(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DecalFadeScreenSize;                                     // 0x0124(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TranslucencySortPriority;                                // 0x0128(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExcludeParticleSystemFromPool;                          // 0x012C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4FZL[0x3];                                   // 0x012D(0x0003) MISSED OFFSET (PADDING)

	public:
		void PlaySurfaceReactions(class UObject* WorldContextObject, EPhysicalSurface SurfaceType, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& HitDirection, class UPrimitiveComponent* HitComponent, const class FName& HitBoneName, class UPhysicalMaterial* HitMaterial, EDecalTransformMask DecalTransformMask);
		void PlaySurfaceHitReactions(class UObject* WorldContextObject, const struct FHitResult& HitInfo, EDecalTransformMask DecalTransformMask);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SurfaceReactionManager
	 * Size -> 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
	 */
	class ASurfaceReactionManager : public AActor
	{
	public:
		TArray<struct FManagedParticleComponent>                   ComponentPool;                                           // 0x0220(0x0010) ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		void OnPooledParticleSystemFinished(class UParticleSystemComponent* FinishedComponent);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SurvivalHUD
	 * Size -> 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
	 */
	class USurvivalHUD : public UUserWidget
	{
	public:
		class UINSGameUserSettings* GetINSUserSettings();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SurvivalObjective
	 * Size -> 0x0028 (FullSize[0x0490] - InheritedSize[0x0468])
	 */
	class ASurvivalObjective : public AObjectiveCapturable
	{
	public:
		ESurvivalOrderType                                         OrderType;                                               // 0x0468(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KRSV[0x7];                                   // 0x0469(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AObjectiveBase*>                              AdditionalNextObjectives;                                // 0x0470(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AObjectiveBase*>                              ExcludedNextObjectives;                                  // 0x0480(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SurvivalRouteConfig
	 * Size -> 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
	 */
	class ASurvivalRouteConfig : public AActor
	{
	public:
		float                                                      MinDistance;                                             // 0x0220(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance;                                             // 0x0224(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              NumObjectives;                                           // 0x0228(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RouteCountForLongRoutes;                                 // 0x0229(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4PRK[0x6];                                   // 0x022A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASpawnZone*                                          InitialSpawn;                                            // 0x0230(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		void LogRouteInfo();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.SurvivalScenarioData
	 * Size -> 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
	 */
	class USurvivalScenarioData : public UGameModeScenarioData
	{
	public:
		float                                                      MinDistance;                                             // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance;                                             // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              HelicopterSequenceActor[0x28];                           // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TacticalGrid
	 * Size -> 0x0260 (FullSize[0x0480] - InheritedSize[0x0220])
	 */
	class ATacticalGrid : public AActor
	{
	public:
		bool                                                       bDrawNavMeshDebug;                                       // 0x0220(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDrawTileGenerationDebug;                                // 0x0221(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDrawGridDebug;                                          // 0x0222(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UEPT[0x1];                                   // 0x0223(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ConcealmentScoreModificator;                             // 0x0224(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDecreaseCostCoeff;                                    // 0x0228(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObstaclesScanHeightAboveGround;                          // 0x022C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinScoreToSerialize;                                     // 0x0230(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastMatrixSize;                                          // 0x0234(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastMatrixDirectionalExpansionSize;                      // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InterMatrixSize;                                         // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PathfindingMaxDistance;                                  // 0x0240(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YDNH[0x54];                                  // 0x0244(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CellSize;                                                // 0x0298(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CellHeight;                                              // 0x029C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ContextGenerationExtent;                                 // 0x02A0(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             NavBoundsOrigin;                                         // 0x02AC(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CellExtent;                                              // 0x02B8(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PlayerPresenceMaxAge;                                    // 0x02C4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              HorizontalTraceCount;                                    // 0x02C5(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              VerticalTraceCount;                                      // 0x02C6(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HZVG[0x1];                                   // 0x02C7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HalfFOV;                                                 // 0x02C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Width;                                                   // 0x02CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x02D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZDepth;                                                  // 0x02D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<struct FRelationshipIndex, struct FGridCellRelationshipData> Relations;                                               // 0x02D8(0x0050) NativeAccessSpecifierPublic
		TMap<uint32_t, struct FCellData>                           CellsData;                                               // 0x0328(0x0050) NativeAccessSpecifierPublic
		TArray<uint32_t>                                           CellsDataIndexed;                                        // 0x0378(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MYQV[0xF8];                                  // 0x0388(0x00F8) MISSED OFFSET (PADDING)

	public:
		void TestPathfinding();
		void GenerateTacticalInfo();
		void GenerateData();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TacticalGridRenderingComponent
	 * Size -> 0x0050 (FullSize[0x0460] - InheritedSize[0x0410])
	 */
	class UTacticalGridRenderingComponent : public UPrimitiveComponent
	{
	public:
		unsigned char                                              UnknownData_BR84[0x50];                                  // 0x0410(0x0050) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TacticalGridTestingPawn
	 * Size -> 0x0048 (FullSize[0x0500] - InheritedSize[0x04B8])
	 */
	class ATacticalGridTestingPawn : public ACharacter
	{
	public:
		struct FVector                                             DebugAreaExtend;                                         // 0x04B8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETacticalGridDebugDisplayMode                              DisplayMode;                                             // 0x04C4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETacticalGridDebugMode                                     DebugeMode;                                              // 0x04C5(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3V7M[0x2];                                   // 0x04C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bReRunQueryOnlyOnFinishedMove : 1;                       // 0x04C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldBeVisibleInGame : 1;                              // 0x04C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTickDuringGame : 1;                                     // 0x04C8(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_01IB[0x7];                                   // 0x04C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FNavAgentProperties                                 NavAgentProperties;                                      // 0x04D0(0x0030) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TacticalMapWidget
	 * Size -> 0x01D8 (FullSize[0x0408] - InheritedSize[0x0230])
	 */
	class UTacticalMapWidget : public UUserWidget
	{
	public:
		TArray<class UMapActorWidget*>                             ActorIconWidgets;                                        // 0x0230(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<TWeakObjectPtr<class AActor>, class UMapActorWidget*> ActorIconMap;                                            // 0x0240(0x0050) ExportObject, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              LocalTeamId;                                             // 0x0290(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZUP9[0x7];                                   // 0x0291(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class AObjectiveBase*, class UUserWidget*>            ObjectiveIcons;                                          // 0x0298(0x0050) BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UClass*                                              PlayerIconWidget;                                        // 0x02E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ObjectiveIconWidget;                                     // 0x02F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ObjectiveDestructibleIconWidget;                         // 0x02F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SpawnIconWidget;                                         // 0x0300(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              RestrictedAreaWidget;                                    // 0x0308(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SupplyCrateIconWidget;                                   // 0x0310(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              VehicleIconWidget;                                       // 0x0318(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ItemPickupWidget;                                        // 0x0320(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PointOfInterestWidget;                                   // 0x0328(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          MapFallbackTexture;                                      // 0x0330(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            BackgroundMaterialInstance;                              // 0x0338(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        WidgetPanel;                                             // 0x0340(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCanvasPanel*                                        BackgroundLayerPanel;                                    // 0x0348(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              MapBackground;                                           // 0x0350(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseMapRotation;                                         // 0x0358(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMinimap;                                                // 0x035C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMinimapRotates;                                         // 0x035D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D6IQ[0x2];                                   // 0x035E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimapZoom;                                             // 0x0360(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VHEH[0x50];                                  // 0x0364(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBox                                                MinimapBox;                                              // 0x03B4(0x001C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      MinimapRotation;                                         // 0x03D0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomStep;                                                // 0x03D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxZoomLevel;                                            // 0x03D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinZoomLevel;                                            // 0x03DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GridZoom;                                                // 0x03E0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CUH0[0xC];                                   // 0x03E4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           MinimapCanvasOffsetFromCenter;                           // 0x03F0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X8AA[0x10];                                  // 0x03F8(0x0010) MISSED OFFSET (PADDING)

	public:
		void ScaleWorldSizeToMapSize(const struct FVector2D& InSize, struct FVector2D* OutSize);
		void RefreshObjectives();
		void OnVehicleWidgetCreated(class AVehicleBase* Vehicle, class UUserWidget* Widget);
		void OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo);
		void OnSupplyCrateWidgetCreated(class ASupplyCrate* Vehicle, class UUserWidget* Widget);
		void OnSpawnZoneWidgetCreated(class ASpawnZone* SpawnZone, class UUserWidget* Widget);
		void OnObjectiveWidgetCreated(class AObjectiveBase* Objective, class UUserWidget* Widget);
		void OnLightingScenarioChanged();
		bool HasWidgetForActor(class AActor* Actor);
		class UMapActorWidget* GetWidgetForActor(class AActor* Actor);
		float GetMapRotation();
		struct FBox GetMapBounds();
		void GetCanvasPositionFromWorldLocation(const struct FGeometry& MyGeometry, const struct FVector& WorldLocation, bool bClampToFit, struct FVector2D* OutCanvasPosition, bool IsUsingLevelBox);
		class UMapIconWidget* CreateMapIcon(class UClass* WidgetClass, const struct FVector& WorldLocation, const struct FRotator& WorldRotation);
		class UMapActorWidget* CreateMapActorWidget(class UClass* WidgetClass, class AActor* ForActor);
		void AddMapActorWidget(class UMapActorWidget* NewWidget);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TacticalRecastNavMesh
	 * Size -> 0x0238 (FullSize[0x06F0] - InheritedSize[0x04B8])
	 */
	class ATacticalRecastNavMesh : public ARecastNavMesh
	{
	public:
		unsigned char                                              UnknownData_WUTH[0x238];                                 // 0x04B8(0x0238) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Tagline
	 * Size -> 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
	 */
	class UTagline : public UObject
	{
	public:
		class FText                                                TaglineName;                                             // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                TaglineDescription;                                      // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bSeperateDescriptionWithContext;                         // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJ6C[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TaglineDescriptionWithContext;                           // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      Coolness;                                                // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoolnessContextMultiplier;                               // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AINSGameMode*                                        OuterGameMode;                                           // 0x0080(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              GamemodeRestriction[0x50];                               // 0x0088(0x0050) UNKNOWN PROPERTY: SetProperty
		bool                                                       bGamemodeBlacklist;                                      // 0x00D8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEvaluateOnRoundEnd;                                     // 0x00D9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequireTeamRole;                                        // 0x00DA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETeamRole                                                  RequiredTeamRole;                                        // 0x00DB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAwardWinningTeam;                                       // 0x00DC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAwardLosingTeam;                                        // 0x00DD(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAwardRoundDraw;                                         // 0x00DE(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C1OB[0x1];                                   // 0x00DF(0x0001) MISSED OFFSET (PADDING)

	public:
		bool STATIC_EvaluateTaglineThresholdInt(int32_t Value, int32_t Threshold, ETaglineEvaluation Method);
		bool CheckPlayerEligibility(class AINSPlayerState* Player, unsigned char WinningTeam);
		void BlueprintOnRoundReset();
		void BlueprintOnCheckRoundEndAward(class AINSGameState* InGameState, unsigned char LastWinningTeam);
		void BlueprintInit(class AINSGameMode* GameMode);
		void AwardTaglineWithFloatContext(class AINSPlayerState* Player, float ContextValue, bool bAsPercentage);
		void AwardTaglineWithContext(class AINSPlayerState* Player, int32_t ContextValue);
		void AwardTagline(class AINSPlayerState* Player);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TaglineStatRequirement
	 * Size -> 0x0070 (FullSize[0x0150] - InheritedSize[0x00E0])
	 */
	class UTaglineStatRequirement : public UTagline
	{
	public:
		class FName                                                StatProperty;                                            // 0x00E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NRK7[0x8];                                   // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETaglineStatType                                           StatType;                                                // 0x00F0(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETaglineEvaluation                                         CriteriaEvalMethod;                                      // 0x00F1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5T9O[0x2];                                   // 0x00F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CriteriaThreshold;                                       // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirearmCategory;                                        // 0x00F8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KGMJ[0x7];                                   // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              FirearmCategories[0x50];                                 // 0x0100(0x0050) UNKNOWN PROPERTY: SetProperty

	public:
		int32_t GetPlayerValueInt(class AINSPlayerState* Player);
		bool EvaluatePlayerGetValue(class AINSPlayerState* Player, int32_t Threshold, int32_t* OutValue);
		bool EvaluatePlayer(class AINSPlayerState* Player, int32_t Threshold);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TaglineStatHighest
	 * Size -> 0x0000 (FullSize[0x0150] - InheritedSize[0x0150])
	 */
	class UTaglineStatHighest : public UTaglineStatRequirement
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.QueuedRadioEvent
	 * Size -> 0x0088 (FullSize[0x00B0] - InheritedSize[0x0028])
	 */
	class UQueuedRadioEvent : public UObject
	{
	public:
		unsigned char                                              UnknownData_GX7R[0x30];                                  // 0x0028(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               AssociatedActor;                                         // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Event;                                                   // 0x0060(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCharacterResponseRequest                           RequestResponse;                                         // 0x0068(0x0040) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_28EY[0x8];                                   // 0x00A8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TeamInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UTeamInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TeamStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UTeamStatics : public UBlueprintFunctionLibrary
	{
	public:
		bool STATIC_IsDedicatedSpectator(class AINSBasePlayerController* PlayerController);
		bool STATIC_IsClassRestricted(const struct FPlayerClassLimit& ClassLimit, int32_t PlayerExperience);
		void STATIC_GetTeamRoleText(ETeamRole TeamRole, class FText* OutRoleText);
		ETeamRelationship STATIC_GetTeamRelationship(class AActor* Actor, unsigned char TeamId);
		class ATeamInfo* STATIC_GetTeamInfo(class UObject* WorldContextObject, unsigned char TeamId);
		class FText STATIC_GetRoundOverCaption(class AINSBasePlayerController* For, unsigned char WinningTeam);
		struct FLinearColor STATIC_GetPlayerColor(class AINSPlayerState* PlayerState, class AINSPlayerState* RelativePlayer);
		EPartyRelationship STATIC_GetPartyRelationship(class AINSPlayerState* PlayerState, class AINSPlayerState* RelativePlayer);
		class UPlayerClass* STATIC_GetNextClassToUnlock(TArray<struct FPlayerClassLimit> ClassSlots, int32_t PlayerExperience);
		class FText STATIC_GetFormattedPlayerName(class AINSPlayerState* PlayerState);
		class FText STATIC_GetFormattedFactionName(class UObject* WorldContextObject, unsigned char TeamId);
		class UFactionDefinition* STATIC_GetFactionDefinitionForTeam(class UObject* WorldContextObject, unsigned char TeamId);
		struct FLinearColor STATIC_GetFactionColor(class UObject* WorldContextObject, unsigned char TeamId, class AINSPlayerState* RelativePlayer);
		class ATeamInfo* STATIC_GetEnemyTeam(class UObject* WorldContextObject, unsigned char TeamId);
		class FText STATIC_GetDefaultTeamVictoryDescription(class UObject* WorldContextObject, unsigned char TeamId, ERoundConclusion RoundConclusion);
		int32_t STATIC_GetClassLimitForTeamSize(const struct FPlayerClassLimit& ClassLimit, int32_t TeamSize);
		int32_t STATIC_GetClassLimitForTeamId(class UObject* WorldContextObject, const struct FPlayerClassLimit& ClassLimit, unsigned char TeamId);
		int32_t STATIC_GetClassLimitForTeam(const struct FPlayerClassLimit& ClassLimit, class ATeamInfo* Team);
		ETeamRelationship STATIC_GetActorTeamRelationship(class AActor* Actor, class AActor* OtherActor);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TempHUD
	 * Size -> 0x0008 (FullSize[0x0318] - InheritedSize[0x0310])
	 */
	class ATempHUD : public AHUD
	{
	public:
		unsigned char                                              UnknownData_MYC7[0x8];                                   // 0x0310(0x0008) MISSED OFFSET (PADDING)

	public:
		void TextWithShadow_Clipped(float PosX, float PosY, const class FText& Text, class UFont* Font, const struct FLinearColor& TextColor, float Scale, float Width, float Height);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TheaterDefinition
	 * Size -> 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
	 */
	class UTheaterDefinition : public UDataAsset
	{
	public:
		class FText                                                DisplayName;                                             // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FTheaterFaction>                             Factions;                                                // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.ThirdPersonAnimInstance
	 * Size -> 0x0760 (FullSize[0x0A80] - InheritedSize[0x0320])
	 */
	class UThirdPersonAnimInstance : public UEquipableAnimInstance
	{
	public:
		bool                                                       bInVehicle;                                              // 0x0320(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESeatTypeEnum                                              VehicleSeatType;                                         // 0x0321(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7VQG[0x2];                                   // 0x0322(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IKHandLTargetMounted;                                    // 0x0324(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IKHandRTargetMounted;                                    // 0x0328(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasDeployed;                                            // 0x032C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDeployed;                                             // 0x032D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9UZR[0x2];                                   // 0x032E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DeployedAlpha;                                           // 0x0330(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasForegrip;                                            // 0x0334(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasUnderbarrel;                                         // 0x0335(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RGLH[0x2];                                   // 0x0336(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCharacterAnimEquipable                             EquipableActiveCommon;                                   // 0x0338(0x0258) BlueprintVisible, NativeAccessSpecifierPublic
		class UAnimSequence*                                       HandPoseUnderbarrel;                                     // 0x0590(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       ActiveLeftHandPose;                                      // 0x0598(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EIKDirection                                               IKSprint;                                                // 0x05A0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EIKDirection                                               IKSprintHardcore;                                        // 0x05A1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EIKDirection                                               IKCrawl;                                                 // 0x05A2(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EIKDirection                                               IKBase;                                                  // 0x05A3(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EIKDirection                                               IKWeaponBase;                                            // 0x05A4(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCharging;                                             // 0x05A5(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHardcore;                                               // 0x05A6(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSprinting;                                            // 0x05A7(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVehicleWeaponOut;                                       // 0x05A8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidAnimation;                                         // 0x05A9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J0Z5[0x2];                                   // 0x05AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HandPoseLeftCurve;                                       // 0x05AC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HandPoseLeftInterpHelper;                                // 0x05B0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponIKLeftCurve;                                       // 0x05B4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HandPoseRightCurve;                                      // 0x05B8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponIKRightCurve;                                      // 0x05BC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HandIKLeftCurve;                                         // 0x05C0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HandIKRightCurve;                                        // 0x05C4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponSplineChildCurve;                                  // 0x05C8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisableAOCurve;                                          // 0x05CC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSecurityGroin;                                       // 0x05D0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseInsurgentGroin;                                      // 0x05D1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q4YQ[0x2];                                   // 0x05D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CharacterLOD;                                            // 0x05D4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GroinDominantLegAlpha;                                   // 0x05D8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CalculatedDominateAlpha;                                 // 0x05DC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         HorizontalOffsetCurve;                                   // 0x05E0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovingAlpha;                                             // 0x05E8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            GroinRotator;                                            // 0x05EC(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      CrouchWeightAlpha;                                       // 0x05F8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SoldierLocation;                                         // 0x05FC(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            SoldierRotation;                                         // 0x0608(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      SoldierControlYaw;                                       // 0x0614(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SoldierVelocity;                                         // 0x0618(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SoldierVelocityLocal;                                    // 0x0624(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizontalSpeed;                                         // 0x0630(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalSpeed;                                           // 0x0634(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SoldierAccelerationLocal;                                // 0x0638(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SoldierAccelerationNormLocal;                            // 0x0644(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecentSpeed;                                             // 0x0650(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInputingMovement;                                     // 0x0654(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X6QI[0x3];                                   // 0x0655(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialSpawnYawOffset;                                   // 0x0658(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XWO9[0x4];                                   // 0x065C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoldierMovementComponent*                           SoldierMovement;                                         // 0x0660(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            LastTickRotation;                                        // 0x0668(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      AccelerationDirection;                                   // 0x0674(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnDirectionIntensity;                                  // 0x0678(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityDirection;                                       // 0x067C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             InterpVelocityLocal;                                     // 0x0680(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AccelerationVelocityDelta;                               // 0x068C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeightShiftMovingAlpha;                                  // 0x0698(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSliding;                                              // 0x069C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAnimCardinalDirection                                     CardinalDirection;                                       // 0x069D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H4QN[0x2];                                   // 0x069E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InterpNorthRoll;                                         // 0x06A0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            MovementWeightShift;                                     // 0x06A4(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            MovementWeightShiftFeet;                                 // 0x06B0(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9TL0[0x4];                                   // 0x06BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FThirdPersonAnims                                   CachedThirdPersonAnims;                                  // 0x06C0(0x03B8) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      TestFloat;                                               // 0x0A78(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OYHK[0x4];                                   // 0x0A7C(0x0004) MISSED OFFSET (PADDING)

	public:
		void UpdateWeightShift();
		void UpdateTransforms();
		void UpdateMovementWeightShift();
		void UpdateInterpNorthRoll();
		void UpdateIKHandTargetMounted();
		void UpdateIKCurves();
		void UpdateHandIK();
		void UpdateDeployedAlpha();
		void UpdateActiveLeftHandPose();
		float IKCurveAlpha(float Interp, bool bInterpolate, bool bCondition, bool bSubtract, const class FName& CurveName, float* OutInterp);
		float DeltaRotatorAxis(float A, float B);
		float CalcVariableInterp(float Current, float Target, float Speed);
		struct FRotator CalcRotatorInterp(const struct FRotator& Current, const struct FRotator& Target, float Speed);
		struct FTransform CalcRelativeTransform(const struct FTransform& Child, const struct FTransform& Parent);
		void CalcGroinAngle();
		bool CalcGenericFloatAlpha(float Target, float AlphaInput, float Speed, bool bConstant, float* OutAlpha);
		bool CalcGenericAlpha(bool bDifferentDegrade, bool bTarget, float AlphaInput, float Speed, float SpeedDegrade, bool bOverrideCondition, float OverrideValue, bool bConstant, float* OutAlpha);
		void BlueprintOnCharacterReset();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TutorialLesson
	 * Size -> 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
	 */
	class UTutorialLesson : public UPrimaryDataAsset
	{
	public:
		class FText                                                LessonName;                                              // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                HintText;                                                // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                TutorialText;                                            // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		ELessonCategory                                            Category;                                                // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XGBX[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              VideoSource[0x28];                                       // 0x0080(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<struct FLessonInputAction>                          Actions;                                                 // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanShowDynamically;                                     // 0x00B8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CompletionCount;                                         // 0x00B9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_63JC[0x2];                                   // 0x00BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AINSBasePlayerController>             OwningPlayerController;                                  // 0x00BC(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              ShowLimit;                                               // 0x00C4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YHCX[0x23];                                  // 0x00C5(0x0023) MISSED OFFSET (PADDING)

	public:
		void ShowLessonAfterDelay(float Delay, float Duration, bool bPlayVideo, bool bForceShow);
		void ShowLesson(float Duration, bool bPlayVideo, bool bForceShow);
		bool ShouldShowLesson();
		bool ShouldBindEventDelegates(bool bForceBindDelegates);
		bool IsAnotherHintInProgress();
		void HideLesson();
		bool HasValidPlayer();
		class AINSPlayerState* GetAssociatedPlayerState();
		class AINSBasePlayerController* GetAssociatedPlayerController();
		void CompleteLesson();
		void BlueprintOnInitialized(class AINSBasePlayerController* NewOwningPlayerController, class AINSPlayerState* NewPlayer);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TutorialList
	 * Size -> 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
	 */
	class UTutorialList : public UDataAsset
	{
	public:
		TArray<class UClass*>                                      TutorialLessons;                                         // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.TutorialLevelScriptActor
	 * Size -> 0x0008 (FullSize[0x0230] - InheritedSize[0x0228])
	 */
	class ATutorialLevelScriptActor : public ALevelScriptActor
	{
	public:
		unsigned char                                              UnknownData_ICJ2[0x8];                                   // 0x0228(0x0008) MISSED OFFSET (PADDING)

	public:
		void SetTutorialProgress(ETutorialStage Stage);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.UICameraActor
	 * Size -> 0x0010 (FullSize[0x07A0] - InheritedSize[0x0790])
	 */
	class AUICameraActor : public ACameraActor
	{
	public:
		bool                                                       bEnabled;                                                // 0x0790(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSoldierCamera;                                          // 0x0791(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSecurityCamera;                                         // 0x0792(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideActorLocation;                                  // 0x0793(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RelativeActorLocation;                                   // 0x0794(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.UsableComponent
	 * Size -> 0x0030 (FullSize[0x00E0] - InheritedSize[0x00B0])
	 */
	class UUsableComponent : public UActorComponent
	{
	public:
		class FText                                                DefaultUseText;                                          // 0x00B0(0x0018) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUsedDelegate;                                          // 0x00C8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		EUsablePriority                                            UsePriority;                                             // 0x00D8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCallOnServer;                                           // 0x00D9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCallOnClient;                                           // 0x00DA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_00SC[0x5];                                   // 0x00DB(0x0005) MISSED OFFSET (PADDING)

	public:
		void OnUseDelegate__DelegateSignature(class APawn* User, const struct FHitResult& HitResult);
		class FText GetUseMessage(class AINSPlayerController* Controller);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.UsableInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UUsableInterface : public UInterface
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleBase
	 * Size -> 0x0490 (FullSize[0x0720] - InheritedSize[0x0290])
	 */
	class AVehicleBase : public AWheeledVehicle
	{
	public:
		unsigned char                                              UnknownData_LADS[0x28];                                  // 0x0290(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                VehicleName;                                             // 0x02B8(0x0018) Edit, NativeAccessSpecifierPublic
		EUsablePriority                                            UsePriority;                                             // 0x02D0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x02D1(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Blocked;                                                 // 0x02D2(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveWhenAbandoned;                                    // 0x02D3(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbandonedTimeEmptied;                                    // 0x02D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbandonedTimeTick;                                       // 0x02D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbandonedNearDistance;                                   // 0x02DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbandonedFarDistance;                                    // 0x02E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQS4[0x4];                                   // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        TimerHandle_AbandonedCheck;                              // 0x02E8(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_58JV[0x8];                                   // 0x02F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSCharacter*                                       DriverCharacter;                                         // 0x02F8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0IMU[0x8];                                   // 0x0300(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EngineDisableRemoveTime;                                 // 0x0308(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEngineRunning;                                          // 0x030C(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEngineEnabled;                                          // 0x030D(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAcceleratorBeingPressed;                                // 0x030E(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bWantsReverse;                                           // 0x030F(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bTyresAreRolling;                                        // 0x0310(0x0001) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_W359[0x3];                                   // 0x0311(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GearChangeVelocityThreshold;                             // 0x0314(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YA3C[0x8];                                   // 0x0318(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnGearChangeDelegate;                                    // 0x0320(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FVehicleAnimationStruct                             VehicleAnimations;                                       // 0x0330(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class UCameraComponent*                                    CameraComponent;                                         // 0x0358(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USpringArmComponent*                                 SpringArmComponent;                                      // 0x0360(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanExplode;                                             // 0x0368(0x0001) Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3FTL[0x3];                                   // 0x0369(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerPushForce;                                         // 0x036C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInsertionVehicle;                                       // 0x0370(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I6AF[0x7];                                   // 0x0371(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  DamageDistanceScalingFromExplosionCurve;                 // 0x0378(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      ImpactVelocityMultiplier;                                // 0x0400(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedRequiredToDamage;                                   // 0x0404(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DamageOnImpact;                                          // 0x0408(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5YXW[0x4];                                   // 0x040C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UBoxComponent*                                       VehicleKillBoxComponent;                                 // 0x0410(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       VehicleKillBoxComponentBehind;                           // 0x0418(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       VehicleFireBox;                                          // 0x0420(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNRZ[0x38];                                  // 0x0428(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FriendlyFireDamageModifier;                              // 0x0460(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QG2P[0x4];                                   // 0x0464(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     WindowBustOpenParticle;                                  // 0x0468(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UWheelParticleSystemComponent*>               WheelParticleComponents;                                 // 0x0470(0x0010) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     DespawnHideParticle;                                     // 0x0480(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventCrash;                                            // 0x0488(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventExhaustStart;                                     // 0x0490(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventExhaustStop;                                      // 0x0498(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventIgnitionStart;                                    // 0x04A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventIgnitionStop;                                     // 0x04A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventGearChange;                                       // 0x04B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventAcceleratorStart;                                 // 0x04B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventAcceleratorRelease;                               // 0x04C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventAcceleratorContinue;                              // 0x04C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventSuspensionBounce;                                 // 0x04D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventWheelRollStart;                                   // 0x04D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEvenHornStart;                                         // 0x04E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEvenHornStop;                                          // 0x04E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventWheelRollStop;                                    // 0x04F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventEmergencyBrake;                                   // 0x04F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventBrakeOn;                                          // 0x0500(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventBrakeOff;                                         // 0x0508(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventModularFire;                                      // 0x0510(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponentExhaustSounds;                                // 0x0518(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponentEngineSounds;                                 // 0x0520(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponentTyreSounds;                                   // 0x0528(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponentSuspensionSounds;                             // 0x0530(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponentHornSounds;                                   // 0x0538(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventExplosionDepsawn;                                 // 0x0540(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SW8A[0x10];                                  // 0x0548(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPhysicalMaterial*                                   CurrentPhysicalSurface;                                  // 0x0558(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpdateWheelSurfaceRate;                                  // 0x0560(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuspensionOffsetRequiredToCompressSuspension;            // 0x0564(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuspensionRequiredToPlayHeavySuspensionCompression;      // 0x0568(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H35G[0x4];                                   // 0x056C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCharacterCollisionPrevention>               IgnoredCharacters;                                       // 0x0570(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVehicleLightPart*                                   RightHeadLightPart;                                      // 0x0580(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVehicleLightPart*                                   LeftHeadLightPart;                                       // 0x0588(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVehicleLightPart*                                   RightBackLightPart;                                      // 0x0590(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVehicleLightPart*                                   LeftBackLightPart;                                       // 0x0598(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVehicleLightPart*                                   RightBreakLightPart;                                     // 0x05A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVehicleLightPart*                                   LeftBreakLightPart;                                      // 0x05A8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZZCX[0x18];                                  // 0x05B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVehicleEnginePart*                                  EnginePart;                                              // 0x05C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSSkeletalMeshComponent*                           VisualMeshComponent;                                     // 0x05D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              DestroyedMesh[0x28];                                     // 0x05D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UParticleSystemComponent*                            EngineParticleEffect;                                    // 0x0600(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UParticleSystemComponent*                            VehicleBlowUpParticleEffect;                             // 0x0608(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CrashSpeedToPlayHeavyCrash;                              // 0x0610(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TimeInBetweenCrashAudio;                                 // 0x0614(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LastImpactTime;                                          // 0x0618(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TopSpeedThreshold;                                       // 0x061C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ChasisStrainThreshold;                                   // 0x0620(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FireDamageTickRate;                                      // 0x0624(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FireDamage;                                              // 0x0628(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_7VX9[0x14];                                  // 0x062C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, float>                                   WindowHealthMap;                                         // 0x0640(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_404Q[0x10];                                  // 0x0690(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bHornHeld;                                               // 0x06A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I0SS[0x3];                                   // 0x06A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HornHeldValue;                                           // 0x06A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HornIncrementRate;                                       // 0x06A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HornDecrementRate;                                       // 0x06AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HornMaxHeldValue;                                        // 0x06B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHornCooldown;                                           // 0x06B4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBraking;                                                // 0x06B5(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeDriven;                                            // 0x06B6(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1KYX[0x9];                                   // 0x06B7(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bCombatVehicle;                                          // 0x06C0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreAIDrivingLogic;                                   // 0x06C1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ZPS[0x2];                                   // 0x06C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CornerSlowingTime;                                       // 0x06C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CornerSlowingMultiplier;                                 // 0x06C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSlowingSpeed;                                         // 0x06CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HandBrakeSpeed;                                          // 0x06D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CornerAngleThreshold;                                    // 0x06D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingTime;                                             // 0x06D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffAngleMultiplier;                                      // 0x06DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffAngleThreshold;                                       // 0x06E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_80SM[0x4];                                   // 0x06E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          LeaveUIImage;                                            // 0x06E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          DriverUIImage;                                           // 0x06F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          PassengerUIImage;                                        // 0x06F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          TurretUIImage;                                           // 0x0700(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_62P7[0x18];                                  // 0x0708(0x0018) MISSED OFFSET (PADDING)

	public:
		void ToggleHeadlights();
		void ToggleEngineStatus(bool bEnabled);
		bool ShouldEmergancyBreak();
		void ServerSetAcceleratorInput(float Value);
		void OnRep_TeamId();
		void OnRep_Locked();
		void OnRep_InsertionVehicle();
		void OnRep_HornHeld();
		void OnRep_EngineRunning();
		void OnRep_Braking();
		void OnKillBoxOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
		void OnImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnHeadlightToggled(bool bEnabled);
		void OnGearChangeDelegate__DelegateSignature();
		void OnDestroyedMeshLoaded();
		void OnDamage(class AController* Killer, class AActor* DamageCauser, float Damage);
		void OnBrakelightToggled(bool bEnabled);
		void OnAcceleratorStarted();
		void OnAcceleratorReleased();
		void OnAcceleratorContinue();
		bool IsVehicleUpsideDown();
		bool IsVehicleOnSide();
		bool IsVehicleDestroyed();
		bool IsPotentiallyAbandoned();
		bool IsPawnSeated(class APawn* PassengerPawn);
		bool IsEngineRunning();
		bool IsEngineEnabled();
		bool IsBurning();
		int32_t GetVehicleRPM();
		EVehicleOrientation GetVehicleOrientation();
		float GetSteeringProgress();
		void GetSteeringAngles(float* MinAngle, float* MaxAngle, float* CurrentAngle);
		bool GetSeatComponents(TArray<class UVehicleSeatComponent*>* OutSeatComponents);
		void GetPassengers(TArray<class AINSCharacter*>* OutPassengers);
		int32_t GetPassengerCount();
		int32_t GetOccupiedSeats();
		int32_t GetEmptySeats();
		float GetChasisStrainValue();
		void ForceStop(bool bDisableEngine);
		class UVehicleSeatComponent* FindSeatByNumber(int8_t SeatNumber);
		class UVehicleSeatComponent* FindNextSeat(class AController* PassengerController);
		class UVehicleSeatComponent* FindBestSeat(class AINSCharacter* Pawn, ESeatSearchPriorityType PriorityType);
		void CheckAbandoned();
		void BlueprintOnGearChanged();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehiclePartComponent
	 * Size -> 0x0098 (FullSize[0x04D0] - InheritedSize[0x0438])
	 */
	class UVehiclePartComponent : public UBoxComponent
	{
	public:
		TMap<class UClass*, float>                                 DamageTypeModifiersMap;                                  // 0x0438(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZLX8[0x8];                                   // 0x0488(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxHealth;                                               // 0x0490(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDamage;                                               // 0x0494(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Health;                                                  // 0x0498(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AController>                          LastDamageInstigator;                                    // 0x049C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               LastDamageCauser;                                        // 0x04A4(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDestroyed;                                            // 0x04AC(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R8FO[0x3];                                   // 0x04AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             Delegate_OnPartDestroyed;                                // 0x04B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnPartDamaged;                                  // 0x04C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic

	public:
		void SetHealthFrac(float HealthFrac);
		void OnTakeDamage(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
		void OnRep_Health();
		void OnRep_Destroyed();
		void OnDestroyed();
		bool IsDestroyed();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleDestructablePart
	 * Size -> 0x0000 (FullSize[0x04D0] - InheritedSize[0x04D0])
	 */
	class UVehicleDestructablePart : public UVehiclePartComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleHoveringBase
	 * Size -> 0x0400 (FullSize[0x0680] - InheritedSize[0x0280])
	 */
	class AVehicleHoveringBase : public APawn
	{
	public:
		unsigned char                                              UnknownData_VGJP[0x30];                                  // 0x0280(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                VehicleName;                                             // 0x02B0(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              TeamId;                                                  // 0x02C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HC6M[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHelicopterMovementComponent*                        MovementComponent;                                       // 0x02D0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AFireSupportBase*                                    AssociatedFireSupport;                                   // 0x02D8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GroundTraceRate;                                         // 0x02E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IWES[0xC];                                   // 0x02E4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                          GroundTrace;                                             // 0x02F0(0x0088) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            DustEmitter;                                             // 0x0378(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     DustEmitterSystem;                                       // 0x0380(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ExplodeEmitterSystem;                                    // 0x0388(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DustGroundDistance;                                      // 0x0390(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinRotorWashHeight;                                      // 0x0394(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EngineSoundMaxVelocity;                                  // 0x0398(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SPVE[0x4];                                   // 0x039C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSAudioComponent*                                  AkComponentRotorSound;                                   // 0x03A0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventRotorLoop;                                        // 0x03A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventRotorLoopStop;                                    // 0x03B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponentTurbineSound;                                 // 0x03B8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventTurbineLoop;                                      // 0x03C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponentEngineSound;                                  // 0x03C8(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventEngineLoop;                                       // 0x03D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventEngineStop;                                       // 0x03D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventSpinning;                                         // 0x03E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventExplode;                                          // 0x03E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  AkComponentIndoorPresenceSound;                          // 0x03F0(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventIndoorPresenceLoop;                               // 0x03F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventIndoorPresenceStop;                               // 0x0400(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDroneNamedRTPC;                                      // 0x0408(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MH1P[0x7];                                   // 0x0409(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ExplosionDamageTypeClass;                                // 0x0410(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplodeDamageRadius;                                     // 0x0418(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7YMG[0x4];                                   // 0x041C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ExplosionProtectile;                                     // 0x0420(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                RootPhysicsComponent;                                    // 0x0428(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMeshComponent*                              VisibleMeshComponent;                                    // 0x0430(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMesh*                                       DestroyedMesh;                                           // 0x0438(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldOpenDoor;                                         // 0x0440(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDespawnOnRoundReset;                                    // 0x0441(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHoverVehicleMovement                                      CurrentMovementType;                                     // 0x0442(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1RC0[0x5];                                   // 0x0443(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTimerHandle                                        ExplodeTimer;                                            // 0x0448(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FTimerHandle                                        DodgeFinishTimerHandle;                                  // 0x0450(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UDJI[0x4];                                   // 0x0458(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EHoverVehicleDamageState                                   DamageState;                                             // 0x045C(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EIKU[0x3];                                   // 0x045D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnImminentImpact;                                        // 0x0460(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnBeginDodgeDelegate;                                    // 0x0470(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFinishDodgeDelegate;                                   // 0x0480(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnStartFallingDelegate;                                  // 0x0490(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCrashImpactDelegate;                                   // 0x04A0(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnLostPassengerDelegate;                                 // 0x04B0(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnFireWeaponDelegate;                                    // 0x04C0(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class UBehaviorTree*                                       BehaviorTree;                                            // 0x04D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BlackboardEnemyKeyName;                                  // 0x04D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BlackboardEnemyLocationKeyName;                          // 0x04E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BlackboardSpawnLocationKeyName;                          // 0x04E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BlackboardDestinationLocationKeyName;                    // 0x04F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BlackboardExtractionPointKeyName;                        // 0x04F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckForCeilings;                                       // 0x0500(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JQY6[0x3];                                   // 0x0501(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinHoverHeightLanding;                                   // 0x0504(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinHoverHeight;                                          // 0x0508(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxHoverHeight;                                          // 0x050C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExtractionHoverHeight;                                   // 0x0510(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStopVehicle;                                            // 0x0514(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VWJJ[0x3];                                   // 0x0515(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HoverPredictionTime;                                     // 0x0518(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoredByEnemies;                                       // 0x051C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NUP7[0x3];                                   // 0x051D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DriftSensitivity;                                        // 0x0520(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DriftRoll;                                               // 0x0524(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SlowDistance;                                            // 0x0528(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDropVelocity;                                         // 0x052C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingVelocity;                                         // 0x0530(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakingTime;                                             // 0x0534(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMax;                                                // 0x0538(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMaxSlowing;                                         // 0x053C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMaxBraking;                                         // 0x0540(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldLandOnLastPath;                                   // 0x0544(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9CGK[0x3];                                   // 0x0545(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LandingDistance;                                         // 0x0548(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_33YX[0x4];                                   // 0x054C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  TurnCurve;                                               // 0x0550(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bCanDodge;                                               // 0x05D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WZUA[0x3];                                   // 0x05D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DodgeDuration;                                           // 0x05DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DodgeIncomingTime;                                       // 0x05E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DodgeForceMultiplier;                                    // 0x05E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DodgeFOVAngle;                                           // 0x05E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DodgeStartTime;                                          // 0x05EC(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DodgeRoll;                                               // 0x05F0(0x0004) Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCinematicMode;                                          // 0x05F4(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6VSA[0xF];                                   // 0x05F5(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SightRadius;                                             // 0x0604(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FHoveringVehicleWeaponBehavior>              WeaponBehaviors;                                         // 0x0608(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FHoveringVehicleWeaponBehavior>              WeaponBehaviorsPerInstance;                              // 0x0618(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AkEventPreDetonate;                                      // 0x0628(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreDetonateTime;                                         // 0x0630(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_05VC[0x4];                                   // 0x0634(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSPawnSensingComponent*                            PawnSensing;                                             // 0x0638(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AINSSoldier>                          CurrentTargetSoldier;                                    // 0x0640(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDetonating;                                             // 0x0648(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_87DF[0x7];                                   // 0x0649(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TWeakObjectPtr<class AINSSoldier>>                  KnownSoldiers;                                           // 0x0650(0x0010) ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TWeakObjectPtr<class AController>                          LastDamager;                                             // 0x0660(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_08JI[0x18];                                  // 0x0668(0x0018) MISSED OFFSET (PADDING)

	public:
		void TraceEnvironment();
		void ToggleNoDamage(bool bEnabled);
		void ToggleAI(bool bEnabled);
		void StartFalling(bool bSpin);
		void SetOpenDoor(bool bNewOpenDoor);
		void SetCinematicMode(bool bNewSetting);
		void SeePawn(class APawn* OtherPawn);
		void PlayDestroyedResponses();
		void OnSeatEjected(class AINSCharacter* Character, class UVehicleSeatComponent* Seat);
		void OnRep_Detonating();
		void OnRep_DamageState();
		void OnRep_CinematicMode();
		void OnImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
		void OnFinishedDodge();
		void OnExplode();
		bool IsDodging(bool bRecently);
		void HearNoise(class APawn* OtherActor, const struct FVector& Location, float Volume);
		EHoverVehicleDamageState GetDamageState();
		void Explode();
		void DelayedDestroy();
		void BeginDetonate(float Delay);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleDrone
	 * Size -> 0x00D0 (FullSize[0x0750] - InheritedSize[0x0680])
	 */
	class AVehicleDrone : public AVehicleHoveringBase
	{
	public:
		bool                                                       bShouldDiveEnemyTarget;                                  // 0x0680(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZDSW[0x3];                                   // 0x0681(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DiveExplodeRadius;                                       // 0x0684(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SideAdjustPower;                                         // 0x0688(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SideAdjustAngle;                                         // 0x068C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                BlackboardWindowApproachLocationKeyName;                 // 0x0690(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                BlackboardWindowStartLocationKeyName;                    // 0x0698(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                BlackboardWindowEndLocationKeyName;                      // 0x06A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                BlackboardWindowHasLOSKeyName;                           // 0x06A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                BlackboardWindowTargetKeyName;                           // 0x06B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FHoveringVehicleTargetMemory                        DiveTarget;                                              // 0x06B8(0x0020) Net, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FBotGrenadeTarget                                   TargetWindow;                                            // 0x06D8(0x005C) NoDestructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_R244[0x4];                                   // 0x0734(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DetonateTimeout;                                         // 0x0738(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DetonateByTimeoutLocationRadius;                         // 0x073C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_T1HA[0x10];                                  // 0x0740(0x0010) MISSED OFFSET (PADDING)

	public:
		class AActor* GetDiveTarget();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleEnginePart
	 * Size -> 0x0070 (FullSize[0x0540] - InheritedSize[0x04D0])
	 */
	class UVehicleEnginePart : public UVehicleDestructablePart
	{
	public:
		class FScriptMulticastDelegate                             Delegate_OnEngineBlowUp;                                 // 0x04D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class UClass*                                              ExplosionCameraShake;                                    // 0x04E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAkAudioEvent*                                       AkEventExplosion;                                        // 0x04E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeMaxDamage;                                  // 0x04F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeMinDamage;                                  // 0x04F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeMaxRadius;                                  // 0x04F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeMinRadius;                                  // 0x04FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeShellShockInnerRadius;                      // 0x0500(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeShellShockOuterRadius;                      // 0x0504(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeShellShockInnerDuration;                    // 0x0508(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeShellShockOuterDuration;                    // 0x050C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              EngineExplodeDamageTypeClass;                            // 0x0510(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodePhysicsForce;                               // 0x0518(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FoliageExplosionRadiusFactor;                            // 0x051C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FoliageInteractionLifeSpan;                              // 0x0520(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeImpulseForceMin;                            // 0x0524(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EngineExplodeImpulseForceMax;                            // 0x0528(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VUZX[0x4];                                   // 0x052C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AController>                          InstigatorController;                                    // 0x0530(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FXD0[0x8];                                   // 0x0538(0x0008) MISSED OFFSET (PADDING)

	public:
		void BroadcastEngineBlowUp();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleExitComponent
	 * Size -> 0x0010 (FullSize[0x0430] - InheritedSize[0x0420])
	 */
	class UVehicleExitComponent : public UArrowComponent
	{
	public:
		bool                                                       bSetAbsoluteRotation;                                    // 0x0420(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IMO9[0x3];                                   // 0x0421(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            RotationOffset;                                          // 0x0424(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	public:
		void GetSeatExitLocation(struct FVector* OutLocation, struct FRotator* OutRotation);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleEmergencyExitComponent
	 * Size -> 0x0000 (FullSize[0x0430] - InheritedSize[0x0430])
	 */
	class UVehicleEmergencyExitComponent : public UVehicleExitComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UVehicleInterface : public UInterface
	{
	public:
		void Explode();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleLightPart
	 * Size -> 0x0010 (FullSize[0x04E0] - InheritedSize[0x04D0])
	 */
	class UVehicleLightPart : public UVehiclePartComponent
	{
	public:
		bool                                                       bIsToggled;                                              // 0x04D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeToggled;                                           // 0x04D1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z3WS[0xE];                                   // 0x04D2(0x000E) MISSED OFFSET (PADDING)

	public:
		void OnRep_IsToggled();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleNavModifierComponent
	 * Size -> 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
	 */
	class UVehicleNavModifierComponent : public UNavModifierComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleNavTarget
	 * Size -> 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
	 */
	class AVehicleNavTarget : public ATargetPoint
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehiclePathFollowingComponent
	 * Size -> 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
	 */
	class UVehiclePathFollowingComponent : public UPathFollowingComponent
	{
	public:
		TArray<int32_t>                                            CornerPathIndexes;                                       // 0x0258(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleSeatComponent
	 * Size -> 0x0318 (FullSize[0x0750] - InheritedSize[0x0438])
	 */
	class UVehicleSeatComponent : public UBoxComponent
	{
	public:
		unsigned char                                              UnknownData_HVNT[0x8];                                   // 0x0438(0x0008) Fix Super Size
		bool                                                       bAllowForwardSeatSwitch;                                 // 0x0440(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowBackSeatSwitch;                                    // 0x0441(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBustOutWindowOnLean;                                    // 0x0442(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2OCF[0x1];                                   // 0x0443(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PassengerDamageMultiplier;                               // 0x0444(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                WindowToBustOutOnLean;                                   // 0x0448(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnMoveForward;                                  // 0x0450(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnMoveRight;                                    // 0x0460(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnAddPitch;                                     // 0x0470(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnAddYaw;                                       // 0x0480(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnFired;                                        // 0x0490(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnHorn;                                         // 0x04A0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnSeatEntered;                                  // 0x04B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_OnSeatExited;                                   // 0x04C0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             Delegate_MountedWeaponReplicated;                        // 0x04D0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FText                                                SeatName;                                                // 0x04E0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		ESeatTypeEnum                                              SeatType;                                                // 0x04F8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInternalSeat;                                           // 0x04F9(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESeatRotationType                                          SeatRotationType;                                        // 0x04FA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7CSL[0x1];                                   // 0x04FB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LimitedPitchDegrees;                                     // 0x04FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimitedYawDegrees;                                       // 0x0500(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CameraOffset;                                            // 0x0504(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector*                                        DuckCameraOffset;                                        // 0x0510(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverridePlayerFOV;                                      // 0x0518(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CCR7[0x3];                                   // 0x0519(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CameraFOV;                                               // 0x051C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMountedWeaponRotation;                               // 0x0520(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SeatPriority;                                            // 0x0521(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SeatGroup;                                               // 0x0522(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SeatNumber;                                              // 0x0523(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESeatCameraType                                            CameraType;                                              // 0x0524(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PEGC[0x3];                                   // 0x0525(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                MeshAttachSocket;                                        // 0x0528(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDetachMesh;                                             // 0x0530(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESeatDeathMechanic                                         DeathMechanic_Driver;                                    // 0x0531(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5HD4[0x6];                                   // 0x0532(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSeatAnimationStruct                                SeatAnimations;                                          // 0x0538(0x0120) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08YO[0x4];                                   // 0x0658(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AItemFirearm>                         MountedWeapon;                                           // 0x065C(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FNED[0x4];                                   // 0x0664(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AINSCharacter*                                       SeatedCharacter;                                         // 0x0668(0x0008) Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckExitObstruction;                                   // 0x0670(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_61N4[0x7];                                   // 0x0671(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     YawComponent;                                            // 0x0678(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     PitchComponent;                                          // 0x0680(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            LastRelativeTurretRotation;                              // 0x0688(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_39OM[0x4];                                   // 0x0694(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVehicleExitComponent*                               ExitComponent;                                           // 0x0698(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UVehicleEmergencyExitComponent*>              EmergencyExits;                                          // 0x06A0(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UINSAudioComponent*                                  SeatAudio;                                               // 0x06B0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SeatEnterAudio;                                          // 0x06B8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SeatExitAudio;                                           // 0x06C0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       WindowShatterAudio;                                      // 0x06C8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnBotForSeat;                                        // 0x06D0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZ2Z[0x7];                                   // 0x06D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              BotClass;                                                // 0x06D8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AINSCharacter*                                       SpawnedBot;                                              // 0x06E0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Blocked;                                                 // 0x06E8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoredByBots;                                          // 0x06E9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ON7N[0xE];                                   // 0x06EA(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     WindowAimLocation;                                       // 0x06F8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMeshComponent*                                      CharacterAttachmentMesh;                                 // 0x0700(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanSwitchSeats;                                         // 0x0708(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DIYY[0x3];                                   // 0x0709(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SeatInputMultiplier;                                     // 0x070C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RestrictedAreaInputMultiplier;                           // 0x0710(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEjectFromSeatOnDeath;                                   // 0x0714(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAllowVehicleDucking;                                    // 0x0715(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELeanDirection                                             LeanDirectionToLookOutWindow;                            // 0x0716(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L0PX[0x1];                                   // 0x0717(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LeanOutWindowCameraOffset;                               // 0x0718(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeanOutWindowRoofCameraZOffset;                          // 0x0724(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QAYR[0xC];                                   // 0x0728(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerIdleCheckFrequency;                                // 0x0734(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      LastPlayerIdleCheckTimestamp;                            // 0x0738(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3WSE[0x14];                                  // 0x073C(0x0014) MISSED OFFSET (PADDING)

	public:
		void SetTurretComponents(class USceneComponent* NewPitchComponent, class USceneComponent* NewYawComponent);
		void SetLocked(bool bNewLocked);
		void SetCharacterAttachmentMesh(class UMeshComponent* AttachmentMesh);
		void PlaySeatAudio(class UAkAudioEvent* Event);
		void OnRep_MountedWeapon();
		bool OnExited(class APawn* ExitedPawn);
		bool OnEntered(class APawn* EnteredPawn);
		bool OnAction();
		void Multicast_OnSoldierLeaned();
		class AVehicleBase* GetVehicle();
		struct FRotator GetTurretRotation();
		class AINSCharacter* GetSeatedCharacter();
		struct FRotator GetRelativeTurretRotation();
		class AItemFirearm* GetMountedWeapon();
		struct FRotator GetDesiredTurretRotation();
		void Fire(bool TriggerDown);
		void EnterSeat(class AINSCharacter* Pawn, bool bFromReplication);
		void EjectSeat(class AINSCharacter* PreviousPawn);
		bool CanTurretAimAtLocation(const struct FVector& Location);
		bool CanEnterSeat(class AINSCharacter* Character, bool bFromReplication);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleSpline
	 * Size -> 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
	 */
	class AVehicleSpline : public AActor
	{
	public:
		class USplineComponent*                                    SplineComponent;                                         // 0x0220(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleSplineFollowingComponent
	 * Size -> 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
	 */
	class UVehicleSplineFollowingComponent : public UVehiclePathFollowingComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleWeakPointPart
	 * Size -> 0x0010 (FullSize[0x04E0] - InheritedSize[0x04D0])
	 */
	class UVehicleWeakPointPart : public UVehicleDestructablePart
	{
	public:
		class UVehicleEnginePart*                                  LinkedEngine;                                            // 0x04D0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AController*                                         InstigatorController;                                    // 0x04D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleWheelPart
	 * Size -> 0x0000 (FullSize[0x04D0] - InheritedSize[0x04D0])
	 */
	class UVehicleWheelPart : public UVehiclePartComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VehicleWindowPart
	 * Size -> 0x0010 (FullSize[0x04E0] - InheritedSize[0x04D0])
	 */
	class UVehicleWindowPart : public UVehiclePartComponent
	{
	public:
		class UStaticMesh*                                         DestroyedWindowMesh;                                     // 0x04D0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0QSF[0x8];                                   // 0x04D8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VideoMenu
	 * Size -> 0x0018 (FullSize[0x0258] - InheritedSize[0x0240])
	 */
	class UVideoMenu : public UOptionsMenu
	{
	public:
		TArray<struct FScreenResolution>                           Resolutions;                                             // 0x0240(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FScreenResolution                                   NativeResolution;                                        // 0x0250(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	public:
		void PopulateMenu();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VisibilityBlockerVolume
	 * Size -> 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
	 */
	class AVisibilityBlockerVolume : public AVolume
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VivoxSettings
	 * Size -> 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
	 */
	class UVivoxSettings : public UDeveloperSettings
	{
	public:
		struct FIntPoint                                           DistanceRange;                                           // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Rolloff;                                                 // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GI7J[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoiceComponent
	 * Size -> 0x0070 (FullSize[0x0450] - InheritedSize[0x03E0])
	 */
	class UVoiceComponent : public UAkAudioInputComponent
	{
	public:
		unsigned char                                              UnknownData_18WA[0x70];                                  // 0x03E0(0x0070) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoiceRouting
	 * Size -> 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
	 */
	class UVoiceRouting : public UObject
	{
	public:
		unsigned char                                              UnknownData_ZGXC[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FTalkerData>                          PlayerComponentMap;                                      // 0x0030(0x0050) ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<TWeakObjectPtr<class UVoiceComponent>>              ActiveComponents;                                        // 0x0080(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoiceStatus
	 * Size -> 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
	 */
	class UVoiceStatus : public UUserWidget
	{
	public:
		TArray<class APlayerState*>                                TalkingPlayers;                                          // 0x0230(0x0010) ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAttached;                                               // 0x0240(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_W5SG[0xF];                                   // 0x0241(0x000F) MISSED OFFSET (PADDING)

	public:
		void OnTalkingPlayersChanged(TArray<class APlayerState*> InTalkingPlayers);
		void OnRemoteVoiceChatStateChanged(const class FString& PlayerName, const class FString& ChannelName, class AINSPlayerState* DetectedPlayerState, bool bSpeaking, bool bNonPositional);
		void OnPlayerTalkingStateChanged(class APlayerState* PlayerState, bool bIsTalking);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoteCallResultMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UVoteCallResultMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoteCastResultMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UVoteCastResultMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoteIntentMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UVoteIntentMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoteIssue
	 * Size -> 0x0118 (FullSize[0x0140] - InheritedSize[0x0028])
	 */
	class UVoteIssue : public UObject
	{
	public:
		bool                                                       bIsYesNoVote;                                            // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JER3[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                IssueNameText;                                           // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                VoteOptionsLabelText;                                    // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                VotePromptText;                                          // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                VoteIntentText;                                          // 0x0078(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                VoteSuccessText;                                         // 0x0090(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<class FString, class FText>                           VoteOptions;                                             // 0x00A8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              ActiveVoteOption;                                        // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCastVote>                                   CastVotes;                                               // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequiresMinimumToStart;                                 // 0x0118(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SZQY[0x3];                                   // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinimumPlayersRequired;                                  // 0x011C(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumPlayerRatio;                                      // 0x0120(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VotePassRatio;                                           // 0x0124(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinimumYesNoDifference;                                  // 0x0128(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyAdminCanCall;                                       // 0x012C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VH3N[0x3];                                   // 0x012D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      VoteTimeout;                                             // 0x0130(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastVoteTime;                                            // 0x0134(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SurveyedPlayerCount;                                     // 0x0138(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J3CV[0x4];                                   // 0x013C(0x0004) MISSED OFFSET (PADDING)

	public:
		void UpdateVotingFigures(TArray<struct FReplicatedVoteChoice>* InOutVoteChoiceArray);
		ECallVoteResult RegisterVoteIntent(class APlayerState* FromPlayer, const class FString& Option, class APlayerState* TargetPlayer);
		void OnVoteSuccess();
		void OnVoteStarted(const class FString& Option, class APlayerState* TargetPlayer);
		void OnVoteReset();
		bool OnPlayerVote(class APlayerState* VotingPlayer, int32_t ChoiceIndex);
		bool IsVoteTooSoon(float CheckTime);
		bool IsVoterServerAdmin(class APlayerState* Player);
		bool HasMajorityVoted();
		void GetYesNoVotes(int32_t* OutYesVotes, int32_t* OutNoVotes);
		class UPlayerVotingComponent* GetVotingComponent();
		int32_t GetVotesRequiredToStart();
		EVoteState GetVoteResultState();
		void GetVoteChoices(TArray<struct FReplicatedVoteChoice>* OutVoteChoices);
		class AGameSession* GetOuterGameSession();
		class AGameModeBase* GetOuterGameMode();
		int32_t GetMajorityCount();
		void GetCustomVoteChoices(TArray<struct FReplicatedVoteChoice>* OutVoteChoices);
		int32_t CountVoteIntentions(const class FString& Option, class APlayerState* TargetPlayer);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoteIssuePlayer
	 * Size -> 0x0090 (FullSize[0x01D0] - InheritedSize[0x0140])
	 */
	class UVoteIssuePlayer : public UVoteIssue
	{
	public:
		unsigned char                                              PlayerVoteIntentions[0x50];                              // 0x0140(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              TargetPlayerState[0x28];                                 // 0x0190(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FString                                              TargetPlayerUniqueIdString;                              // 0x01B8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanTargetAdmins;                                        // 0x01C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanTargetEnemies;                                       // 0x01C9(0x0001) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NDC2[0x6];                                   // 0x01CA(0x0006) MISSED OFFSET (PADDING)

	public:
		class APlayerController* GetTargetPlayerController();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoteIssueKick
	 * Size -> 0x0008 (FullSize[0x01D8] - InheritedSize[0x01D0])
	 */
	class UVoteIssueKick : public UVoteIssuePlayer
	{
	public:
		float                                                      IdleVoteBanDuration;                                     // 0x01D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultVoteBanDuration;                                  // 0x01D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		class FText GetKickReason(bool bBanning);
		float GetBanDuration();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.VoteStartedEnemyTeamMessage
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UVoteStartedEnemyTeamMessage : public ULocalMessage
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponAmmoUpgradeComponent
	 * Size -> 0x0050 (FullSize[0x0278] - InheritedSize[0x0228])
	 */
	class UWeaponAmmoUpgradeComponent : public UWeaponUpgradeComponent
	{
	public:
		TMap<class UClass*, class UClass*>                         AmmoTypeRemapping;                                       // 0x0228(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponAnimInstance
	 * Size -> 0x04E0 (FullSize[0x24A0] - InheritedSize[0x1FC0])
	 */
	class UWeaponAnimInstance : public UFirstPersonAnimInstance
	{
	public:
		struct FTransform                                          SoldierTransform;                                        // 0x1FC0(0x0030) BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FRotator                                            SoldierRotation;                                         // 0x1FF0(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FVector                                             SoldierVelocityLocal;                                    // 0x1FFC(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DirectionAngle;                                          // 0x2008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      HorizontalSpeed;                                         // 0x200C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      VerticalSpeed;                                           // 0x2010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      HorizontalSpeedInterp;                                   // 0x2014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsNotMoving;                                            // 0x2018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MAW0[0x3];                                   // 0x2019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MovingAlpha;                                             // 0x201C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bJustJumped;                                             // 0x2020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_WD68[0x3];                                   // 0x2021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RotationTurnDirection;                                   // 0x2024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                            LastTickRotation;                                        // 0x2028(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		float                                                      StrafingAmount;                                          // 0x2034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                            PlayerAimRotator;                                        // 0x2038(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		bool                                                       bUseDeployedCrawl;                                       // 0x2044(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_KIWH[0x3];                                   // 0x2045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CrawlOffset;                                             // 0x2048(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             DeployedProneOffset;                                     // 0x2054(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SightFraction;                                           // 0x2060(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LeanRotationAlpha;                                       // 0x2064(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CombinedAimingFraction;                                  // 0x2068(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      GenericMeleeAlpha;                                       // 0x206C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ReloadingAlpha;                                          // 0x2070(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AllowWeaponFireAlpha;                                    // 0x2074(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ExplosiveThrowAlpha;                                     // 0x2078(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                            MovementWeightShift;                                     // 0x207C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		bool                                                       bHasOpticalScope;                                        // 0x2088(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_253R[0x3];                                   // 0x2089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastRenderTime;                                          // 0x208C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      GameTime;                                                // 0x2090(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      GameTimeLastTick;                                        // 0x2094(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsGoingSprint;                                          // 0x2098(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsGoingSprintLastTick;                                  // 0x2099(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bAllowWeaponFire;                                        // 0x209A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EEquipableState                                            EquipableState;                                          // 0x209B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RP2O[0x4];                                   // 0x209C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        SpecialIdleMontageReference;                             // 0x20A0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             OriginOffset;                                            // 0x20A8(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      InUnderbarrelTransition;                                 // 0x20B4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bThrowWeapon;                                            // 0x20B8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasParentWeapon;                                        // 0x20B9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bMeleeBlendSwitch;                                       // 0x20BA(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_0823[0x5];                                   // 0x20BB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        GenericMeleeMontageReference;                            // 0x20C0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bInChargeMode;                                           // 0x20C8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PEXL[0x3];                                   // 0x20C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChargeApha;                                              // 0x20CC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EUseItem                                                   CurrentUsableActor;                                      // 0x20D0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8AII[0x7];                                   // 0x20D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        CurrentInteractionMontage;                               // 0x20D8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BinocularZoomProgress;                                   // 0x20E0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bUsePointShoot;                                          // 0x20E4(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsIron;                                                 // 0x20E5(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FBN6[0x2];                                   // 0x20E6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SprintAlpha;                                             // 0x20E8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    LoadedAmmo;                                              // 0x20EC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bOutOfAmmo;                                              // 0x20F0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bPullingTrigger;                                         // 0x20F1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VUDL[0x2];                                   // 0x20F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ShotFrequency;                                           // 0x20F4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TimeBetweenShots;                                        // 0x20F8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      RecoilDynamicAdjustment;                                 // 0x20FC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      RecoilAmount;                                            // 0x2100(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bChamberedRound;                                         // 0x2104(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EFirearmBoltState                                          BoltState;                                               // 0x2105(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasReloadStages;                                        // 0x2106(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasLoadedMag;                                           // 0x2107(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasAttachedMagazine;                                    // 0x2108(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EWeaponReloadStage                                         NextReloadStage;                                         // 0x2109(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4YVL[0x2];                                   // 0x210A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DrawChamberEmptyAlpha;                                   // 0x210C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bReloadMagTypeChange;                                    // 0x2110(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FZ5A[0x3];                                   // 0x2111(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EmptyReloadStagesAlpha;                                  // 0x2114(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                        ActiveReloadMontage;                                     // 0x2118(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                        ActiveReloadStagesMontage;                               // 0x2120(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ReloadPosition;                                          // 0x2128(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ReloadStagesPosition;                                    // 0x212C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EFirearmFiremode                                           Firemode;                                                // 0x2130(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_R5T9[0x3];                                   // 0x2131(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FiremodeCount;                                           // 0x2134(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BoltCatchAlpha;                                          // 0x2138(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      EmptyAlpha;                                              // 0x213C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ReloadEmptyAlpha;                                        // 0x2140(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bFinishedReload;                                         // 0x2144(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Z9ZR[0x3];                                   // 0x2145(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SecondMagAlpha;                                          // 0x2148(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      AllowFireAlpha;                                          // 0x214C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                        RechamberReference;                                      // 0x2150(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsRechambering;                                         // 0x2158(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_4FYN[0x3];                                   // 0x2159(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ShotgunRechamberAlpha;                                   // 0x215C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      WelrodRechamberAlpha;                                    // 0x2160(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bWelrod;                                                 // 0x2164(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsBarrelObstructed;                                     // 0x2165(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bWeaponObstructedByPawn;                                 // 0x2166(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bWeaponPreviouslyObstructedByPawn;                       // 0x2167(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BarrelObstructionSightFraction;                          // 0x2168(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BarrelObstructionAlpha;                                  // 0x216C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ProneAlpha;                                              // 0x2170(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasBlocked;                                             // 0x2174(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PAEF[0x3];                                   // 0x2175(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            BarrelObstructionRotator;                                // 0x2178(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FVector                                             BarrelObstructionVector;                                 // 0x2184(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CrouchAlpha;                                             // 0x2190(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_354X[0x4];                                   // 0x2194(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        CurrentFiremodeMontage1;                                 // 0x2198(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bFiremodePlaying;                                        // 0x21A0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_S56Y[0x3];                                   // 0x21A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FireModeSlotInt;                                         // 0x21A4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsBeltFed;                                              // 0x21A8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_7SKC[0x3];                                   // 0x21A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MagazineCapacity;                                        // 0x21AC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bBeltVisable;                                            // 0x21B0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UHQT[0x7];                                   // 0x21B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              BeltLinkAlpha;                                           // 0x21B8(0x0010) BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasExplicitEmpty;                                       // 0x21C8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_HR67[0x3];                                   // 0x21C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplicitEmptyAlpha;                                      // 0x21CC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ExplicitEmptyIntermediateAlpha;                          // 0x21D0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CrawlAlpha;                                              // 0x21D4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasForegripDelta;                                       // 0x21D8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasUnderbarrelDelta;                                    // 0x21D9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MPMY[0x2];                                   // 0x21DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnderbarrelAlpha;                                        // 0x21DC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ForegripAlpha;                                           // 0x21E0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      PointShootToIronsightADSBlendTime;                       // 0x21E4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      HardcoreSprintUnderbarrelAdjustment;                     // 0x21E8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BipodLegStateAlpha;                                      // 0x21EC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DeployedAlpha;                                           // 0x21F0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RUA2[0x4];                                   // 0x21F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        ReadyMontageReference;                                   // 0x21F8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                        DrawChamberMontageReference;                             // 0x2200(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bUnderbarrelSwitch;                                      // 0x2208(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsIronChange;                                           // 0x2209(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasBayo;                                                // 0x220A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bBayoCharge;                                             // 0x220B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MeleeChargeAlpha;                                        // 0x220C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MeleeChargeAnimTime;                                     // 0x2210(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasDeployed;                                            // 0x2214(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ESZV[0x3];                                   // 0x2215(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BipodLegsAlpha;                                          // 0x2218(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsDeployed;                                             // 0x221C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XG0R[0x3];                                   // 0x221D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        DeploySequenceMontageReference;                          // 0x2220(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bFirePinState;                                           // 0x2228(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_CCS2[0x3];                                   // 0x2229(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FiringPinAlpha;                                          // 0x222C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsUGL;                                                  // 0x2230(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bToss;                                                   // 0x2231(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasGripod;                                              // 0x2232(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_B087[0x1];                                   // 0x2233(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GripodLegsAlpha;                                         // 0x2234(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimMontage*                                        BipodLegMontageReference;                                // 0x2238(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWeaponLightComponent*                               LightAttachment;                                         // 0x2240(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EWeaponLightMode                                           LightMode;                                               // 0x2248(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsHardcore;                                             // 0x2249(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EBipodState                                                BipodLegState;                                           // 0x224A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_J807[0x1];                                   // 0x224B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HasMagazineDeltaTransparent;                             // 0x224C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimSequence*                                       AmmoDeltaAnim;                                           // 0x2250(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ConsumeMagazine;                                         // 0x2258(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ToggleOpticHardcoreSprintCurve;                          // 0x225C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ToggleOpticHandCurve;                                    // 0x2260(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ToggleOpticOffsetCurve;                                  // 0x2264(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bNeedToggleADS;                                          // 0x2268(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bToggleADSOut;                                           // 0x2269(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EGrenadeState                                              GrenadeState;                                            // 0x226A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EGrenadeThrowMode                                          GrenadeThrowMode;                                        // 0x226B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EGrenadeThrowMode                                          GrenadeThrowModeActive;                                  // 0x226C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsCooking;                                              // 0x226D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsPrimed;                                               // 0x226E(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsThrowback;                                            // 0x226F(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsMolotov;                                              // 0x2270(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_V82C[0x3];                                   // 0x2271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SimulationBlendAlpha;                                    // 0x2274(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bActiveThrowOverhand;                                    // 0x2278(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bSimulationBlendUpdated;                                 // 0x2279(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bInSwing;                                                // 0x227A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_S754[0x1];                                   // 0x227B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SwingTimeRemaining;                                      // 0x227C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      NextSwingTime;                                           // 0x2280(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BinocModelAlpha;                                         // 0x2284(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bInProneTransition;                                      // 0x2288(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESoldierStance                                             DesiredStance;                                           // 0x2289(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		ESoldierStance                                             CurrentStance;                                           // 0x228A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_EHKE[0x1];                                   // 0x228B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LeanAmount;                                              // 0x228C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      LeanAlpha;                                               // 0x2290(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bInVaultRecovery;                                        // 0x2294(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsSliding;                                              // 0x2295(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EMovementMode                                              MovementMode;                                            // 0x2296(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EVaultAction                                               VaultAction;                                             // 0x2297(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsCurrentlyVaulting;                                    // 0x2298(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsDesiringProne;                                        // 0x2299(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsProne;                                                // 0x229A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_O5X3[0x1];                                   // 0x229B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BreathingAlpha;                                          // 0x229C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasBreathing;                                           // 0x22A0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EBipodState                                                DeployedState;                                           // 0x22A1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_PNK2[0x2];                                   // 0x22A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LeanWeaponVector;                                        // 0x22A4(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                            LeanWeaponRotator;                                       // 0x22B0(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FRotator                                            LeanRootRotator;                                         // 0x22BC(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		EWeaponPosture                                             WeaponPosture;                                           // 0x22C8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasSlide;                                               // 0x22C9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasJump;                                                // 0x22CA(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsCrawling;                                             // 0x22CB(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsSprinting;                                            // 0x22CC(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsFullSprint;                                           // 0x22CD(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_GOLA[0x2];                                   // 0x22CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FullSprintAlpha;                                         // 0x22D0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      BlendCrawlAlpha;                                         // 0x22D4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DrawHolsterSprintAlpha;                                  // 0x22D8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsCacheRig;                                             // 0x22DC(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8UB0[0x3];                                   // 0x22DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SprintStateAlpha;                                        // 0x22E0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EWeaponMovement                                            WeaponMovementMode;                                      // 0x22E4(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RO36[0x3];                                   // 0x22E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SprintSpeed;                                             // 0x22E8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SprintJumpAlpha;                                         // 0x22EC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bHasLeap;                                                // 0x22F0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_DT66[0x3];                                   // 0x22F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            SprintPitchRotator;                                      // 0x22F4(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FVector                                             SprintPitchVector;                                       // 0x2300(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             AnimCameraPosition;                                      // 0x230C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      SprintPitchFactor;                                       // 0x2318(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                            CrawlPitchRotator;                                       // 0x231C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FVector                                             CrawlPitchVector;                                        // 0x2328(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      CrawlPitchFactor;                                        // 0x2334(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsNearLand;                                             // 0x2338(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsLand;                                                 // 0x2339(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsIK;                                                   // 0x233A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEnableLeftHandIK;                                       // 0x233B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bEnableRightHandIK;                                      // 0x233C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EIKDirection                                               IKMaster;                                                // 0x233D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_O4JU[0x2];                                   // 0x233E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HandIKLeftCurve;                                         // 0x2340(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      WeaponIKLeftCurve;                                       // 0x2344(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      HandIKRightCurve;                                        // 0x2348(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      WeaponIKRightCurve;                                      // 0x234C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EIKDirection                                               IKSprintSelected;                                        // 0x2350(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_C633[0x3];                                   // 0x2351(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DrawHolsterLeftHandIK;                                   // 0x2354(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DrawAnimRate;                                            // 0x2358(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      HolsterAnimRate;                                         // 0x235C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FVector                                             ExtendedMagVectorOffset;                                 // 0x2360(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                            ExtendedMagRotatorOffset;                                // 0x236C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FVector                                             ExtendedMag2VectorOffset;                                // 0x2378(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FRotator                                            ExtendedMag2RotatorOffset;                               // 0x2384(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		class UCurveFloat*                                         ProneViewModelCurve;                                     // 0x2390(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UAnimSequence*                                       BayonetPullbackAnim;                                     // 0x2398(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsValid;                                                // 0x23A0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_VJ7N[0x7];                                   // 0x23A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USoldierMovementComponent*                           SoldierMovement;                                         // 0x23A8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_5W2Y[0xF0];                                  // 0x23B0(0x00F0) MISSED OFFSET (PADDING)

	public:
		void OnReloadBeginFinish(bool bFromSinglyLoaded);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponHandlingUpgradeComponent
	 * Size -> 0x0070 (FullSize[0x03E8] - InheritedSize[0x0378])
	 */
	class UWeaponHandlingUpgradeComponent : public UWeaponVisualUpgradeComponent
	{
	public:
		float                                                      RecoilModifier;                                          // 0x0378(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoilLateralModifier;                                   // 0x037C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoilVerticalModifier;                                  // 0x0380(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoilRollModifier;                                      // 0x0384(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoilFocusedModifier;                                   // 0x0388(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoilFocusedLateralModifier;                            // 0x038C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoilFocusedVerticalModifier;                           // 0x0390(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoilFocusedRollModifier;                               // 0x0394(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwayRadiusModifier;                                      // 0x0398(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwaySpeedModifier;                                       // 0x039C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FreeaimDistanceModifier;                                 // 0x03A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EquipDurationModifier;                                   // 0x03A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAffectsFirstEquipDuration;                              // 0x03A8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NXI3[0x3];                                   // 0x03A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UnequipDurationModifier;                                 // 0x03AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NextItemEquipDurationModifier;                           // 0x03B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastItemUnequipDurationModifier;                         // 0x03B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PointShootInTime;                                        // 0x03B8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PointShootOutTime;                                       // 0x03BC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSShootInTime;                                          // 0x03C0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSShootOutTime;                                         // 0x03C4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReloadGenericMultiplier;                                 // 0x03C8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReloadMultiplier;                                        // 0x03CC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReloadDryMultiplier;                                     // 0x03D0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedReloadMultiplier;                                   // 0x03D4(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedReloadDryMultiplier;                                // 0x03D8(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FocusSpeedMultiplier;                                    // 0x03DC(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FocusSpeedOutMultiplier;                                 // 0x03E0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowFocusWhileMoving;                                  // 0x03E4(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NC9B[0x3];                                   // 0x03E5(0x0003) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponMuzzleComponent
	 * Size -> 0x0058 (FullSize[0x0440] - InheritedSize[0x03E8])
	 */
	class UWeaponMuzzleComponent : public UWeaponHandlingUpgradeComponent
	{
	public:
		bool                                                       bOverrideMuzzleSocket;                                   // 0x03E8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideMuzzleFlashEffects;                                 // 0x03E9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanAISeeMuzzleFlash;                                    // 0x03EA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_71BD[0x1];                                   // 0x03EB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LoudnessModifier;                                        // 0x03EC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMuzzleUpgradeWeaponProperties>              WeaponProperties;                                        // 0x03F0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UParticleSystem*>                             MuzzleFlashEffects;                                      // 0x0400(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClearMuzzleEffects;                                     // 0x0410(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OTAT[0x7];                                   // 0x0411(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UParticleSystem*>                             MuzzleFlashEffectsTP;                                    // 0x0418(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClearMuzzleEffectsTP;                                   // 0x0428(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LP97[0x3];                                   // 0x0429(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MuzzleVelocityModifier;                                  // 0x042C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BarrelLengthModifier;                                    // 0x0430(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideTriggerDelay;                                   // 0x0434(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ND8Y[0x3];                                   // 0x0435(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TriggerDelay;                                            // 0x0438(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E8L2[0x4];                                   // 0x043C(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponBayonetComponent
	 * Size -> 0x0000 (FullSize[0x0440] - InheritedSize[0x0440])
	 */
	class UWeaponBayonetComponent : public UWeaponMuzzleComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponForegripComponent
	 * Size -> 0x0000 (FullSize[0x03E8] - InheritedSize[0x03E8])
	 */
	class UWeaponForegripComponent : public UWeaponHandlingUpgradeComponent
	{
	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponBipodComponent
	 * Size -> 0x0088 (FullSize[0x0470] - InheritedSize[0x03E8])
	 */
	class UWeaponBipodComponent : public UWeaponForegripComponent
	{
	public:
		EBipodState                                                BipodDeployedState;                                      // 0x03E8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBipodState                                                SimulatedBipodDeployedState;                             // 0x03E9(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBipodState                                                BipodLegsState;                                          // 0x03EA(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBipodState                                                SimulatedBipodLegsState;                                 // 0x03EB(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeployedSwayRadiusModifier;                              // 0x03EC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeployedSwaySpeedModifier;                               // 0x03F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LegsDownSwayRadiusModifier;                              // 0x03F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LegsDownSwaySpeedModifier;                               // 0x03F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeployedRecoilModifier;                                  // 0x03FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeployedRecoilLateralModifier;                           // 0x0400(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeployedRecoilVerticalModifier;                          // 0x0404(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeployedADSSpeedModifier;                                // 0x0408(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOCG[0x4];                                   // 0x040C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OnBipodDeployedStateChanged;                             // 0x0410(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnBipodLegsStateChanged;                                 // 0x0420(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		float                                                      BipodToggleTime;                                         // 0x0430(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodDeployHeight;                                       // 0x0434(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodLeftBlockRatio;                                     // 0x0438(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodRightBlockRatio;                                    // 0x043C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize10                               BipodDeployLocation;                                     // 0x0440(0x000C) BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodHeight;                                             // 0x044C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodDistance;                                           // 0x0450(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BipodViewBlendTime;                                      // 0x0454(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GroundCheckTraceLength;                                  // 0x0458(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsGrippod;                                              // 0x045C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0PCR[0x3];                                   // 0x045D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TraceStartSocket;                                        // 0x0460(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDrawDebugLine;                                          // 0x0468(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ANYK[0x7];                                   // 0x0469(0x0007) MISSED OFFSET (PADDING)

	public:
		void TryBipodDeploy();
		void ToggleBipodLegsState();
		bool ShouldTryAutoBipod();
		void SetBipodLegsState(EBipodState NewState, bool bFromReplication);
		void Server_SetBipodLegsState(EBipodState NewState);
		void Server_SetBipodDeployedState(EBipodState NewState);
		void OnRep_BipodLegsState();
		void OnRep_BipodDeployedState();
		bool IsManualDeployment();
		bool IsDeployedOrDeploying();
		bool IsDeployed();
		bool InBipodTransition();
		float GetBipodViewTransitionFrac();
		float GetBipodToggleElapsedTime();
		EBipodState GetBipodLegsState();
		EBipodState GetBipodDeployedState();
		bool CanToggleLegState();
		bool CanDeploy();
		void BipodStateChanged__DelegateSignature(EBipodState OldState, EBipodState NewState);
		bool AreBipodLegsInTransition();
		bool AreBipodLegsDown();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponBoltUpgradeComponent
	 * Size -> 0x0008 (FullSize[0x03F0] - InheritedSize[0x03E8])
	 */
	class UWeaponBoltUpgradeComponent : public UWeaponHandlingUpgradeComponent
	{
	public:
		float                                                      BoltSpeedModifier;                                       // 0x03E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WB2M[0x4];                                   // 0x03EC(0x0004) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponStockComponent
	 * Size -> 0x0008 (FullSize[0x03F0] - InheritedSize[0x03E8])
	 */
	class UWeaponStockComponent : public UWeaponHandlingUpgradeComponent
	{
	public:
		bool                                                       bIsToggled;                                              // 0x03E8(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeToggled;                                           // 0x03E9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H47V[0x6];                                   // 0x03EA(0x0006) MISSED OFFSET (PADDING)

	public:
		void Server_Toggle();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponFoldingStockComponent
	 * Size -> 0x0008 (FullSize[0x03F8] - InheritedSize[0x03F0])
	 */
	class UWeaponFoldingStockComponent : public UWeaponStockComponent
	{
	public:
		bool                                                       bIsFolded;                                               // 0x03F0(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SDH8[0x7];                                   // 0x03F1(0x0007) MISSED OFFSET (PADDING)

	public:
		void Server_ToggleFold();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponMagazineUpgradeComponent
	 * Size -> 0x0010 (FullSize[0x0238] - InheritedSize[0x0228])
	 */
	class UWeaponMagazineUpgradeComponent : public UWeaponUpgradeComponent
	{
	public:
		class UClass*                                              ReplacementAmmoContainer;                                // 0x0228(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClipLoadedOnEmpty;                                      // 0x0230(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClipLoadedOnSpeedReload;                                // 0x0231(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y8EE[0x2];                                   // 0x0232(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RecoilLateralModifier;                                   // 0x0234(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponModelViewer
	 * Size -> 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
	 */
	class UWeaponModelViewer : public UUserWidget
	{
	public:
		class AItemBase*                                           WeaponModel1P;                                           // 0x0230(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AItemBase*                                           WeaponModel3P;                                           // 0x0238(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AItemBase*>                                   CharacterGear;                                           // 0x0240(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AProfileCharacter*                                   SoldierModel;                                            // 0x0250(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InsurgentSkeletalMesh[0x28];                             // 0x0258(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              SecuritySkeletalMesh[0x28];                              // 0x0280(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      InterpolationTime;                                       // 0x02A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C8M2[0x4];                                   // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStoredInventoryItem                                CurrentWeapon;                                           // 0x02B0(0x0018) NativeAccessSpecifierPublic
		unsigned char                                              CurrentModelFaction;                                     // 0x02C8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ZGU[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AUICameraActor*                                      WeaponCameraActor;                                       // 0x02D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AUICameraActor*                                      SoldierCameraActor;                                      // 0x02D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponUpgradeSlot                                         OutlinedUpgradeSlot;                                     // 0x02E0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BMV9[0x7];                                   // 0x02E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              WeaponAnimClass;                                         // 0x02E8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SoldierAnimClass;                                        // 0x02F0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChangingWeapon;                                         // 0x02F8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z3AO[0x7];                                   // 0x02F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UINSSkeletalMeshComponent*                           WeaponMesh1P;                                            // 0x0300(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UINSSkeletalMeshComponent*                           WeaponMesh3P;                                            // 0x0308(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USkeletalMesh*                                       GhostMesh;                                               // 0x0310(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8OXC[0x10];                                  // 0x0318(0x0010) MISSED OFFSET (PADDING)

	public:
		void UpdateWeaponModel(const struct FStoredInventoryItem& Item);
		void UpdateItemModels();
		void TimedSetCameras();
		class AItemBase* SpawnWeaponModel(const struct FStoredInventoryItem& Item, bool FirstPerson);
		void SetWeaponModel(const struct FStoredInventoryItem& Item, bool FirstPerson, bool ForceRefresh);
		void SetUpgradeCustomDepth(EWeaponUpgradeSlot UpgradeSlot, bool RenderCustomDepth);
		void SetSoldierModel();
		void SetCameras();
		void ResetCamera();
		void OutlineUpgradeInSlot(EWeaponUpgradeSlot UpgradeSlot, bool bOutlineUpgradeInSameSlot);
		void OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo);
		void OnSoldierMeshSet(class UINSSkeletalMeshComponent* NewMesh);
		void OnPlayerClassChanged(class UPlayerClass* PlayerClass);
		void OnInventoryChanged();
		void OnFirstPersonWeaponMeshSet(class UINSSkeletalMeshComponent* NewMesh);
		void HandleUpdateModelsTimer();
		struct FVector GetWorldPositionOfUpgrade(EWeaponUpgradeSlot UpgradeSlot);
		void DestroyModels();
		void DestroyModel1P();
		void DestroyGearModels();
		void AttachWeaponModel();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponMountComponent
	 * Size -> 0x00C0 (FullSize[0x0438] - InheritedSize[0x0378])
	 */
	class UWeaponMountComponent : public UWeaponVisualUpgradeComponent
	{
	public:
		TMap<class UClass*, struct FMountCompatibleWeaponInfo>     CompatibleAttachedWeapons;                               // 0x0378(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bSpawnWeapons;                                           // 0x03C8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldHideOnDrop;                                       // 0x03C9(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6QLT[0x6];                                   // 0x03CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AItemWeapon*>                                 MountedWeapons;                                          // 0x03D0(0x0010) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PreviousClientWeaponCount;                               // 0x03E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasBeenDropped;                                         // 0x03E4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V9QO[0x3];                                   // 0x03E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UClass*, int32_t>                               DroppedAmmo;                                             // 0x03E8(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	public:
		void OnRep_MountedWeapons();
		void AttachWeapons();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponOpticComponent
	 * Size -> 0x0160 (FullSize[0x04D8] - InheritedSize[0x0378])
	 */
	class UWeaponOpticComponent : public UWeaponVisualUpgradeComponent
	{
	public:
		unsigned char                                              UnknownData_MNE6[0x8];                                   // 0x0378(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bAllowPointShooting;                                     // 0x0380(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GMO6[0x3];                                   // 0x0381(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AditionalLockOnTraceDistance;                            // 0x0384(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponSightSequence>                        SightSequences;                                          // 0x0388(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsScope;                                                // 0x0398(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMaterialTransition;                                  // 0x0399(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2PSJ[0x2];                                   // 0x039A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SightFOV;                                                // 0x039C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LowDetailFocusFOVFraction;                               // 0x03A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewModelSightDistanceBase;                              // 0x03A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewModelRotationBase;                                   // 0x03A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewModelSightFOV;                                       // 0x03AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewModelSightLowFOV;                                    // 0x03B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewModelSightFocusFOV;                                  // 0x03B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewModelSightFocusLowFOV;                               // 0x03B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModelFlattenScale;                                       // 0x03BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              OpticADSMaterialAsset[0x28];                             // 0x03C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              OpticHipfireMaterialAsset[0x28];                         // 0x03E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UMaterialInstanceDynamic*                            OpticADSMaterial;                                        // 0x0410(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            OpticHipfireMaterial;                                    // 0x0418(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeModelFlattenClipDistance;                           // 0x0420(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScopeModelFlattenClipMaterialIndex;                      // 0x0424(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentObstructionInterp;                                // 0x0428(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyReticleBrightness;                                 // 0x042C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D7FE[0x3];                                   // 0x042D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ReticleSlotName;                                         // 0x0430(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlobalReticleBrightness;                                 // 0x0438(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSShootInTime;                                          // 0x043C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      ADSShootOutTime;                                         // 0x0440(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_M7P4[0x4];                                   // 0x0444(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ReticleBrightness[0x50];                                 // 0x0448(0x0050) UNKNOWN PROPERTY: MapProperty
		bool                                                       bCyclingOptic;                                           // 0x0498(0x0001) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCyclingWasInSights;                                     // 0x0499(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E0BG[0x2];                                   // 0x049A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentOptic;                                            // 0x049C(0x0004) BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LatchedOptic;                                            // 0x04A0(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CycleOpticDuration;                                      // 0x04A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CycleOpticGraceDuration;                                 // 0x04A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastCycleOpticTime;                                      // 0x04AC(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnCycleOpticDelegate;                                    // 0x04B0(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
		struct FTimerHandle                                        TimerHandle_OpticTransition;                             // 0x04C0(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    MaterialIndex;                                           // 0x04C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		int32_t                                                    OpticMaterialIndex;                                      // 0x04CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bUsingADSMaterial;                                       // 0x04D0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_S3N2[0x7];                                   // 0x04D1(0x0007) MISSED OFFSET (PADDING)

	public:
		void ServerCycleOptic();
		void OnRep_CurrentOptic(int32_t PreviousOptic);
		void OnCycleOpticDelegate__DelegateSignature(int32_t LatchedMode, int32_t DesiredMode);
		bool IsHybridOptic();
		bool IsCyclingOptic();
		EOpticZoomLevel GetZoomLevelClassification();
		int32_t GetNumberOpticModes();
		EOpticZoomLevel GetDefaultZoomLevelClassification();
		float GetADSMultiplier(bool bAimingDownSights);
		void FinishOpticTransition();
		void BlueprintOnCycleOptic(int32_t LatchedMode, int32_t Mode);
		void BeginOpticTransition();
		bool AllowPointShooting();
		bool AllowAimDownSights();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponPointShootGripComponent
	 * Size -> 0x0120 (FullSize[0x0508] - InheritedSize[0x03E8])
	 */
	class UWeaponPointShootGripComponent : public UWeaponForegripComponent
	{
	public:
		unsigned char                                              UnknownData_0BOS[0x8];                                   // 0x03E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bWantsPointShoot;                                        // 0x03F0(0x0001) Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_E9ZF[0x7];                                   // 0x03F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       AudioEventToPointShoot;                                  // 0x03F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEventToADS;                                         // 0x0400(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAudioEventsRequireADS;                                  // 0x0408(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowBeamOnlyWhenADS;                                    // 0x0409(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D1ZT[0x2];                                   // 0x040A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AvailableLightModes;                                     // 0x040C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PointShootingLightModes;                                 // 0x0410(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponLightMode                                           CurrentLightMode;                                        // 0x0414(0x0001) BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ENNC[0x3];                                   // 0x0415(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USpotLightComponent*                                 FlashlightComponent1P;                                   // 0x0418(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USpotLightComponent*                                 FlashlightComponent3P;                                   // 0x0420(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightIntensity;                                          // 0x0428(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELightUnits                                                LightIntensityUnit;                                      // 0x042C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HO1Z[0x3];                                   // 0x042D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LightInnerConeAngle;                                     // 0x0430(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightOuterConeAngle;                                     // 0x0434(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightAttenuationRadius;                                  // 0x0438(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7K47[0x4];                                   // 0x043C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     LaserParticleSystem1P;                                   // 0x0440(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     LaserParticleSystem3P;                                   // 0x0448(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLaserHasBeam;                                           // 0x0450(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLaserFollowAim3P;                                       // 0x0451(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JN9G[0x2];                                   // 0x0452(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LaserTraceDistance;                                      // 0x0454(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LaserTracePadding;                                       // 0x0458(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlashlightTraceDistance;                                 // 0x045C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowBeamInSmoke;                                        // 0x0460(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowLaserParticleSystemInfraredExclusive;               // 0x0461(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5TGX[0x6];                                   // 0x0462(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent*                            LaserParticleComponent1P;                                // 0x0468(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            LaserParticleComponent3P;                                // 0x0470(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioToggleOn1P;                                         // 0x0478(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioToggleOn3P;                                         // 0x0480(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioToggleOff1P;                                        // 0x0488(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioToggleOff3P;                                        // 0x0490(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     FlashlightBlindingParticleSystem3P;                      // 0x0498(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            BlindingParticleComponent3P;                             // 0x04A0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     BeamParticleSystem;                                      // 0x04A8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            BeamParticleComponent;                                   // 0x04B0(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightSourceLocation;                                     // 0x04B8(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightSourceDirection;                                    // 0x04C4(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightTargetLocation;                                     // 0x04D0(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LightTargetRotation;                                     // 0x04DC(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightTraceMaxDistance;                                   // 0x04E8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightTracePadding;                                       // 0x04EC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionChannel                                          LightTraceCollisionChannel;                              // 0x04F0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4YR2[0x3];                                   // 0x04F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PreviousAttenuation;                                     // 0x04F4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreviousTime;                                            // 0x04F8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FlashLightTargetNotVisibleCount;                         // 0x04FC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTimerHandle                                        LightTargetTaskTimer;                                    // 0x0500(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		bool WantsPointShoot();
		void UpdateLightLocation();
		void UpdateLaserBeam();
		void UpdateBlindingParticle();
		void UpdateBeam();
		void StartTraceTask(float Interval, ECollisionChannel Channel);
		void SetWantsPointShoot(bool bNewWantsPointShoot);
		void SetLightMode(EWeaponLightMode Mode, bool bFromReplication);
		void ServerSetWantsPointShoot(bool bNewWantsPointShoot);
		void ServerSetLightMode(EWeaponLightMode Mode);
		void RecreateEffects();
		void RecreateBeamEffects();
		void OnRep_CurrentLightMode();
		void OnRep_bWantsPointShoot();
		bool LocalPlayerCanSeeInfrared();
		void KillLaserSightEffect();
		void KillBlindingEffect();
		void KillAnyEffects();
		bool HasLightingMode(EWeaponLightMode LightMode);
		EWeaponLightMode GetNextLightMode();
		EWeaponLightMode GetFirstLightMode();
		bool DoShouldEnterPointShootMode();
		void CreateLaserSightEffect();
		void CalculateLightTargetVisibility();
		void CalculateLightTarget();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponScopeComponent
	 * Size -> 0x0208 (FullSize[0x06E0] - InheritedSize[0x04D8])
	 */
	class UWeaponScopeComponent : public UWeaponOpticComponent
	{
	public:
		struct FScopeConfiguration                                 ScopeConfiguration;                                      // 0x04D8(0x0038) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsHybridOptic;                                          // 0x0510(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B0F6[0x7];                                   // 0x0511(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FScopeConfiguration>                  AdditionalScopeConfigurations;                           // 0x0518(0x0050) Deprecated, NativeAccessSpecifierPublic
		TArray<struct FScopeConfiguration>                         AdditionalScopeModes;                                    // 0x0568(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRenderWeaponInScope;                                    // 0x0578(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRenderHandsInScope;                                     // 0x0579(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JDQ9[0x6];                                   // 0x057A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWeaponUpgradeModel>                         ReticleMeshes;                                           // 0x0580(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReticleMeshId;                                           // 0x0590(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2YR0[0x4];                                   // 0x0594(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ScopeGlassMaterialAsset[0x28];                           // 0x0598(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ScopeReflectiveMaterialAsset[0x28];                      // 0x05C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ZoomScopeMaterialAsset[0x28];                            // 0x05E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              RealisticScopeMaterialAsset[0x28];                       // 0x0610(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              OriginalScopeReticleMaterial[0x28];                      // 0x0638(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UMaterialInstanceDynamic*                            ScopeReflectiveMaterial;                                 // 0x0660(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            ScopeReticleMaterial;                                    // 0x0668(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            BodyMaterial;                                            // 0x0670(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PlayerCollectionAsset[0x28];                             // 0x0678(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UMaterialInterface*                                  PostProcessMaterial;                                     // 0x06A0(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        TintHSV;                                                 // 0x06A8(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bIsTransparent;                                          // 0x06B8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AK86[0x3];                                   // 0x06B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Roughness;                                               // 0x06BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    CurrentScopeRenderMode;                                  // 0x06C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      MaximumFireDistance;                                     // 0x06C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      FireDistance;                                            // 0x06C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      ZoomedRecoilLateralModifier;                             // 0x06CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomedRecoilVerticalModifier;                            // 0x06D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomedRecoilRollModifier;                                // 0x06D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomedSwayRadiusModifier;                                // 0x06D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomedSwaySpeedModifier;                                 // 0x06DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponSelectionOption_Gamepad
	 * Size -> 0x0070 (FullSize[0x02A0] - InheritedSize[0x0230])
	 */
	class UWeaponSelectionOption_Gamepad : public UUserWidget
	{
	public:
		class AItemEquipable*                                      Item;                                                    // 0x0230(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EItemSlot                                                  ItemSlot;                                                // 0x0238(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bSelected;                                               // 0x0239(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2LAH[0x2];                                   // 0x023A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        InactiveBgColor;                                         // 0x023C(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ActiveBgColor;                                           // 0x024C(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        InactiveFgColor;                                         // 0x025C(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ActiveFgColor;                                           // 0x026C(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        DisabledBgColor;                                         // 0x027C(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H1XZ[0x4];                                   // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UImage*                                              ImageBackground;                                         // 0x0290(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              ImageWeaponIcon;                                         // 0x0298(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponSelection_Gamepad
	 * Size -> 0x0078 (FullSize[0x02A8] - InheritedSize[0x0230])
	 */
	class UWeaponSelection_Gamepad : public UUserWidget
	{
	public:
		class AINSPlayerController*                                CurrentPlayerController;                                 // 0x0230(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class AItemEquipable*>                              CachedInventory;                                         // 0x0238(0x0010) BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      FadeTime;                                                // 0x0248(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bInventoryDiffers;                                       // 0x024C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OPDQ[0x3];                                   // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AItemEquipable*                                      FirstItemInSlot;                                         // 0x0250(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bStillHasItems;                                          // 0x0258(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_FZ1B[0x7];                                   // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AItemEquipable*                                      PreviousItem;                                            // 0x0260(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AItemEquipable*                                      LastSelectedItem;                                        // 0x0268(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        ExplosivesContainer;                                     // 0x0270(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      MiscContainer;                                           // 0x0278(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        PrimaryContainer;                                        // 0x0280(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UHorizontalBox*                                      SecondaryContainer;                                      // 0x0288(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UClass*                                              OptionClassInstance;                                     // 0x0290(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_8CPP[0x10];                                  // 0x0298(0x0010) MISSED OFFSET (PADDING)

	public:
		void UpdateWeaponCache();
		void OnSoldierInventoryItemAddedOrRemoved(class AINSSoldier* Soldier, class AItemBase* Item);
		void OnInventoryMenuVisible(bool bNewInventorySelectActive, bool bUsingGamepad);
		void OnInventoryChanged();
		void OnControllerRemovePawn();
		void OnControllerNewPawn();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponSensitivityScaleInterface
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UWeaponSensitivityScaleInterface : public UInterface
	{
	public:
		void ModifyLookInput(bool bGamepad, bool bIsXAxis, float* OutRate);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponSkinComponent
	 * Size -> 0x0218 (FullSize[0x0590] - InheritedSize[0x0378])
	 */
	class UWeaponSkinComponent : public UWeaponVisualUpgradeComponent
	{
	public:
		unsigned char                                              WeaponIndexMaterialOverride1P[0x50];                     // 0x0378(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              WeaponIndexMaterialOverride3P[0x50];                     // 0x03C8(0x0050) UNKNOWN PROPERTY: MapProperty
		TMap<class UClass*, class UClass*>                         AmmoReplacements;                                        // 0x0418(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic
		unsigned char                                              Fallback1PMeshMaterialReplacements[0x50];                // 0x0468(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              Fallback3PMeshMaterialReplacements[0x50];                // 0x04B8(0x0050) UNKNOWN PROPERTY: MapProperty
		bool                                                       bCheckUpgradesForFallbackMaterialReplacements;           // 0x0508(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckAllUpgradesForFallbackSkins;                       // 0x0509(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QOCX[0x6];                                   // 0x050A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              UpgradesToCheckForFallbackSkins[0x10];                   // 0x0510(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              UnknownData_6YXO[0x8];                                   // 0x0520(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              WeaponSkinMaterials[0x50];                               // 0x0528(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_9BW3[0x18];                                  // 0x0578(0x0018) MISSED OFFSET (PADDING)

	public:
		void OnWeaponModelAttached(struct FWeaponAttachedModel* Model, class USkeletalMeshComponent* WeaponParentMesh);
		void OnUpgrade3PMeshLoaded(class UINSSkeletalMeshComponent* MeshComponent, class UWeaponVisualUpgradeComponent* Upgrade);
		void OnUpgrade1PMeshLoaded(class UINSSkeletalMeshComponent* MeshComponent, class UWeaponVisualUpgradeComponent* Upgrade);
		void OnOtherComponentChanged(class UWeaponUpgradeComponent* OtherUpgrade);
		void OnAttachMesh3PToPawn(class UINSSkeletalMeshComponent* MeshComponent);
		void OnAttachMesh1PToPawn(class UINSSkeletalMeshComponent* MeshComponent);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UWeaponStatics : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_TraceSuppression(class UObject* WorldContextObject, class AINSSoldier* Owner, const struct FVector& StartLocation, const struct FVector& EndLocation, float Radius, float Increment, ESuppressionContext Context);
		bool STATIC_TestMeleeSwingIgnoreActors(class UObject* WorldContextObject, class APawn* Instigator, const struct FVector& Origin, const struct FRotator& Rotation, const struct FMeleeConfig& MeleeConfig, struct FHitResult* OutHitResult, TArray<class UPrimitiveComponent*> InIgnoreComponents, TArray<class UPrimitiveComponent*>* InOutHitComponents, bool bApplyDamage, class AActor* DamageCauser);
		bool STATIC_TestMeleeSwing(class UObject* WorldContextObject, class APawn* Instigator, const struct FVector& Origin, const struct FRotator& Rotation, const struct FMeleeConfig& MeleeConfig, struct FHitResult* OutHitResult, bool bApplyDamage, class AActor* DamageCauser);
		void STATIC_SuppressPlayersInRadius(class UObject* WorldContextObject, const struct FVector& Epicenter, float HoldTime, ESuppressionContext Context, float InnerRadius, float OuterRadius, float InnerAmount, float OuterAmount, TArray<class AController*> IgnoredControllers);
		class AProjectileBase* STATIC_SpawnSingleProjectileAtTransform(class UObject* WorldContextObject, class UClass* ProjectileClass, class APawn* Instigator, const struct FTransform& SpawnTransform, class AItemWeapon* Weapon, bool bDeferSpawn);
		class AProjectileBase* STATIC_SpawnSingleProjectile(class UObject* WorldContextObject, class UClass* ProjectileClass, class APawn* Instigator, const struct FVector& SpawnLocation, const struct FVector& Direction, class AItemWeapon* Weapon, bool bDeferSpawn);
		void STATIC_SpawnProjectiles(class UObject* WorldContextObject, class UClass* ProjectileClass, class APawn* Instigator, const struct FVector& SpawnLocation, const struct FVector& Direction, TArray<class AProjectileBase*>* SpawnedProjectiles, float ProjectileSpread, int32_t Count, int32_t SpreadSeed, class AItemWeapon* Weapon);
		class AItemFirearm* STATIC_SpawnMountedWeapon(class UClass* Weapon, class AActor* OwnerActor, class USceneComponent* AttachComponent, const class FName& SocketName, class UVehicleSeatComponent* LinkedSeat);
		class AFireSupportBase* STATIC_SpawnFireSupport(class UObject* WorldContextObject, const struct FFireSupportSpawnParams& InParams);
		void STATIC_SetupMountedWeapon(class AItemFirearm* MountedWeapon, class AActor* OwnerActor, class USceneComponent* AttachComponent, const class FName& SocketName, class UVehicleSeatComponent* LinkedSeat);
		void STATIC_PlayShellShock(class UObject* WorldContextObject, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float InnerDuration, float OuterDuration, TArray<class AController*> IgnoredControllers, class AActor* DamageCauser);
		void STATIC_PlayExplosiveSurfaceReactionWithHit(class UObject* WorldContextObject, class AActor* Projectile, class USurfaceReaction* InSurfaceReaction, const struct FHitResult& HitResult, struct FSurfaceReactionOutput* OutOutput, const class FString& WeaponSwitch);
		void STATIC_PlayExplosiveSurfaceReaction(class UObject* WorldContextObject, class AActor* Projectile, class USurfaceReaction* InSurfaceReaction, const struct FVector& HitLocation, struct FSurfaceReactionOutput* OutOutput, const class FString& WeaponSwitch);
		bool STATIC_IsAReloadingState(EFirearmState TestState);
		TArray<class UFireSupportDefinition*> STATIC_GetValidFireSupportForTeam(class UObject* WorldContextObject, unsigned char TeamId, bool bRespectTeamRules);
		float STATIC_GetSwingYawMultiplierForDirection(EMeleeSwingDirection Direction);
		float STATIC_GetSwingPitchMultiplierForDirection(EMeleeSwingDirection Direction);
		struct FReloadGroup STATIC_GetReloadGroupFromMap(class UClass* Ammo, TMap<class UClass*, struct FReloadGroup>* Map, bool* bOutFound);
		float STATIC_GetExplosiveDamageModifier(class UPrimitiveComponent* VictimComp, const struct FExplosiveDamageParams& ExplosiveParameters, struct FHitResult* OutHitResult);
		class ABulletManager* STATIC_GetBulletManager(class UObject* WorldContextObject);
		struct FAnimSequenceRandom STATIC_GetAnimSequenceRandomFromMap(class UClass* Ammo, TMap<class UClass*, struct FAnimSequenceRandom>* Map, bool* bOutFound);
		class UAnimSequence* STATIC_GetAnimSequenceFromMap(class UClass* Ammo, TMap<class UClass*, class UAnimSequence*>* Map, bool* bOutFound);
		class UAnimMontage* STATIC_GetAnimMontageFromMap(class UClass* Ammo, TMap<class UClass*, class UAnimMontage*>* Map, bool* bOutFound);
		void STATIC_GetAllWeaponUpgradeClassesForWeapon(class UClass* Weapon, TArray<class UClass*>* OutUpgradeClasses, bool bSorted);
		void STATIC_GetAllWeaponUpgradeClasses(TArray<class UClass*>* OutUpgradeClasses, bool bSorted);
		void STATIC_GetAllWeaponClasses(TArray<class UClass*>* OutItemClasses, bool bSorted);
		void STATIC_GetAllEquipableClasses(TArray<class UClass*>* OutItemClasses, bool bSorted);
		void STATIC_FireBullets(class UObject* WorldContextObject, struct FSimulatedBullet* BulletInfo, float ProjectileSpread, int32_t Count, int32_t SpreadSeed);
		bool STATIC_DoMeleeSwingIgnoreActors(class UObject* WorldContextObject, class AINSSoldier* Instigator, const struct FMeleeConfig& MeleeConfig, float SwingPercent, struct FHitResult* OutHitResults, TArray<class UPrimitiveComponent*> InIgnoreComponents, TArray<class UPrimitiveComponent*>* InOutHitComponents, bool bApplyDamage, class AActor* DamagerCauser);
		bool STATIC_DoMeleeSwing(class UObject* WorldContextObject, class AINSSoldier* Instigator, const struct FMeleeConfig& MeleeConfig, float SwingPercent, struct FHitResult* OutHitResults, bool bApplyDamage, class AActor* DamagerCauser);
		bool STATIC_DoExplosiveDamage(const struct FExplosiveDamageParams& Parameters);
		void STATIC_DeafenPlayersInRadius(class UObject* WorldContextObject, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float InnerDuration, float OuterDuration, TArray<class AController*> IgnoredControllers);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WeaponTrainingComponent
	 * Size -> 0x0008 (FullSize[0x03F0] - InheritedSize[0x03E8])
	 */
	class UWeaponTrainingComponent : public UWeaponHandlingUpgradeComponent
	{
	public:
		unsigned char                                              UnknownData_PCQ5[0x8];                                   // 0x03E8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WebImageDecorator
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	class UWebImageDecorator : public URichTextBlockDecorator
	{
	public:
		class UClass*                                              WidgetClass;                                             // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WebImageWidget
	 * Size -> 0x0148 (FullSize[0x0378] - InheritedSize[0x0230])
	 */
	class UWebImageWidget : public UUserWidget
	{
	public:
		class UImage*                                              WebImage;                                                // 0x0230(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImageUrl;                                                // 0x0238(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSlateBrush                                         LoadingPlaceholder;                                      // 0x0248(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic
		struct FSlateBrush                                         FailurePlaceholder;                                      // 0x02D0(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic
		class UTexture2D*                                          StaticTexture;                                           // 0x0358(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2DDynamic*                                   ImageTexture;                                            // 0x0360(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WY9U[0x10];                                  // 0x0368(0x0010) MISSED OFFSET (PADDING)

	public:
		void SetLocalImage(const class FString& Path);
		void SetImageUrl(const class FString& NewUrl);
		void SetImageFromTexturePath();
		void SetImageFromTexture(class UTexture2D* Texture);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WelcomeMenuWidget
	 * Size -> 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
	 */
	class UWelcomeMenuWidget : public UUserWidget
	{
	public:
		bool                                                       bUserRequestingLogin;                                    // 0x0230(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLZK[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                LoginProgressText;                                       // 0x0238(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A5X4[0x18];                                  // 0x0250(0x0018) MISSED OFFSET (PADDING)

	public:
		void PerformLogin(int32_t UserIndex);
		bool CanFadeLegalText();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WheelParticleSystemComponent
	 * Size -> 0x0074 (FullSize[0x06E0] - InheritedSize[0x066C])
	 */
	class UWheelParticleSystemComponent : public UParticleSystemComponent
	{
	public:
		float                                                      UpdateRate;                                              // 0x066C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastUpdateTime;                                          // 0x0670(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseWheelSurface;                                        // 0x0674(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3SB0[0x3];                                   // 0x0675(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                WheelBoneName;                                           // 0x0678(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPhysicalSurface                                           CurrentSurface;                                          // 0x0680(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1CE1[0x7];                                   // 0x0681(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EPhysicalSurface, class UParticleSystem*>             SurfaceParticleMap;                                      // 0x0688(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZAQX[0x8];                                   // 0x06D8(0x0008) MISSED OFFSET (PADDING)

	public:
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WidgetGamemodeFilter
	 * Size -> 0x0068 (FullSize[0x0E68] - InheritedSize[0x0E00])
	 */
	class UWidgetGamemodeFilter : public UComboBoxText
	{
	public:
		class FText                                                AnyModeVariant;                                          // 0x0E00(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<class FString, struct FAllowedGameModes>              GameModesForFilter;                                      // 0x0E18(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic

	public:
		void InitKeyOptionInWidget(const class FString& Key);
		class FString GetFilterKeyAsCultureInvariant();
		class FString GetFilterKey();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.WidgetNavigationStatics
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	class UWidgetNavigationStatics : public UBlueprintFunctionLibrary
	{
	public:
		void STATIC_SetUniformGridPanelNavigation(class UUniformGridPanel* Grid);
		void STATIC_GetUniformGridWidgetMap(class UUniformGridPanel* Grid, TMap<struct FIntPoint, class UWidget*>* OutGridWidgetMap);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Widget_Scoreboard
	 * Size -> 0x0090 (FullSize[0x02C8] - InheritedSize[0x0238])
	 */
	class UWidget_Scoreboard : public UScoreboardBase
	{
	public:
		class AINSBasePlayerController*                            CurrentPlayerController;                                 // 0x0238(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UObjectiveBriefing*                                  ObjectiveBriefing;                                       // 0x0240(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidget_Scoreboard_Column*                           TeamLeft;                                                // 0x0248(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidget_Scoreboard_Column*                           TeamRight;                                               // 0x0250(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextMapName;                                             // 0x0258(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                            LeftTeamFooter;                                          // 0x0260(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                            RightTeamFooter;                                         // 0x0268(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          SpectatorList;                                           // 0x0270(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        SpectatorBox;                                            // 0x0278(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               TitleInvalidationBox;                                    // 0x0280(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              LocalTeamId;                                             // 0x0288(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RK54[0x3];                                   // 0x0289(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScoreboardTickInterval;                                  // 0x028C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2KWF[0x38];                                  // 0x0290(0x0038) MISSED OFFSET (PADDING)

	public:
		void PeriodicTick();
		void OnTeamChanged(unsigned char TeamId, class ATeamInfo* TeamInfo);
		void OnRefreshObjectives();
		void OnRefreshMutators();
		void OnRefreshFactions();
		void OnPlayerControllerEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason);
		class FText GetFormatText(bool bFirstElement);
		void DoUpdateGameState(class AINSGameState* GameState);
		void DoUpdateGameModeText();
		void DoBindTacticalMapPawnHowerStatusChanged();
		void AssignTeams();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Widget_Scoreboard_Column
	 * Size -> 0x0118 (FullSize[0x0368] - InheritedSize[0x0250])
	 */
	class UWidget_Scoreboard_Column : public UVoiceStatus
	{
	public:
		class AINSBasePlayerController*                            CurrentPlayerController;                                 // 0x0250(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UUserWidget*                                         ActiveMenuWidget;                                        // 0x0258(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidget_Scoreboard*                                  ParentScoreboard;                                        // 0x0260(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        PlayerList;                                              // 0x0268(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidget_Scoreboard_RowHeader*                        BP_Widget_Scoreboard_RowHeader;                          // 0x0270(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              FactionBanner;                                           // 0x0278(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TeamScore;                                               // 0x0280(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TeamWons;                                                // 0x0288(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TeamPoints;                                              // 0x0290(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              TopColor;                                                // 0x0298(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TeamNameText;                                            // 0x02A0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TeamRoleText;                                            // 0x02A8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        TeamWinsBox;                                             // 0x02B0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        TeamScoreBox;                                            // 0x02B8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UVerticalBox*                                        TeamPointsBox;                                           // 0x02C0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TextPointsLabel;                                         // 0x02C8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               ColumnInvalidationBox;                                   // 0x02D0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bLocalPlayerTeam;                                        // 0x02D8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowExtendedInfo;                                       // 0x02D9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bScoreboardVisible;                                      // 0x02DA(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ODX2[0x5];                                   // 0x02DB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATeamInfo*                                           Team;                                                    // 0x02E0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FLinearColor                                        FactionColor;                                            // 0x02E8(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UWidget_Scoreboard_PlayerRow*>                PlayerRowsArray;                                         // 0x02F8(0x0010) BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInstanceDynamic*                            FactionBannerDynamicMaterial;                            // 0x0308(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FText                                                TeamName;                                                // 0x0310(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		class FText                                                TeamRole;                                                // 0x0328(0x0018) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		bool                                                       bMuteAllActive;                                          // 0x0340(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ED8F[0x27];                                  // 0x0341(0x0027) MISSED OFFSET (PADDING)

	public:
		void UpdateTeam(class ATeamInfo* InTeamInfo);
		void UpdateSelectButtonOnConsole(bool bIsRowSelectable);
		void UpdateScoreboardConfig(const struct FScoreboardConfig& Config);
		void UpdatePlayerRows();
		void UpdateColumnValues();
		void ToggleMuteAll();
		void SetTeamRole(const class FText& InTeamRole);
		void SetTeamName(const class FText& InTeamName);
		void SetFactionColor(const struct FLinearColor& InFactionColor);
		void PeriodicTick();
		void OpenMenuForPlayer(class AINSPlayerState* InPlayerState);
		void OnScoreboardShown(bool bShown);
		void OnPlayerControllerEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason);
		void HideActiveMenu();
		int32_t GetPlayerCount();
		class UWidget* GetBottomPlayerWidget();
		void DoSetTacticalMapToPlayerWidget(class UWidget* InPlayerWidget);
		class UWidget* DoCreatePlayerRowWidget();
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Widget_Scoreboard_PlayerRow
	 * Size -> 0x0220 (FullSize[0x0450] - InheritedSize[0x0230])
	 */
	class UWidget_Scoreboard_PlayerRow : public UUserWidget
	{
	public:
		class UTextBlock*                                          ScoreText;                                               // 0x0230(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          TxtKDR;                                                  // 0x0238(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          ObjectiveText;                                           // 0x0240(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          PingText;                                                // 0x0248(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTextBlock*                                          PlayerName;                                              // 0x0250(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UScaleBox*                                           PlayerBadgeBox;                                          // 0x0258(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              PlayerBadgeImage;                                        // 0x0260(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UScaleBox*                                           ClassImageBox;                                           // 0x0268(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ClassImage;                                              // 0x0270(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              ScoreHiddenImage;                                        // 0x0278(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              KDRHiddenImage;                                          // 0x0280(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              MuteButtonImage;                                         // 0x0288(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              FactionStripe;                                           // 0x0290(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UImage*                                              BG;                                                      // 0x0298(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UButton*                                             MuteButton;                                              // 0x02A0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     KDR_WidgetSwitcher;                                      // 0x02A8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWidgetSwitcher*                                     Score_WidgetSwitcher;                                    // 0x02B0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               RowInvalidationBox;                                      // 0x02B8(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               BGInvalidationBox;                                       // 0x02C0(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bValidPlayerClass;                                       // 0x02C8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_X9DG[0x7];                                   // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          PlayerBadgeTexture;                                      // 0x02D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              CurrentPlayerClass[0x28];                                // 0x02D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class AINSBasePlayerController*                            CurrentPlayerController;                                 // 0x0300(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSlateColor                                         AliveColor;                                              // 0x0308(0x0028) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         DeadColor;                                               // 0x0330(0x0028) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		struct FSlateColor                                         CurrentNameColor;                                        // 0x0358(0x0028) BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
		float                                                      ClassIconAlpha;                                          // 0x0380(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_TMWN[0x4];                                   // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          IconVoiceOff;                                            // 0x0388(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          IconVoiceOn;                                             // 0x0390(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UTexture2D*                                          IconVoiceActive;                                         // 0x0398(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsLocalPlayer;                                          // 0x03A0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bIsHovered;                                              // 0x03A1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		bool                                                       bShowExtendedInfo;                                       // 0x03A2(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOtherTeam;                                            // 0x03A3(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AWI2[0x4];                                   // 0x03A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             OpenMenuForPlayer;                                       // 0x03A8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnUpdateSelectButtonVisibility;                          // 0x03B8(0x0010) ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PYGK[0x30];                                  // 0x03C8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PlayerStateSoftPtr[0x28];                                // 0x03F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_A4OE[0x30];                                  // 0x0420(0x0030) MISSED OFFSET (PADDING)

	public:
		void UpdateScoreboardBadge(int32_t NewScoreboardBadge);
		void UpdatePlayerState(class AINSPlayerState* NewPlayerState);
		void UpdatePlayerScore(const struct FPlayerStatGroupMinimal& UpdatedScore);
		void UpdatePlayerPing(int32_t NewPingMs);
		void UpdatePlayerName(const class FString& NewName, bool bForce);
		void UpdatePlayerExperience(class AINSPlayerState* InPlayerState, int32_t NewExperience);
		void UpdatePlayerClass(class UPlayerClass* InPlayerClass);
		void UpdatePlayerAliveState(class AINSPlayerState* InPlayerState, bool bForce);
		void UpdatePingAndKAD();
		void UpdateFromPlayerState(class AINSPlayerState* InPlayerState, bool bFromInit);
		void UpdateFactionStripeVisibility();
		void UpdateExtendedColumnVisiblity(bool bNewVisibility);
		void UpdateDeveloperStatus(class AINSPlayerState* InPlayerState, bool bDeveloperStatus);
		void UpdateBotName(const class FText& NewName, bool bForce);
		void UpdateBackgroundColor();
		void ToggleMute(bool bShouldMute);
		void SetPlayerState();
		void SetPlayerIsTalking(bool InPlayerIsTalking);
		void SetFactionColor(const struct FLinearColor& InNewFactionColor);
		void RefreshColumnVisibility();
		void OnSetPlayerName(const class FString& NewPlayerName);
		void OnPlayerUpdateScoreboardBadge(class AINSPlayerState* Player, int32_t NewScoreboardBadge);
		void OnPlayerStateEndPlay(class AActor* InActor, EEndPlayReason InEndPlayReason);
		void OnPlayerSpawned(class AINSSoldier* Player);
		void OnPlayerIsMutedChanged(bool bNewIsPlayingState);
		void OnPlayerDeath();
		void OnPlayerClassChanged(class AINSSoldier* Player);
		void OnIsPlayingStateChanged(bool bNewIsPlayingState);
		void InitFromPlayerState(class AINSPlayerState* InPlayerState);
		class AINSPlayerState* GetPlayerState();
		void DoSetDefaultsToPlayerBadge(class AINSPlayerState* InPlayerState);
		static UClass* StaticClass();
	};

	/**
	 * Class Insurgency.Widget_Scoreboard_RowHeader
	 * Size -> 0x0048 (FullSize[0x0278] - InheritedSize[0x0230])
	 */
	class UWidget_Scoreboard_RowHeader : public UUserWidget
	{
	public:
		bool                                                       bShowExtendedInfo;                                       // 0x0230(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KPQ3[0x7];                                   // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTextBlock*                                          PlayerCountText;                                         // 0x0238(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                            ObjSizeBox;                                              // 0x0240(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                            KADSizeBox;                                              // 0x0248(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USizeBox*                                            ScrSizeBox;                                              // 0x0250(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class USaberInvalidationBox*                               HeaderInvalidationBox;                                   // 0x0258(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class ATeamInfo*                                           Team;                                                    // 0x0260(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class AINSPlayerController*                                CurrentPlayerController;                                 // 0x0268(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3MEA[0x8];                                   // 0x0270(0x0008) MISSED OFFSET (PADDING)

	public:
		void UpdateScoreboardConfig(const struct FScoreboardConfig& Config);
		void UpdatePlayerCountLabel();
		void SetTeam(class ATeamInfo* NewTeam);
		void CheckPlayerCount();
		ESlateVisibility CheckObjectiveVisibility(bool bCanShowObjectives);
		static UClass* StaticClass();
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
