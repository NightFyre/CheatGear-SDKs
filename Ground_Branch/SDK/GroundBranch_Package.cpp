/**
 * Name: Ground_Branch
 * Version: 1032
 */

#include "../SDK.h"

namespace CG
{
	// --------------------------------------------------
	// # Structs Functions
	// --------------------------------------------------
	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIBarkManager.Bark
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBAIController*                             AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BarkType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BarkKey                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIBarkManager::Bark(class AGBAIController* AIController, const class FName& BarkType, const class FName& BarkKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIBarkManager.Bark");
		
		AGBAIBarkManager_Bark_Params params {};
		params.AIController = AIController;
		params.BarkType = BarkType;
		params.BarkKey = BarkKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBAIBarkManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBAIBarkManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAIBarkManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.UpdateEquippedType
	 * 		Flags  -> ()
	 */
	void AGBAIController::UpdateEquippedType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.UpdateEquippedType");
		
		AGBAIController_UpdateEquippedType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.UnFreeze
	 * 		Flags  -> ()
	 */
	void AGBAIController::UnFreeze()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.UnFreeze");
		
		AGBAIController_UnFreeze_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.StopFiring
	 * 		Flags  -> ()
	 */
	void AGBAIController::StopFiring()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.StopFiring");
		
		AGBAIController_StopFiring_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.StartFiring
	 * 		Flags  -> ()
	 */
	void AGBAIController::StartFiring()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.StartFiring");
		
		AGBAIController_StartFiring_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.ShowDebugInfoEvent
	 * 		Flags  -> ()
	 */
	void AGBAIController::ShowDebugInfoEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.ShowDebugInfoEvent");
		
		AGBAIController_ShowDebugInfoEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetViewRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRotator                                    NewRotation                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetViewRotation(const struct FRotator& NewRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetViewRotation");
		
		AGBAIController_SetViewRotation_Params params {};
		params.NewRotation = NewRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetSquad
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBAISquad*                                  NewSquad                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetSquad(class AGBAISquad* NewSquad)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetSquad");
		
		AGBAIController_SetSquad_Params params {};
		params.NewSquad = NewSquad;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetIdleSuspicionSightThreshold
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewIdleSuspicionSightThreshold                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetIdleSuspicionSightThreshold(float NewIdleSuspicionSightThreshold)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetIdleSuspicionSightThreshold");
		
		AGBAIController_SetIdleSuspicionSightThreshold_Params params {};
		params.NewIdleSuspicionSightThreshold = NewIdleSuspicionSightThreshold;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetIdleHearingThreshold
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewIdleHearingThreshold                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetIdleHearingThreshold(float NewIdleHearingThreshold)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetIdleHearingThreshold");
		
		AGBAIController_SetIdleHearingThreshold_Params params {};
		params.NewIdleHearingThreshold = NewIdleHearingThreshold;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetIdleAffiliationSightThreshold
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewIdleAffiliationSightThreshold                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetIdleAffiliationSightThreshold(float NewIdleAffiliationSightThreshold)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetIdleAffiliationSightThreshold");
		
		AGBAIController_SetIdleAffiliationSightThreshold_Params params {};
		params.NewIdleAffiliationSightThreshold = NewIdleAffiliationSightThreshold;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetEnemyPartSeen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewEnemyPartSeen                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetEnemyPartSeen(const class FName& NewEnemyPartSeen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetEnemyPartSeen");
		
		AGBAIController_SetEnemyPartSeen_Params params {};
		params.NewEnemyPartSeen = NewEnemyPartSeen;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetEnemyLOS
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetEnemyLOS(bool bNewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetEnemyLOS");
		
		AGBAIController_SetEnemyLOS_Params params {};
		params.bNewValue = bNewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetEnemyLastStimulusTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetEnemyLastStimulusTime(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetEnemyLastStimulusTime");
		
		AGBAIController_SetEnemyLastStimulusTime_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetEnemyLastKnownLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetEnemyLastKnownLocation(const struct FVector& NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetEnemyLastKnownLocation");
		
		AGBAIController_SetEnemyLastKnownLocation_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetEnemyLastKnownDirection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetEnemyLastKnownDirection(const struct FVector& NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetEnemyLastKnownDirection");
		
		AGBAIController_SetEnemyLastKnownDirection_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetEnemyDistance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetEnemyDistance(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetEnemyDistance");
		
		AGBAIController_SetEnemyDistance_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetEnemy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                NewEnemy                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetEnemy(class AGBCharacter* NewEnemy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetEnemy");
		
		AGBAIController_SetEnemy_Params params {};
		params.NewEnemy = NewEnemy;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetDesiredViewRotationOffset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRotator                                    NewRotation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetDesiredViewRotationOffset(const struct FRotator& NewRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetDesiredViewRotationOffset");
		
		AGBAIController_SetDesiredViewRotationOffset_Params params {};
		params.NewRotation = NewRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetDesiredAimRotationOverride
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRotator                                    NewRotation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              NewRate                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetDesiredAimRotationOverride(const struct FRotator& NewRotation, float NewRate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetDesiredAimRotationOverride");
		
		AGBAIController_SetDesiredAimRotationOverride_Params params {};
		params.NewRotation = NewRotation;
		params.NewRate = NewRate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetAlertSuspicionSightThreshold
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewAlertSuspicionSightThreshold                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetAlertSuspicionSightThreshold(float NewAlertSuspicionSightThreshold)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetAlertSuspicionSightThreshold");
		
		AGBAIController_SetAlertSuspicionSightThreshold_Params params {};
		params.NewAlertSuspicionSightThreshold = NewAlertSuspicionSightThreshold;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetAlertHearingThreshold
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewAlertHearingThreshold                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetAlertHearingThreshold(float NewAlertHearingThreshold)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetAlertHearingThreshold");
		
		AGBAIController_SetAlertHearingThreshold_Params params {};
		params.NewAlertHearingThreshold = NewAlertHearingThreshold;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetAlertAffiliationSightThreshold
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewAlertAffiliationSightThreshold                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetAlertAffiliationSightThreshold(float NewAlertAffiliationSightThreshold)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetAlertAffiliationSightThreshold");
		
		AGBAIController_SetAlertAffiliationSightThreshold_Params params {};
		params.NewAlertAffiliationSightThreshold = NewAlertAffiliationSightThreshold;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.SetAIState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGBAIState                                         NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::SetAIState(EGBAIState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.SetAIState");
		
		AGBAIController_SetAIState_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.Reload
	 * 		Flags  -> ()
	 */
	void AGBAIController::Reload()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.Reload");
		
		AGBAIController_Reload_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.OnTargetPerceptionUpdated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAIStimulus                                 Stimulus                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::OnTargetPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.OnTargetPerceptionUpdated");
		
		AGBAIController_OnTargetPerceptionUpdated_Params params {};
		params.Actor = Actor;
		params.Stimulus = Stimulus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.OnSensingNewEnemyEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bHasLineOfSight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::OnSensingNewEnemyEvent(bool bHasLineOfSight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.OnSensingNewEnemyEvent");
		
		AGBAIController_OnSensingNewEnemyEvent_Params params {};
		params.bHasLineOfSight = bHasLineOfSight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.OnSensingEnemyDeathEvent
	 * 		Flags  -> ()
	 */
	void AGBAIController::OnSensingEnemyDeathEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.OnSensingEnemyDeathEvent");
		
		AGBAIController_OnSensingEnemyDeathEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.OnNoLongerSensingEnemyEvent
	 * 		Flags  -> ()
	 */
	void AGBAIController::OnNoLongerSensingEnemyEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.OnNoLongerSensingEnemyEvent");
		
		AGBAIController_OnNoLongerSensingEnemyEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.OnLoadoutApplied
	 * 		Flags  -> ()
	 */
	void AGBAIController::OnLoadoutApplied()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.OnLoadoutApplied");
		
		AGBAIController_OnLoadoutApplied_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.NotifyWalkingOffLedge
	 * 		Flags  -> ()
	 */
	void AGBAIController::NotifyWalkingOffLedge()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.NotifyWalkingOffLedge");
		
		AGBAIController_NotifyWalkingOffLedge_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.NotifyTakeHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 InstigatedBy                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Momentum                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDamageEvent                                DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::NotifyTakeHit(class AController* InstigatedBy, int32_t Damage, const struct FVector& Momentum, const struct FDamageEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.NotifyTakeHit");
		
		AGBAIController_NotifyTakeHit_Params params {};
		params.InstigatedBy = InstigatedBy;
		params.Damage = Damage;
		params.Momentum = Momentum;
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.NotifyBump
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      SelfActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::NotifyBump(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.NotifyBump");
		
		AGBAIController_NotifyBump_Params params {};
		params.SelfActor = SelfActor;
		params.OtherActor = OtherActor;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.NeedsReload
	 * 		Flags  -> ()
	 */
	bool AGBAIController::NeedsReload()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.NeedsReload");
		
		AGBAIController_NeedsReload_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.IsFrozen
	 * 		Flags  -> ()
	 */
	bool AGBAIController::IsFrozen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.IsFrozen");
		
		AGBAIController_IsFrozen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.IsAlive
	 * 		Flags  -> ()
	 */
	bool AGBAIController::IsAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.IsAlive");
		
		AGBAIController_IsAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetViewRotationOffset
	 * 		Flags  -> ()
	 */
	struct FRotator AGBAIController::GetViewRotationOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetViewRotationOffset");
		
		AGBAIController_GetViewRotationOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetViewRotation
	 * 		Flags  -> ()
	 */
	struct FRotator AGBAIController::GetViewRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetViewRotation");
		
		AGBAIController_GetViewRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetSquad
	 * 		Flags  -> ()
	 */
	class AGBAISquad* AGBAIController::GetSquad()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetSquad");
		
		AGBAIController_GetSquad_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetReactionTimeRandom
	 * 		Flags  -> ()
	 */
	float AGBAIController::GetReactionTimeRandom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetReactionTimeRandom");
		
		AGBAIController_GetReactionTimeRandom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetReactionTimeBase
	 * 		Flags  -> ()
	 */
	float AGBAIController::GetReactionTimeBase()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetReactionTimeBase");
		
		AGBAIController_GetReactionTimeBase_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetPathCorridorPoints
	 * 		Flags  -> ()
	 */
	TArray<struct FVector> AGBAIController::GetPathCorridorPoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetPathCorridorPoints");
		
		AGBAIController_GetPathCorridorPoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetOnTarget
	 * 		Flags  -> ()
	 */
	bool AGBAIController::GetOnTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetOnTarget");
		
		AGBAIController_GetOnTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetNextPathLocation
	 * 		Flags  -> ()
	 */
	struct FVector AGBAIController::GetNextPathLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetNextPathLocation");
		
		AGBAIController_GetNextPathLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetNextPathCorridorPoint
	 * 		Flags  -> ()
	 */
	struct FVector AGBAIController::GetNextPathCorridorPoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetNextPathCorridorPoint");
		
		AGBAIController_GetNextPathCorridorPoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetNavLinkPoints
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            CorridorIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LinkStart                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LinkEnd                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBAIController::GetNavLinkPoints(int32_t CorridorIndex, struct FVector* LinkStart, struct FVector* LinkEnd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetNavLinkPoints");
		
		AGBAIController_GetNavLinkPoints_Params params {};
		params.CorridorIndex = CorridorIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (LinkStart != nullptr)
			*LinkStart = params.LinkStart;
		if (LinkEnd != nullptr)
			*LinkEnd = params.LinkEnd;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetMinFullAutoBurst
	 * 		Flags  -> ()
	 */
	int32_t AGBAIController::GetMinFullAutoBurst()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetMinFullAutoBurst");
		
		AGBAIController_GetMinFullAutoBurst_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetMinDelayBetweenBursts
	 * 		Flags  -> ()
	 */
	float AGBAIController::GetMinDelayBetweenBursts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetMinDelayBetweenBursts");
		
		AGBAIController_GetMinDelayBetweenBursts_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetMaxSemiAutoBurst
	 * 		Flags  -> ()
	 */
	int32_t AGBAIController::GetMaxSemiAutoBurst()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetMaxSemiAutoBurst");
		
		AGBAIController_GetMaxSemiAutoBurst_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetMaxFullAutoBurst
	 * 		Flags  -> ()
	 */
	int32_t AGBAIController::GetMaxFullAutoBurst()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetMaxFullAutoBurst");
		
		AGBAIController_GetMaxFullAutoBurst_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetMaxDelayBetweenBursts
	 * 		Flags  -> ()
	 */
	float AGBAIController::GetMaxDelayBetweenBursts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetMaxDelayBetweenBursts");
		
		AGBAIController_GetMaxDelayBetweenBursts_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetLastBark
	 * 		Flags  -> ()
	 */
	struct FAIBark AGBAIController::GetLastBark()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetLastBark");
		
		AGBAIController_GetLastBark_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetGBCharacter
	 * 		Flags  -> ()
	 */
	class AGBCharacter* AGBAIController::GetGBCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetGBCharacter");
		
		AGBAIController_GetGBCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetEnemyPartSeen
	 * 		Flags  -> ()
	 */
	class FName AGBAIController::GetEnemyPartSeen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetEnemyPartSeen");
		
		AGBAIController_GetEnemyPartSeen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetEnemyLOS
	 * 		Flags  -> ()
	 */
	bool AGBAIController::GetEnemyLOS()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetEnemyLOS");
		
		AGBAIController_GetEnemyLOS_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetEnemyLastStimulusTime
	 * 		Flags  -> ()
	 */
	float AGBAIController::GetEnemyLastStimulusTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetEnemyLastStimulusTime");
		
		AGBAIController_GetEnemyLastStimulusTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetEnemyLastKnownLocation
	 * 		Flags  -> ()
	 */
	struct FVector AGBAIController::GetEnemyLastKnownLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetEnemyLastKnownLocation");
		
		AGBAIController_GetEnemyLastKnownLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetEnemyLastKnownDirection
	 * 		Flags  -> ()
	 */
	struct FVector AGBAIController::GetEnemyLastKnownDirection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetEnemyLastKnownDirection");
		
		AGBAIController_GetEnemyLastKnownDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetEnemyDistance
	 * 		Flags  -> ()
	 */
	float AGBAIController::GetEnemyDistance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetEnemyDistance");
		
		AGBAIController_GetEnemyDistance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetEnemy
	 * 		Flags  -> ()
	 */
	class AGBCharacter* AGBAIController::GetEnemy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetEnemy");
		
		AGBAIController_GetEnemy_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetCurrentPathCorridorIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            CorridorIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBAIController::GetCurrentPathCorridorIndex(int32_t* CorridorIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetCurrentPathCorridorIndex");
		
		AGBAIController_GetCurrentPathCorridorIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (CorridorIndex != nullptr)
			*CorridorIndex = params.CorridorIndex;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetCanSuppressEnemy
	 * 		Flags  -> ()
	 */
	bool AGBAIController::GetCanSuppressEnemy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetCanSuppressEnemy");
		
		AGBAIController_GetCanSuppressEnemy_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetBehaviorComp
	 * 		Flags  -> ()
	 */
	class UBehaviorTreeComponent* AGBAIController::GetBehaviorComp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetBehaviorComp");
		
		AGBAIController_GetBehaviorComp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.GetAIState
	 * 		Flags  -> ()
	 */
	EGBAIState AGBAIController::GetAIState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.GetAIState");
		
		AGBAIController_GetAIState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.FrozenTimeLeft
	 * 		Flags  -> ()
	 */
	float AGBAIController::FrozenTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.FrozenTimeLeft");
		
		AGBAIController_FrozenTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.Freeze
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              FreezeTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::Freeze(float FreezeTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.Freeze");
		
		AGBAIController_Freeze_Params params {};
		params.FreezeTime = FreezeTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.DebugFreeze
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bShouldFreeze                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::DebugFreeze(bool bShouldFreeze)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.DebugFreeze");
		
		AGBAIController_DebugFreeze_Params params {};
		params.bShouldFreeze = bShouldFreeze;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.ClearDesiredViewRotationOffset
	 * 		Flags  -> ()
	 */
	void AGBAIController::ClearDesiredViewRotationOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.ClearDesiredViewRotationOffset");
		
		AGBAIController_ClearDesiredViewRotationOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.ClearDesiredAimRotationOverride
	 * 		Flags  -> ()
	 */
	void AGBAIController::ClearDesiredAimRotationOverride()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.ClearDesiredAimRotationOverride");
		
		AGBAIController_ClearDesiredAimRotationOverride_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.BulletWarn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Bullet                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSubSonic                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::BulletWarn(class AActor* Bullet, bool bSubSonic)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.BulletWarn");
		
		AGBAIController_BulletWarn_Params params {};
		params.Bullet = Bullet;
		params.bSubSonic = bSubSonic;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIController.Bark
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Key                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Priority                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Timeout                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAIController::Bark(const class FName& Key, int32_t Priority, float Timeout, bool bIsRadioMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIController.Bark");
		
		AGBAIController_Bark_Params params {};
		params.Key = Key;
		params.Priority = Priority;
		params.Timeout = Timeout;
		params.bIsRadioMessage = bIsRadioMessage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBAIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBAIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBAIDirector.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBAIDirector::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAIDirector");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIFunctionLibrary.GetBlackboardValueAsLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBTNode*                                     NodeOwner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlackboardKeySelector                      Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	struct FVector UGBAIFunctionLibrary::GetBlackboardValueAsLocation(class UBTNode* NodeOwner, const struct FBlackboardKeySelector& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIFunctionLibrary.GetBlackboardValueAsLocation");
		
		UGBAIFunctionLibrary_GetBlackboardValueAsLocation_Params params {};
		params.NodeOwner = NodeOwner;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIFunctionLibrary.GetBlackboardValueAsDirection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UBTNode*                                     NodeOwner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlackboardKeySelector                      Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bAs2d                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UGBAIFunctionLibrary::GetBlackboardValueAsDirection(class UBTNode* NodeOwner, const struct FBlackboardKeySelector& Key, bool bAs2d)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIFunctionLibrary.GetBlackboardValueAsDirection");
		
		UGBAIFunctionLibrary_GetBlackboardValueAsDirection_Params params {};
		params.NodeOwner = NodeOwner;
		params.Key = Key;
		params.bAs2d = bAs2d;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIFunctionLibrary.GetAIControllersOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      AIControllerClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AAIController*>                       OutAIControllers                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBAIFunctionLibrary::GetAIControllersOfClass(class UObject* WorldContextObject, class UClass* AIControllerClass, TArray<class AAIController*>* OutAIControllers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIFunctionLibrary.GetAIControllersOfClass");
		
		UGBAIFunctionLibrary_GetAIControllersOfClass_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.AIControllerClass = AIControllerClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutAIControllers != nullptr)
			*OutAIControllers = params.OutAIControllers;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIFunctionLibrary.ForgetAll
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAIPerceptionComponent*                      PerceptionComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAIFunctionLibrary::ForgetAll(class UAIPerceptionComponent* PerceptionComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIFunctionLibrary.ForgetAll");
		
		UGBAIFunctionLibrary_ForgetAll_Params params {};
		params.PerceptionComponent = PerceptionComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAIFunctionLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAIFunctionLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAIFunctionLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIGuardPoint.GetTurnRate
	 * 		Flags  -> ()
	 */
	float AGBAIGuardPoint::GetTurnRate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIGuardPoint.GetTurnRate");
		
		AGBAIGuardPoint_GetTurnRate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIGuardPoint.GetSweepAngle
	 * 		Flags  -> ()
	 */
	float AGBAIGuardPoint::GetSweepAngle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIGuardPoint.GetSweepAngle");
		
		AGBAIGuardPoint_GetSweepAngle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIGuardPoint.GetScanDuration
	 * 		Flags  -> ()
	 */
	float AGBAIGuardPoint::GetScanDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIGuardPoint.GetScanDuration");
		
		AGBAIGuardPoint_GetScanDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIGuardPoint.GetHoldTime
	 * 		Flags  -> ()
	 */
	float AGBAIGuardPoint::GetHoldTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIGuardPoint.GetHoldTime");
		
		AGBAIGuardPoint_GetHoldTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIGuardPoint.GetHoldDeviation
	 * 		Flags  -> ()
	 */
	float AGBAIGuardPoint::GetHoldDeviation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIGuardPoint.GetHoldDeviation");
		
		AGBAIGuardPoint_GetHoldDeviation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIGuardPoint.GetGroupName
	 * 		Flags  -> ()
	 */
	class FName AGBAIGuardPoint::GetGroupName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIGuardPoint.GetGroupName");
		
		AGBAIGuardPoint_GetGroupName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIGuardPoint.GetDeviation
	 * 		Flags  -> ()
	 */
	float AGBAIGuardPoint::GetDeviation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIGuardPoint.GetDeviation");
		
		AGBAIGuardPoint_GetDeviation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIGuardPoint.GetBaseViewRoation
	 * 		Flags  -> ()
	 */
	struct FRotator AGBAIGuardPoint::GetBaseViewRoation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIGuardPoint.GetBaseViewRoation");
		
		AGBAIGuardPoint_GetBaseViewRoation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBAIGuardPoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBAIGuardPoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAIGuardPoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIPatrolRoute.GetLinkedPatrolRoutes
	 * 		Flags  -> ()
	 */
	TArray<class AGBAIPatrolRoute*> AGBAIPatrolRoute::GetLinkedPatrolRoutes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIPatrolRoute.GetLinkedPatrolRoutes");
		
		AGBAIPatrolRoute_GetLinkedPatrolRoutes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAIPatrolRoute.GenerateLinkedPatrolRoutes
	 * 		Flags  -> ()
	 */
	void AGBAIPatrolRoute::GenerateLinkedPatrolRoutes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAIPatrolRoute.GenerateLinkedPatrolRoutes");
		
		AGBAIPatrolRoute_GenerateLinkedPatrolRoutes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBAIPatrolRoute.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBAIPatrolRoute::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAIPatrolRoute");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISense_Hearing.ReportNoiseEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NoiseLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Loudness                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Instigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAISense_Hearing::ReportNoiseEvent(class UObject* WorldContextObject, const struct FVector& NoiseLocation, float Loudness, class AActor* Instigator, const class FName& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISense_Hearing.ReportNoiseEvent");
		
		UGBAISense_Hearing_ReportNoiseEvent_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.NoiseLocation = NoiseLocation;
		params.Loudness = Loudness;
		params.Instigator = Instigator;
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAISense_Hearing.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAISense_Hearing::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISense_Hearing");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAISense_Sight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAISense_Sight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISense_Sight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAISenseConfig_Hearing.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAISenseConfig_Hearing::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISenseConfig_Hearing");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAISenseConfig_Sight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAISenseConfig_Sight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISenseConfig_Sight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAISenseEvent_Hearing.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAISenseEvent_Hearing::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISenseEvent_Hearing");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISettings.SetAISettingsForSkillLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            InSkillLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SettingName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InFloat                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      inString                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFlushAfterSaving                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAISettings::SetAISettingsForSkillLevel(int32_t InSkillLevel, const class FName& SettingName, float InFloat, const class FString& inString, bool bFlushAfterSaving)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISettings.SetAISettingsForSkillLevel");
		
		UGBAISettings_SetAISettingsForSkillLevel_Params params {};
		params.InSkillLevel = InSkillLevel;
		params.SettingName = SettingName;
		params.InFloat = InFloat;
		params.inString = inString;
		params.bFlushAfterSaving = bFlushAfterSaving;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISettings.GetAISettingsForSkillLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SkillLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FGBAISettingsInfo UGBAISettings::GetAISettingsForSkillLevel(int32_t SkillLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISettings.GetAISettingsForSkillLevel");
		
		UGBAISettings_GetAISettingsForSkillLevel_Params params {};
		params.SkillLevel = SkillLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISettings.FlushConfigAfterSavingAISettings
	 * 		Flags  -> ()
	 */
	void UGBAISettings::FlushConfigAfterSavingAISettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISettings.FlushConfigAfterSavingAISettings");
		
		UGBAISettings_FlushConfigAfterSavingAISettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAISettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAISettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAISightTargetInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAISightTargetInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISightTargetInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction GroundBranch.GBAISpawnManager.OnAIControllerChange__DelegateSignature
	 * 		Flags  -> ()
	 */
	void AGBAISpawnManager::OnAIControllerChange__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction GroundBranch.GBAISpawnManager.OnAIControllerChange__DelegateSignature");
		
		AGBAISpawnManager_OnAIControllerChange__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnManager.KillAI
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBAIController*                             AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISpawnManager::KillAI(class AGBAIController* AIController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnManager.KillAI");
		
		AGBAISpawnManager_KillAI_Params params {};
		params.AIController = AIController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnManager.GetAIControllers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ControllerClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      SquadId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AGBAIController*> AGBAISpawnManager::GetAIControllers(class UClass* ControllerClass, const class FName& Tag, unsigned char TeamId, unsigned char SquadId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnManager.GetAIControllers");
		
		AGBAISpawnManager_GetAIControllers_Params params {};
		params.ControllerClass = ControllerClass;
		params.Tag = Tag;
		params.TeamId = TeamId;
		params.SquadId = SquadId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnManager.CreateOverDurationTimer
	 * 		Flags  -> ()
	 */
	void AGBAISpawnManager::CreateOverDurationTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnManager.CreateOverDurationTimer");
		
		AGBAISpawnManager_CreateOverDurationTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnManager.CreateAIOverDuration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AGBAISpawnPoint*>                     OrderedSpawnPoints                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISpawnManager::CreateAIOverDuration(float Duration, int32_t Count, TArray<class AGBAISpawnPoint*> OrderedSpawnPoints, const class FName& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnManager.CreateAIOverDuration");
		
		AGBAISpawnManager_CreateAIOverDuration_Params params {};
		params.Duration = Duration;
		params.Count = Count;
		params.OrderedSpawnPoints = OrderedSpawnPoints;
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnManager.CleanUpAI
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        AIControllerTag                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISpawnManager::CleanUpAI(const class FName& AIControllerTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnManager.CleanUpAI");
		
		AGBAISpawnManager_CleanUpAI_Params params {};
		params.AIControllerTag = AIControllerTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBAISpawnManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBAISpawnManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISpawnManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnPoint.SetSquadOrders
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewSquadOrders                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISpawnPoint::SetSquadOrders(const class FName& NewSquadOrders)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnPoint.SetSquadOrders");
		
		AGBAISpawnPoint_SetSquadOrders_Params params {};
		params.NewSquadOrders = NewSquadOrders;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnPoint.SetSquadId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewSquadId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISpawnPoint::SetSquadId(int32_t NewSquadId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnPoint.SetSquadId");
		
		AGBAISpawnPoint_SetSquadId_Params params {};
		params.NewSquadId = NewSquadId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnPoint.SetLoadoutFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      NewLoadoutFileName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISpawnPoint::SetLoadoutFileName(const class FString& NewLoadoutFileName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnPoint.SetLoadoutFileName");
		
		AGBAISpawnPoint_SetLoadoutFileName_Params params {};
		params.NewLoadoutFileName = NewLoadoutFileName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnPoint.GetSquadOrders
	 * 		Flags  -> ()
	 */
	class FName AGBAISpawnPoint::GetSquadOrders()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnPoint.GetSquadOrders");
		
		AGBAISpawnPoint_GetSquadOrders_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnPoint.GetSquadId
	 * 		Flags  -> ()
	 */
	int32_t AGBAISpawnPoint::GetSquadId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnPoint.GetSquadId");
		
		AGBAISpawnPoint_GetSquadId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnPoint.GetLoadoutInfo
	 * 		Flags  -> ()
	 */
	class AGBKitInfo* AGBAISpawnPoint::GetLoadoutInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnPoint.GetLoadoutInfo");
		
		AGBAISpawnPoint_GetLoadoutInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnPoint.GetLoadoutFileName
	 * 		Flags  -> ()
	 */
	class FString AGBAISpawnPoint::GetLoadoutFileName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnPoint.GetLoadoutFileName");
		
		AGBAISpawnPoint_GetLoadoutFileName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnPoint.CreateCharacter
	 * 		Flags  -> ()
	 */
	class AGBCharacter* AGBAISpawnPoint::CreateCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnPoint.CreateCharacter");
		
		AGBAISpawnPoint_CreateCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISpawnPoint.CreateAI
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBAIController* AGBAISpawnPoint::CreateAI(const class FName& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISpawnPoint.CreateAI");
		
		AGBAISpawnPoint_CreateAI_Params params {};
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBAISpawnPoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBAISpawnPoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISpawnPoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.UpdateSquadObjective
	 * 		Flags  -> ()
	 */
	void AGBAISquad::UpdateSquadObjective()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.UpdateSquadObjective");
		
		AGBAISquad_UpdateSquadObjective_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.SetSquadOrdersTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      NewTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISquad::SetSquadOrdersTarget(class AActor* NewTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.SetSquadOrdersTarget");
		
		AGBAISquad_SetSquadOrdersTarget_Params params {};
		params.NewTarget = NewTarget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.SetSquadOrders
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewOrders                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISquad::SetSquadOrders(const class FName& NewOrders)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.SetSquadOrders");
		
		AGBAISquad_SetSquadOrders_Params params {};
		params.NewOrders = NewOrders;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.SetSquadLeader
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISquad::SetSquadLeader(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.SetSquadLeader");
		
		AGBAISquad_SetSquadLeader_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.SetSquadId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewSquadId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISquad::SetSquadId(unsigned char NewSquadId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.SetSquadId");
		
		AGBAISquad_SetSquadId_Params params {};
		params.NewSquadId = NewSquadId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.SetPatrolRoute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBAIPatrolRoute*                            NewPatrolRoute                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISquad::SetPatrolRoute(class AGBAIPatrolRoute* NewPatrolRoute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.SetPatrolRoute");
		
		AGBAISquad_SetPatrolRoute_Params params {};
		params.NewPatrolRoute = NewPatrolRoute;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.SetGuardPointVisitedBy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBAIGuardPoint*                             GuardPoint                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBAIController*                             AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISquad::SetGuardPointVisitedBy(class AGBAIGuardPoint* GuardPoint, class AGBAIController* AIController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.SetGuardPointVisitedBy");
		
		AGBAISquad_SetGuardPointVisitedBy_Params params {};
		params.GuardPoint = GuardPoint;
		params.AIController = AIController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.SetAIStateBySquadOrders
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBAIController*                             AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBAISquad::SetAIStateBySquadOrders(class AGBAIController* AIController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.SetAIStateBySquadOrders");
		
		AGBAISquad_SetAIStateBySquadOrders_Params params {};
		params.AIController = AIController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.RemoveSquadMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISquad::RemoveSquadMember(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.RemoveSquadMember");
		
		AGBAISquad_RemoveSquadMember_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.IsSquadMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBAISquad::IsSquadMember(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.IsSquadMember");
		
		AGBAISquad_IsSquadMember_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.InternalUpdateSquadSeparationWeights
	 * 		Flags  -> ()
	 */
	void AGBAISquad::InternalUpdateSquadSeparationWeights()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.InternalUpdateSquadSeparationWeights");
		
		AGBAISquad_InternalUpdateSquadSeparationWeights_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.GetSquadOrdersTarget
	 * 		Flags  -> ()
	 */
	class AActor* AGBAISquad::GetSquadOrdersTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.GetSquadOrdersTarget");
		
		AGBAISquad_GetSquadOrdersTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.GetSquadOrders
	 * 		Flags  -> ()
	 */
	class FName AGBAISquad::GetSquadOrders()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.GetSquadOrders");
		
		AGBAISquad_GetSquadOrders_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.GetSquadMembers
	 * 		Flags  -> ()
	 */
	TArray<class AController*> AGBAISquad::GetSquadMembers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.GetSquadMembers");
		
		AGBAISquad_GetSquadMembers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.GetSquadLeader
	 * 		Flags  -> ()
	 */
	class AController* AGBAISquad::GetSquadLeader()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.GetSquadLeader");
		
		AGBAISquad_GetSquadLeader_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.GetSquadId
	 * 		Flags  -> ()
	 */
	unsigned char AGBAISquad::GetSquadId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.GetSquadId");
		
		AGBAISquad_GetSquadId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.GetSearchedLocations
	 * 		Flags  -> ()
	 */
	TArray<struct FVector> AGBAISquad::GetSearchedLocations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.GetSearchedLocations");
		
		AGBAISquad_GetSearchedLocations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.GetPatrolRoute
	 * 		Flags  -> ()
	 */
	class AGBAIPatrolRoute* AGBAISquad::GetPatrolRoute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.GetPatrolRoute");
		
		AGBAISquad_GetPatrolRoute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.GetNextPatrolPosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector AGBAISquad::GetNextPatrolPosition(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.GetNextPatrolPosition");
		
		AGBAISquad_GetNextPatrolPosition_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.GetNextGuardPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBAIController*                             AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBAIGuardPoint* AGBAISquad::GetNextGuardPoint(class AGBAIController* AIController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.GetNextGuardPoint");
		
		AGBAISquad_GetNextGuardPoint_Params params {};
		params.AIController = AIController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.FindNearestPatrolRoute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBAIPatrolRoute* AGBAISquad::FindNearestPatrolRoute(const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.FindNearestPatrolRoute");
		
		AGBAISquad_FindNearestPatrolRoute_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.ClearSearchedLocations
	 * 		Flags  -> ()
	 */
	void AGBAISquad::ClearSearchedLocations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.ClearSearchedLocations");
		
		AGBAISquad_ClearSearchedLocations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.AddSquadMember
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISquad::AddSquadMember(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.AddSquadMember");
		
		AGBAISquad_AddSquadMember_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAISquad.AddSearchedLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     NewLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBAISquad::AddSearchedLocation(const struct FVector& NewLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAISquad.AddSearchedLocation");
		
		AGBAISquad_AddSearchedLocation_Params params {};
		params.NewLocation = NewLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBAISquad.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBAISquad::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAISquad");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ValidateDecodedItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      OutFailureReason                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBItem::ValidateDecodedItem(class FString* OutFailureReason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ValidateDecodedItem");
		
		AGBItem_ValidateDecodedItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutFailureReason != nullptr)
			*OutFailureReason = params.OutFailureReason;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.UseOffHandReleased
	 * 		Flags  -> ()
	 */
	void AGBItem::UseOffHandReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.UseOffHandReleased");
		
		AGBItem_UseOffHandReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.UseOffHandPressed
	 * 		Flags  -> ()
	 */
	void AGBItem::UseOffHandPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.UseOffHandPressed");
		
		AGBItem_UseOffHandPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.UseMainHandReleased
	 * 		Flags  -> ()
	 */
	void AGBItem::UseMainHandReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.UseMainHandReleased");
		
		AGBItem_UseMainHandReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.UseMainHandPressed
	 * 		Flags  -> ()
	 */
	void AGBItem::UseMainHandPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.UseMainHandPressed");
		
		AGBItem_UseMainHandPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.UseInputDisabled
	 * 		Flags  -> ()
	 */
	void AGBItem::UseInputDisabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.UseInputDisabled");
		
		AGBItem_UseInputDisabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.UpdateWetness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              InRadius                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     InLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::UpdateWetness(float InRadius, const struct FVector& InLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.UpdateWetness");
		
		AGBItem_UpdateWetness_Params params {};
		params.InRadius = InRadius;
		params.InLocation = InLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.UpdateSkin
	 * 		Flags  -> ()
	 */
	void AGBItem::UpdateSkin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.UpdateSkin");
		
		AGBItem_UpdateSkin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.UpdateCameraPOV
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerController*                         GBPlayerController                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     CameraLocation                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    CameraRotation                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              CameraFOV                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CameraStyle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutCameraLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    OutCameraRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              OutCameraFOV                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBItem::UpdateCameraPOV(class AGBPlayerController* GBPlayerController, const struct FVector& CameraLocation, const struct FRotator& CameraRotation, float CameraFOV, float DeltaTime, const class FName& CameraStyle, struct FVector* OutCameraLocation, struct FRotator* OutCameraRotation, float* OutCameraFOV)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.UpdateCameraPOV");
		
		AGBItem_UpdateCameraPOV_Params params {};
		params.GBPlayerController = GBPlayerController;
		params.CameraLocation = CameraLocation;
		params.CameraRotation = CameraRotation;
		params.CameraFOV = CameraFOV;
		params.DeltaTime = DeltaTime;
		params.CameraStyle = CameraStyle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCameraLocation != nullptr)
			*OutCameraLocation = params.OutCameraLocation;
		if (OutCameraRotation != nullptr)
			*OutCameraRotation = params.OutCameraRotation;
		if (OutCameraFOV != nullptr)
			*OutCameraFOV = params.OutCameraFOV;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.UnbindSyncCharAnim
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::UnbindSyncCharAnim(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.UnbindSyncCharAnim");
		
		AGBItem_UnbindSyncCharAnim_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.StopUsing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::StopUsing(unsigned char UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.StopUsing");
		
		AGBItem_StopUsing_Params params {};
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.StartUsing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::StartUsing(unsigned char UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.StartUsing");
		
		AGBItem_StartUsing_Params params {};
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.SpawnItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      NewItemClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      NewItemOwner                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBItem* AGBItem::SpawnItem(class UClass* NewItemClass, class AActor* NewItemOwner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.SpawnItem");
		
		AGBItem_SpawnItem_Params params {};
		params.NewItemClass = NewItemClass;
		params.NewItemOwner = NewItemOwner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ShouldInheritSkin
	 * 		Flags  -> ()
	 */
	bool AGBItem::ShouldInheritSkin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ShouldInheritSkin");
		
		AGBItem_ShouldInheritSkin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.SetupSightComponents
	 * 		Flags  -> ()
	 */
	void AGBItem::SetupSightComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.SetupSightComponents");
		
		AGBItem_SetupSightComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.SetSkinName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewSkinName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::SetSkinName(const class FName& NewSkinName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.SetSkinName");
		
		AGBItem_SetSkinName_Params params {};
		params.NewSkinName = NewSkinName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.SetItemMID
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMaterialInstanceDynamic*                    NewItemMID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::SetItemMID(class UMaterialInstanceDynamic* NewItemMID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.SetItemMID");
		
		AGBItem_SetItemMID_Params params {};
		params.NewItemMID = NewItemMID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.SetInventorySlotPosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewInventorySlotPosition                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::SetInventorySlotPosition(int32_t NewInventorySlotPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.SetInventorySlotPosition");
		
		AGBItem_SetInventorySlotPosition_Params params {};
		params.NewInventorySlotPosition = NewInventorySlotPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.SetInventorySlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewInventorySlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::SetInventorySlot(int32_t NewInventorySlot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.SetInventorySlot");
		
		AGBItem_SetInventorySlot_Params params {};
		params.NewInventorySlot = NewInventorySlot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.SetAllowKitEncoding
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewAlloKitEncoding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::SetAllowKitEncoding(bool bNewAlloKitEncoding)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.SetAllowKitEncoding");
		
		AGBItem_SetAllowKitEncoding_Params params {};
		params.bNewAlloKitEncoding = bNewAlloKitEncoding;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ServerStopUsing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::ServerStopUsing(unsigned char UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ServerStopUsing");
		
		AGBItem_ServerStopUsing_Params params {};
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ServerStartUsing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::ServerStartUsing(unsigned char UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ServerStartUsing");
		
		AGBItem_ServerStartUsing_Params params {};
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.RemoveFromInventory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::RemoveFromInventory(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.RemoveFromInventory");
		
		AGBItem_RemoveFromInventory_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.RemovedFromItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     OldParentItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USceneComponent*                             OldParentComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        OldParentSocket                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::RemovedFromItem(class AGBItem* OldParentItem, class USceneComponent* OldParentComp, const class FName& OldParentSocket)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.RemovedFromItem");
		
		AGBItem_RemovedFromItem_Params params {};
		params.OldParentItem = OldParentItem;
		params.OldParentComp = OldParentComp;
		params.OldParentSocket = OldParentSocket;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.RemovedFromCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                OldParentCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        OldSocketName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::RemovedFromCharacter(class AGBCharacter* OldParentCharacter, const class FName& OldSocketName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.RemovedFromCharacter");
		
		AGBItem_RemovedFromCharacter_Params params {};
		params.OldParentCharacter = OldParentCharacter;
		params.OldSocketName = OldSocketName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ReloadReleased
	 * 		Flags  -> ()
	 */
	void AGBItem::ReloadReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ReloadReleased");
		
		AGBItem_ReloadReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ReloadPressed
	 * 		Flags  -> ()
	 */
	void AGBItem::ReloadPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ReloadPressed");
		
		AGBItem_ReloadPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.Refill
	 * 		Flags  -> ()
	 */
	void AGBItem::Refill()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.Refill");
		
		AGBItem_Refill_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.PrevPosPressed
	 * 		Flags  -> ()
	 */
	void AGBItem::PrevPosPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.PrevPosPressed");
		
		AGBItem_PrevPosPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.PreEncodeCheck
	 * 		Flags  -> ()
	 */
	void AGBItem::PreEncodeCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.PreEncodeCheck");
		
		AGBItem_PreEncodeCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.PostDecode
	 * 		Flags  -> ()
	 */
	bool AGBItem::PostDecode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.PostDecode");
		
		AGBItem_PostDecode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.PositionAlphaMet
	 * 		Flags  -> ()
	 */
	void AGBItem::PositionAlphaMet()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.PositionAlphaMet");
		
		AGBItem_PositionAlphaMet_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.PlayLocalSound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USoundCue*                                   Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAudioComponent* AGBItem::PlayLocalSound(class USoundCue* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.PlayLocalSound");
		
		AGBItem_PlayLocalSound_Params params {};
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.PlaceAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     InLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    InRotation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class AGBDroppedItem* AGBItem::PlaceAt(const struct FVector& InLocation, const struct FRotator& InRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.PlaceAt");
		
		AGBItem_PlaceAt_Params params {};
		params.InLocation = InLocation;
		params.InRotation = InRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnSyncCharAnim
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SyncName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsStopped                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PlayRate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NextSectionID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::OnSyncCharAnim(const class FName& SyncName, bool bIsStopped, float PlayRate, float position, const class FName& NextSectionID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnSyncCharAnim");
		
		AGBItem_OnSyncCharAnim_Params params {};
		params.SyncName = SyncName;
		params.bIsStopped = bIsStopped;
		params.PlayRate = PlayRate;
		params.position = position;
		params.NextSectionID = NextSectionID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnStopUsing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::OnStopUsing(int32_t UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnStopUsing");
		
		AGBItem_OnStopUsing_Params params {};
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnStartUsing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::OnStartUsing(int32_t UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnStartUsing");
		
		AGBItem_OnStartUsing_Params params {};
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnRep_SkinName
	 * 		Flags  -> ()
	 */
	void AGBItem::OnRep_SkinName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnRep_SkinName");
		
		AGBItem_OnRep_SkinName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnRemovingChild
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     RemovedChild                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::OnRemovingChild(class AGBItem* RemovedChild)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnRemovingChild");
		
		AGBItem_OnRemovingChild_Params params {};
		params.RemovedChild = RemovedChild;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnRemovedFromItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     OldParentItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USceneComponent*                             OldParentComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        OldParentSocket                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::OnRemovedFromItem(class AGBItem* OldParentItem, class USceneComponent* OldParentComp, const class FName& OldParentSocket)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnRemovedFromItem");
		
		AGBItem_OnRemovedFromItem_Params params {};
		params.OldParentItem = OldParentItem;
		params.OldParentComp = OldParentComp;
		params.OldParentSocket = OldParentSocket;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnRemovedFromInventoryEvent
	 * 		Flags  -> ()
	 */
	void AGBItem::OnRemovedFromInventoryEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnRemovedFromInventoryEvent");
		
		AGBItem_OnRemovedFromInventoryEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnRemovedFromCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                OldParentCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        OldSocketName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::OnRemovedFromCharacter(class AGBCharacter* OldParentCharacter, const class FName& OldSocketName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnRemovedFromCharacter");
		
		AGBItem_OnRemovedFromCharacter_Params params {};
		params.OldParentCharacter = OldParentCharacter;
		params.OldSocketName = OldSocketName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnLoadAssetsComplete
	 * 		Flags  -> ()
	 */
	void AGBItem::OnLoadAssetsComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnLoadAssetsComplete");
		
		AGBItem_OnLoadAssetsComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnBeingUnequipped
	 * 		Flags  -> ()
	 */
	void AGBItem::OnBeingUnequipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnBeingUnequipped");
		
		AGBItem_OnBeingUnequipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnBeingEquipped
	 * 		Flags  -> ()
	 */
	void AGBItem::OnBeingEquipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnBeingEquipped");
		
		AGBItem_OnBeingEquipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnBeingDropped
	 * 		Flags  -> ()
	 */
	void AGBItem::OnBeingDropped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnBeingDropped");
		
		AGBItem_OnBeingDropped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnAddingChild
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     AddedChild                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::OnAddingChild(class AGBItem* AddedChild)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnAddingChild");
		
		AGBItem_OnAddingChild_Params params {};
		params.AddedChild = AddedChild;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnAddedToItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     NewParentItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::OnAddedToItem(class AGBItem* NewParentItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnAddedToItem");
		
		AGBItem_OnAddedToItem_Params params {};
		params.NewParentItem = NewParentItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnAddedToInventoryEvent
	 * 		Flags  -> ()
	 */
	void AGBItem::OnAddedToInventoryEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnAddedToInventoryEvent");
		
		AGBItem_OnAddedToInventoryEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.OnAddedToCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                NewParentCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::OnAddedToCharacter(class AGBCharacter* NewParentCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.OnAddedToCharacter");
		
		AGBItem_OnAddedToCharacter_Params params {};
		params.NewParentCharacter = NewParentCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.NextPosPressed
	 * 		Flags  -> ()
	 */
	void AGBItem::NextPosPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.NextPosPressed");
		
		AGBItem_NextPosPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.IsStackable
	 * 		Flags  -> ()
	 */
	bool AGBItem::IsStackable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.IsStackable");
		
		AGBItem_IsStackable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.IsEquipped
	 * 		Flags  -> ()
	 */
	bool AGBItem::IsEquipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.IsEquipped");
		
		AGBItem_IsEquipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.InventoryModifiersUpdated
	 * 		Flags  -> ()
	 */
	void AGBItem::InventoryModifiersUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.InventoryModifiersUpdated");
		
		AGBItem_InventoryModifiersUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.IncreaseSightMagnificationPressed
	 * 		Flags  -> ()
	 */
	void AGBItem::IncreaseSightMagnificationPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.IncreaseSightMagnificationPressed");
		
		AGBItem_IncreaseSightMagnificationPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.IncreaseReticleBrightnessLevel
	 * 		Flags  -> ()
	 */
	void AGBItem::IncreaseReticleBrightnessLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.IncreaseReticleBrightnessLevel");
		
		AGBItem_IncreaseReticleBrightnessLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetWeaponsPositionTransitionTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGBWeaponPosition                                  FromPosition                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EGBWeaponPosition                                  ToPosition                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AGBItem::GetWeaponsPositionTransitionTime(EGBWeaponPosition FromPosition, EGBWeaponPosition ToPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetWeaponsPositionTransitionTime");
		
		AGBItem_GetWeaponsPositionTransitionTime_Params params {};
		params.FromPosition = FromPosition;
		params.ToPosition = ToPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetUnequipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGBSwitchItemInfo                           OutUnequipInfo                                             (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool AGBItem::GetUnequipInfo(EHand TargetHand, struct FGBSwitchItemInfo* OutUnequipInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetUnequipInfo");
		
		AGBItem_GetUnequipInfo_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutUnequipInfo != nullptr)
			*OutUnequipInfo = params.OutUnequipInfo;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetStatKey
	 * 		Flags  -> ()
	 */
	class FString AGBItem::GetStatKey()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetStatKey");
		
		AGBItem_GetStatKey_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetStaminaMultipliers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              RecoveryMultipler                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ExhaustionMultipler                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::GetStaminaMultipliers(float* RecoveryMultipler, float* ExhaustionMultipler)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetStaminaMultipliers");
		
		AGBItem_GetStaminaMultipliers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (RecoveryMultipler != nullptr)
			*RecoveryMultipler = params.RecoveryMultipler;
		if (ExhaustionMultipler != nullptr)
			*ExhaustionMultipler = params.ExhaustionMultipler;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetSkinName
	 * 		Flags  -> ()
	 */
	class FName AGBItem::GetSkinName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetSkinName");
		
		AGBItem_GetSkinName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetSkinMaterialPrefix
	 * 		Flags  -> ()
	 */
	class FName AGBItem::GetSkinMaterialPrefix()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetSkinMaterialPrefix");
		
		AGBItem_GetSkinMaterialPrefix_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetPositionAlphaTargets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              TargetEngagedAlpha                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TargetOffTargetAlpha                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutTargetEngagedAlpha                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutTargetOffTargetAlpha                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutOffTargetInterpSpeed                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::GetPositionAlphaTargets(float TargetEngagedAlpha, float TargetOffTargetAlpha, float* OutTargetEngagedAlpha, float* OutTargetOffTargetAlpha, float* OutOffTargetInterpSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetPositionAlphaTargets");
		
		AGBItem_GetPositionAlphaTargets_Params params {};
		params.TargetEngagedAlpha = TargetEngagedAlpha;
		params.TargetOffTargetAlpha = TargetOffTargetAlpha;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTargetEngagedAlpha != nullptr)
			*OutTargetEngagedAlpha = params.OutTargetEngagedAlpha;
		if (OutTargetOffTargetAlpha != nullptr)
			*OutTargetOffTargetAlpha = params.OutTargetOffTargetAlpha;
		if (OutOffTargetInterpSpeed != nullptr)
			*OutOffTargetInterpSpeed = params.OutOffTargetInterpSpeed;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetParentItem
	 * 		Flags  -> ()
	 */
	class AGBItem* AGBItem::GetParentItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetParentItem");
		
		AGBItem_GetParentItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetItemWeight
	 * 		Flags  -> ()
	 */
	float AGBItem::GetItemWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetItemWeight");
		
		AGBItem_GetItemWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetItemMID
	 * 		Flags  -> ()
	 */
	class UMaterialInstanceDynamic* AGBItem::GetItemMID()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetItemMID");
		
		AGBItem_GetItemMID_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetItemAssetType
	 * 		Flags  -> ()
	 */
	struct FPrimaryAssetType AGBItem::GetItemAssetType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetItemAssetType");
		
		AGBItem_GetItemAssetType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetInventorySlotWidget
	 * 		Flags  -> ()
	 */
	class UClass* AGBItem::GetInventorySlotWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetInventorySlotWidget");
		
		AGBItem_GetInventorySlotWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetInventorySlotPosition
	 * 		Flags  -> ()
	 */
	int32_t AGBItem::GetInventorySlotPosition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetInventorySlotPosition");
		
		AGBItem_GetInventorySlotPosition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetInventorySlot
	 * 		Flags  -> ()
	 */
	int32_t AGBItem::GetInventorySlot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetInventorySlot");
		
		AGBItem_GetInventorySlot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetIcon
	 * 		Flags  -> ()
	 */
	void AGBItem::GetIcon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetIcon");
		
		AGBItem_GetIcon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetHiddenComponents
	 * 		Flags  -> ()
	 */
	TArray<class UPrimitiveComponent*> AGBItem::GetHiddenComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetHiddenComponents");
		
		AGBItem_GetHiddenComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetHandEnum
	 * 		Flags  -> ()
	 */
	EHand AGBItem::GetHandEnum()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetHandEnum");
		
		AGBItem_GetHandEnum_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetGBInstigator
	 * 		Flags  -> ()
	 */
	class AGBCharacter* AGBItem::GetGBInstigator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetGBInstigator");
		
		AGBItem_GetGBInstigator_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetEquipTags
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FGameplayTag> AGBItem::GetEquipTags(EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetEquipTags");
		
		AGBItem_GetEquipTags_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetEquippedTags
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FGameplayTag> AGBItem::GetEquippedTags(EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetEquippedTags");
		
		AGBItem_GetEquippedTags_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetEquipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGBSwitchItemInfo                           OutEquipInfo                                               (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool AGBItem::GetEquipInfo(EHand TargetHand, struct FGBSwitchItemInfo* OutEquipInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetEquipInfo");
		
		AGBItem_GetEquipInfo_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutEquipInfo != nullptr)
			*OutEquipInfo = params.OutEquipInfo;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetDragDropOperation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* AGBItem::GetDragDropOperation(const class FName& Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetDragDropOperation");
		
		AGBItem_GetDragDropOperation_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetDisplayName
	 * 		Flags  -> ()
	 */
	class FText AGBItem::GetDisplayName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetDisplayName");
		
		AGBItem_GetDisplayName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetDefaultPouchType
	 * 		Flags  -> ()
	 */
	class FName AGBItem::GetDefaultPouchType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetDefaultPouchType");
		
		AGBItem_GetDefaultPouchType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetCustomisationWidget
	 * 		Flags  -> ()
	 */
	class UClass* AGBItem::GetCustomisationWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetCustomisationWidget");
		
		AGBItem_GetCustomisationWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetCurrentSight
	 * 		Flags  -> ()
	 */
	class UGBSightComponent* AGBItem::GetCurrentSight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetCurrentSight");
		
		AGBItem_GetCurrentSight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetChildren
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AGBItem*> AGBItem::GetChildren(class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetChildren");
		
		AGBItem_GetChildren_Params params {};
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetChildItemAttachedTo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USceneComponent*                             Parent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBItem* AGBItem::GetChildItemAttachedTo(class USceneComponent* Parent, const class FName& SocketName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetChildItemAttachedTo");
		
		AGBItem_GetChildItemAttachedTo_Params params {};
		params.Parent = Parent;
		params.SocketName = SocketName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetCachedPrimaryAssetId
	 * 		Flags  -> ()
	 */
	struct FPrimaryAssetId AGBItem::GetCachedPrimaryAssetId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetCachedPrimaryAssetId");
		
		AGBItem_GetCachedPrimaryAssetId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetBaseItem
	 * 		Flags  -> ()
	 */
	class AGBItem* AGBItem::GetBaseItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetBaseItem");
		
		AGBItem_GetBaseItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GetAllChildren
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AGBItem*> AGBItem::GetAllChildren(class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GetAllChildren");
		
		AGBItem_GetAllChildren_Params params {};
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.GatherAssets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSoftObjectPath>                     OutAssets                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AGBItem::GatherAssets(TArray<struct FSoftObjectPath>* OutAssets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.GatherAssets");
		
		AGBItem_GatherAssets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutAssets != nullptr)
			*OutAssets = params.OutAssets;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ForceLODZero
	 * 		Flags  -> ()
	 */
	void AGBItem::ForceLODZero()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ForceLODZero");
		
		AGBItem_ForceLODZero_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.FindParentItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AGBItem*> AGBItem::FindParentItems(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.FindParentItems");
		
		AGBItem_FindParentItems_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.EncodeKit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UVaRestJsonObject*                           ItemAsJson                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::EncodeKit(class UVaRestJsonObject* ItemAsJson)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.EncodeKit");
		
		AGBItem_EncodeKit_Params params {};
		params.ItemAsJson = ItemAsJson;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.EditItemSetup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                UICharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::EditItemSetup(class AGBCharacter* UICharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.EditItemSetup");
		
		AGBItem_EditItemSetup_Params params {};
		params.UICharacter = UICharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.DoDropFrom
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     InLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    InRotation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     InVelocity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     InAngularVelocity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBDroppedItem* AGBItem::DoDropFrom(const struct FVector& InLocation, const struct FRotator& InRotation, const struct FVector& InVelocity, const struct FVector& InAngularVelocity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.DoDropFrom");
		
		AGBItem_DoDropFrom_Params params {};
		params.InLocation = InLocation;
		params.InRotation = InRotation;
		params.InVelocity = InVelocity;
		params.InAngularVelocity = InAngularVelocity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.DenyUnequip
	 * 		Flags  -> ()
	 */
	bool AGBItem::DenyUnequip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.DenyUnequip");
		
		AGBItem_DenyUnequip_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.DenyDrop
	 * 		Flags  -> ()
	 */
	bool AGBItem::DenyDrop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.DenyDrop");
		
		AGBItem_DenyDrop_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.DefaultSetup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      ActorOwner                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        KitProfileName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::DefaultSetup(class AActor* ActorOwner, const class FName& KitProfileName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.DefaultSetup");
		
		AGBItem_DefaultSetup_Params params {};
		params.ActorOwner = ActorOwner;
		params.KitProfileName = KitProfileName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.DecreaseSightMagnificationPressed
	 * 		Flags  -> ()
	 */
	void AGBItem::DecreaseSightMagnificationPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.DecreaseSightMagnificationPressed");
		
		AGBItem_DecreaseSightMagnificationPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.DecreaseReticleBrightnessLevel
	 * 		Flags  -> ()
	 */
	void AGBItem::DecreaseReticleBrightnessLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.DecreaseReticleBrightnessLevel");
		
		AGBItem_DecreaseReticleBrightnessLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.DecodeKit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UVaRestJsonObject*                           ItemAsJson                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      DecodedOwner                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     DecodedParentItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBItem::DecodeKit(class UVaRestJsonObject* ItemAsJson, class AActor* DecodedOwner, class AGBItem* DecodedParentItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.DecodeKit");
		
		AGBItem_DecodeKit_Params params {};
		params.ItemAsJson = ItemAsJson;
		params.DecodedOwner = DecodedOwner;
		params.DecodedParentItem = DecodedParentItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.CycleReticleColour
	 * 		Flags  -> ()
	 */
	void AGBItem::CycleReticleColour()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.CycleReticleColour");
		
		AGBItem_CycleReticleColour_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ClientRemoveFromInventory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::ClientRemoveFromInventory(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ClientRemoveFromInventory");
		
		AGBItem_ClientRemoveFromInventory_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ClientForceDestroy
	 * 		Flags  -> ()
	 */
	void AGBItem::ClientForceDestroy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ClientForceDestroy");
		
		AGBItem_ClientForceDestroy_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ClientAddToInventory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::ClientAddToInventory(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ClientAddToInventory");
		
		AGBItem_ClientAddToInventory_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.CharacterDestroyed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::CharacterDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.CharacterDestroyed");
		
		AGBItem_CharacterDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ChangeOwnerOnlyRelevancy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bOnlyOwner                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::ChangeOwnerOnlyRelevancy(bool bOnlyOwner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ChangeOwnerOnlyRelevancy");
		
		AGBItem_ChangeOwnerOnlyRelevancy_Params params {};
		params.bOnlyOwner = bOnlyOwner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ChangeFiringModeReleased
	 * 		Flags  -> ()
	 */
	void AGBItem::ChangeFiringModeReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ChangeFiringModeReleased");
		
		AGBItem_ChangeFiringModeReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.ChangeFiringModePressed
	 * 		Flags  -> ()
	 */
	void AGBItem::ChangeFiringModePressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.ChangeFiringModePressed");
		
		AGBItem_ChangeFiringModePressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.CanPassOnSkin
	 * 		Flags  -> ()
	 */
	bool AGBItem::CanPassOnSkin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.CanPassOnSkin");
		
		AGBItem_CanPassOnSkin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.CanBeAddedAsChild
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     PotentialParent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBItem::CanBeAddedAsChild(class AGBItem* PotentialParent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.CanBeAddedAsChild");
		
		AGBItem_CanBeAddedAsChild_Params params {};
		params.PotentialParent = PotentialParent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.CanAddToCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBItem::CanAddToCharacter(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.CanAddToCharacter");
		
		AGBItem_CanAddToCharacter_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.CanAddChild
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     PotentialChild                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBItem::CanAddChild(class AGBItem* PotentialChild)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.CanAddChild");
		
		AGBItem_CanAddChild_Params params {};
		params.PotentialChild = PotentialChild;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.BP_DetachItemFrom
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EDetachmentRule                                    LocationRule                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EDetachmentRule                                    RotationRule                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::BP_DetachItemFrom(EDetachmentRule LocationRule, EDetachmentRule RotationRule)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.BP_DetachItemFrom");
		
		AGBItem_BP_DetachItemFrom_Params params {};
		params.LocationRule = LocationRule;
		params.RotationRule = RotationRule;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.BP_AttachItemTo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USceneComponent*                             Parent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EAttachmentRule                                    LocationRule                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EAttachmentRule                                    RotationRule                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBItem::BP_AttachItemTo(class USceneComponent* Parent, const class FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.BP_AttachItemTo");
		
		AGBItem_BP_AttachItemTo_Params params {};
		params.Parent = Parent;
		params.SocketName = SocketName;
		params.LocationRule = LocationRule;
		params.RotationRule = RotationRule;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.BindSyncCharAnim
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::BindSyncCharAnim(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.BindSyncCharAnim");
		
		AGBItem_BindSyncCharAnim_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.AllowUsageWhileAttached
	 * 		Flags  -> ()
	 */
	bool AGBItem::AllowUsageWhileAttached()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.AllowUsageWhileAttached");
		
		AGBItem_AllowUsageWhileAttached_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.AddToInventory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::AddToInventory(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.AddToInventory");
		
		AGBItem_AddToInventory_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.AddedToItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     NewParentItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::AddedToItem(class AGBItem* NewParentItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.AddedToItem");
		
		AGBItem_AddedToItem_Params params {};
		params.NewParentItem = NewParentItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.AddedToCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                NewParentCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::AddedToCharacter(class AGBCharacter* NewParentCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.AddedToCharacter");
		
		AGBItem_AddedToCharacter_Params params {};
		params.NewParentCharacter = NewParentCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItem.AddAttachedUseMenuEntries
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserWidget*                                 UsageMenu                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItem::AddAttachedUseMenuEntries(class UUserWidget* UsageMenu)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItem.AddAttachedUseMenuEntries");
		
		AGBItem_AddAttachedUseMenuEntries_Params params {};
		params.UsageMenu = UsageMenu;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBAmmunition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBAmmunition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAmmunition");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAmmunitionFeedComponent.UseRound
	 * 		Flags  -> ()
	 */
	void UGBAmmunitionFeedComponent::UseRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAmmunitionFeedComponent.UseRound");
		
		UGBAmmunitionFeedComponent_UseRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAmmunitionFeedComponent.SetBulletItemClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      NewBulletItemClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAmmunitionFeedComponent::SetBulletItemClass(class UClass* NewBulletItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAmmunitionFeedComponent.SetBulletItemClass");
		
		UGBAmmunitionFeedComponent_SetBulletItemClass_Params params {};
		params.NewBulletItemClass = NewBulletItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAmmunitionFeedComponent.IsEmpty
	 * 		Flags  -> ()
	 */
	bool UGBAmmunitionFeedComponent::IsEmpty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAmmunitionFeedComponent.IsEmpty");
		
		UGBAmmunitionFeedComponent_IsEmpty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAmmunitionFeedComponent.GetTotalAvailableCount
	 * 		Flags  -> ()
	 */
	int32_t UGBAmmunitionFeedComponent::GetTotalAvailableCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAmmunitionFeedComponent.GetTotalAvailableCount");
		
		UGBAmmunitionFeedComponent_GetTotalAvailableCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAmmunitionFeedComponent.GetBulletProjectileClass
	 * 		Flags  -> ()
	 */
	class UClass* UGBAmmunitionFeedComponent::GetBulletProjectileClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAmmunitionFeedComponent.GetBulletProjectileClass");
		
		UGBAmmunitionFeedComponent_GetBulletProjectileClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAmmunitionFeedComponent.GetBaseBulletProjectileClasses
	 * 		Flags  -> ()
	 */
	TArray<class UClass*> UGBAmmunitionFeedComponent::GetBaseBulletProjectileClasses()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAmmunitionFeedComponent.GetBaseBulletProjectileClasses");
		
		UGBAmmunitionFeedComponent_GetBaseBulletProjectileClasses_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAmmunitionFeedComponent.GetBaseBulletItemClass
	 * 		Flags  -> ()
	 */
	class UClass* UGBAmmunitionFeedComponent::GetBaseBulletItemClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAmmunitionFeedComponent.GetBaseBulletItemClass");
		
		UGBAmmunitionFeedComponent_GetBaseBulletItemClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAmmunitionFeedComponent.Fill
	 * 		Flags  -> ()
	 */
	void UGBAmmunitionFeedComponent::Fill()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAmmunitionFeedComponent.Fill");
		
		UGBAmmunitionFeedComponent_Fill_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAmmunitionFeedComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAmmunitionFeedComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAmmunitionFeedComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimFunctionLibrary.TransformToBoneSpace
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimInstance*                               Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutPosition                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    OutRotation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UGBAnimFunctionLibrary::TransformToBoneSpace(class UAnimInstance* Target, const class FName& BoneName, const struct FVector& position, const struct FRotator& Rotation, struct FVector* OutPosition, struct FRotator* OutRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimFunctionLibrary.TransformToBoneSpace");
		
		UGBAnimFunctionLibrary_TransformToBoneSpace_Params params {};
		params.Target = Target;
		params.BoneName = BoneName;
		params.position = position;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPosition != nullptr)
			*OutPosition = params.OutPosition;
		if (OutRotation != nullptr)
			*OutRotation = params.OutRotation;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimFunctionLibrary.TransformFromBoneSpace
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimInstance*                               Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutPosition                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    OutRotation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UGBAnimFunctionLibrary::TransformFromBoneSpace(class UAnimInstance* Target, const class FName& BoneName, const struct FVector& position, const struct FRotator& Rotation, struct FVector* OutPosition, struct FRotator* OutRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimFunctionLibrary.TransformFromBoneSpace");
		
		UGBAnimFunctionLibrary_TransformFromBoneSpace_Params params {};
		params.Target = Target;
		params.BoneName = BoneName;
		params.position = position;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPosition != nullptr)
			*OutPosition = params.OutPosition;
		if (OutRotation != nullptr)
			*OutRotation = params.OutRotation;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimFunctionLibrary.GetSequenceLength
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimSequenceBase*                           TargetSeq                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBAnimFunctionLibrary::GetSequenceLength(class UAnimSequenceBase* TargetSeq)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimFunctionLibrary.GetSequenceLength");
		
		UGBAnimFunctionLibrary_GetSequenceLength_Params params {};
		params.TargetSeq = TargetSeq;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimFunctionLibrary.GetRateForPlayTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimSequenceBase*                           TargetSeq                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PlayTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBAnimFunctionLibrary::GetRateForPlayTime(class UAnimSequenceBase* TargetSeq, float PlayTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimFunctionLibrary.GetRateForPlayTime");
		
		UGBAnimFunctionLibrary_GetRateForPlayTime_Params params {};
		params.TargetSeq = TargetSeq;
		params.PlayTime = PlayTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimFunctionLibrary.GetBoneTransformAtTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimSequence*                               AnimSequence                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              AnimTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseRawDataOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FTransform UGBAnimFunctionLibrary::GetBoneTransformAtTime(class UAnimSequence* AnimSequence, float AnimTime, const class FName& BoneName, bool bUseRawDataOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimFunctionLibrary.GetBoneTransformAtTime");
		
		UGBAnimFunctionLibrary_GetBoneTransformAtTime_Params params {};
		params.AnimSequence = AnimSequence;
		params.AnimTime = AnimTime;
		params.BoneName = BoneName;
		params.bUseRawDataOnly = bUseRawDataOnly;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimFunctionLibrary.FindPositionFromDistanceCurve
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Distance                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAnimSequenceBase*                           InAnimSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBAnimFunctionLibrary::FindPositionFromDistanceCurve(float Distance, class UAnimSequenceBase* InAnimSequence)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimFunctionLibrary.FindPositionFromDistanceCurve");
		
		UGBAnimFunctionLibrary_FindPositionFromDistanceCurve_Params params {};
		params.Distance = Distance;
		params.InAnimSequence = InAnimSequence;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAnimFunctionLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAnimFunctionLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAnimFunctionLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAnimNotify_PlayCameraAnim.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAnimNotify_PlayCameraAnim::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAnimNotify_PlayCameraAnim");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAnimNotify_TriggerRagdoll.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAnimNotify_TriggerRagdoll::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAnimNotify_TriggerRagdoll");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimNotifyInterface.NotifyStateTickName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              FrameDeltaTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAnimNotifyInterface::NotifyStateTickName(const class FName& InName, float FrameDeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimNotifyInterface.NotifyStateTickName");
		
		UGBAnimNotifyInterface_NotifyStateTickName_Params params {};
		params.InName = InName;
		params.FrameDeltaTime = FrameDeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimNotifyInterface.NotifyStateTickEnum
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      InEnumAsByte                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              FrameDeltaTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAnimNotifyInterface::NotifyStateTickEnum(unsigned char InEnumAsByte, float FrameDeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimNotifyInterface.NotifyStateTickEnum");
		
		UGBAnimNotifyInterface_NotifyStateTickEnum_Params params {};
		params.InEnumAsByte = InEnumAsByte;
		params.FrameDeltaTime = FrameDeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimNotifyInterface.NotifyStateEndName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAnimNotifyInterface::NotifyStateEndName(const class FName& InName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimNotifyInterface.NotifyStateEndName");
		
		UGBAnimNotifyInterface_NotifyStateEndName_Params params {};
		params.InName = InName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimNotifyInterface.NotifyStateEndEnum
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      InEnumAsByte                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAnimNotifyInterface::NotifyStateEndEnum(unsigned char InEnumAsByte)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimNotifyInterface.NotifyStateEndEnum");
		
		UGBAnimNotifyInterface_NotifyStateEndEnum_Params params {};
		params.InEnumAsByte = InEnumAsByte;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimNotifyInterface.NotifyStateBeginName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAnimNotifyInterface::NotifyStateBeginName(const class FName& InName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimNotifyInterface.NotifyStateBeginName");
		
		UGBAnimNotifyInterface_NotifyStateBeginName_Params params {};
		params.InName = InName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimNotifyInterface.NotifyStateBeginEnum
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      InEnumAsByte                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAnimNotifyInterface::NotifyStateBeginEnum(unsigned char InEnumAsByte)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimNotifyInterface.NotifyStateBeginEnum");
		
		UGBAnimNotifyInterface_NotifyStateBeginEnum_Params params {};
		params.InEnumAsByte = InEnumAsByte;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimNotifyInterface.NotifyName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAnimNotifyInterface::NotifyName(const class FName& InName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimNotifyInterface.NotifyName");
		
		UGBAnimNotifyInterface_NotifyName_Params params {};
		params.InName = InName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAnimNotifyInterface.NotifyEnum
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      InEnumAsByte                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBAnimNotifyInterface::NotifyEnum(unsigned char InEnumAsByte)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAnimNotifyInterface.NotifyEnum");
		
		UGBAnimNotifyInterface_NotifyEnum_Params params {};
		params.InEnumAsByte = InEnumAsByte;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAnimNotifyInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAnimNotifyInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAnimNotifyInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAnimNotifyState_BlendRagdoll.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAnimNotifyState_BlendRagdoll::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAnimNotifyState_BlendRagdoll");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManager.BlueprintAsyncLoadAssets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              OnAsyncLoadAssetsComplete                                  (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UGBAssetManager::BlueprintAsyncLoadAssets(const class FScriptDelegate& OnAsyncLoadAssetsComplete)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManager.BlueprintAsyncLoadAssets");
		
		UGBAssetManager_BlueprintAsyncLoadAssets_Params params {};
		params.OnAsyncLoadAssetsComplete = OnAsyncLoadAssetsComplete;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManager.BlueprintAsyncLoadAssetPaths
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSoftObjectPath>                     SoftObjectPaths                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              OnAsyncLoadAssetsComplete                                  (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UGBAssetManager::BlueprintAsyncLoadAssetPaths(TArray<struct FSoftObjectPath> SoftObjectPaths, const class FScriptDelegate& OnAsyncLoadAssetsComplete)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManager.BlueprintAsyncLoadAssetPaths");
		
		UGBAssetManager_BlueprintAsyncLoadAssetPaths_Params params {};
		params.SoftObjectPaths = SoftObjectPaths;
		params.OnAsyncLoadAssetsComplete = OnAsyncLoadAssetsComplete;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManager.BlueprintAsyncLoadAssetPath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSoftObjectPath                             SoftObjectPath                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              OnAsyncLoadAssetComplete                                   (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UGBAssetManager::BlueprintAsyncLoadAssetPath(const struct FSoftObjectPath& SoftObjectPath, const class FScriptDelegate& OnAsyncLoadAssetComplete)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManager.BlueprintAsyncLoadAssetPath");
		
		UGBAssetManager_BlueprintAsyncLoadAssetPath_Params params {};
		params.SoftObjectPath = SoftObjectPath;
		params.OnAsyncLoadAssetComplete = OnAsyncLoadAssetComplete;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManager.BlueprintAsyncLoadAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              OnAsyncLoadAssetComplete                                   (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UGBAssetManager::BlueprintAsyncLoadAsset(const class FScriptDelegate& OnAsyncLoadAssetComplete)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManager.BlueprintAsyncLoadAsset");
		
		UGBAssetManager_BlueprintAsyncLoadAsset_Params params {};
		params.OnAsyncLoadAssetComplete = OnAsyncLoadAssetComplete;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAssetManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAssetManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAssetManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.SortPrimaryAssetIdList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FPrimaryAssetId>                     InPrimaryAssetIdList                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FName                                        SortTag                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPrimaryAssetId>                     OutPrimaryAssetIdList                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBAssetManagerFunctionLibrary::SortPrimaryAssetIdList(TArray<struct FPrimaryAssetId> InPrimaryAssetIdList, const class FName& SortTag, TArray<struct FPrimaryAssetId>* OutPrimaryAssetIdList)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.SortPrimaryAssetIdList");
		
		UGBAssetManagerFunctionLibrary_SortPrimaryAssetIdList_Params params {};
		params.InPrimaryAssetIdList = InPrimaryAssetIdList;
		params.SortTag = SortTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPrimaryAssetIdList != nullptr)
			*OutPrimaryAssetIdList = params.OutPrimaryAssetIdList;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.RestrictedPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::RestrictedPrimaryAsset(const class FName& ProfileName, const struct FPrimaryAssetId& PrimaryAssetId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.RestrictedPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_RestrictedPrimaryAsset_Params params {};
		params.ProfileName = ProfileName;
		params.PrimaryAssetId = PrimaryAssetId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.RestrictedAssetPtr
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AssetTypeName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::RestrictedAssetPtr(const class FName& ProfileName, const class FName& AssetTypeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.RestrictedAssetPtr");
		
		UGBAssetManagerFunctionLibrary_RestrictedAssetPtr_Params params {};
		params.ProfileName = ProfileName;
		params.AssetTypeName = AssetTypeName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.RestrictedAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AssetTypeName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSoftObjectPath                             ObjectPath                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::RestrictedAsset(const class FName& ProfileName, const class FName& AssetTypeName, const struct FSoftObjectPath& ObjectPath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.RestrictedAsset");
		
		UGBAssetManagerFunctionLibrary_RestrictedAsset_Params params {};
		params.ProfileName = ProfileName;
		params.AssetTypeName = AssetTypeName;
		params.ObjectPath = ObjectPath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.HasRestrictedAssets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AssetTypeName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::HasRestrictedAssets(const class FName& ProfileName, const class FName& AssetTypeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.HasRestrictedAssets");
		
		UGBAssetManagerFunctionLibrary_HasRestrictedAssets_Params params {};
		params.ProfileName = ProfileName;
		params.AssetTypeName = AssetTypeName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetValidSkinNames
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AssetTypeName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SkinMaterialPrefix                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class FName> UGBAssetManagerFunctionLibrary::GetValidSkinNames(const class FName& ProfileName, const class FName& AssetTypeName, const class FName& SkinMaterialPrefix)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetValidSkinNames");
		
		UGBAssetManagerFunctionLibrary_GetValidSkinNames_Params params {};
		params.ProfileName = ProfileName;
		params.AssetTypeName = AssetTypeName;
		params.SkinMaterialPrefix = SkinMaterialPrefix;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetValidSkinDataAssets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AssetTypeName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SkinMaterialPrefix                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FPrimaryAssetId> UGBAssetManagerFunctionLibrary::GetValidSkinDataAssets(const class FName& ProfileName, const class FName& AssetTypeName, const class FName& SkinMaterialPrefix)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetValidSkinDataAssets");
		
		UGBAssetManagerFunctionLibrary_GetValidSkinDataAssets_Params params {};
		params.ProfileName = ProfileName;
		params.AssetTypeName = AssetTypeName;
		params.SkinMaterialPrefix = SkinMaterialPrefix;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetSortedPrimaryAssetIdList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetType                           PrimaryAssetType                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SortTag                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPrimaryAssetId>                     OutPrimaryAssetIdList                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBAssetManagerFunctionLibrary::GetSortedPrimaryAssetIdList(const struct FPrimaryAssetType& PrimaryAssetType, const class FName& SortTag, TArray<struct FPrimaryAssetId>* OutPrimaryAssetIdList)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetSortedPrimaryAssetIdList");
		
		UGBAssetManagerFunctionLibrary_GetSortedPrimaryAssetIdList_Params params {};
		params.PrimaryAssetType = PrimaryAssetType;
		params.SortTag = SortTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPrimaryAssetIdList != nullptr)
			*OutPrimaryAssetIdList = params.OutPrimaryAssetIdList;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetSkinNames
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SkinMaterialPrefix                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class FName> UGBAssetManagerFunctionLibrary::GetSkinNames(const class FName& SkinMaterialPrefix)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetSkinNames");
		
		UGBAssetManagerFunctionLibrary_GetSkinNames_Params params {};
		params.SkinMaterialPrefix = SkinMaterialPrefix;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetSkinMaterial
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SkinMaterialPrefix                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SkinName                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSoftObjectPath UGBAssetManagerFunctionLibrary::GetSkinMaterial(const class FName& SkinMaterialPrefix, const class FName& SkinName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetSkinMaterial");
		
		UGBAssetManagerFunctionLibrary_GetSkinMaterial_Params params {};
		params.SkinMaterialPrefix = SkinMaterialPrefix;
		params.SkinName = SkinName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetSimilarSkinNames
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SkinName                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class FName> UGBAssetManagerFunctionLibrary::GetSimilarSkinNames(const class FName& SkinName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetSimilarSkinNames");
		
		UGBAssetManagerFunctionLibrary_GetSimilarSkinNames_Params params {};
		params.SkinName = SkinName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdsForPaths
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSoftObjectPath>                     ObjectPaths                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	TArray<struct FPrimaryAssetId> UGBAssetManagerFunctionLibrary::GetPrimaryAssetIdsForPaths(TArray<struct FSoftObjectPath> ObjectPaths)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdsForPaths");
		
		UGBAssetManagerFunctionLibrary_GetPrimaryAssetIdsForPaths_Params params {};
		params.ObjectPaths = ObjectPaths;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdFromString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PrimaryAssetIdString                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FPrimaryAssetId UGBAssetManagerFunctionLibrary::GetPrimaryAssetIdFromString(const class FString& PrimaryAssetIdString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdFromString");
		
		UGBAssetManagerFunctionLibrary_GetPrimaryAssetIdFromString_Params params {};
		params.PrimaryAssetIdString = PrimaryAssetIdString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdFromNames
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InPrimaryAssetType                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InPrimarAssetName                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FPrimaryAssetId UGBAssetManagerFunctionLibrary::GetPrimaryAssetIdFromNames(const class FName& InPrimaryAssetType, const class FName& InPrimarAssetName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdFromNames");
		
		UGBAssetManagerFunctionLibrary_GetPrimaryAssetIdFromNames_Params params {};
		params.InPrimaryAssetType = InPrimaryAssetType;
		params.InPrimarAssetName = InPrimarAssetName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdFromName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InName                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FPrimaryAssetId UGBAssetManagerFunctionLibrary::GetPrimaryAssetIdFromName(const class FName& InName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdFromName");
		
		UGBAssetManagerFunctionLibrary_GetPrimaryAssetIdFromName_Params params {};
		params.InName = InName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdForPath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSoftObjectPath                             ObjectPath                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FPrimaryAssetId UGBAssetManagerFunctionLibrary::GetPrimaryAssetIdForPath(const struct FSoftObjectPath& ObjectPath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetPrimaryAssetIdForPath");
		
		UGBAssetManagerFunctionLibrary_GetPrimaryAssetIdForPath_Params params {};
		params.ObjectPath = ObjectPath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSTextFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        OutText                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::GetARSTextFromPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId, const class FName& TagKey, class FText* OutText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSTextFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_GetARSTextFromPrimaryAsset_Params params {};
		params.PrimaryAssetId = PrimaryAssetId;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutText != nullptr)
			*OutText = params.OutText;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSStructFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGBDummyStruct                              Value                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::GetARSStructFromPrimaryAsset(const struct FGBDummyStruct& Value, const struct FPrimaryAssetId& PrimaryAssetId, const class FName& TagKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSStructFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_GetARSStructFromPrimaryAsset_Params params {};
		params.Value = Value;
		params.PrimaryAssetId = PrimaryAssetId;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSStringFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutString                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::GetARSStringFromPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId, const class FName& TagKey, class FString* OutString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSStringFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_GetARSStringFromPrimaryAsset_Params params {};
		params.PrimaryAssetId = PrimaryAssetId;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutString != nullptr)
			*OutString = params.OutString;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSSoftObjectPtrFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::GetARSSoftObjectPtrFromPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId, const class FName& TagKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSSoftObjectPtrFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_GetARSSoftObjectPtrFromPrimaryAsset_Params params {};
		params.PrimaryAssetId = PrimaryAssetId;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSNameFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        OutName                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::GetARSNameFromPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId, const class FName& TagKey, class FName* OutName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSNameFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_GetARSNameFromPrimaryAsset_Params params {};
		params.PrimaryAssetId = PrimaryAssetId;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutName != nullptr)
			*OutName = params.OutName;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSIntFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutInt                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::GetARSIntFromPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId, const class FName& TagKey, int32_t* OutInt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSIntFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_GetARSIntFromPrimaryAsset_Params params {};
		params.PrimaryAssetId = PrimaryAssetId;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutInt != nullptr)
			*OutInt = params.OutInt;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSFloatFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutFloat                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::GetARSFloatFromPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId, const class FName& TagKey, float* OutFloat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSFloatFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_GetARSFloatFromPrimaryAsset_Params params {};
		params.PrimaryAssetId = PrimaryAssetId;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutFloat != nullptr)
			*OutFloat = params.OutFloat;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSEnumAsByteFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      EnumName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      OutByte                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::GetARSEnumAsByteFromPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId, const class FString& EnumName, const class FName& TagKey, unsigned char* OutByte)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSEnumAsByteFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_GetARSEnumAsByteFromPrimaryAsset_Params params {};
		params.PrimaryAssetId = PrimaryAssetId;
		params.EnumName = EnumName;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutByte != nullptr)
			*OutByte = params.OutByte;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSBoolFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOutBool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::GetARSBoolFromPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId, const class FName& TagKey, bool* bOutBool)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.GetARSBoolFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_GetARSBoolFromPrimaryAsset_Params params {};
		params.PrimaryAssetId = PrimaryAssetId;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bOutBool != nullptr)
			*bOutBool = params.bOutBool;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBAssetManagerFunctionLibrary.Array_GetARSFromPrimaryAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<int32_t>                                    TargetArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FPrimaryAssetId                             PrimaryAssetId                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TagKey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBAssetManagerFunctionLibrary::Array_GetARSFromPrimaryAsset(TArray<int32_t> TargetArray, const struct FPrimaryAssetId& PrimaryAssetId, const class FName& TagKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBAssetManagerFunctionLibrary.Array_GetARSFromPrimaryAsset");
		
		UGBAssetManagerFunctionLibrary_Array_GetARSFromPrimaryAsset_Params params {};
		params.TargetArray = TargetArray;
		params.PrimaryAssetId = PrimaryAssetId;
		params.TagKey = TagKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBAssetManagerFunctionLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBAssetManagerFunctionLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBAssetManagerFunctionLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBarrelComponent.SpawnBulletProjectile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      BulletProjectileClass                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBBulletProjectile* UGBBarrelComponent::SpawnBulletProjectile(class UClass* BulletProjectileClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBarrelComponent.SpawnBulletProjectile");
		
		UGBBarrelComponent_SpawnBulletProjectile_Params params {};
		params.BulletProjectileClass = BulletProjectileClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBarrelComponent.SetMuzzleDevice
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBMuzzleDevice*                             NewMuzzleDevice                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBBarrelComponent::SetMuzzleDevice(class AGBMuzzleDevice* NewMuzzleDevice)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBarrelComponent.SetMuzzleDevice");
		
		UGBBarrelComponent_SetMuzzleDevice_Params params {};
		params.NewMuzzleDevice = NewMuzzleDevice;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBarrelComponent.GetVelocityModifier
	 * 		Flags  -> ()
	 */
	float UGBBarrelComponent::GetVelocityModifier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBarrelComponent.GetVelocityModifier");
		
		UGBBarrelComponent_GetVelocityModifier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBarrelComponent.GetMuzzleDeviceThread
	 * 		Flags  -> ()
	 */
	class FName UGBBarrelComponent::GetMuzzleDeviceThread()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBarrelComponent.GetMuzzleDeviceThread");
		
		UGBBarrelComponent_GetMuzzleDeviceThread_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBarrelComponent.GetMuzzleDevice
	 * 		Flags  -> ()
	 */
	class AGBMuzzleDevice* UGBBarrelComponent::GetMuzzleDevice()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBarrelComponent.GetMuzzleDevice");
		
		UGBBarrelComponent_GetMuzzleDevice_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBarrelComponent.DeActivateFlash
	 * 		Flags  -> ()
	 */
	void UGBBarrelComponent::DeActivateFlash()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBarrelComponent.DeActivateFlash");
		
		UGBBarrelComponent_DeActivateFlash_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBarrelComponent.ActivateFlash
	 * 		Flags  -> ()
	 */
	void UGBBarrelComponent::ActivateFlash()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBarrelComponent.ActivateFlash");
		
		UGBBarrelComponent_ActivateFlash_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBBarrelComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBBarrelComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBBarrelComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBBTTask_MoveToCover.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBBTTask_MoveToCover::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBBTTask_MoveToCover");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBBTTask_WaitBlackboardTime.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBBTTask_WaitBlackboardTime::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBBTTask_WaitBlackboardTime");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletItem.GetRoundType
	 * 		Flags  -> ()
	 */
	class FName AGBBulletItem::GetRoundType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletItem.GetRoundType");
		
		AGBBulletItem_GetRoundType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletItem.GetBulletProjectileClass
	 * 		Flags  -> ()
	 */
	class UClass* AGBBulletItem::GetBulletProjectileClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletItem.GetBulletProjectileClass");
		
		AGBBulletItem_GetBulletProjectileClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBBulletItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBBulletItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBBulletItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBBulletMovementComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBBulletMovementComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBBulletMovementComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.SpawnBullet
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      BulletOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      BulletClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     SpawnLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ShotDirection                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              VelocityModifier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSimulated                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBBulletProjectile* AGBBulletProjectile::SpawnBullet(class AActor* BulletOwner, class UClass* BulletClass, const struct FVector& SpawnLocation, const struct FVector& ShotDirection, float VelocityModifier, bool bSimulated)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.SpawnBullet");
		
		AGBBulletProjectile_SpawnBullet_Params params {};
		params.BulletOwner = BulletOwner;
		params.BulletClass = BulletClass;
		params.SpawnLocation = SpawnLocation;
		params.ShotDirection = ShotDirection;
		params.VelocityModifier = VelocityModifier;
		params.bSimulated = bSimulated;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.SimulateTrajectory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTransform                                  SimTM                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              SimTime                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              SimTimeStep                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxDistance                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FVector>                             OutTrajectoryPoints                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bOutSimulatedImpact                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::SimulateTrajectory(const struct FTransform& SimTM, float SimTime, float SimTimeStep, float MaxDistance, TArray<struct FVector>* OutTrajectoryPoints, bool* bOutSimulatedImpact)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.SimulateTrajectory");
		
		AGBBulletProjectile_SimulateTrajectory_Params params {};
		params.SimTM = SimTM;
		params.SimTime = SimTime;
		params.SimTimeStep = SimTimeStep;
		params.MaxDistance = MaxDistance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTrajectoryPoints != nullptr)
			*OutTrajectoryPoints = params.OutTrajectoryPoints;
		if (bOutSimulatedImpact != nullptr)
			*bOutSimulatedImpact = params.bOutSimulatedImpact;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.SetStatKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      NewStatKey                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::SetStatKey(const class FString& NewStatKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.SetStatKey");
		
		AGBBulletProjectile_SetStatKey_Params params {};
		params.NewStatKey = NewStatKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.SetParentBullet
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBBulletProjectile*                         NewParentBullet                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::SetParentBullet(class AGBBulletProjectile* NewParentBullet)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.SetParentBullet");
		
		AGBBulletProjectile_SetParentBullet_Params params {};
		params.NewParentBullet = NewParentBullet;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.SetBulletIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewBulletIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::SetBulletIndex(unsigned char NewBulletIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.SetBulletIndex");
		
		AGBBulletProjectile_SetBulletIndex_Params params {};
		params.NewBulletIndex = NewBulletIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.OnStopEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::OnStopEvent(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.OnStopEvent");
		
		AGBBulletProjectile_OnStopEvent_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.OnStop
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::OnStop(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.OnStop");
		
		AGBBulletProjectile_OnStop_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.OnRep_BulletReplicatedMovement
	 * 		Flags  -> ()
	 */
	void AGBBulletProjectile::OnRep_BulletReplicatedMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.OnRep_BulletReplicatedMovement");
		
		AGBBulletProjectile_OnRep_BulletReplicatedMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.OnImpact
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::OnImpact(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.OnImpact");
		
		AGBBulletProjectile_OnImpact_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.OnExitEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::OnExitEvent(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.OnExitEvent");
		
		AGBBulletProjectile_OnExitEvent_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.OnExit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::OnExit(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.OnExit");
		
		AGBBulletProjectile_OnExit_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.OnBulletWarnSphereEndOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::OnBulletWarnSphereEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.OnBulletWarnSphereEndOverlap");
		
		AGBBulletProjectile_OnBulletWarnSphereEndOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.IsSimulatedOnly
	 * 		Flags  -> ()
	 */
	bool AGBBulletProjectile::IsSimulatedOnly()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.IsSimulatedOnly");
		
		AGBBulletProjectile_IsSimulatedOnly_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.IsDebuggingBullets
	 * 		Flags  -> ()
	 */
	bool AGBBulletProjectile::IsDebuggingBullets()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.IsDebuggingBullets");
		
		AGBBulletProjectile_IsDebuggingBullets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.InitForSimulatedTrajectory
	 * 		Flags  -> ()
	 */
	void AGBBulletProjectile::InitForSimulatedTrajectory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.InitForSimulatedTrajectory");
		
		AGBBulletProjectile_InitForSimulatedTrajectory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.ImpactEffect
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		bool                                               bExiting                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::ImpactEffect(const struct FHitResult& HitResult, bool bExiting)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.ImpactEffect");
		
		AGBBulletProjectile_ImpactEffect_Params params {};
		params.HitResult = HitResult;
		params.bExiting = bExiting;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.ImpactDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::ImpactDamage(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.ImpactDamage");
		
		AGBBulletProjectile_ImpactDamage_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.GetStatKey
	 * 		Flags  -> ()
	 */
	class FString AGBBulletProjectile::GetStatKey()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.GetStatKey");
		
		AGBBulletProjectile_GetStatKey_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.GetMinDamageDistance
	 * 		Flags  -> ()
	 */
	float AGBBulletProjectile::GetMinDamageDistance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.GetMinDamageDistance");
		
		AGBBulletProjectile_GetMinDamageDistance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.GetMaxDamageDistance
	 * 		Flags  -> ()
	 */
	float AGBBulletProjectile::GetMaxDamageDistance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.GetMaxDamageDistance");
		
		AGBBulletProjectile_GetMaxDamageDistance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.GetImpactComp
	 * 		Flags  -> ()
	 */
	class UAkComponent* AGBBulletProjectile::GetImpactComp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.GetImpactComp");
		
		AGBBulletProjectile_GetImpactComp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.GetBulletMovementComp
	 * 		Flags  -> ()
	 */
	class UGBBulletMovementComponent* AGBBulletProjectile::GetBulletMovementComp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.GetBulletMovementComp");
		
		AGBBulletProjectile_GetBulletMovementComp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.GetBulletIndex
	 * 		Flags  -> ()
	 */
	unsigned char AGBBulletProjectile::GetBulletIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.GetBulletIndex");
		
		AGBBulletProjectile_GetBulletIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBBulletProjectile.CharacterImpact
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBBulletProjectile::CharacterImpact(class AGBCharacter* Character, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBBulletProjectile.CharacterImpact");
		
		AGBBulletProjectile_CharacterImpact_Params params {};
		params.Character = Character;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBBulletProjectile.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBBulletProjectile::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBBulletProjectile");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.WantsToSprint
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::WantsToSprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.WantsToSprint");
		
		AGBCharacter_WantsToSprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.WantsToRun
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::WantsToRun()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.WantsToRun");
		
		AGBCharacter_WantsToRun_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.WantsToLeanRight
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::WantsToLeanRight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.WantsToLeanRight");
		
		AGBCharacter_WantsToLeanRight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.WantsToLeanLeft
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::WantsToLeanLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.WantsToLeanLeft");
		
		AGBCharacter_WantsToLeanLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.WantsToLean
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::WantsToLean()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.WantsToLean");
		
		AGBCharacter_WantsToLean_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.UpdateWetness
	 * 		Flags  -> ()
	 */
	void AGBCharacter::UpdateWetness()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.UpdateWetness");
		
		AGBCharacter_UpdateWetness_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.UpdateWaterLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::UpdateWaterLevel(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.UpdateWaterLevel");
		
		AGBCharacter_UpdateWaterLevel_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.UpdateSway
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::UpdateSway(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.UpdateSway");
		
		AGBCharacter_UpdateSway_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.UpdateStamina
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::UpdateStamina(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.UpdateStamina");
		
		AGBCharacter_UpdateStamina_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.UpdateLean
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::UpdateLean(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.UpdateLean");
		
		AGBCharacter_UpdateLean_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.UpdateBleeding
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::UpdateBleeding(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.UpdateBleeding");
		
		AGBCharacter_UpdateBleeding_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.UnProne
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bClientSimulation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::UnProne(bool bClientSimulation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.UnProne");
		
		AGBCharacter_UnProne_Params params {};
		params.bClientSimulation = bClientSimulation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.TriggerRagdoll
	 * 		Flags  -> ()
	 */
	void AGBCharacter::TriggerRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.TriggerRagdoll");
		
		AGBCharacter_TriggerRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.TakeFallingDamage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              FallingSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::TakeFallingDamage(const struct FHitResult& Hit, float FallingSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.TakeFallingDamage");
		
		AGBCharacter_TakeFallingDamage_Params params {};
		params.Hit = Hit;
		params.FallingSpeed = FallingSpeed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SwitchToPrevItems
	 * 		Flags  -> ()
	 */
	void AGBCharacter::SwitchToPrevItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SwitchToPrevItems");
		
		AGBCharacter_SwitchToPrevItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SwitchItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     TargetEquippedLeft                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     TargetEquippedRight                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SwitchItems(class AGBItem* TargetEquippedLeft, class AGBItem* TargetEquippedRight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SwitchItems");
		
		AGBCharacter_SwitchItems_Params params {};
		params.TargetEquippedLeft = TargetEquippedLeft;
		params.TargetEquippedRight = TargetEquippedRight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.StopVoice
	 * 		Flags  -> ()
	 */
	void AGBCharacter::StopVoice()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.StopVoice");
		
		AGBCharacter_StopVoice_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.StopNetworkedMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                AnimMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::StopNetworkedMontage(class UAnimMontage* AnimMontage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.StopNetworkedMontage");
		
		AGBCharacter_StopNetworkedMontage_Params params {};
		params.AnimMontage = AnimMontage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetWantsToSprint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewWantsToSprint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetWantsToSprint(bool bNewWantsToSprint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetWantsToSprint");
		
		AGBCharacter_SetWantsToSprint_Params params {};
		params.bNewWantsToSprint = bNewWantsToSprint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetWantsToRun
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewWantsToRun                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetWantsToRun(bool bNewWantsToRun)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetWantsToRun");
		
		AGBCharacter_SetWantsToRun_Params params {};
		params.bNewWantsToRun = bNewWantsToRun;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetUnequipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGBSwitchItemInfo                           NewInfo                                                    (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetUnequipInfo(EHand TargetHand, struct FGBSwitchItemInfo* NewInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetUnequipInfo");
		
		AGBCharacter_SetUnequipInfo_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (NewInfo != nullptr)
			*NewInfo = params.NewInfo;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetSpawnProtectionTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetSpawnProtectionTime(float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetSpawnProtectionTime");
		
		AGBCharacter_SetSpawnProtectionTime_Params params {};
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetRemoteHeadOffset
	 * 		Flags  -> ()
	 */
	void AGBCharacter::SetRemoteHeadOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetRemoteHeadOffset");
		
		AGBCharacter_SetRemoteHeadOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetRecoilCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewRecoilCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetRecoilCount(unsigned char NewRecoilCount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetRecoilCount");
		
		AGBCharacter_SetRecoilCount_Params params {};
		params.NewRecoilCount = NewRecoilCount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetRagdollPhysics
	 * 		Flags  -> ()
	 */
	void AGBCharacter::SetRagdollPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetRagdollPhysics");
		
		AGBCharacter_SetRagdollPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetOffHandIKTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      TargetActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TargetSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     TargetOffset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetOffHandIKTarget(class AActor* TargetActor, const class FName& TargetSocketName, const struct FVector& TargetOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetOffHandIKTarget");
		
		AGBCharacter_SetOffHandIKTarget_Params params {};
		params.TargetActor = TargetActor;
		params.TargetSocketName = TargetSocketName;
		params.TargetOffset = TargetOffset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetNoTargetMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetNoTargetMode(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetNoTargetMode");
		
		AGBCharacter_SetNoTargetMode_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetNoSway
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetNoSway(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetNoSway");
		
		AGBCharacter_SetNoSway_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetNoRecoil
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetNoRecoil(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetNoRecoil");
		
		AGBCharacter_SetNoRecoil_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetNightVisionEquipmentOverride
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewNightVisionEquipmentOverride                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetNightVisionEquipmentOverride(bool bNewNightVisionEquipmentOverride)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetNightVisionEquipmentOverride");
		
		AGBCharacter_SetNightVisionEquipmentOverride_Params params {};
		params.bNewNightVisionEquipmentOverride = bNewNightVisionEquipmentOverride;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetNightVisionEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewNightVisionEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetNightVisionEnabled(bool bNewNightVisionEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetNightVisionEnabled");
		
		AGBCharacter_SetNightVisionEnabled_Params params {};
		params.bNewNightVisionEnabled = bNewNightVisionEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetNetworkedMontageNextSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                AnimMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SectionNameToChange                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetNetworkedMontageNextSection(class UAnimMontage* AnimMontage, const class FName& SectionNameToChange, const class FName& NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetNetworkedMontageNextSection");
		
		AGBCharacter_SetNetworkedMontageNextSection_Params params {};
		params.AnimMontage = AnimMontage;
		params.SectionNameToChange = SectionNameToChange;
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetMainHandIKTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      TargetActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TargetSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     TargetOffset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetMainHandIKTarget(class AActor* TargetActor, const class FName& TargetSocketName, const struct FVector& TargetOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetMainHandIKTarget");
		
		AGBCharacter_SetMainHandIKTarget_Params params {};
		params.TargetActor = TargetActor;
		params.TargetSocketName = TargetSocketName;
		params.TargetOffset = TargetOffset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetLoadoutInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBKitInfo*                                  NewLoadoutInfo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetLoadoutInfo(class AGBKitInfo* NewLoadoutInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetLoadoutInfo");
		
		AGBCharacter_SetLoadoutInfo_Params params {};
		params.NewLoadoutInfo = NewLoadoutInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetLadderComponent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBLadderComponent*                          NewLadderComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetLadderComponent(class UGBLadderComponent* NewLadderComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetLadderComponent");
		
		AGBCharacter_SetLadderComponent_Params params {};
		params.NewLadderComponent = NewLadderComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetItemAnimationType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewItemAnimationType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetItemAnimationType(unsigned char NewItemAnimationType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetItemAnimationType");
		
		AGBCharacter_SetItemAnimationType_Params params {};
		params.NewItemAnimationType = NewItemAnimationType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetGodMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetGodMode(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetGodMode");
		
		AGBCharacter_SetGodMode_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetEquipped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     NewEquipped                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     LastEquipped                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetEquipped(EHand TargetHand, class AGBItem* NewEquipped, class AGBItem* LastEquipped)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetEquipped");
		
		AGBCharacter_SetEquipped_Params params {};
		params.TargetHand = TargetHand;
		params.NewEquipped = NewEquipped;
		params.LastEquipped = LastEquipped;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetDesiredOffTargetAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewDesiredOffTargetAlpha                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetDesiredOffTargetAlpha(float NewDesiredOffTargetAlpha)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetDesiredOffTargetAlpha");
		
		AGBCharacter_SetDesiredOffTargetAlpha_Params params {};
		params.NewDesiredOffTargetAlpha = NewDesiredOffTargetAlpha;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetDesiredLeanAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Alpha                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetDesiredLeanAlpha(float Alpha)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetDesiredLeanAlpha");
		
		AGBCharacter_SetDesiredLeanAlpha_Params params {};
		params.Alpha = Alpha;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetDesiredEngagedAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewDesiredEngagedAlpha                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetDesiredEngagedAlpha(float NewDesiredEngagedAlpha)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetDesiredEngagedAlpha");
		
		AGBCharacter_SetDesiredEngagedAlpha_Params params {};
		params.NewDesiredEngagedAlpha = NewDesiredEngagedAlpha;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetCurrentHand
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              NewHand                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetCurrentHand(EHand NewHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetCurrentHand");
		
		AGBCharacter_SetCurrentHand_Params params {};
		params.NewHand = NewHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetCharVoiceDataId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             NewCharVoiceDataId                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetCharVoiceDataId(const struct FPrimaryAssetId& NewCharVoiceDataId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetCharVoiceDataId");
		
		AGBCharacter_SetCharVoiceDataId_Params params {};
		params.NewCharVoiceDataId = NewCharVoiceDataId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SetAnimActionPlan
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                NewAnimActionPlan                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::SetAnimActionPlan(TArray<class FName> NewAnimActionPlan)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SetAnimActionPlan");
		
		AGBCharacter_SetAnimActionPlan_Params params {};
		params.NewAnimActionPlan = NewAnimActionPlan;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerStopNetworkedMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                AnimMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerStopNetworkedMontage(class UAnimMontage* AnimMontage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerStopNetworkedMontage");
		
		AGBCharacter_ServerStopNetworkedMontage_Params params {};
		params.AnimMontage = AnimMontage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerSetWantsToSprint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewWantsToSprint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerSetWantsToSprint(bool bNewWantsToSprint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerSetWantsToSprint");
		
		AGBCharacter_ServerSetWantsToSprint_Params params {};
		params.bNewWantsToSprint = bNewWantsToSprint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerSetWantsToRun
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewWantsToRun                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerSetWantsToRun(bool bNewWantsToRun)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerSetWantsToRun");
		
		AGBCharacter_ServerSetWantsToRun_Params params {};
		params.bNewWantsToRun = bNewWantsToRun;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerSetRemoteHeadOffset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewRemoteHeadPitchDif                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      NewRemoteHeadYawDif                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerSetRemoteHeadOffset(unsigned char NewRemoteHeadPitchDif, unsigned char NewRemoteHeadYawDif)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerSetRemoteHeadOffset");
		
		AGBCharacter_ServerSetRemoteHeadOffset_Params params {};
		params.NewRemoteHeadPitchDif = NewRemoteHeadPitchDif;
		params.NewRemoteHeadYawDif = NewRemoteHeadYawDif;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerSetNightVisionEquipmentOverride
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewNightVisionEquipmentOverride                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerSetNightVisionEquipmentOverride(bool bNewNightVisionEquipmentOverride)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerSetNightVisionEquipmentOverride");
		
		AGBCharacter_ServerSetNightVisionEquipmentOverride_Params params {};
		params.bNewNightVisionEquipmentOverride = bNewNightVisionEquipmentOverride;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerSetNightVisionEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewNightVisionEnabled                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerSetNightVisionEnabled(bool bNewNightVisionEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerSetNightVisionEnabled");
		
		AGBCharacter_ServerSetNightVisionEnabled_Params params {};
		params.bNewNightVisionEnabled = bNewNightVisionEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerSetDesiredOffTargetAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      AlphaAsByte                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerSetDesiredOffTargetAlpha(unsigned char AlphaAsByte)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerSetDesiredOffTargetAlpha");
		
		AGBCharacter_ServerSetDesiredOffTargetAlpha_Params params {};
		params.AlphaAsByte = AlphaAsByte;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerSetDesiredLeanAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      AlphaAsByte                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerSetDesiredLeanAlpha(unsigned char AlphaAsByte)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerSetDesiredLeanAlpha");
		
		AGBCharacter_ServerSetDesiredLeanAlpha_Params params {};
		params.AlphaAsByte = AlphaAsByte;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerSetDesiredEngagedAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      AlphaAsByte                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerSetDesiredEngagedAlpha(unsigned char AlphaAsByte)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerSetDesiredEngagedAlpha");
		
		AGBCharacter_ServerSetDesiredEngagedAlpha_Params params {};
		params.AlphaAsByte = AlphaAsByte;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerRemoveGameplayTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        GameplayTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerRemoveGameplayTag(const class FName& GameplayTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerRemoveGameplayTag");
		
		AGBCharacter_ServerRemoveGameplayTag_Params params {};
		params.GameplayTag = GameplayTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerPlayNetworkedMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                AnimMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SyncName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PlayRate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        StartSectionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerPlayNetworkedMontage(class UAnimMontage* AnimMontage, const class FName& SyncName, float PlayRate, const class FName& StartSectionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerPlayNetworkedMontage");
		
		AGBCharacter_ServerPlayNetworkedMontage_Params params {};
		params.AnimMontage = AnimMontage;
		params.SyncName = SyncName;
		params.PlayRate = PlayRate;
		params.StartSectionName = StartSectionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerPickupItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerPickupItem(class AGBItem* Item, unsigned char TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerPickupItem");
		
		AGBCharacter_ServerPickupItem_Params params {};
		params.Item = Item;
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerInternalSwitchItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     TargetLeftHandItem                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     TargetRightHandItem                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerInternalSwitchItems(class AGBItem* TargetLeftHandItem, class AGBItem* TargetRightHandItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerInternalSwitchItems");
		
		AGBCharacter_ServerInternalSwitchItems_Params params {};
		params.TargetLeftHandItem = TargetLeftHandItem;
		params.TargetRightHandItem = TargetRightHandItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerDropItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bDropLeftHand                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDropRightHand                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerDropItems(bool bDropLeftHand, bool bDropRightHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerDropItems");
		
		AGBCharacter_ServerDropItems_Params params {};
		params.bDropLeftHand = bDropLeftHand;
		params.bDropRightHand = bDropRightHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ServerAddGameplayTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        GameplayTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ServerAddGameplayTag(const class FName& GameplayTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ServerAddGameplayTag");
		
		AGBCharacter_ServerAddGameplayTag_Params params {};
		params.GameplayTag = GameplayTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.SeededFRandRange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              InMin                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InMax                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AGBCharacter::SeededFRandRange(float InMin, float InMax)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.SeededFRandRange");
		
		AGBCharacter_SeededFRandRange_Params params {};
		params.InMin = InMin;
		params.InMax = InMax;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.RemoveInventoryModifierWithPrefix
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ModifierPrefix                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::RemoveInventoryModifierWithPrefix(const class FString& ModifierPrefix)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.RemoveInventoryModifierWithPrefix");
		
		AGBCharacter_RemoveInventoryModifierWithPrefix_Params params {};
		params.ModifierPrefix = ModifierPrefix;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.RemoveInventoryModifier
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ModifierName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::RemoveInventoryModifier(const class FName& ModifierName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.RemoveInventoryModifier");
		
		AGBCharacter_RemoveInventoryModifier_Params params {};
		params.ModifierName = ModifierName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.RemoveGameplayTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        GameplayTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::RemoveGameplayTag(const class FName& GameplayTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.RemoveGameplayTag");
		
		AGBCharacter_RemoveGameplayTag_Params params {};
		params.GameplayTag = GameplayTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.RemoveAnimActions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class UClass*>                              RemoveAnimActionClasses                                    (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::RemoveAnimActions(TArray<class UClass*> RemoveAnimActionClasses)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.RemoveAnimActions");
		
		AGBCharacter_RemoveAnimActions_Params params {};
		params.RemoveAnimActionClasses = RemoveAnimActionClasses;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.RemoveAnimAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      RemoveAnimActionClass                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::RemoveAnimAction(class UClass* RemoveAnimActionClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.RemoveAnimAction");
		
		AGBCharacter_RemoveAnimAction_Params params {};
		params.RemoveAnimActionClass = RemoveAnimActionClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.RecoilCountUpdated
	 * 		Flags  -> ()
	 */
	void AGBCharacter::RecoilCountUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.RecoilCountUpdated");
		
		AGBCharacter_RecoilCountUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.Prone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bClientSimulation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::Prone(bool bClientSimulation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.Prone");
		
		AGBCharacter_Prone_Params params {};
		params.bClientSimulation = bClientSimulation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.PlayWaterSound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USoundCue*                                   WaterSound                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::PlayWaterSound(class USoundCue* WaterSound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.PlayWaterSound");
		
		AGBCharacter_PlayWaterSound_Params params {};
		params.WaterSound = WaterSound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.PlayVoice
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::PlayVoice(const class FName& Key, bool bIsRadioMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.PlayVoice");
		
		AGBCharacter_PlayVoice_Params params {};
		params.Key = Key;
		params.bIsRadioMessage = bIsRadioMessage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.PlayTakeHitEffects
	 * 		Flags  -> ()
	 */
	void AGBCharacter::PlayTakeHitEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.PlayTakeHitEffects");
		
		AGBCharacter_PlayTakeHitEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.PlayNetworkedMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                AnimMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SyncName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PlayRate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        StartSectionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AGBCharacter::PlayNetworkedMontage(class UAnimMontage* AnimMontage, const class FName& SyncName, float PlayRate, const class FName& StartSectionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.PlayNetworkedMontage");
		
		AGBCharacter_PlayNetworkedMontage_Params params {};
		params.AnimMontage = AnimMontage;
		params.SyncName = SyncName;
		params.PlayRate = PlayRate;
		params.StartSectionName = StartSectionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.PlayDying
	 * 		Flags  -> ()
	 */
	void AGBCharacter::PlayDying()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.PlayDying");
		
		AGBCharacter_PlayDying_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.PlayDamageEffects
	 * 		Flags  -> ()
	 */
	void AGBCharacter::PlayDamageEffects()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.PlayDamageEffects");
		
		AGBCharacter_PlayDamageEffects_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.PickupItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::PickupItem(class AGBItem* Item, EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.PickupItem");
		
		AGBCharacter_PickupItem_Params params {};
		params.Item = Item;
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.PhysicsVolumeChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APhysicsVolume*                              NewVolume                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::PhysicsVolumeChanged(class APhysicsVolume* NewVolume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.PhysicsVolumeChanged");
		
		AGBCharacter_PhysicsVolumeChanged_Params params {};
		params.NewVolume = NewVolume;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.PauseSprinting
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::PauseSprinting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.PauseSprinting");
		
		AGBCharacter_PauseSprinting_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OptOut
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OptOut()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OptOut");
		
		AGBCharacter_OptOut_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnStopVoiceEvent
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnStopVoiceEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnStopVoiceEvent");
		
		AGBCharacter_OnStopVoiceEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnStartProneEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              HalfHeightAdjust                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ScaledHalfHeightAdjust                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::OnStartProneEvent(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnStartProneEvent");
		
		AGBCharacter_OnStartProneEvent_Params params {};
		params.HalfHeightAdjust = HalfHeightAdjust;
		params.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_RNGSeed
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_RNGSeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_RNGSeed");
		
		AGBCharacter_OnRep_RNGSeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_RemoteMontageInfo
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_RemoteMontageInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_RemoteMontageInfo");
		
		AGBCharacter_OnRep_RemoteMontageInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_RemoteDesiredOffTargetAlpha
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_RemoteDesiredOffTargetAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_RemoteDesiredOffTargetAlpha");
		
		AGBCharacter_OnRep_RemoteDesiredOffTargetAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_RemoteDesiredLeanAlpha
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_RemoteDesiredLeanAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_RemoteDesiredLeanAlpha");
		
		AGBCharacter_OnRep_RemoteDesiredLeanAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_RemoteDesiredEngagedAlpha
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_RemoteDesiredEngagedAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_RemoteDesiredEngagedAlpha");
		
		AGBCharacter_OnRep_RemoteDesiredEngagedAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_NightVisionEquipmentOverride
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_NightVisionEquipmentOverride()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_NightVisionEquipmentOverride");
		
		AGBCharacter_OnRep_NightVisionEquipmentOverride_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_NightVisionEnabled
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_NightVisionEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_NightVisionEnabled");
		
		AGBCharacter_OnRep_NightVisionEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_LoadoutInfo
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_LoadoutInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_LoadoutInfo");
		
		AGBCharacter_OnRep_LoadoutInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_LadderComponent
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_LadderComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_LadderComponent");
		
		AGBCharacter_OnRep_LadderComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_IsProne
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_IsProne()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_IsProne");
		
		AGBCharacter_OnRep_IsProne_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_EquippedRight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     LastRightEquipped                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::OnRep_EquippedRight(class AGBItem* LastRightEquipped)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_EquippedRight");
		
		AGBCharacter_OnRep_EquippedRight_Params params {};
		params.LastRightEquipped = LastRightEquipped;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_EquippedLeft
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     LastLeftEquipped                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::OnRep_EquippedLeft(class AGBItem* LastLeftEquipped)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_EquippedLeft");
		
		AGBCharacter_OnRep_EquippedLeft_Params params {};
		params.LastLeftEquipped = LastLeftEquipped;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnRep_CharVoiceDataId
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnRep_CharVoiceDataId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnRep_CharVoiceDataId");
		
		AGBCharacter_OnRep_CharVoiceDataId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnPlayVoiceEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkAudioEvent*                               VoiceAudioEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsLocalPlayer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::OnPlayVoiceEvent(class UAkAudioEvent* VoiceAudioEvent, bool bIsLocalPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnPlayVoiceEvent");
		
		AGBCharacter_OnPlayVoiceEvent_Params params {};
		params.VoiceAudioEvent = VoiceAudioEvent;
		params.bIsLocalPlayer = bIsLocalPlayer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnPhysicsCollision
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::OnPhysicsCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnPhysicsCollision");
		
		AGBCharacter_OnPhysicsCollision_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnLoadAssetsComplete
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnLoadAssetsComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnLoadAssetsComplete");
		
		AGBCharacter_OnLoadAssetsComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnLandedEffects
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              FallingSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::OnLandedEffects(const struct FHitResult& Hit, float FallingSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnLandedEffects");
		
		AGBCharacter_OnLandedEffects_Params params {};
		params.Hit = Hit;
		params.FallingSpeed = FallingSpeed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnHopped
	 * 		Flags  -> ()
	 */
	void AGBCharacter::OnHopped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnHopped");
		
		AGBCharacter_OnHopped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnEquippedItemsUpdatedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bLeftUpdated                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bRightUpdated                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::OnEquippedItemsUpdatedEvent(bool bLeftUpdated, bool bRightUpdated)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnEquippedItemsUpdatedEvent");
		
		AGBCharacter_OnEquippedItemsUpdatedEvent_Params params {};
		params.bLeftUpdated = bLeftUpdated;
		params.bRightUpdated = bRightUpdated;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.OnEndProneEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              HalfHeightAdjust                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ScaledHalfHeightAdjust                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::OnEndProneEvent(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.OnEndProneEvent");
		
		AGBCharacter_OnEndProneEvent_Params params {};
		params.HalfHeightAdjust = HalfHeightAdjust;
		params.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.NetworkedMontageJumpToSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SectionName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::NetworkedMontageJumpToSection(const class FName& SectionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.NetworkedMontageJumpToSection");
		
		AGBCharacter_NetworkedMontageJumpToSection_Params params {};
		params.SectionName = SectionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.NetMulticastPlayVoice
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::NetMulticastPlayVoice(const class FName& Key, bool bIsRadioMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.NetMulticastPlayVoice");
		
		AGBCharacter_NetMulticastPlayVoice_Params params {};
		params.Key = Key;
		params.bIsRadioMessage = bIsRadioMessage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ModifyDamageTaken
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AppliedDamage                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Damage                                                     (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Momentum                                                   (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitInfo                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AController*                                 EventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      DamageCauser                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      DamageType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::ModifyDamageTaken(int32_t* AppliedDamage, int32_t* Damage, struct FVector* Momentum, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ModifyDamageTaken");
		
		AGBCharacter_ModifyDamageTaken_Params params {};
		params.HitInfo = HitInfo;
		params.EventInstigator = EventInstigator;
		params.DamageCauser = DamageCauser;
		params.DamageType = DamageType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (AppliedDamage != nullptr)
			*AppliedDamage = params.AppliedDamage;
		if (Damage != nullptr)
			*Damage = params.Damage;
		if (Momentum != nullptr)
			*Momentum = params.Momentum;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ModifyDamageCaused
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AppliedDamage                                              (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Damage                                                     (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Momentum                                                   (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitInfo                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Victim                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 EventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      DamageCauser                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      DamageType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::ModifyDamageCaused(int32_t* AppliedDamage, int32_t* Damage, struct FVector* Momentum, const struct FHitResult& HitInfo, class AActor* Victim, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ModifyDamageCaused");
		
		AGBCharacter_ModifyDamageCaused_Params params {};
		params.HitInfo = HitInfo;
		params.Victim = Victim;
		params.EventInstigator = EventInstigator;
		params.DamageCauser = DamageCauser;
		params.DamageType = DamageType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (AppliedDamage != nullptr)
			*AppliedDamage = params.AppliedDamage;
		if (Damage != nullptr)
			*Damage = params.Damage;
		if (Momentum != nullptr)
			*Momentum = params.Momentum;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IsUICharacter
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::IsUICharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IsUICharacter");
		
		AGBCharacter_IsUICharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IsSprinting
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::IsSprinting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IsSprinting");
		
		AGBCharacter_IsSprinting_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IsRunning
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::IsRunning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IsRunning");
		
		AGBCharacter_IsRunning_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IsRagdoll
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::IsRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IsRagdoll");
		
		AGBCharacter_IsRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IsProne
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::IsProne()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IsProne");
		
		AGBCharacter_IsProne_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IsLocallyViewed
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::IsLocallyViewed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IsLocallyViewed");
		
		AGBCharacter_IsLocallyViewed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IsEngaged
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::IsEngaged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IsEngaged");
		
		AGBCharacter_IsEngaged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IsCrouched
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::IsCrouched()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IsCrouched");
		
		AGBCharacter_IsCrouched_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IsAlive
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::IsAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IsAlive");
		
		AGBCharacter_IsAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.Is3DMovementMode
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::Is3DMovementMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.Is3DMovementMode");
		
		AGBCharacter_Is3DMovementMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.InternalOnLoadoutApplied
	 * 		Flags  -> ()
	 */
	void AGBCharacter::InternalOnLoadoutApplied()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.InternalOnLoadoutApplied");
		
		AGBCharacter_InternalOnLoadoutApplied_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.InstantBloodLoss
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              BloodLoss                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::InstantBloodLoss(float BloodLoss)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.InstantBloodLoss");
		
		AGBCharacter_InstantBloodLoss_Params params {};
		params.BloodLoss = BloodLoss;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.IncrementBulletIndex
	 * 		Flags  -> ()
	 */
	unsigned char AGBCharacter::IncrementBulletIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.IncrementBulletIndex");
		
		AGBCharacter_IncrementBulletIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.HasInventoryModifier
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ModifierName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::HasInventoryModifier(const class FName& ModifierName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.HasInventoryModifier");
		
		AGBCharacter_HasInventoryModifier_Params params {};
		params.ModifierName = ModifierName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.HasGameplayTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        GameplayTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::HasGameplayTag(const class FName& GameplayTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.HasGameplayTag");
		
		AGBCharacter_HasGameplayTag_Params params {};
		params.GameplayTag = GameplayTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetWantsToControlBreath
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::GetWantsToControlBreath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetWantsToControlBreath");
		
		AGBCharacter_GetWantsToControlBreath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetVoiceComp
	 * 		Flags  -> ()
	 */
	class UAkComponent* AGBCharacter::GetVoiceComp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetVoiceComp");
		
		AGBCharacter_GetVoiceComp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetUnequipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FGBSwitchItemInfo AGBCharacter::GetUnequipInfo(EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetUnequipInfo");
		
		AGBCharacter_GetUnequipInfo_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetTracedCollisionOffset
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetTracedCollisionOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetTracedCollisionOffset");
		
		AGBCharacter_GetTracedCollisionOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetTotalItemWeight
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetTotalItemWeight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetTotalItemWeight");
		
		AGBCharacter_GetTotalItemWeight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetSwayOffset
	 * 		Flags  -> ()
	 */
	struct FRotator AGBCharacter::GetSwayOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetSwayOffset");
		
		AGBCharacter_GetSwayOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetSlingUnequipTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SlingPoint                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FGameplayTag AGBCharacter::GetSlingUnequipTag(const class FName& SlingPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetSlingUnequipTag");
		
		AGBCharacter_GetSlingUnequipTag_Params params {};
		params.SlingPoint = SlingPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetSlingEquipTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SlingPoint                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FGameplayTag AGBCharacter::GetSlingEquipTag(const class FName& SlingPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetSlingEquipTag");
		
		AGBCharacter_GetSlingEquipTag_Params params {};
		params.SlingPoint = SlingPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetSightLineTransform
	 * 		Flags  -> ()
	 */
	struct FTransform AGBCharacter::GetSightLineTransform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetSightLineTransform");
		
		AGBCharacter_GetSightLineTransform_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetShoulderSlingPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName AGBCharacter::GetShoulderSlingPoint(EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetShoulderSlingPoint");
		
		AGBCharacter_GetShoulderSlingPoint_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetRemoteHeadOffset
	 * 		Flags  -> ()
	 */
	struct FRotator AGBCharacter::GetRemoteHeadOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetRemoteHeadOffset");
		
		AGBCharacter_GetRemoteHeadOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetRecoilOffset
	 * 		Flags  -> ()
	 */
	struct FRotator AGBCharacter::GetRecoilOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetRecoilOffset");
		
		AGBCharacter_GetRecoilOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetRecoilCount
	 * 		Flags  -> ()
	 */
	unsigned char AGBCharacter::GetRecoilCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetRecoilCount");
		
		AGBCharacter_GetRecoilCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetRecoilAlpha
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetRecoilAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetRecoilAlpha");
		
		AGBCharacter_GetRecoilAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetPickupTarget
	 * 		Flags  -> ()
	 */
	class AGBItem* AGBCharacter::GetPickupTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetPickupTarget");
		
		AGBCharacter_GetPickupTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetPelvisBone
	 * 		Flags  -> ()
	 */
	class FName AGBCharacter::GetPelvisBone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetPelvisBone");
		
		AGBCharacter_GetPelvisBone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetOppositeHandEnum
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              EquippedType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EHand AGBCharacter::GetOppositeHandEnum(EHand EquippedType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetOppositeHandEnum");
		
		AGBCharacter_GetOppositeHandEnum_Params params {};
		params.EquippedType = EquippedType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetOnLadder
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::GetOnLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetOnLadder");
		
		AGBCharacter_GetOnLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetOffTargetAlpha
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetOffTargetAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetOffTargetAlpha");
		
		AGBCharacter_GetOffTargetAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNoTargetMode
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::GetNoTargetMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNoTargetMode");
		
		AGBCharacter_GetNoTargetMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNoSway
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::GetNoSway()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNoSway");
		
		AGBCharacter_GetNoSway_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNoRecoil
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::GetNoRecoil()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNoRecoil");
		
		AGBCharacter_GetNoRecoil_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNightVisionEquipmentOverride
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::GetNightVisionEquipmentOverride()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNightVisionEquipmentOverride");
		
		AGBCharacter_GetNightVisionEquipmentOverride_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNightVisionEnabled
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::GetNightVisionEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNightVisionEnabled");
		
		AGBCharacter_GetNightVisionEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNetworkedMontageSyncName
	 * 		Flags  -> ()
	 */
	class FName AGBCharacter::GetNetworkedMontageSyncName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNetworkedMontageSyncName");
		
		AGBCharacter_GetNetworkedMontageSyncName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNetworkedMontageSection
	 * 		Flags  -> ()
	 */
	class FName AGBCharacter::GetNetworkedMontageSection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNetworkedMontageSection");
		
		AGBCharacter_GetNetworkedMontageSection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNetworkedMontage
	 * 		Flags  -> ()
	 */
	class UAnimMontage* AGBCharacter::GetNetworkedMontage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNetworkedMontage");
		
		AGBCharacter_GetNetworkedMontage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNeckDamageScale
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetNeckDamageScale()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNeckDamageScale");
		
		AGBCharacter_GetNeckDamageScale_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetNeckBone
	 * 		Flags  -> ()
	 */
	class FName AGBCharacter::GetNeckBone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetNeckBone");
		
		AGBCharacter_GetNeckBone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetMovementSpeed
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetMovementSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetMovementSpeed");
		
		AGBCharacter_GetMovementSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetMovementDirection
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetMovementDirection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetMovementDirection");
		
		AGBCharacter_GetMovementDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetLocalViewer
	 * 		Flags  -> ()
	 */
	class AGBPlayerController* AGBCharacter::GetLocalViewer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetLocalViewer");
		
		AGBCharacter_GetLocalViewer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetLeanAlpha
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetLeanAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetLeanAlpha");
		
		AGBCharacter_GetLeanAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetLastTakeHitTime
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetLastTakeHitTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetLastTakeHitTime");
		
		AGBCharacter_GetLastTakeHitTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetLadderComponent
	 * 		Flags  -> ()
	 */
	class UGBLadderComponent* AGBCharacter::GetLadderComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetLadderComponent");
		
		AGBCharacter_GetLadderComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetItemsByItemAssetType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetType                           ItemAssetType                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AGBItem*>                             OutItems                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::GetItemsByItemAssetType(const struct FPrimaryAssetType& ItemAssetType, TArray<class AGBItem*>* OutItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetItemsByItemAssetType");
		
		AGBCharacter_GetItemsByItemAssetType_Params params {};
		params.ItemAssetType = ItemAssetType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutItems != nullptr)
			*OutItems = params.OutItems;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetItemsByItemAssetId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             ItemAssetId                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AGBItem*>                             OutItems                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::GetItemsByItemAssetId(const struct FPrimaryAssetId& ItemAssetId, TArray<class AGBItem*>* OutItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetItemsByItemAssetId");
		
		AGBCharacter_GetItemsByItemAssetId_Params params {};
		params.ItemAssetId = ItemAssetId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutItems != nullptr)
			*OutItems = params.OutItems;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetItemsByClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AGBItem*>                             OutItems                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::GetItemsByClass(class UClass* ItemClass, TArray<class AGBItem*>* OutItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetItemsByClass");
		
		AGBCharacter_GetItemsByClass_Params params {};
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutItems != nullptr)
			*OutItems = params.OutItems;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetItemHandSocket
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName AGBCharacter::GetItemHandSocket(EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetItemHandSocket");
		
		AGBCharacter_GetItemHandSocket_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetItemAttachedToSocket
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBItem* AGBCharacter::GetItemAttachedToSocket(const class FName& SocketName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetItemAttachedToSocket");
		
		AGBCharacter_GetItemAttachedToSocket_Params params {};
		params.SocketName = SocketName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetItemAnimationType
	 * 		Flags  -> ()
	 */
	unsigned char AGBCharacter::GetItemAnimationType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetItemAnimationType");
		
		AGBCharacter_GetItemAnimationType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetInventoryModifierWithPrefix
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ModifierPrefix                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        OutModifierName                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSoftObjectPath                             OutModifierObject                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::GetInventoryModifierWithPrefix(const class FString& ModifierPrefix, class FName* OutModifierName, struct FSoftObjectPath* OutModifierObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetInventoryModifierWithPrefix");
		
		AGBCharacter_GetInventoryModifierWithPrefix_Params params {};
		params.ModifierPrefix = ModifierPrefix;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutModifierName != nullptr)
			*OutModifierName = params.OutModifierName;
		if (OutModifierObject != nullptr)
			*OutModifierObject = params.OutModifierObject;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetInventoryModifier
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ModifierName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSoftObjectPath                             OutModifierObject                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::GetInventoryModifier(const class FName& ModifierName, struct FSoftObjectPath* OutModifierObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetInventoryModifier");
		
		AGBCharacter_GetInventoryModifier_Params params {};
		params.ModifierName = ModifierName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutModifierObject != nullptr)
			*OutModifierObject = params.OutModifierObject;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetInventoryList
	 * 		Flags  -> ()
	 */
	TArray<class AGBItem*> AGBCharacter::GetInventoryList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetInventoryList");
		
		AGBCharacter_GetInventoryList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetHeadDamageScale
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetHeadDamageScale()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetHeadDamageScale");
		
		AGBCharacter_GetHeadDamageScale_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetHeadBone
	 * 		Flags  -> ()
	 */
	class FName AGBCharacter::GetHeadBone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetHeadBone");
		
		AGBCharacter_GetHeadBone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetHandEnumFromSocket
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EHand AGBCharacter::GetHandEnumFromSocket(const class FName& SocketName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetHandEnumFromSocket");
		
		AGBCharacter_GetHandEnumFromSocket_Params params {};
		params.SocketName = SocketName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetHandEnum
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              EquippedType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EHand AGBCharacter::GetHandEnum(EHand EquippedType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetHandEnum");
		
		AGBCharacter_GetHandEnum_Params params {};
		params.EquippedType = EquippedType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetGodMode
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::GetGodMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetGodMode");
		
		AGBCharacter_GetGodMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetFootstepComp
	 * 		Flags  -> ()
	 */
	class UAkComponent* AGBCharacter::GetFootstepComp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetFootstepComp");
		
		AGBCharacter_GetFootstepComp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetFlattenSwayTime
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetFlattenSwayTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetFlattenSwayTime");
		
		AGBCharacter_GetFlattenSwayTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetFirstItemByItemAssetType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetType                           ItemAssetType                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      CastToItemClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBItem* AGBCharacter::GetFirstItemByItemAssetType(const struct FPrimaryAssetType& ItemAssetType, class UClass* CastToItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetFirstItemByItemAssetType");
		
		AGBCharacter_GetFirstItemByItemAssetType_Params params {};
		params.ItemAssetType = ItemAssetType;
		params.CastToItemClass = CastToItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetFirstItemByItemAssetId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             ItemAssetId                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      CastToItemClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBItem* AGBCharacter::GetFirstItemByItemAssetId(const struct FPrimaryAssetId& ItemAssetId, class UClass* CastToItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetFirstItemByItemAssetId");
		
		AGBCharacter_GetFirstItemByItemAssetId_Params params {};
		params.ItemAssetId = ItemAssetId;
		params.CastToItemClass = CastToItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetFirstItemByClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBItem* AGBCharacter::GetFirstItemByClass(class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetFirstItemByClass");
		
		AGBCharacter_GetFirstItemByClass_Params params {};
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetFirearmEquipped
	 * 		Flags  -> ()
	 */
	bool AGBCharacter::GetFirearmEquipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetFirearmEquipped");
		
		AGBCharacter_GetFirearmEquipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetEyesSocket
	 * 		Flags  -> ()
	 */
	class FName AGBCharacter::GetEyesSocket()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetEyesSocket");
		
		AGBCharacter_GetEyesSocket_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetEquippedWorldStateFlags
	 * 		Flags  -> ()
	 */
	TMap<struct FGameplayTag, unsigned char> AGBCharacter::GetEquippedWorldStateFlags()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetEquippedWorldStateFlags");
		
		AGBCharacter_GetEquippedWorldStateFlags_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetEquipped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBItem* AGBCharacter::GetEquipped(EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetEquipped");
		
		AGBCharacter_GetEquipped_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetEquipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FGBSwitchItemInfo AGBCharacter::GetEquipInfo(EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetEquipInfo");
		
		AGBCharacter_GetEquipInfo_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetEngagedAlpha
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetEngagedAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetEngagedAlpha");
		
		AGBCharacter_GetEngagedAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetDesiredOffTargetAlpha
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetDesiredOffTargetAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetDesiredOffTargetAlpha");
		
		AGBCharacter_GetDesiredOffTargetAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetDesiredLeanAlpha
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetDesiredLeanAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetDesiredLeanAlpha");
		
		AGBCharacter_GetDesiredLeanAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetDesiredEngagedAlpha
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetDesiredEngagedAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetDesiredEngagedAlpha");
		
		AGBCharacter_GetDesiredEngagedAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetCurrentHand
	 * 		Flags  -> ()
	 */
	EHand AGBCharacter::GetCurrentHand()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetCurrentHand");
		
		AGBCharacter_GetCurrentHand_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetCrouchAlpha
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetCrouchAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetCrouchAlpha");
		
		AGBCharacter_GetCrouchAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetChestSlingPoint
	 * 		Flags  -> ()
	 */
	class FName AGBCharacter::GetChestSlingPoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetChestSlingPoint");
		
		AGBCharacter_GetChestSlingPoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetCharVoiceAudioEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAkAudioEvent* AGBCharacter::GetCharVoiceAudioEvent(const class FName& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetCharVoiceAudioEvent");
		
		AGBCharacter_GetCharVoiceAudioEvent_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetBreathingSinValue
	 * 		Flags  -> ()
	 */
	float AGBCharacter::GetBreathingSinValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetBreathingSinValue");
		
		AGBCharacter_GetBreathingSinValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetAnimWorldState
	 * 		Flags  -> ()
	 */
	class UGoapWorldComponent* AGBCharacter::GetAnimWorldState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetAnimWorldState");
		
		AGBCharacter_GetAnimWorldState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetAnimSelector
	 * 		Flags  -> ()
	 */
	class UGoapPlannerComponent* AGBCharacter::GetAnimSelector()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetAnimSelector");
		
		AGBCharacter_GetAnimSelector_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetAnimInstance
	 * 		Flags  -> ()
	 */
	class UAnimInstance* AGBCharacter::GetAnimInstance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetAnimInstance");
		
		AGBCharacter_GetAnimInstance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetAnimActionPlan
	 * 		Flags  -> ()
	 */
	TArray<class FName> AGBCharacter::GetAnimActionPlan()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetAnimActionPlan");
		
		AGBCharacter_GetAnimActionPlan_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GetAimCenterOffset
	 * 		Flags  -> ()
	 */
	struct FRotator AGBCharacter::GetAimCenterOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GetAimCenterOffset");
		
		AGBCharacter_GetAimCenterOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GenerateAnimActionPlan
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGoapWorldState                             WorldState                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		struct FGoapWorldState                             GoalState                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::GenerateAnimActionPlan(const struct FGoapWorldState& WorldState, const struct FGoapWorldState& GoalState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GenerateAnimActionPlan");
		
		AGBCharacter_GenerateAnimActionPlan_Params params {};
		params.WorldState = WorldState;
		params.GoalState = GoalState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GatherAssets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSoftObjectPath>                     OutAssets                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::GatherAssets(TArray<struct FSoftObjectPath>* OutAssets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GatherAssets");
		
		AGBCharacter_GatherAssets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutAssets != nullptr)
			*OutAssets = params.OutAssets;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.GameplayTagsUpdated
	 * 		Flags  -> ()
	 */
	void AGBCharacter::GameplayTagsUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.GameplayTagsUpdated");
		
		AGBCharacter_GameplayTagsUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ForceClientEquippedSync
	 * 		Flags  -> ()
	 */
	void AGBCharacter::ForceClientEquippedSync()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ForceClientEquippedSync");
		
		AGBCharacter_ForceClientEquippedSync_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.DropItemsEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bLeftHand                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bRightHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::DropItemsEvent(bool bLeftHand, bool bRightHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.DropItemsEvent");
		
		AGBCharacter_DropItemsEvent_Params params {};
		params.bLeftHand = bLeftHand;
		params.bRightHand = bRightHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.DropItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bDropLeftHand                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDropRightHand                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::DropItems(bool bDropLeftHand, bool bDropRightHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.DropItems");
		
		AGBCharacter_DropItems_Params params {};
		params.bDropLeftHand = bDropLeftHand;
		params.bDropRightHand = bDropRightHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.DestroyInventory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bForceClient                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::DestroyInventory(bool bForceClient)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.DestroyInventory");
		
		AGBCharacter_DestroyInventory_Params params {};
		params.bForceClient = bForceClient;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.DamageOrgan
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AGBCharacter::DamageOrgan(const struct FHitResult& HitResult, float Damage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.DamageOrgan");
		
		AGBCharacter_DamageOrgan_Params params {};
		params.HitResult = HitResult;
		params.Damage = Damage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ClientSyncEquipped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     ServerEquippedLeft                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     ServerEquippedRight                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ClientSyncEquipped(class AGBItem* ServerEquippedLeft, class AGBItem* ServerEquippedRight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ClientSyncEquipped");
		
		AGBCharacter_ClientSyncEquipped_Params params {};
		params.ServerEquippedLeft = ServerEquippedLeft;
		params.ServerEquippedRight = ServerEquippedRight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ClientSwitchToPrevItems
	 * 		Flags  -> ()
	 */
	void AGBCharacter::ClientSwitchToPrevItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ClientSwitchToPrevItems");
		
		AGBCharacter_ClientSwitchToPrevItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ClientSwitchItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     TargetEquippedLeft                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     TargetEquippedRight                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ClientSwitchItems(class AGBItem* TargetEquippedLeft, class AGBItem* TargetEquippedRight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ClientSwitchItems");
		
		AGBCharacter_ClientSwitchItems_Params params {};
		params.TargetEquippedLeft = TargetEquippedLeft;
		params.TargetEquippedRight = TargetEquippedRight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ClearUnequipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ClearUnequipInfo(EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ClearUnequipInfo");
		
		AGBCharacter_ClearUnequipInfo_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ClearSimilarItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetType                           ItemAssetType                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     Exclude                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::ClearSimilarItems(const struct FPrimaryAssetType& ItemAssetType, class AGBItem* Exclude)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ClearSimilarItems");
		
		AGBCharacter_ClearSimilarItems_Params params {};
		params.ItemAssetType = ItemAssetType;
		params.Exclude = Exclude;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ClearPickupTarget
	 * 		Flags  -> ()
	 */
	void AGBCharacter::ClearPickupTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ClearPickupTarget");
		
		AGBCharacter_ClearPickupTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ClearEquipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ClearEquipInfo(EHand TargetHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ClearEquipInfo");
		
		AGBCharacter_ClearEquipInfo_Params params {};
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.CleanUpLocalInventory
	 * 		Flags  -> ()
	 */
	void AGBCharacter::CleanUpLocalInventory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.CleanUpLocalInventory");
		
		AGBCharacter_CleanUpLocalInventory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.CanDamageRadial
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     DamageOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ECollisionChannel                                  TraceChannel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<EPhysicalSurface>                           SurfaceTypesToIgnore                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OutHit                                                     (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool AGBCharacter::CanDamageRadial(const struct FVector& DamageOrigin, TArray<class AActor*> IgnoreActors, ECollisionChannel TraceChannel, TArray<EPhysicalSurface> SurfaceTypesToIgnore, struct FHitResult* OutHit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.CanDamageRadial");
		
		AGBCharacter_CanDamageRadial_Params params {};
		params.DamageOrigin = DamageOrigin;
		params.IgnoreActors = IgnoreActors;
		params.TraceChannel = TraceChannel;
		params.SurfaceTypesToIgnore = SurfaceTypesToIgnore;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHit != nullptr)
			*OutHit = params.OutHit;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.BlueprintAddDefaultItems
	 * 		Flags  -> ()
	 */
	void AGBCharacter::BlueprintAddDefaultItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.BlueprintAddDefaultItems");
		
		AGBCharacter_BlueprintAddDefaultItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.ApplyProperties
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              PropertyNames                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              PropertyValues                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::ApplyProperties(TArray<class FString> PropertyNames, TArray<class FString> PropertyValues)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.ApplyProperties");
		
		AGBCharacter_ApplyProperties_Params params {};
		params.PropertyNames = PropertyNames;
		params.PropertyValues = PropertyValues;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AnimNotifyFootstep
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bInLeftFoot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::AnimNotifyFootstep(bool bInLeftFoot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AnimNotifyFootstep");
		
		AGBCharacter_AnimNotifyFootstep_Params params {};
		params.bInLeftFoot = bInLeftFoot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AdvanceAnimActionPlan
	 * 		Flags  -> ()
	 */
	void AGBCharacter::AdvanceAnimActionPlan()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AdvanceAnimActionPlan");
		
		AGBCharacter_AdvanceAnimActionPlan_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AddInventoryModifierAsTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ModifierName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::AddInventoryModifierAsTag(const class FName& ModifierName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AddInventoryModifierAsTag");
		
		AGBCharacter_AddInventoryModifierAsTag_Params params {};
		params.ModifierName = ModifierName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AddInventoryModifier
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ModifierName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSoftObjectPath                             ModifierObject                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::AddInventoryModifier(const class FName& ModifierName, const struct FSoftObjectPath& ModifierObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AddInventoryModifier");
		
		AGBCharacter_AddInventoryModifier_Params params {};
		params.ModifierName = ModifierName;
		params.ModifierObject = ModifierObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AddInternalBleeding
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Rate                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::AddInternalBleeding(float Rate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AddInternalBleeding");
		
		AGBCharacter_AddInternalBleeding_Params params {};
		params.Rate = Rate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AddGameplayTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        GameplayTag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::AddGameplayTag(const class FName& GameplayTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AddGameplayTag");
		
		AGBCharacter_AddGameplayTag_Params params {};
		params.GameplayTag = GameplayTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AddExternalBleeding
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        AttachBoneName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     RelativeLocation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    RelativeRotation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              Rate                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::AddExternalBleeding(const class FName& AttachBoneName, const struct FVector& RelativeLocation, const struct FRotator& RelativeRotation, float Rate, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AddExternalBleeding");
		
		AGBCharacter_AddExternalBleeding_Params params {};
		params.AttachBoneName = AttachBoneName;
		params.RelativeLocation = RelativeLocation;
		params.RelativeRotation = RelativeRotation;
		params.Rate = Rate;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AddDefaultItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSkipLocalClient                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::AddDefaultItems(bool bSkipLocalClient)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AddDefaultItems");
		
		AGBCharacter_AddDefaultItems_Params params {};
		params.bSkipLocalClient = bSkipLocalClient;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AddAnimActions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class UClass*>                              AddAnimActionClasses                                       (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::AddAnimActions(TArray<class UClass*> AddAnimActionClasses)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AddAnimActions");
		
		AGBCharacter_AddAnimActions_Params params {};
		params.AddAnimActionClasses = AddAnimActionClasses;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AddAnimAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      AddAnimActionClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBCharacter::AddAnimAction(class UClass* AddAnimActionClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AddAnimAction");
		
		AGBCharacter_AddAnimAction_Params params {};
		params.AddAnimActionClass = AddAnimActionClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacter.AbortAnimActionPlan
	 * 		Flags  -> ()
	 */
	void AGBCharacter::AbortAnimActionPlan()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacter.AbortAnimActionPlan");
		
		AGBCharacter_AbortAnimActionPlan_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBCharacter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBCharacter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBCharacter");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.WantsToSprint
	 * 		Flags  -> ()
	 */
	bool UGBCharacterMovement::WantsToSprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.WantsToSprint");
		
		UGBCharacterMovement_WantsToSprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.WantsToRun
	 * 		Flags  -> ()
	 */
	bool UGBCharacterMovement::WantsToRun()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.WantsToRun");
		
		UGBCharacterMovement_WantsToRun_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.WantsToLean
	 * 		Flags  -> ()
	 */
	bool UGBCharacterMovement::WantsToLean()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.WantsToLean");
		
		UGBCharacterMovement_WantsToLean_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.SetLadderComponent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBLadderComponent*                          NewLadderComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBCharacterMovement::SetLadderComponent(class UGBLadderComponent* NewLadderComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.SetLadderComponent");
		
		UGBCharacterMovement_SetLadderComponent_Params params {};
		params.NewLadderComponent = NewLadderComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.PauseSprinting
	 * 		Flags  -> ()
	 */
	bool UGBCharacterMovement::PauseSprinting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.PauseSprinting");
		
		UGBCharacterMovement_PauseSprinting_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.IsProne
	 * 		Flags  -> ()
	 */
	bool UGBCharacterMovement::IsProne()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.IsProne");
		
		UGBCharacterMovement_IsProne_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.GetOnLadder
	 * 		Flags  -> ()
	 */
	bool UGBCharacterMovement::GetOnLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.GetOnLadder");
		
		UGBCharacterMovement_GetOnLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.GetOffTargetAlpha
	 * 		Flags  -> ()
	 */
	float UGBCharacterMovement::GetOffTargetAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.GetOffTargetAlpha");
		
		UGBCharacterMovement_GetOffTargetAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.GetMovementDirection
	 * 		Flags  -> ()
	 */
	float UGBCharacterMovement::GetMovementDirection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.GetMovementDirection");
		
		UGBCharacterMovement_GetMovementDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.GetMaxWalkingSpeed
	 * 		Flags  -> ()
	 */
	float UGBCharacterMovement::GetMaxWalkingSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.GetMaxWalkingSpeed");
		
		UGBCharacterMovement_GetMaxWalkingSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.GetMaxRunningSpeed
	 * 		Flags  -> ()
	 */
	float UGBCharacterMovement::GetMaxRunningSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.GetMaxRunningSpeed");
		
		UGBCharacterMovement_GetMaxRunningSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.GetLadderComponent
	 * 		Flags  -> ()
	 */
	class UGBLadderComponent* UGBCharacterMovement::GetLadderComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.GetLadderComponent");
		
		UGBCharacterMovement_GetLadderComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.GetFirearmEquipped
	 * 		Flags  -> ()
	 */
	bool UGBCharacterMovement::GetFirearmEquipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.GetFirearmEquipped");
		
		UGBCharacterMovement_GetFirearmEquipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.GetEngagedAlpha
	 * 		Flags  -> ()
	 */
	float UGBCharacterMovement::GetEngagedAlpha()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.GetEngagedAlpha");
		
		UGBCharacterMovement_GetEngagedAlpha_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.FallingDamageReduction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              FallingDamage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	float UGBCharacterMovement::FallingDamageReduction(float FallingDamage, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.FallingDamageReduction");
		
		UGBCharacterMovement_FallingDamageReduction_Params params {};
		params.FallingDamage = FallingDamage;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharacterMovement.CanGrabLadder
	 * 		Flags  -> ()
	 */
	bool UGBCharacterMovement::CanGrabLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharacterMovement.CanGrabLadder");
		
		UGBCharacterMovement_CanGrabLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBCharacterMovement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBCharacterMovement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBCharacterMovement");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.TriggerAction
	 * 		Flags  -> ()
	 */
	void UGBCharAnimAction::TriggerAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.TriggerAction");
		
		UGBCharAnimAction_TriggerAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.PlayAnim
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        SectionName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBCharAnimAction::PlayAnim(const class FName& SectionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.PlayAnim");
		
		UGBCharAnimAction_PlayAnim_Params params {};
		params.SectionName = SectionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.OnMontageEndedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBCharAnimAction::OnMontageEndedEvent(bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.OnMontageEndedEvent");
		
		UGBCharAnimAction_OnMontageEndedEvent_Params params {};
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.OnMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                EndedMontage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBCharAnimAction::OnMontageEnded(class UAnimMontage* EndedMontage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.OnMontageEnded");
		
		UGBCharAnimAction_OnMontageEnded_Params params {};
		params.EndedMontage = EndedMontage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.OnLoadAssetsComplete
	 * 		Flags  -> ()
	 */
	void UGBCharAnimAction::OnLoadAssetsComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.OnLoadAssetsComplete");
		
		UGBCharAnimAction_OnLoadAssetsComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.OnInitEvent
	 * 		Flags  -> ()
	 */
	void UGBCharAnimAction::OnInitEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.OnInitEvent");
		
		UGBCharAnimAction_OnInitEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.Init
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                InGBCharacter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBCharAnimAction::Init(class AGBCharacter* InGBCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.Init");
		
		UGBCharAnimAction_Init_Params params {};
		params.InGBCharacter = InGBCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.GetGoapAction
	 * 		Flags  -> ()
	 */
	struct FGoapAction UGBCharAnimAction::GetGoapAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.GetGoapAction");
		
		UGBCharAnimAction_GetGoapAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.GetGBCharacter
	 * 		Flags  -> ()
	 */
	class AGBCharacter* UGBCharAnimAction::GetGBCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.GetGBCharacter");
		
		UGBCharAnimAction_GetGBCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCharAnimAction.GatherAssets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSoftObjectPath>                     OutAssets                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBCharAnimAction::GatherAssets(TArray<struct FSoftObjectPath>* OutAssets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCharAnimAction.GatherAssets");
		
		UGBCharAnimAction_GatherAssets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutAssets != nullptr)
			*OutAssets = params.OutAssets;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBCharAnimAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBCharAnimAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBCharAnimAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBCharEmoteData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBCharEmoteData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBCharEmoteData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBCharVoiceData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBCharVoiceData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBCharVoiceData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerControllerBase.RemoveFullScreenWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserWidget*                                 FullScreenWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerControllerBase::RemoveFullScreenWidget(class UUserWidget* FullScreenWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerControllerBase.RemoveFullScreenWidget");
		
		AGBPlayerControllerBase_RemoveFullScreenWidget_Params params {};
		params.FullScreenWidget = FullScreenWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerControllerBase.ListFullScreenWidgets
	 * 		Flags  -> ()
	 */
	void AGBPlayerControllerBase::ListFullScreenWidgets()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerControllerBase.ListFullScreenWidgets");
		
		AGBPlayerControllerBase_ListFullScreenWidgets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerControllerBase.AddFullScreenWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserWidget*                                 FullScreenWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Priority                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerControllerBase::AddFullScreenWidget(class UUserWidget* FullScreenWidget, int32_t Priority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerControllerBase.AddFullScreenWidget");
		
		AGBPlayerControllerBase_AddFullScreenWidget_Params params {};
		params.FullScreenWidget = FullScreenWidget;
		params.Priority = Priority;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBPlayerControllerBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBPlayerControllerBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPlayerControllerBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.Vote
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::Vote(const class FString& Parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.Vote");
		
		AGBPlayerController_Vote_Params params {};
		params.Parameters = Parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.UseActorWithParams
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      UseTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::UseActorWithParams(class AActor* UseTarget, const class FName& UseType, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.UseActorWithParams");
		
		AGBPlayerController_UseActorWithParams_Params params {};
		params.UseTarget = UseTarget;
		params.UseType = UseType;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.UseActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      UseTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::UseActor(class AActor* UseTarget, const class FName& UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.UseActor");
		
		AGBPlayerController_UseActor_Params params {};
		params.UseTarget = UseTarget;
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.UpdateSpectatorNightVisionPPEvent
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::UpdateSpectatorNightVisionPPEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.UpdateSpectatorNightVisionPPEvent");
		
		AGBPlayerController_UpdateSpectatorNightVisionPPEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.UpdatePPSharpenPercentageEvent
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::UpdatePPSharpenPercentageEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.UpdatePPSharpenPercentageEvent");
		
		AGBPlayerController_UpdatePPSharpenPercentageEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.UnMuteAll
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::UnMuteAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.UnMuteAll");
		
		AGBPlayerController_UnMuteAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.UnMute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                TargetPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::UnMute(class APlayerState* TargetPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.UnMute");
		
		AGBPlayerController_UnMute_Params params {};
		params.TargetPlayerState = TargetPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ToggleInGameMenu
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ToggleInGameMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ToggleInGameMenu");
		
		AGBPlayerController_ToggleInGameMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.TimerDelayedSaveConfig
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::TimerDelayedSaveConfig()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.TimerDelayedSaveConfig");
		
		AGBPlayerController_TimerDelayedSaveConfig_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.TeamChat
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::TeamChat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.TeamChat");
		
		AGBPlayerController_TeamChat_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SyncLoadoutToTeam
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::SyncLoadoutToTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SyncLoadoutToTeam");
		
		AGBPlayerController_SyncLoadoutToTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.StopUsingRadio
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::StopUsingRadio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.StopUsingRadio");
		
		AGBPlayerController_StopUsingRadio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.StopTalking
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::StopTalking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.StopTalking");
		
		AGBPlayerController_StopTalking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.StartUsingRadio
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::StartUsingRadio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.StartUsingRadio");
		
		AGBPlayerController_StartUsingRadio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.StartTalking
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::StartTalking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.StartTalking");
		
		AGBPlayerController_StartTalking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SpectatorViewPrevPlayer
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::SpectatorViewPrevPlayer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SpectatorViewPrevPlayer");
		
		AGBPlayerController_SpectatorViewPrevPlayer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SpectatorViewNextPlayer
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::SpectatorViewNextPlayer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SpectatorViewNextPlayer");
		
		AGBPlayerController_SpectatorViewNextPlayer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SpectatorViewActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      ActorTarget                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SpectatorViewActor(class AActor* ActorTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SpectatorViewActor");
		
		AGBPlayerController_SpectatorViewActor_Params params {};
		params.ActorTarget = ActorTarget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SpectatorToggleHUD
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::SpectatorToggleHUD()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SpectatorToggleHUD");
		
		AGBPlayerController_SpectatorToggleHUD_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SpectatorStopFollowing
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::SpectatorStopFollowing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SpectatorStopFollowing");
		
		AGBPlayerController_SpectatorStopFollowing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SpectatorSetCamera
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewCameraStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SpectatorSetCamera(const class FName& NewCameraStyle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SpectatorSetCamera");
		
		AGBPlayerController_SpectatorSetCamera_Params params {};
		params.NewCameraStyle = NewCameraStyle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SpectatorIsFollowing
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::SpectatorIsFollowing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SpectatorIsFollowing");
		
		AGBPlayerController_SpectatorIsFollowing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SpectatorChangeSpeed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Change                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SpectatorChangeSpeed(float Change)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SpectatorChangeSpeed");
		
		AGBPlayerController_SpectatorChangeSpeed_Params params {};
		params.Change = Change;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SpectatorChangeDistance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Change                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SpectatorChangeDistance(float Change)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SpectatorChangeDistance");
		
		AGBPlayerController_SpectatorChangeDistance_Params params {};
		params.Change = Change;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.Spectate
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::Spectate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.Spectate");
		
		AGBPlayerController_Spectate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ShowTransitionScreenEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        TransitionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ShowTransitionScreenEvent(const class FName& TransitionType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ShowTransitionScreenEvent");
		
		AGBPlayerController_ShowTransitionScreenEvent_Params params {};
		params.TransitionType = TransitionType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ShowAdminMenuEvent
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ShowAdminMenuEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ShowAdminMenuEvent");
		
		AGBPlayerController_ShowAdminMenuEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetViewRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRotator                                    NewRotation                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetViewRotation(const struct FRotator& NewRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetViewRotation");
		
		AGBPlayerController_SetViewRotation_Params params {};
		params.NewRotation = NewRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetTeamElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ETeamElement                                       NewTeamElement                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetTeamElement(ETeamElement NewTeamElement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetTeamElement");
		
		AGBPlayerController_SetTeamElement_Params params {};
		params.NewTeamElement = NewTeamElement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetTargetInputSensitivityScale
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewScale                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetTargetInputSensitivityScale(float NewScale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetTargetInputSensitivityScale");
		
		AGBPlayerController_SetTargetInputSensitivityScale_Params params {};
		params.NewScale = NewScale;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetSwitchGrenadeCheck
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              SwitchDelay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetSwitchGrenadeCheck(float SwitchDelay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetSwitchGrenadeCheck");
		
		AGBPlayerController_SetSwitchGrenadeCheck_Params params {};
		params.SwitchDelay = SwitchDelay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetSpectatorNightVision
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetSpectatorNightVision(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetSpectatorNightVision");
		
		AGBPlayerController_SetSpectatorNightVision_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetReadyStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EReadyStatus                                       NewReadyStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetReadyStatus(EReadyStatus NewReadyStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetReadyStatus");
		
		AGBPlayerController_SetReadyStatus_Params params {};
		params.NewReadyStatus = NewReadyStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetPlayerPatch
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        TargetSocket                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ShortPath                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetPlayerPatch(const class FName& TargetSocket, const class FString& ShortPath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetPlayerPatch");
		
		AGBPlayerController_SetPlayerPatch_Params params {};
		params.TargetSocket = TargetSocket;
		params.ShortPath = ShortPath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetPlayerNightVisionRequested
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewPlayerNightVisionRequested                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetPlayerNightVisionRequested(bool bNewPlayerNightVisionRequested)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetPlayerNightVisionRequested");
		
		AGBPlayerController_SetPlayerNightVisionRequested_Params params {};
		params.bNewPlayerNightVisionRequested = bNewPlayerNightVisionRequested;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetOverrideInputWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserWidget*                                 UserWidget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetOverrideInputWidget(class UUserWidget* UserWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetOverrideInputWidget");
		
		AGBPlayerController_SetOverrideInputWidget_Params params {};
		params.UserWidget = UserWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetNoTargetMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetNoTargetMode(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetNoTargetMode");
		
		AGBPlayerController_SetNoTargetMode_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetNoSway
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetNoSway(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetNoSway");
		
		AGBPlayerController_SetNoSway_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetNoRecoil
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetNoRecoil(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetNoRecoil");
		
		AGBPlayerController_SetNoRecoil_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UVaRestJsonObject*                           KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetLoadout(const class FName& LoadoutName, class UVaRestJsonObject* KitJsonObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetLoadout");
		
		AGBPlayerController_SetLoadout_Params params {};
		params.LoadoutName = LoadoutName;
		params.KitJsonObj = KitJsonObj;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetLastGrenadeClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      GrenadeClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetLastGrenadeClass(class UClass* GrenadeClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetLastGrenadeClass");
		
		AGBPlayerController_SetLastGrenadeClass_Params params {};
		params.GrenadeClass = GrenadeClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetLastDesiredOffTargetAlphaValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewLastDesiredOffTargetAlphaValue                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetLastDesiredOffTargetAlphaValue(float NewLastDesiredOffTargetAlphaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetLastDesiredOffTargetAlphaValue");
		
		AGBPlayerController_SetLastDesiredOffTargetAlphaValue_Params params {};
		params.NewLastDesiredOffTargetAlphaValue = NewLastDesiredOffTargetAlphaValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetInsertionPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBInsertionPoint*                           NewInsertionPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetInsertionPoint(class AGBInsertionPoint* NewInsertionPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetInsertionPoint");
		
		AGBPlayerController_SetInsertionPoint_Params params {};
		params.NewInsertionPoint = NewInsertionPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetIgnoreUseInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIgnore                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetIgnoreUseInput(bool bIgnore)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetIgnoreUseInput");
		
		AGBPlayerController_SetIgnoreUseInput_Params params {};
		params.bIgnore = bIgnore;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SetGodMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SetGodMode(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SetGodMode");
		
		AGBPlayerController_SetGodMode_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerVote
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerVote(const class FString& Parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerVote");
		
		AGBPlayerController_ServerVote_Params params {};
		params.Parameters = Parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerUseActorWithParams
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      UseTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerUseActorWithParams(class AActor* UseTarget, const class FName& UseType, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerUseActorWithParams");
		
		AGBPlayerController_ServerUseActorWithParams_Params params {};
		params.UseTarget = UseTarget;
		params.UseType = UseType;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerUseActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      UseTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerUseActor(class AActor* UseTarget, const class FName& UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerUseActor");
		
		AGBPlayerController_ServerUseActor_Params params {};
		params.UseTarget = UseTarget;
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSpectatorViewActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      ActorTarget                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerSpectatorViewActor(class AActor* ActorTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSpectatorViewActor");
		
		AGBPlayerController_ServerSpectatorViewActor_Params params {};
		params.ActorTarget = ActorTarget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSpectate
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerSpectate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSpectate");
		
		AGBPlayerController_ServerSpectate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSetTeamElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ETeamElement                                       NewTeamElement                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerSetTeamElement(ETeamElement NewTeamElement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSetTeamElement");
		
		AGBPlayerController_ServerSetTeamElement_Params params {};
		params.NewTeamElement = NewTeamElement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSetReadyStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EReadyStatus                                       NewReadyStatus                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerSetReadyStatus(EReadyStatus NewReadyStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSetReadyStatus");
		
		AGBPlayerController_ServerSetReadyStatus_Params params {};
		params.NewReadyStatus = NewReadyStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSetPlayerPatch
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        TargetSocket                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ShortPath                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerSetPlayerPatch(const class FName& TargetSocket, const class FString& ShortPath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSetPlayerPatch");
		
		AGBPlayerController_ServerSetPlayerPatch_Params params {};
		params.TargetSocket = TargetSocket;
		params.ShortPath = ShortPath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSetInsertionPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBInsertionPoint*                           NewInsertionPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerSetInsertionPoint(class AGBInsertionPoint* NewInsertionPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSetInsertionPoint");
		
		AGBPlayerController_ServerSetInsertionPoint_Params params {};
		params.NewInsertionPoint = NewInsertionPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSetCharacterVoiceSet
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             NewCharVoiceDataId                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerSetCharacterVoiceSet(const struct FPrimaryAssetId& NewCharVoiceDataId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSetCharacterVoiceSet");
		
		AGBPlayerController_ServerSetCharacterVoiceSet_Params params {};
		params.NewCharVoiceDataId = NewCharVoiceDataId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSendAFKReponse
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerSendAFKReponse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSendAFKReponse");
		
		AGBPlayerController_ServerSendAFKReponse_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSayTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerSayTeam(const class FString& Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSayTeam");
		
		AGBPlayerController_ServerSayTeam_Params params {};
		params.Msg = Msg;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerSay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerSay(const class FString& Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerSay");
		
		AGBPlayerController_ServerSay_Params params {};
		params.Msg = Msg;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerReport
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerReport()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerReport");
		
		AGBPlayerController_ServerReport_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerReapplyCharLoadout
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerReapplyCharLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerReapplyCharLoadout");
		
		AGBPlayerController_ServerReapplyCharLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerPlayVoice
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Key                                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerPlayVoice(const class FName& Key, bool bIsRadioMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerPlayVoice");
		
		AGBPlayerController_ServerPlayVoice_Params params {};
		params.Key = Key;
		params.bIsRadioMessage = bIsRadioMessage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerPlayerGameModeRequest
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Request                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerPlayerGameModeRequest(const class FString& Request)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerPlayerGameModeRequest");
		
		AGBPlayerController_ServerPlayerGameModeRequest_Params params {};
		params.Request = Request;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerPlayEmote
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             CharEmoteId                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerPlayEmote(const struct FPrimaryAssetId& CharEmoteId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerPlayEmote");
		
		AGBPlayerController_ServerPlayEmote_Params params {};
		params.CharEmoteId = CharEmoteId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerOptOut
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerOptOut()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerOptOut");
		
		AGBPlayerController_ServerOptOut_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerInitialSync
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerInitialSync()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerInitialSync");
		
		AGBPlayerController_ServerInitialSync_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerForgive
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerForgive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerForgive");
		
		AGBPlayerController_ServerForgive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerEnterReadyRoom
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerEnterReadyRoom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerEnterReadyRoom");
		
		AGBPlayerController_ServerEnterReadyRoom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerEnterPlayArea
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerEnterPlayArea()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerEnterPlayArea");
		
		AGBPlayerController_ServerEnterPlayArea_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerCreateLoadoutInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FReplicatedString                           ReplicatedLoadout                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerCreateLoadoutInfo(const struct FReplicatedString& ReplicatedLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerCreateLoadoutInfo");
		
		AGBPlayerController_ServerCreateLoadoutInfo_Params params {};
		params.ReplicatedLoadout = ReplicatedLoadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerConfirmBulletCharacterImpact
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                HitCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGBOrganDamageEvent                         OrganDamageEvent                                           (ConstParm, Parm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerConfirmBulletCharacterImpact(class AGBCharacter* HitCharacter, const struct FGBOrganDamageEvent& OrganDamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerConfirmBulletCharacterImpact");
		
		AGBPlayerController_ServerConfirmBulletCharacterImpact_Params params {};
		params.HitCharacter = HitCharacter;
		params.OrganDamageEvent = OrganDamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerChooseSpectatorViewTarget
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ServerChooseSpectatorViewTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerChooseSpectatorViewTarget");
		
		AGBPlayerController_ServerChooseSpectatorViewTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerCheat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerCheat(const class FString& Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerCheat");
		
		AGBPlayerController_ServerCheat_Params params {};
		params.Msg = Msg;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerAdminSet
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FZKReplicatedContent                        Content                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerAdminSet(const struct FZKReplicatedContent& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerAdminSet");
		
		AGBPlayerController_ServerAdminSet_Params params {};
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerAdminRequest
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RequestType                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerAdminRequest(const class FName& RequestType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerAdminRequest");
		
		AGBPlayerController_ServerAdminRequest_Params params {};
		params.RequestType = RequestType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ServerAdmin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ServerAdmin(const class FString& Parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ServerAdmin");
		
		AGBPlayerController_ServerAdmin_Params params {};
		params.Parameters = Parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.SayTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::SayTeam(const class FString& Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.SayTeam");
		
		AGBPlayerController_SayTeam_Params params {};
		params.Msg = Msg;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.Say
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::Say(const class FString& Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.Say");
		
		AGBPlayerController_Say_Params params {};
		params.Msg = Msg;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.RestartPlayer
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::RestartPlayer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.RestartPlayer");
		
		AGBPlayerController_RestartPlayer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.Report
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::Report()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.Report");
		
		AGBPlayerController_Report_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.RemoveLocalPlayerTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        LocalPlayerTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::RemoveLocalPlayerTag(const class FName& LocalPlayerTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.RemoveLocalPlayerTag");
		
		AGBPlayerController_RemoveLocalPlayerTag_Params params {};
		params.LocalPlayerTag = LocalPlayerTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.RemoveIgnoreUseInputReason
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Reason                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::RemoveIgnoreUseInputReason(const class FName& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.RemoveIgnoreUseInputReason");
		
		AGBPlayerController_RemoveIgnoreUseInputReason_Params params {};
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ReapplyCharLoadout
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ReapplyCharLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ReapplyCharLoadout");
		
		AGBPlayerController_ReapplyCharLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ReadyRoom
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ReadyRoom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ReadyRoom");
		
		AGBPlayerController_ReadyRoom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.PlayVoice
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsRadioMessage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::PlayVoice(const class FName& Key, bool bIsRadioMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.PlayVoice");
		
		AGBPlayerController_PlayVoice_Params params {};
		params.Key = Key;
		params.bIsRadioMessage = bIsRadioMessage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.PlayerGameModeRequest
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Request                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::PlayerGameModeRequest(const class FString& Request)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.PlayerGameModeRequest");
		
		AGBPlayerController_PlayerGameModeRequest_Params params {};
		params.Request = Request;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.PlayEmote
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CharEmoteString                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::PlayEmote(const class FString& CharEmoteString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.PlayEmote");
		
		AGBPlayerController_PlayEmote_Params params {};
		params.CharEmoteString = CharEmoteString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OptOutTimer
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::OptOutTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OptOutTimer");
		
		AGBPlayerController_OptOutTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OptOut
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::OptOut()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OptOut");
		
		AGBPlayerController_OptOut_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OpenMissionEditorEvent
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::OpenMissionEditorEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OpenMissionEditorEvent");
		
		AGBPlayerController_OpenMissionEditorEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OnShowWorldPromptEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     PromptLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::OnShowWorldPromptEvent(const struct FVector& PromptLocation, const class FName& Tag, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OnShowWorldPromptEvent");
		
		AGBPlayerController_OnShowWorldPromptEvent_Params params {};
		params.PromptLocation = PromptLocation;
		params.Tag = Tag;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OnShowSpawnProtectionWarningEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bShow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::OnShowSpawnProtectionWarningEvent(bool bShow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OnShowSpawnProtectionWarningEvent");
		
		AGBPlayerController_OnShowSpawnProtectionWarningEvent_Params params {};
		params.bShow = bShow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OnRestartPlayerEvent
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::OnRestartPlayerEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OnRestartPlayerEvent");
		
		AGBPlayerController_OnRestartPlayerEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OnPreSeamlessTravelEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MissionTitle                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MapTitle                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MapAuthor                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::OnPreSeamlessTravelEvent(const class FString& MissionTitle, const class FString& MapTitle, const class FString& MapAuthor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OnPreSeamlessTravelEvent");
		
		AGBPlayerController_OnPreSeamlessTravelEvent_Params params {};
		params.MissionTitle = MissionTitle;
		params.MapTitle = MapTitle;
		params.MapAuthor = MapAuthor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OnHoveredWidgetChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWidgetComponent*                            WidgetComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UWidgetComponent*                            PreviousWidgetComponent                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::OnHoveredWidgetChanged(class UWidgetComponent* WidgetComponent, class UWidgetComponent* PreviousWidgetComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OnHoveredWidgetChanged");
		
		AGBPlayerController_OnHoveredWidgetChanged_Params params {};
		params.WidgetComponent = WidgetComponent;
		params.PreviousWidgetComponent = PreviousWidgetComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OnGrenadeThrowEnd
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::OnGrenadeThrowEnd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OnGrenadeThrowEnd");
		
		AGBPlayerController_OnGrenadeThrowEnd_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OnClientOnLoadoutAppliedEvent
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::OnClientOnLoadoutAppliedEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OnClientOnLoadoutAppliedEvent");
		
		AGBPlayerController_OnClientOnLoadoutAppliedEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.OnAFKPromptEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              ReponseTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::OnAFKPromptEvent(float ReponseTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.OnAFKPromptEvent");
		
		AGBPlayerController_OnAFKPromptEvent_Params params {};
		params.ReponseTime = ReponseTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.NotAFK
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::NotAFK()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.NotAFK");
		
		AGBPlayerController_NotAFK_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.MuteTalking
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::MuteTalking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.MuteTalking");
		
		AGBPlayerController_MuteTalking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.MuteAll
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::MuteAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.MuteAll");
		
		AGBPlayerController_MuteAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.Mute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                TargetPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::Mute(class APlayerState* TargetPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.Mute");
		
		AGBPlayerController_Mute_Params params {};
		params.TargetPlayerState = TargetPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.MissionIntel_Released
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::MissionIntel_Released()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.MissionIntel_Released");
		
		AGBPlayerController_MissionIntel_Released_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.MissionIntel_Pressed
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::MissionIntel_Pressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.MissionIntel_Pressed");
		
		AGBPlayerController_MissionIntel_Pressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.IsUsingRadio
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::IsUsingRadio()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.IsUsingRadio");
		
		AGBPlayerController_IsUsingRadio_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.IsUseInputIgnored
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::IsUseInputIgnored()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.IsUseInputIgnored");
		
		AGBPlayerController_IsUseInputIgnored_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.IsTalking
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::IsTalking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.IsTalking");
		
		AGBPlayerController_IsTalking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.IsMuted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                TargetPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBPlayerController::IsMuted(class APlayerState* TargetPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.IsMuted");
		
		AGBPlayerController_IsMuted_Params params {};
		params.TargetPlayerState = TargetPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.IsFreeLooking
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::IsFreeLooking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.IsFreeLooking");
		
		AGBPlayerController_IsFreeLooking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.IsFirstPerson
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::IsFirstPerson()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.IsFirstPerson");
		
		AGBPlayerController_IsFirstPerson_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.IsAlive
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::IsAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.IsAlive");
		
		AGBPlayerController_IsAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.InventorySlot4_Pressed
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::InventorySlot4_Pressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.InventorySlot4_Pressed");
		
		AGBPlayerController_InventorySlot4_Pressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.InventorySlot3_Pressed
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::InventorySlot3_Pressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.InventorySlot3_Pressed");
		
		AGBPlayerController_InventorySlot3_Pressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.InventorySlot2_Repeat
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::InventorySlot2_Repeat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.InventorySlot2_Repeat");
		
		AGBPlayerController_InventorySlot2_Repeat_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.InventorySlot2_Released
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::InventorySlot2_Released()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.InventorySlot2_Released");
		
		AGBPlayerController_InventorySlot2_Released_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.InventorySlot2_Pressed
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::InventorySlot2_Pressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.InventorySlot2_Pressed");
		
		AGBPlayerController_InventorySlot2_Pressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.InventorySlot1_Repeat
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::InventorySlot1_Repeat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.InventorySlot1_Repeat");
		
		AGBPlayerController_InventorySlot1_Repeat_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.InventorySlot1_Released
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::InventorySlot1_Released()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.InventorySlot1_Released");
		
		AGBPlayerController_InventorySlot1_Released_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.InventorySlot1_Pressed
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::InventorySlot1_Pressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.InventorySlot1_Pressed");
		
		AGBPlayerController_InventorySlot1_Pressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.IncreaseSightMagnificationPressed
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::IncreaseSightMagnificationPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.IncreaseSightMagnificationPressed");
		
		AGBPlayerController_IncreaseSightMagnificationPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.IncreaseReticleBrightnessLevel
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::IncreaseReticleBrightnessLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.IncreaseReticleBrightnessLevel");
		
		AGBPlayerController_IncreaseReticleBrightnessLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.HideTransitionScreens
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::HideTransitionScreens()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.HideTransitionScreens");
		
		AGBPlayerController_HideTransitionScreens_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.HideTransitionScreenEvent
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::HideTransitionScreenEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.HideTransitionScreenEvent");
		
		AGBPlayerController_HideTransitionScreenEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.HasLocalPlayerTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        LocalPlayerTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBPlayerController::HasLocalPlayerTag(const class FName& LocalPlayerTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.HasLocalPlayerTag");
		
		AGBPlayerController_HasLocalPlayerTag_Params params {};
		params.LocalPlayerTag = LocalPlayerTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.HandleCommunicationKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FKey                                        Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPressed                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBPlayerController::HandleCommunicationKey(const struct FKey& Key, bool bPressed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.HandleCommunicationKey");
		
		AGBPlayerController_HandleCommunicationKey_Params params {};
		params.Key = Key;
		params.bPressed = bPressed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GlobalChat
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::GlobalChat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GlobalChat");
		
		AGBPlayerController_GlobalChat_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetWidgetInteractionComponent
	 * 		Flags  -> ()
	 */
	class UWidgetInteractionComponent* AGBPlayerController::GetWidgetInteractionComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetWidgetInteractionComponent");
		
		AGBPlayerController_GetWidgetInteractionComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetViewRotation
	 * 		Flags  -> ()
	 */
	struct FRotator AGBPlayerController::GetViewRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetViewRotation");
		
		AGBPlayerController_GetViewRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetSpectatorNightVision
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::GetSpectatorNightVision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetSpectatorNightVision");
		
		AGBPlayerController_GetSpectatorNightVision_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetPredictionTime
	 * 		Flags  -> ()
	 */
	float AGBPlayerController::GetPredictionTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetPredictionTime");
		
		AGBPlayerController_GetPredictionTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetPlayerSettings
	 * 		Flags  -> ()
	 */
	class UGBPlayerSettings* AGBPlayerController::GetPlayerSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetPlayerSettings");
		
		AGBPlayerController_GetPlayerSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetPlayerNightVisionRequested
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::GetPlayerNightVisionRequested()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetPlayerNightVisionRequested");
		
		AGBPlayerController_GetPlayerNightVisionRequested_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetPlayerFOV
	 * 		Flags  -> ()
	 */
	float AGBPlayerController::GetPlayerFOV()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetPlayerFOV");
		
		AGBPlayerController_GetPlayerFOV_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetOverrideInputWidget
	 * 		Flags  -> ()
	 */
	class UUserWidget* AGBPlayerController::GetOverrideInputWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetOverrideInputWidget");
		
		AGBPlayerController_GetOverrideInputWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetNoTargetMode
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::GetNoTargetMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetNoTargetMode");
		
		AGBPlayerController_GetNoTargetMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetNoSway
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::GetNoSway()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetNoSway");
		
		AGBPlayerController_GetNoSway_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetNoRecoil
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::GetNoRecoil()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetNoRecoil");
		
		AGBPlayerController_GetNoRecoil_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetNetInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Ping                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InKiloBytesPerSecond                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            InPacketsPerSecond                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            InLossPercentage                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutKiloBytesPerSecond                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutPacketsPerSecond                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutLossPercentage                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::GetNetInfo(int32_t* Ping, float* InKiloBytesPerSecond, int32_t* InPacketsPerSecond, int32_t* InLossPercentage, float* OutKiloBytesPerSecond, int32_t* OutPacketsPerSecond, int32_t* OutLossPercentage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetNetInfo");
		
		AGBPlayerController_GetNetInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Ping != nullptr)
			*Ping = params.Ping;
		if (InKiloBytesPerSecond != nullptr)
			*InKiloBytesPerSecond = params.InKiloBytesPerSecond;
		if (InPacketsPerSecond != nullptr)
			*InPacketsPerSecond = params.InPacketsPerSecond;
		if (InLossPercentage != nullptr)
			*InLossPercentage = params.InLossPercentage;
		if (OutKiloBytesPerSecond != nullptr)
			*OutKiloBytesPerSecond = params.OutKiloBytesPerSecond;
		if (OutPacketsPerSecond != nullptr)
			*OutPacketsPerSecond = params.OutPacketsPerSecond;
		if (OutLossPercentage != nullptr)
			*OutLossPercentage = params.OutLossPercentage;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetLastTeamKillVictimPlayerState
	 * 		Flags  -> ()
	 */
	class APlayerState* AGBPlayerController::GetLastTeamKillVictimPlayerState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetLastTeamKillVictimPlayerState");
		
		AGBPlayerController_GetLastTeamKillVictimPlayerState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetLastDesiredOffTargetAlphaValue
	 * 		Flags  -> ()
	 */
	float AGBPlayerController::GetLastDesiredOffTargetAlphaValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetLastDesiredOffTargetAlphaValue");
		
		AGBPlayerController_GetLastDesiredOffTargetAlphaValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetGodMode
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::GetGodMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetGodMode");
		
		AGBPlayerController_GetGodMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetGBHUD
	 * 		Flags  -> ()
	 */
	class AGBHUD* AGBPlayerController::GetGBHUD()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetGBHUD");
		
		AGBPlayerController_GetGBHUD_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetGBCharacter
	 * 		Flags  -> ()
	 */
	class AGBCharacter* AGBPlayerController::GetGBCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetGBCharacter");
		
		AGBPlayerController_GetGBCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetFPS
	 * 		Flags  -> ()
	 */
	int32_t AGBPlayerController::GetFPS()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetFPS");
		
		AGBPlayerController_GetFPS_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetFluidStance
	 * 		Flags  -> ()
	 */
	bool AGBPlayerController::GetFluidStance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetFluidStance");
		
		AGBPlayerController_GetFluidStance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetEyeBias
	 * 		Flags  -> ()
	 */
	float AGBPlayerController::GetEyeBias()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetEyeBias");
		
		AGBPlayerController_GetEyeBias_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.GetCameraStyle
	 * 		Flags  -> ()
	 */
	class FName AGBPlayerController::GetCameraStyle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.GetCameraStyle");
		
		AGBPlayerController_GetCameraStyle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.FrozenTimeLeft
	 * 		Flags  -> ()
	 */
	float AGBPlayerController::FrozenTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.FrozenTimeLeft");
		
		AGBPlayerController_FrozenTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.Freeze
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::Freeze(float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.Freeze");
		
		AGBPlayerController_Freeze_Params params {};
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.Forgive
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::Forgive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.Forgive");
		
		AGBPlayerController_Forgive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ForceHideTransitionScreens
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ForceHideTransitionScreens()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ForceHideTransitionScreens");
		
		AGBPlayerController_ForceHideTransitionScreens_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.FlushActions
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::FlushActions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.FlushActions");
		
		AGBPlayerController_FlushActions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.FirearmAttachment_Released
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::FirearmAttachment_Released()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.FirearmAttachment_Released");
		
		AGBPlayerController_FirearmAttachment_Released_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.FirearmAttachment_Pressed
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::FirearmAttachment_Pressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.FirearmAttachment_Pressed");
		
		AGBPlayerController_FirearmAttachment_Pressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.EditMission
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::EditMission()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.EditMission");
		
		AGBPlayerController_EditMission_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.DropEquipped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bDropLeftHand                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDropRightHand                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::DropEquipped(bool bDropLeftHand, bool bDropRightHand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.DropEquipped");
		
		AGBPlayerController_DropEquipped_Params params {};
		params.bDropLeftHand = bDropLeftHand;
		params.bDropRightHand = bDropRightHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.DelayedSaveConfig
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::DelayedSaveConfig()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.DelayedSaveConfig");
		
		AGBPlayerController_DelayedSaveConfig_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.DecreaseSightMagnificationPressed
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::DecreaseSightMagnificationPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.DecreaseSightMagnificationPressed");
		
		AGBPlayerController_DecreaseSightMagnificationPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.DecreaseReticleBrightnessLevel
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::DecreaseReticleBrightnessLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.DecreaseReticleBrightnessLevel");
		
		AGBPlayerController_DecreaseReticleBrightnessLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.CycleReticleColour
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::CycleReticleColour()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.CycleReticleColour");
		
		AGBPlayerController_CycleReticleColour_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientTeamKillWarn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                VictimPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientTeamKillWarn(class APlayerState* VictimPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientTeamKillWarn");
		
		AGBPlayerController_ClientTeamKillWarn_Params params {};
		params.VictimPlayerState = VictimPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientTeamKilledNotify
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                TeamKillerPlayerState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PrevKills                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientTeamKilledNotify(class APlayerState* TeamKillerPlayerState, int32_t PrevKills)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientTeamKilledNotify");
		
		AGBPlayerController_ClientTeamKilledNotify_Params params {};
		params.TeamKillerPlayerState = TeamKillerPlayerState;
		params.PrevKills = PrevKills;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientShowWorldPrompt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     PromptLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientShowWorldPrompt(const struct FVector& PromptLocation, const class FName& Tag, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientShowWorldPrompt");
		
		AGBPlayerController_ClientShowWorldPrompt_Params params {};
		params.PromptLocation = PromptLocation;
		params.Tag = Tag;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientShowSpawnProtectionWarning
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bShow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientShowSpawnProtectionWarning(bool bShow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientShowSpawnProtectionWarning");
		
		AGBPlayerController_ClientShowSpawnProtectionWarning_Params params {};
		params.bShow = bShow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientShowMenu
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSoftClassPath                              MenuClassName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientShowMenu(const struct FSoftClassPath& MenuClassName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientShowMenu");
		
		AGBPlayerController_ClientShowMenu_Params params {};
		params.MenuClassName = MenuClassName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientShowAdminMenu
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ClientShowAdminMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientShowAdminMenu");
		
		AGBPlayerController_ClientShowAdminMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientSetIgnoreUseInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIgnore                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientSetIgnoreUseInput(bool bIgnore)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientSetIgnoreUseInput");
		
		AGBPlayerController_ClientSetIgnoreUseInput_Params params {};
		params.bIgnore = bIgnore;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientSendPlayerCharVoice
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              SenderPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPrimaryAssetId                             SenderCharVoiceDataId                                      (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Key                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsRadio                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientSendPlayerCharVoice(class AGBPlayerState* SenderPlayerState, const struct FPrimaryAssetId& SenderCharVoiceDataId, const class FName& Key, bool bIsRadio)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientSendPlayerCharVoice");
		
		AGBPlayerController_ClientSendPlayerCharVoice_Params params {};
		params.SenderPlayerState = SenderPlayerState;
		params.SenderCharVoiceDataId = SenderCharVoiceDataId;
		params.Key = Key;
		params.bIsRadio = bIsRadio;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientOnLoadoutApplied
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ClientOnLoadoutApplied()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientOnLoadoutApplied");
		
		AGBPlayerController_ClientOnLoadoutApplied_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientInitialSync
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ClientInitialSync()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientInitialSync");
		
		AGBPlayerController_ClientInitialSync_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientGameMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        GameMessageId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientGameMessage(const class FName& GameMessageId, const class FName& Type, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientGameMessage");
		
		AGBPlayerController_ClientGameMessage_Params params {};
		params.GameMessageId = GameMessageId;
		params.Type = Type;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientFreeze
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientFreeze(float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientFreeze");
		
		AGBPlayerController_ClientFreeze_Params params {};
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientEnterReadyRoom
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ClientEnterReadyRoom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientEnterReadyRoom");
		
		AGBPlayerController_ClientEnterReadyRoom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientEnterPlayArea
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ClientEnterPlayArea()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientEnterPlayArea");
		
		AGBPlayerController_ClientEnterPlayArea_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientBecameSpectator
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     NewSpectatorLocation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    NewSpectatorRotation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientBecameSpectator(const struct FVector& NewSpectatorLocation, const struct FRotator& NewSpectatorRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientBecameSpectator");
		
		AGBPlayerController_ClientBecameSpectator_Params params {};
		params.NewSpectatorLocation = NewSpectatorLocation;
		params.NewSpectatorRotation = NewSpectatorRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientAFKPrompt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              ReponseTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientAFKPrompt(float ReponseTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientAFKPrompt");
		
		AGBPlayerController_ClientAFKPrompt_Params params {};
		params.ReponseTime = ReponseTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClientAdminReply
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FZKReplicatedContent                        Content                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::ClientAdminReply(const struct FZKReplicatedContent& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClientAdminReply");
		
		AGBPlayerController_ClientAdminReply_Params params {};
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClearOverrideWidget
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ClearOverrideWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClearOverrideWidget");
		
		AGBPlayerController_ClearOverrideWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClearCurrentInteractivePrimitive
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ClearCurrentInteractivePrimitive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClearCurrentInteractivePrimitive");
		
		AGBPlayerController_ClearCurrentInteractivePrimitive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClearAutoSwitchTimer
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ClearAutoSwitchTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClearAutoSwitchTimer");
		
		AGBPlayerController_ClearAutoSwitchTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.ClearAllIgnoreUseInputReasons
	 * 		Flags  -> ()
	 */
	void AGBPlayerController::ClearAllIgnoreUseInputReasons()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.ClearAllIgnoreUseInputReasons");
		
		AGBPlayerController_ClearAllIgnoreUseInputReasons_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.BulletWarn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Bullet                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSubSonic                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::BulletWarn(class AActor* Bullet, bool bSubSonic)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.BulletWarn");
		
		AGBPlayerController_BulletWarn_Params params {};
		params.Bullet = Bullet;
		params.bSubSonic = bSubSonic;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.AdminSet
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FZKReplicatedContent                        Content                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::AdminSet(const struct FZKReplicatedContent& Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.AdminSet");
		
		AGBPlayerController_AdminSet_Params params {};
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.AdminRequest
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RequestType                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              OnAdminRequestFilled                                       (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::AdminRequest(const class FName& RequestType, const class FScriptDelegate& OnAdminRequestFilled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.AdminRequest");
		
		AGBPlayerController_AdminRequest_Params params {};
		params.RequestType = RequestType;
		params.OnAdminRequestFilled = OnAdminRequestFilled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.Admin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::Admin(const class FString& Parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.Admin");
		
		AGBPlayerController_Admin_Params params {};
		params.Parameters = Parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.AddLocalPlayerTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        LocalPlayerTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::AddLocalPlayerTag(const class FName& LocalPlayerTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.AddLocalPlayerTag");
		
		AGBPlayerController_AddLocalPlayerTag_Params params {};
		params.LocalPlayerTag = LocalPlayerTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerController.AddIgnoreUseInputReason
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Reason                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerController::AddIgnoreUseInputReason(const class FName& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerController.AddIgnoreUseInputReason");
		
		AGBPlayerController_AddIgnoreUseInputReason_Params params {};
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBPlayerController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBPlayerController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPlayerController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCheatManager.ZeroSightTo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewZeroDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBCheatManager::ZeroSightTo(int32_t NewZeroDistance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCheatManager.ZeroSightTo");
		
		UGBCheatManager_ZeroSightTo_Params params {};
		params.NewZeroDistance = NewZeroDistance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCheatManager.ValidateKitAssetIds
	 * 		Flags  -> ()
	 */
	void UGBCheatManager::ValidateKitAssetIds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCheatManager.ValidateKitAssetIds");
		
		UGBCheatManager_ValidateKitAssetIds_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCheatManager.SetWaterLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            InWaterLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBCheatManager::SetWaterLevel(int32_t InWaterLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCheatManager.SetWaterLevel");
		
		UGBCheatManager_SetWaterLevel_Params params {};
		params.InWaterLevel = InWaterLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCheatManager.NoTarget
	 * 		Flags  -> ()
	 */
	void UGBCheatManager::NoTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCheatManager.NoTarget");
		
		UGBCheatManager_NoTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCheatManager.NoSway
	 * 		Flags  -> ()
	 */
	void UGBCheatManager::NoSway()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCheatManager.NoSway");
		
		UGBCheatManager_NoSway_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCheatManager.NoRecoil
	 * 		Flags  -> ()
	 */
	void UGBCheatManager::NoRecoil()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCheatManager.NoRecoil");
		
		UGBCheatManager_NoRecoil_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBCheatManager.DebugGameCommand
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Parameters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBCheatManager::DebugGameCommand(const class FString& Parameters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBCheatManager.DebugGameCommand");
		
		UGBCheatManager_DebugGameCommand_Params params {};
		params.Parameters = Parameters;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBCheatManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBCheatManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBCheatManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBClothing.OnTakeHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RefBoneName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     RefPosPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBClothing::OnTakeHit(const class FName& RefBoneName, const struct FVector& RefPosPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBClothing.OnTakeHit");
		
		AGBClothing_OnTakeHit_Params params {};
		params.RefBoneName = RefBoneName;
		params.RefPosPosition = RefPosPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBClothing.GetCustomAssetRef
	 * 		Flags  -> ()
	 */
	class UObject* AGBClothing::GetCustomAssetRef()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBClothing.GetCustomAssetRef");
		
		AGBClothing_GetCustomAssetRef_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBClothing.GetCustomAsset
	 * 		Flags  -> ()
	 */
	struct FSoftObjectPath AGBClothing::GetCustomAsset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBClothing.GetCustomAsset");
		
		AGBClothing_GetCustomAsset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBClothing.Apply
	 * 		Flags  -> ()
	 */
	void AGBClothing::Apply()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBClothing.Apply");
		
		AGBClothing_Apply_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBClothing.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBClothing::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBClothing");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBCrowdFollowingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBCrowdFollowingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBCrowdFollowingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBDirectSight.GetType
	 * 		Flags  -> ()
	 */
	class FName AGBDirectSight::GetType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBDirectSight.GetType");
		
		AGBDirectSight_GetType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBDirectSight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBDirectSight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBDirectSight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBDroppedItem.SetAssociatedItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     NewAssociatedItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBDroppedItem::SetAssociatedItem(class AGBItem* NewAssociatedItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBDroppedItem.SetAssociatedItem");
		
		AGBDroppedItem_SetAssociatedItem_Params params {};
		params.NewAssociatedItem = NewAssociatedItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBDroppedItem.RescueImportant
	 * 		Flags  -> ()
	 */
	void AGBDroppedItem::RescueImportant()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBDroppedItem.RescueImportant");
		
		AGBDroppedItem_RescueImportant_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBDroppedItem.OnRep_AssociatedItem
	 * 		Flags  -> ()
	 */
	void AGBDroppedItem::OnRep_AssociatedItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBDroppedItem.OnRep_AssociatedItem");
		
		AGBDroppedItem_OnRep_AssociatedItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBDroppedItem.OnPhysicsCollision
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBDroppedItem::OnPhysicsCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBDroppedItem.OnPhysicsCollision");
		
		AGBDroppedItem_OnPhysicsCollision_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBDroppedItem.MakeInteractiveEvent
	 * 		Flags  -> ()
	 */
	void AGBDroppedItem::MakeInteractiveEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBDroppedItem.MakeInteractiveEvent");
		
		AGBDroppedItem_MakeInteractiveEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBDroppedItem.IsImportant
	 * 		Flags  -> ()
	 */
	bool AGBDroppedItem::IsImportant()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBDroppedItem.IsImportant");
		
		AGBDroppedItem_IsImportant_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBDroppedItem.GetAssociatedItem
	 * 		Flags  -> ()
	 */
	class AGBItem* AGBDroppedItem::GetAssociatedItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBDroppedItem.GetAssociatedItem");
		
		AGBDroppedItem_GetAssociatedItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBDroppedItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBDroppedItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBDroppedItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBEjectComponent.IsManuallyEjected
	 * 		Flags  -> ()
	 */
	bool UGBEjectComponent::IsManuallyEjected()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBEjectComponent.IsManuallyEjected");
		
		UGBEjectComponent_IsManuallyEjected_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBEjectComponent.DeActivateSmoke
	 * 		Flags  -> ()
	 */
	void UGBEjectComponent::DeActivateSmoke()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBEjectComponent.DeActivateSmoke");
		
		UGBEjectComponent_DeActivateSmoke_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBEjectComponent.DeActivateShell
	 * 		Flags  -> ()
	 */
	void UGBEjectComponent::DeActivateShell()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBEjectComponent.DeActivateShell");
		
		UGBEjectComponent_DeActivateShell_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBEjectComponent.ActivateSmoke
	 * 		Flags  -> ()
	 */
	void UGBEjectComponent::ActivateSmoke()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBEjectComponent.ActivateSmoke");
		
		UGBEjectComponent_ActivateSmoke_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBEjectComponent.ActivateShell
	 * 		Flags  -> ()
	 */
	void UGBEjectComponent::ActivateShell()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBEjectComponent.ActivateShell");
		
		UGBEjectComponent_ActivateShell_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBEjectComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBEjectComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBEjectComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.SetIsFiringFromOpenBolt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewIsFiringFromOpenBolt                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBExternalMagazineComponent::SetIsFiringFromOpenBolt(bool bNewIsFiringFromOpenBolt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.SetIsFiringFromOpenBolt");
		
		UGBExternalMagazineComponent_SetIsFiringFromOpenBolt_Params params {};
		params.bNewIsFiringFromOpenBolt = bNewIsFiringFromOpenBolt;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.SetChamberedRound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      NewChamberedRound                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBExternalMagazineComponent::SetChamberedRound(class UClass* NewChamberedRound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.SetChamberedRound");
		
		UGBExternalMagazineComponent_SetChamberedRound_Params params {};
		params.NewChamberedRound = NewChamberedRound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.SetBoltHeldOpen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewBoltIsHeldOpen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBExternalMagazineComponent::SetBoltHeldOpen(bool bNewBoltIsHeldOpen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.SetBoltHeldOpen");
		
		UGBExternalMagazineComponent_SetBoltHeldOpen_Params params {};
		params.bNewBoltIsHeldOpen = bNewBoltIsHeldOpen;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.GetMagazineType
	 * 		Flags  -> ()
	 */
	class FName UGBExternalMagazineComponent::GetMagazineType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.GetMagazineType");
		
		UGBExternalMagazineComponent_GetMagazineType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.GetMagazineClass
	 * 		Flags  -> ()
	 */
	class UClass* UGBExternalMagazineComponent::GetMagazineClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.GetMagazineClass");
		
		UGBExternalMagazineComponent_GetMagazineClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.GetMagazine
	 * 		Flags  -> ()
	 */
	class AGBMagazine* UGBExternalMagazineComponent::GetMagazine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.GetMagazine");
		
		UGBExternalMagazineComponent_GetMagazine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.GetIsFiringFromOpenBolt
	 * 		Flags  -> ()
	 */
	bool UGBExternalMagazineComponent::GetIsFiringFromOpenBolt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.GetIsFiringFromOpenBolt");
		
		UGBExternalMagazineComponent_GetIsFiringFromOpenBolt_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.GetDefaultMagazineClass
	 * 		Flags  -> ()
	 */
	class UClass* UGBExternalMagazineComponent::GetDefaultMagazineClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.GetDefaultMagazineClass");
		
		UGBExternalMagazineComponent_GetDefaultMagazineClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.GetChamberedRound
	 * 		Flags  -> ()
	 */
	class UClass* UGBExternalMagazineComponent::GetChamberedRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.GetChamberedRound");
		
		UGBExternalMagazineComponent_GetChamberedRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.GetBoltHeldOpen
	 * 		Flags  -> ()
	 */
	bool UGBExternalMagazineComponent::GetBoltHeldOpen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.GetBoltHeldOpen");
		
		UGBExternalMagazineComponent_GetBoltHeldOpen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBExternalMagazineComponent.FindCompatibleMagazine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBMagazine* UGBExternalMagazineComponent::FindCompatibleMagazine(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBExternalMagazineComponent.FindCompatibleMagazine");
		
		UGBExternalMagazineComponent_FindCompatibleMagazine_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBExternalMagazineComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBExternalMagazineComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBExternalMagazineComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ZeroCurrentSightComp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBSightComponent*                           SightComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::ZeroCurrentSightComp(class UGBSightComponent* SightComp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ZeroCurrentSightComp");
		
		AGBFirearm_ZeroCurrentSightComp_Params params {};
		params.SightComp = SightComp;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.UseRound
	 * 		Flags  -> ()
	 */
	void AGBFirearm::UseRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.UseRound");
		
		AGBFirearm_UseRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.TriggerPullDelay
	 * 		Flags  -> ()
	 */
	void AGBFirearm::TriggerPullDelay()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.TriggerPullDelay");
		
		AGBFirearm_TriggerPullDelay_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.SpatialSoundSphereEndOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::SpatialSoundSphereEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.SpatialSoundSphereEndOverlap");
		
		AGBFirearm_SpatialSoundSphereEndOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.SpatialSoundSphereBeginOverlap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::SpatialSoundSphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.SpatialSoundSphereBeginOverlap");
		
		AGBFirearm_SpatialSoundSphereBeginOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.SetupCollisionTraceEndOffset
	 * 		Flags  -> ()
	 */
	void AGBFirearm::SetupCollisionTraceEndOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.SetupCollisionTraceEndOffset");
		
		AGBFirearm_SetupCollisionTraceEndOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.SetFiringModeIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewFiringModeIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::SetFiringModeIndex(unsigned char NewFiringModeIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.SetFiringModeIndex");
		
		AGBFirearm_SetFiringModeIndex_Params params {};
		params.NewFiringModeIndex = NewFiringModeIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.SetFiringModeByString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      FiringModeString                                           (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::SetFiringModeByString(const class FString& FiringModeString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.SetFiringModeByString");
		
		AGBFirearm_SetFiringModeByString_Params params {};
		params.FiringModeString = FiringModeString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.SetCurrentSight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBSightComponent*                           NewSight                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::SetCurrentSight(class UGBSightComponent* NewSight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.SetCurrentSight");
		
		AGBFirearm_SetCurrentSight_Params params {};
		params.NewSight = NewSight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ServerSetFiringModeIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewFiringMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::ServerSetFiringModeIndex(unsigned char NewFiringMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ServerSetFiringModeIndex");
		
		AGBFirearm_ServerSetFiringModeIndex_Params params {};
		params.NewFiringMode = NewFiringMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ServerSetCurrentSight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBSightComponent*                           NewSight                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::ServerSetCurrentSight(class UGBSightComponent* NewSight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ServerSetCurrentSight");
		
		AGBFirearm_ServerSetCurrentSight_Params params {};
		params.NewSight = NewSight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ServerReloadBegin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                ReloadPlan                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::ServerReloadBegin(TArray<class FName> ReloadPlan)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ServerReloadBegin");
		
		AGBFirearm_ServerReloadBegin_Params params {};
		params.ReloadPlan = ReloadPlan;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ServerReleaseTrigger
	 * 		Flags  -> ()
	 */
	void AGBFirearm::ServerReleaseTrigger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ServerReleaseTrigger");
		
		AGBFirearm_ServerReleaseTrigger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ServerPullTrigger
	 * 		Flags  -> ()
	 */
	void AGBFirearm::ServerPullTrigger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ServerPullTrigger");
		
		AGBFirearm_ServerPullTrigger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ReloadInputDelay
	 * 		Flags  -> ()
	 */
	void AGBFirearm::ReloadInputDelay()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ReloadInputDelay");
		
		AGBFirearm_ReloadInputDelay_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ReloadBegin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FGameplayTag>                        ReloadStateFlags                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::ReloadBegin(TArray<struct FGameplayTag> ReloadStateFlags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ReloadBegin");
		
		AGBFirearm_ReloadBegin_Params params {};
		params.ReloadStateFlags = ReloadStateFlags;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ReleaseTrigger
	 * 		Flags  -> ()
	 */
	void AGBFirearm::ReleaseTrigger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ReleaseTrigger");
		
		AGBFirearm_ReleaseTrigger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.PullTrigger
	 * 		Flags  -> ()
	 */
	void AGBFirearm::PullTrigger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.PullTrigger");
		
		AGBFirearm_PullTrigger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.OnStoppedFiringEvent
	 * 		Flags  -> ()
	 */
	void AGBFirearm::OnStoppedFiringEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.OnStoppedFiringEvent");
		
		AGBFirearm_OnStoppedFiringEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.OnSpatialSoundTagChangedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        OldSpatialSoundTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewSpatialSoundTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::OnSpatialSoundTagChangedEvent(const class FName& OldSpatialSoundTag, const class FName& NewSpatialSoundTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.OnSpatialSoundTagChangedEvent");
		
		AGBFirearm_OnSpatialSoundTagChangedEvent_Params params {};
		params.OldSpatialSoundTag = OldSpatialSoundTag;
		params.NewSpatialSoundTag = NewSpatialSoundTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.OnSetFiringModeIndexEvent
	 * 		Flags  -> ()
	 */
	void AGBFirearm::OnSetFiringModeIndexEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.OnSetFiringModeIndexEvent");
		
		AGBFirearm_OnSetFiringModeIndexEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.OnRep_CurrentSight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBSightComponent*                           LastActiveSightComponent                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::OnRep_CurrentSight(class UGBSightComponent* LastActiveSightComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.OnRep_CurrentSight");
		
		AGBFirearm_OnRep_CurrentSight_Params params {};
		params.LastActiveSightComponent = LastActiveSightComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.OnReloadTappedEvent
	 * 		Flags  -> ()
	 */
	void AGBFirearm::OnReloadTappedEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.OnReloadTappedEvent");
		
		AGBFirearm_OnReloadTappedEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.OnReloadDoubleTappedEvent
	 * 		Flags  -> ()
	 */
	void AGBFirearm::OnReloadDoubleTappedEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.OnReloadDoubleTappedEvent");
		
		AGBFirearm_OnReloadDoubleTappedEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.OnFiringEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            RecoilCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::OnFiringEvent(int32_t RecoilCount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.OnFiringEvent");
		
		AGBFirearm_OnFiringEvent_Params params {};
		params.RecoilCount = RecoilCount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.OnEmptyShotEvent
	 * 		Flags  -> ()
	 */
	void AGBFirearm::OnEmptyShotEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.OnEmptyShotEvent");
		
		AGBFirearm_OnEmptyShotEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.OnChangeFiringModeEvent
	 * 		Flags  -> ()
	 */
	void AGBFirearm::OnChangeFiringModeEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.OnChangeFiringModeEvent");
		
		AGBFirearm_OnChangeFiringModeEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.NextShot
	 * 		Flags  -> ()
	 */
	void AGBFirearm::NextShot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.NextShot");
		
		AGBFirearm_NextShot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.IsReloading
	 * 		Flags  -> ()
	 */
	bool AGBFirearm::IsReloading()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.IsReloading");
		
		AGBFirearm_IsReloading_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.IsFingerOnTrigger
	 * 		Flags  -> ()
	 */
	bool AGBFirearm::IsFingerOnTrigger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.IsFingerOnTrigger");
		
		AGBFirearm_IsFingerOnTrigger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.IsEngaged
	 * 		Flags  -> ()
	 */
	bool AGBFirearm::IsEngaged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.IsEngaged");
		
		AGBFirearm_IsEngaged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.IsEmpty
	 * 		Flags  -> ()
	 */
	bool AGBFirearm::IsEmpty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.IsEmpty");
		
		AGBFirearm_IsEmpty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetTotalAvailableCount
	 * 		Flags  -> ()
	 */
	int32_t AGBFirearm::GetTotalAvailableCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetTotalAvailableCount");
		
		AGBFirearm_GetTotalAvailableCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetShotCount
	 * 		Flags  -> ()
	 */
	int32_t AGBFirearm::GetShotCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetShotCount");
		
		AGBFirearm_GetShotCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetRateOfFire
	 * 		Flags  -> ()
	 */
	float AGBFirearm::GetRateOfFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetRateOfFire");
		
		AGBFirearm_GetRateOfFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetNumSightLines
	 * 		Flags  -> ()
	 */
	int32_t AGBFirearm::GetNumSightLines()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetNumSightLines");
		
		AGBFirearm_GetNumSightLines_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetMuzzleOffset
	 * 		Flags  -> ()
	 */
	struct FVector AGBFirearm::GetMuzzleOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetMuzzleOffset");
		
		AGBFirearm_GetMuzzleOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetMinSightRelativeX
	 * 		Flags  -> ()
	 */
	float AGBFirearm::GetMinSightRelativeX()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetMinSightRelativeX");
		
		AGBFirearm_GetMinSightRelativeX_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetMaxGripRelativeX
	 * 		Flags  -> ()
	 */
	float AGBFirearm::GetMaxGripRelativeX()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetMaxGripRelativeX");
		
		AGBFirearm_GetMaxGripRelativeX_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetInteractComp
	 * 		Flags  -> ()
	 */
	class UAkComponent* AGBFirearm::GetInteractComp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetInteractComp");
		
		AGBFirearm_GetInteractComp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetGunshotComp
	 * 		Flags  -> ()
	 */
	class UAkComponent* AGBFirearm::GetGunshotComp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetGunshotComp");
		
		AGBFirearm_GetGunshotComp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetFiringModes
	 * 		Flags  -> ()
	 */
	TArray<struct FFiringModeData> AGBFirearm::GetFiringModes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetFiringModes");
		
		AGBFirearm_GetFiringModes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetFiringModeIndex
	 * 		Flags  -> ()
	 */
	unsigned char AGBFirearm::GetFiringModeIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetFiringModeIndex");
		
		AGBFirearm_GetFiringModeIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetFiringModeByString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      FiringModeString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	unsigned char AGBFirearm::GetFiringModeByString(const class FString& FiringModeString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetFiringModeByString");
		
		AGBFirearm_GetFiringModeByString_Params params {};
		params.FiringModeString = FiringModeString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetFirearmTransform
	 * 		Flags  -> ()
	 */
	struct FTransform AGBFirearm::GetFirearmTransform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetFirearmTransform");
		
		AGBFirearm_GetFirearmTransform_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetEmptySlingPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                GBCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName AGBFirearm::GetEmptySlingPoint(class AGBCharacter* GBCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetEmptySlingPoint");
		
		AGBFirearm_GetEmptySlingPoint_Params params {};
		params.GBCharacter = GBCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetEmptyHolster
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBHolster* AGBFirearm::GetEmptyHolster(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetEmptyHolster");
		
		AGBFirearm_GetEmptyHolster_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetCollisionTraceEndOffset
	 * 		Flags  -> ()
	 */
	struct FVector AGBFirearm::GetCollisionTraceEndOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetCollisionTraceEndOffset");
		
		AGBFirearm_GetCollisionTraceEndOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetBurstCount
	 * 		Flags  -> ()
	 */
	int32_t AGBFirearm::GetBurstCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetBurstCount");
		
		AGBFirearm_GetBurstCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetBulletProjectileClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBBarrelComponent*                          Barrel                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* AGBFirearm::GetBulletProjectileClass(class UGBBarrelComponent* Barrel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetBulletProjectileClass");
		
		AGBFirearm_GetBulletProjectileClass_Params params {};
		params.Barrel = Barrel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.GetBaseBulletProjectileClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBBarrelComponent*                          Barrel                                                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* AGBFirearm::GetBaseBulletProjectileClass(class UGBBarrelComponent* Barrel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.GetBaseBulletProjectileClass");
		
		AGBFirearm_GetBaseBulletProjectileClass_Params params {};
		params.Barrel = Barrel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.FireShot
	 * 		Flags  -> ()
	 */
	void AGBFirearm::FireShot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.FireShot");
		
		AGBFirearm_FireShot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.EndShot
	 * 		Flags  -> ()
	 */
	void AGBFirearm::EndShot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.EndShot");
		
		AGBFirearm_EndShot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.DisplayReloadMenuEvent
	 * 		Flags  -> ()
	 */
	void AGBFirearm::DisplayReloadMenuEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.DisplayReloadMenuEvent");
		
		AGBFirearm_DisplayReloadMenuEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.DisplayFiringModeMenuEvent
	 * 		Flags  -> ()
	 */
	void AGBFirearm::DisplayFiringModeMenuEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.DisplayFiringModeMenuEvent");
		
		AGBFirearm_DisplayFiringModeMenuEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.DisplayFiringModeMenu
	 * 		Flags  -> ()
	 */
	void AGBFirearm::DisplayFiringModeMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.DisplayFiringModeMenu");
		
		AGBFirearm_DisplayFiringModeMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.CheckWantsToPullTrigger
	 * 		Flags  -> ()
	 */
	void AGBFirearm::CheckWantsToPullTrigger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.CheckWantsToPullTrigger");
		
		AGBFirearm_CheckWantsToPullTrigger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.ChangeFiringModeIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Dir                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::ChangeFiringModeIndex(int32_t Dir)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.ChangeFiringModeIndex");
		
		AGBFirearm_ChangeFiringModeIndex_Params params {};
		params.Dir = Dir;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFirearm.AIReload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBAIController*                             AIController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ReloadType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBFirearm::AIReload(class AGBAIController* AIController, const class FName& ReloadType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFirearm.AIReload");
		
		AGBFirearm_AIReload_Params params {};
		params.AIController = AIController;
		params.ReloadType = ReloadType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBFirearm.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBFirearm::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBFirearm");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBFrontSightPostComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBFrontSightPostComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBFrontSightPostComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.ViewportPositionDeproject
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ViewportPosition                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutWorldOrigin                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutWorldDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::ViewportPositionDeproject(class UObject* WorldContextObject, const struct FVector2D& ViewportPosition, struct FVector* OutWorldOrigin, struct FVector* OutWorldDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.ViewportPositionDeproject");
		
		UGBFunctionLibrary_ViewportPositionDeproject_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ViewportPosition = ViewportPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutWorldOrigin != nullptr)
			*OutWorldOrigin = params.OutWorldOrigin;
		if (OutWorldDirection != nullptr)
			*OutWorldDirection = params.OutWorldDirection;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.VerticalFOV
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              HorizontalFOV                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              AspectRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBFunctionLibrary::VerticalFOV(float HorizontalFOV, float AspectRatio)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.VerticalFOV");
		
		UGBFunctionLibrary_VerticalFOV_Params params {};
		params.HorizontalFOV = HorizontalFOV;
		params.AspectRatio = AspectRatio;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.TrimDigitsFromString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::TrimDigitsFromString(const class FString& inString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.TrimDigitsFromString");
		
		UGBFunctionLibrary_TrimDigitsFromString_Params params {};
		params.inString = inString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Time_GetOSTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            MilliSeconds                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Seconds                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Minutes                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Hours12                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Hours24                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Day                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Month                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Year                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::Time_GetOSTime(int32_t* MilliSeconds, int32_t* Seconds, int32_t* Minutes, int32_t* Hours12, int32_t* Hours24, int32_t* Day, int32_t* Month, int32_t* Year)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Time_GetOSTime");
		
		UGBFunctionLibrary_Time_GetOSTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (MilliSeconds != nullptr)
			*MilliSeconds = params.MilliSeconds;
		if (Seconds != nullptr)
			*Seconds = params.Seconds;
		if (Minutes != nullptr)
			*Minutes = params.Minutes;
		if (Hours12 != nullptr)
			*Hours12 = params.Hours12;
		if (Hours24 != nullptr)
			*Hours24 = params.Hours24;
		if (Day != nullptr)
			*Day = params.Day;
		if (Month != nullptr)
			*Month = params.Month;
		if (Year != nullptr)
			*Year = params.Year;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.StringToDisplayString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsBool                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::StringToDisplayString(const class FString& inString, bool bIsBool)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.StringToDisplayString");
		
		UGBFunctionLibrary_StringToDisplayString_Params params {};
		params.inString = inString;
		params.bIsBool = bIsBool;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SortStringArray
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              StringArray                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              StringArrayRef                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SortStringArray(TArray<class FString>* StringArray, TArray<class FString>* StringArrayRef)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SortStringArray");
		
		UGBFunctionLibrary_SortStringArray_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (StringArray != nullptr)
			*StringArray = params.StringArray;
		if (StringArrayRef != nullptr)
			*StringArrayRef = params.StringArrayRef;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SortIntArray
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<int32_t>                                    IntArray                                                   (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<int32_t>                                    IntArrayRef                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SortIntArray(TArray<int32_t>* IntArray, TArray<int32_t>* IntArrayRef)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SortIntArray");
		
		UGBFunctionLibrary_SortIntArray_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (IntArray != nullptr)
			*IntArray = params.IntArray;
		if (IntArrayRef != nullptr)
			*IntArrayRef = params.IntArrayRef;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SortFloatArray
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<float>                                      FloatArray                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<float>                                      FloatArrayRef                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SortFloatArray(TArray<float>* FloatArray, TArray<float>* FloatArrayRef)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SortFloatArray");
		
		UGBFunctionLibrary_SortFloatArray_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (FloatArray != nullptr)
			*FloatArray = params.FloatArray;
		if (FloatArrayRef != nullptr)
			*FloatArrayRef = params.FloatArrayRef;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SortActorArray
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AActor*>                              ActorArray                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              ActorArrayRef                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SortActorArray(TArray<class AActor*>* ActorArray, TArray<class AActor*>* ActorArrayRef)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SortActorArray");
		
		UGBFunctionLibrary_SortActorArray_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ActorArray != nullptr)
			*ActorArray = params.ActorArray;
		if (ActorArrayRef != nullptr)
			*ActorArrayRef = params.ActorArrayRef;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SocketNameMatches
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                SocketNamesToCheck                                         (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FName                                        SocketNameToFind                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESearchFix                                         SearchFix                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::SocketNameMatches(TArray<class FName> SocketNamesToCheck, const class FName& SocketNameToFind, ESearchFix SearchFix)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SocketNameMatches");
		
		UGBFunctionLibrary_SocketNameMatches_Params params {};
		params.SocketNamesToCheck = SocketNamesToCheck;
		params.SocketNameToFind = SocketNameToFind;
		params.SearchFix = SearchFix;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SignedAlphaToByte
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              AlphaValue                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	unsigned char UGBFunctionLibrary::SignedAlphaToByte(float AlphaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SignedAlphaToByte");
		
		UGBFunctionLibrary_SignedAlphaToByte_Params params {};
		params.AlphaValue = AlphaValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SetSkyLightSourceType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USkyLightComponent*                          SkyLightComp                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESkyLightSourceType                                SourceType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SetSkyLightSourceType(class USkyLightComponent* SkyLightComp, ESkyLightSourceType SourceType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SetSkyLightSourceType");
		
		UGBFunctionLibrary_SetSkyLightSourceType_Params params {};
		params.SkyLightComp = SkyLightComp;
		params.SourceType = SourceType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SetSkyLightRealTimeCapture
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USkyLightComponent*                          SkyLightComp                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SetSkyLightRealTimeCapture(class USkyLightComponent* SkyLightComp, bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SetSkyLightRealTimeCapture");
		
		UGBFunctionLibrary_SetSkyLightRealTimeCapture_Params params {};
		params.SkyLightComp = SkyLightComp;
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SetGenericTeamId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      NewTeamId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::SetGenericTeamId(class AActor* Target, unsigned char NewTeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SetGenericTeamId");
		
		UGBFunctionLibrary_SetGenericTeamId_Params params {};
		params.Target = Target;
		params.NewTeamId = NewTeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SetConsoleString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      StringValue                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SetConsoleString(const class FString& ConsoleVar, const class FString& StringValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SetConsoleString");
		
		UGBFunctionLibrary_SetConsoleString_Params params {};
		params.ConsoleVar = ConsoleVar;
		params.StringValue = StringValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SetConsoleInt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            IntValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SetConsoleInt(const class FString& ConsoleVar, int32_t IntValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SetConsoleInt");
		
		UGBFunctionLibrary_SetConsoleInt_Params params {};
		params.ConsoleVar = ConsoleVar;
		params.IntValue = IntValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SetConsoleFloat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              FloatValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SetConsoleFloat(const class FString& ConsoleVar, float FloatValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SetConsoleFloat");
		
		UGBFunctionLibrary_SetConsoleFloat_Params params {};
		params.ConsoleVar = ConsoleVar;
		params.FloatValue = FloatValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SetConsoleBool
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               BoolValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SetConsoleBool(const class FString& ConsoleVar, bool BoolValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SetConsoleBool");
		
		UGBFunctionLibrary_SetConsoleBool_Params params {};
		params.ConsoleVar = ConsoleVar;
		params.BoolValue = BoolValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SetComponentUseSimpleCharacterShadows
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseSimpleShadows                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::SetComponentUseSimpleCharacterShadows(class AActor* Target, bool bUseSimpleShadows)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SetComponentUseSimpleCharacterShadows");
		
		UGBFunctionLibrary_SetComponentUseSimpleCharacterShadows_Params params {};
		params.Target = Target;
		params.bUseSimpleShadows = bUseSimpleShadows;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.SaveStringToFile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      String                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOverWrite                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::SaveStringToFile(const class FString& Filename, const class FString& String, bool bOverWrite)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.SaveStringToFile");
		
		UGBFunctionLibrary_SaveStringToFile_Params params {};
		params.Filename = Filename;
		params.String = String;
		params.bOverWrite = bOverWrite;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.RenameActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      TargetActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      NewActorName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::RenameActor(class AActor* TargetActor, const class FString& NewActorName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.RenameActor");
		
		UGBFunctionLibrary_RenameActor_Params params {};
		params.TargetActor = TargetActor;
		params.NewActorName = NewActorName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.RemoveCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InCharacter                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::RemoveCharacter(const class FString& inString, const class FString& InCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.RemoveCharacter");
		
		UGBFunctionLibrary_RemoveCharacter_Params params {};
		params.inString = inString;
		params.InCharacter = InCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.RemoveBadCharacters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::RemoveBadCharacters(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.RemoveBadCharacters");
		
		UGBFunctionLibrary_RemoveBadCharacters_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Project
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTransform                                  ViewTM                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              FOV                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ScreenSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     WorldLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutScreenPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Project(const struct FTransform& ViewTM, float FOV, const struct FVector2D& ScreenSize, const struct FVector& WorldLocation, struct FVector2D* OutScreenPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Project");
		
		UGBFunctionLibrary_Project_Params params {};
		params.ViewTM = ViewTM;
		params.FOV = FOV;
		params.ScreenSize = ScreenSize;
		params.WorldLocation = WorldLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutScreenPosition != nullptr)
			*OutScreenPosition = params.OutScreenPosition;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.PrettifyJsonString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      JsonString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutPrettyKitString                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::PrettifyJsonString(const class FString& JsonString, class FString* OutPrettyKitString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.PrettifyJsonString");
		
		UGBFunctionLibrary_PrettifyJsonString_Params params {};
		params.JsonString = JsonString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPrettyKitString != nullptr)
			*OutPrettyKitString = params.OutPrettyKitString;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.ParseValue_String
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::ParseValue_String(const class FString& Options, const class FString& Match, class FString* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.ParseValue_String");
		
		UGBFunctionLibrary_ParseValue_String_Params params {};
		params.Options = Options;
		params.Match = Match;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Value != nullptr)
			*Value = params.Value;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.ParseValue_Name
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::ParseValue_Name(const class FString& Options, const class FString& Match, class FName* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.ParseValue_Name");
		
		UGBFunctionLibrary_ParseValue_Name_Params params {};
		params.Options = Options;
		params.Match = Match;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Value != nullptr)
			*Value = params.Value;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.ParseValue_Integer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::ParseValue_Integer(const class FString& Options, const class FString& Match, int32_t* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.ParseValue_Integer");
		
		UGBFunctionLibrary_ParseValue_Integer_Params params {};
		params.Options = Options;
		params.Match = Match;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Value != nullptr)
			*Value = params.Value;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.ParseValue_Float
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::ParseValue_Float(const class FString& Options, const class FString& Match, float* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.ParseValue_Float");
		
		UGBFunctionLibrary_ParseValue_Float_Params params {};
		params.Options = Options;
		params.Match = Match;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Value != nullptr)
			*Value = params.Value;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.ParseValue_Bool
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Match                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::ParseValue_Bool(const class FString& Options, const class FString& Match, bool* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.ParseValue_Bool");
		
		UGBFunctionLibrary_ParseValue_Bool_Params params {};
		params.Options = Options;
		params.Match = Match;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Value != nullptr)
			*Value = params.Value;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.OnSameTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      ActorA                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      ActorB                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::OnSameTeam(class AActor* ActorA, class AActor* ActorB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.OnSameTeam");
		
		UGBFunctionLibrary_OnSameTeam_Params params {};
		params.ActorA = ActorA;
		params.ActorB = ActorB;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.NameArraysMatch
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                SourceNames                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                TargetNames                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::NameArraysMatch(TArray<class FName> SourceNames, TArray<class FName> TargetNames)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.NameArraysMatch");
		
		UGBFunctionLibrary_NameArraysMatch_Params params {};
		params.SourceNames = SourceNames;
		params.TargetNames = TargetNames;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.LoadStringFromFile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutString                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLogWarnings                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::LoadStringFromFile(const class FString& Filename, class FString* OutString, bool bLogWarnings)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.LoadStringFromFile");
		
		UGBFunctionLibrary_LoadStringFromFile_Params params {};
		params.Filename = Filename;
		params.bLogWarnings = bLogWarnings;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutString != nullptr)
			*OutString = params.OutString;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.LoadStringArrayFromFile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              OutStringArray                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bLogWarnings                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::LoadStringArrayFromFile(const class FString& Filename, TArray<class FString>* OutStringArray, bool bLogWarnings)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.LoadStringArrayFromFile");
		
		UGBFunctionLibrary_LoadStringArrayFromFile_Params params {};
		params.Filename = Filename;
		params.bLogWarnings = bLogWarnings;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStringArray != nullptr)
			*OutStringArray = params.OutStringArray;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.LoadExternalImage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ImagePath                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTexture2D*                                  OutImage                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutWidth                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutHeight                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::LoadExternalImage(const class FString& ImagePath, class UTexture2D** OutImage, int32_t* OutWidth, int32_t* OutHeight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.LoadExternalImage");
		
		UGBFunctionLibrary_LoadExternalImage_Params params {};
		params.ImagePath = ImagePath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutImage != nullptr)
			*OutImage = params.OutImage;
		if (OutWidth != nullptr)
			*OutWidth = params.OutWidth;
		if (OutHeight != nullptr)
			*OutHeight = params.OutHeight;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsValidSoftObjectPath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSoftObjectPath                             SoftObjectPath                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::IsValidSoftObjectPath(const struct FSoftObjectPath& SoftObjectPath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsValidSoftObjectPath");
		
		UGBFunctionLibrary_IsValidSoftObjectPath_Params params {};
		params.SoftObjectPath = SoftObjectPath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsSimulatingInEditor
	 * 		Flags  -> ()
	 */
	bool UGBFunctionLibrary::IsSimulatingInEditor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsSimulatingInEditor");
		
		UGBFunctionLibrary_IsSimulatingInEditor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsKeyBoundToActionDown
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ActionName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::IsKeyBoundToActionDown(class APlayerController* PlayerController, const class FName& ActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsKeyBoundToActionDown");
		
		UGBFunctionLibrary_IsKeyBoundToActionDown_Params params {};
		params.PlayerController = PlayerController;
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsInState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InStateName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::IsInState(class AController* Target, const class FName& InStateName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsInState");
		
		UGBFunctionLibrary_IsInState_Params params {};
		params.Target = Target;
		params.InStateName = InStateName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsGameWorld
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::IsGameWorld(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsGameWorld");
		
		UGBFunctionLibrary_IsGameWorld_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsFriendly
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      ActorA                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      ActorB                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::IsFriendly(class AActor* ActorA, class AActor* ActorB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsFriendly");
		
		UGBFunctionLibrary_IsFriendly_Params params {};
		params.ActorA = ActorA;
		params.ActorB = ActorB;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsFacing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MinForwardDot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIgnoreVerticalFacing                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::IsFacing(class AActor* Target, const struct FVector& Location, float MinForwardDot, bool bIgnoreVerticalFacing)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsFacing");
		
		UGBFunctionLibrary_IsFacing_Params params {};
		params.Target = Target;
		params.Location = Location;
		params.MinForwardDot = MinForwardDot;
		params.bIgnoreVerticalFacing = bIgnoreVerticalFacing;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsEditorWorld
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::IsEditorWorld(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsEditorWorld");
		
		UGBFunctionLibrary_IsEditorWorld_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsEditor
	 * 		Flags  -> ()
	 */
	bool UGBFunctionLibrary::IsEditor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsEditor");
		
		UGBFunctionLibrary_IsEditor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.IsDebugDisplayOn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        DebugType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::IsDebugDisplayOn(class UObject* WorldContextObject, const class FName& DebugType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.IsDebugDisplayOn");
		
		UGBFunctionLibrary_IsDebugDisplayOn_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.DebugType = DebugType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.HorizontalFOV
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              VerticalFOV                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              AspectRatio                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBFunctionLibrary::HorizontalFOV(float VerticalFOV, float AspectRatio)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.HorizontalFOV");
		
		UGBFunctionLibrary_HorizontalFOV_Params params {};
		params.VerticalFOV = VerticalFOV;
		params.AspectRatio = AspectRatio;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetViewportPositionHitResultByChannel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ViewportPosition                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ECollisionChannel                                  TraceChannel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bTraceComplex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OutHitResult                                               (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::GetViewportPositionHitResultByChannel(class UObject* WorldContextObject, const struct FVector2D& ViewportPosition, ECollisionChannel TraceChannel, bool bTraceComplex, TArray<class AActor*> IgnoreActors, struct FHitResult* OutHitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetViewportPositionHitResultByChannel");
		
		UGBFunctionLibrary_GetViewportPositionHitResultByChannel_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ViewportPosition = ViewportPosition;
		params.TraceChannel = TraceChannel;
		params.bTraceComplex = bTraceComplex;
		params.IgnoreActors = IgnoreActors;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHitResult != nullptr)
			*OutHitResult = params.OutHitResult;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetViewportPosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ScreenPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutViewportPosition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::GetViewportPosition(class UObject* WorldContextObject, const struct FVector2D& ScreenPosition, struct FVector2D* OutViewportPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetViewportPosition");
		
		UGBFunctionLibrary_GetViewportPosition_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ScreenPosition = ScreenPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutViewportPosition != nullptr)
			*OutViewportPosition = params.OutViewportPosition;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetUseSimpleCharacterShadows
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::GetUseSimpleCharacterShadows(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetUseSimpleCharacterShadows");
		
		UGBFunctionLibrary_GetUseSimpleCharacterShadows_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetUnixTimestamp
	 * 		Flags  -> ()
	 */
	int32_t UGBFunctionLibrary::GetUnixTimestamp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetUnixTimestamp");
		
		UGBFunctionLibrary_GetUnixTimestamp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetTimeAlive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBFunctionLibrary::GetTimeAlive(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetTimeAlive");
		
		UGBFunctionLibrary_GetTimeAlive_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetStateName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UGBFunctionLibrary::GetStateName(class AController* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetStateName");
		
		UGBFunctionLibrary_GetStateName_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetScreenShotDir
	 * 		Flags  -> ()
	 */
	class FString UGBFunctionLibrary::GetScreenShotDir()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetScreenShotDir");
		
		UGBFunctionLibrary_GetScreenShotDir_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetSavedDir
	 * 		Flags  -> ()
	 */
	class FString UGBFunctionLibrary::GetSavedDir()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetSavedDir");
		
		UGBFunctionLibrary_GetSavedDir_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetSavedConfigDir
	 * 		Flags  -> ()
	 */
	class FString UGBFunctionLibrary::GetSavedConfigDir()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetSavedConfigDir");
		
		UGBFunctionLibrary_GetSavedConfigDir_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetRefPoseBoneTransform
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USkeletalMeshComponent*                      SkelMesh                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FTransform UGBFunctionLibrary::GetRefPoseBoneTransform(class USkeletalMeshComponent* SkelMesh, const class FName& BoneName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetRefPoseBoneTransform");
		
		UGBFunctionLibrary_GetRefPoseBoneTransform_Params params {};
		params.SkelMesh = SkelMesh;
		params.BoneName = BoneName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetProjectVersion
	 * 		Flags  -> ()
	 */
	class FString UGBFunctionLibrary::GetProjectVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetProjectVersion");
		
		UGBFunctionLibrary_GetProjectVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetOptionsFromCommandLine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CommandLine                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::GetOptionsFromCommandLine(const class FString& CommandLine)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetOptionsFromCommandLine");
		
		UGBFunctionLibrary_GetOptionsFromCommandLine_Params params {};
		params.CommandLine = CommandLine;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetNetworkVersion
	 * 		Flags  -> ()
	 */
	int32_t UGBFunctionLibrary::GetNetworkVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetNetworkVersion");
		
		UGBFunctionLibrary_GetNetworkVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetMaterialInstanceStaticSwitchParameterValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMaterialInstance*                           Instance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ParameterName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCheckParent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::GetMaterialInstanceStaticSwitchParameterValue(class UMaterialInstance* Instance, const class FName& ParameterName, bool bCheckParent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetMaterialInstanceStaticSwitchParameterValue");
		
		UGBFunctionLibrary_GetMaterialInstanceStaticSwitchParameterValue_Params params {};
		params.Instance = Instance;
		params.ParameterName = ParameterName;
		params.bCheckParent = bCheckParent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetMatchingSocketNames
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                CheckSocketNames                                           (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class USceneComponent*                             SceneComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                OutSocketNames                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		ESearchFix                                         SearchFix                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::GetMatchingSocketNames(TArray<class FName> CheckSocketNames, class USceneComponent* SceneComp, TArray<class FName>* OutSocketNames, ESearchFix SearchFix)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetMatchingSocketNames");
		
		UGBFunctionLibrary_GetMatchingSocketNames_Params params {};
		params.CheckSocketNames = CheckSocketNames;
		params.SceneComp = SceneComp;
		params.SearchFix = SearchFix;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutSocketNames != nullptr)
			*OutSocketNames = params.OutSocketNames;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetMapPath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bTrimGame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::GetMapPath(class UObject* WorldContextObject, bool bTrimGame)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetMapPath");
		
		UGBFunctionLibrary_GetMapPath_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.bTrimGame = bTrimGame;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetMapFromCommandLine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CommandLine                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bRemovePath                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::GetMapFromCommandLine(const class FString& CommandLine, bool bRemovePath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetMapFromCommandLine");
		
		UGBFunctionLibrary_GetMapFromCommandLine_Params params {};
		params.CommandLine = CommandLine;
		params.bRemovePath = bRemovePath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetMapAssetPackageName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bTrimGame                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::GetMapAssetPackageName(class UObject* WorldContextObject, bool bTrimGame)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetMapAssetPackageName");
		
		UGBFunctionLibrary_GetMapAssetPackageName_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.bTrimGame = bTrimGame;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetLocalPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ULocalPlayer* UGBFunctionLibrary::GetLocalPlayer(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetLocalPlayer");
		
		UGBFunctionLibrary_GetLocalPlayer_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetLastDigitsFromString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UGBFunctionLibrary::GetLastDigitsFromString(const class FString& inString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetLastDigitsFromString");
		
		UGBFunctionLibrary_GetLastDigitsFromString_Params params {};
		params.inString = inString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetKeyText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FKey                                        Key                                                        (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UGBFunctionLibrary::GetKeyText(const struct FKey& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetKeyText");
		
		UGBFunctionLibrary_GetKeyText_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetKeysBoundToAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FKey> UGBFunctionLibrary::GetKeysBoundToAction(const class FName& ActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetKeysBoundToAction");
		
		UGBFunctionLibrary_GetKeysBoundToAction_Params params {};
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetGenericTeamId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	unsigned char UGBFunctionLibrary::GetGenericTeamId(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetGenericTeamId");
		
		UGBFunctionLibrary_GetGenericTeamId_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetGBLocalPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGBLocalPlayer* UGBFunctionLibrary::GetGBLocalPlayer(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetGBLocalPlayer");
		
		UGBFunctionLibrary_GetGBLocalPlayer_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetGameLogDir
	 * 		Flags  -> ()
	 */
	class FString UGBFunctionLibrary::GetGameLogDir()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetGameLogDir");
		
		UGBFunctionLibrary_GetGameLogDir_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetGameDir
	 * 		Flags  -> ()
	 */
	class FString UGBFunctionLibrary::GetGameDir()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetGameDir");
		
		UGBFunctionLibrary_GetGameDir_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetGameContentDir
	 * 		Flags  -> ()
	 */
	class FString UGBFunctionLibrary::GetGameContentDir()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetGameContentDir");
		
		UGBFunctionLibrary_GetGameContentDir_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetFirstActorOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ActorClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AActor* UGBFunctionLibrary::GetFirstActorOfClass(class UObject* WorldContextObject, class UClass* ActorClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetFirstActorOfClass");
		
		UGBFunctionLibrary_GetFirstActorOfClass_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ActorClass = ActorClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetFileList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      FilePath                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Extension                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bTrimPathAndExt                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              FileList                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::GetFileList(const class FString& FilePath, const class FString& Extension, bool bTrimPathAndExt, TArray<class FString>* FileList)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetFileList");
		
		UGBFunctionLibrary_GetFileList_Params params {};
		params.FilePath = FilePath;
		params.Extension = Extension;
		params.bTrimPathAndExt = bTrimPathAndExt;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (FileList != nullptr)
			*FileList = params.FileList;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetDistanceAlongSplineAtSplineInputKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USplineComponent*                            SplineComp                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InKey                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBFunctionLibrary::GetDistanceAlongSplineAtSplineInputKey(class USplineComponent* SplineComp, float InKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetDistanceAlongSplineAtSplineInputKey");
		
		UGBFunctionLibrary_GetDistanceAlongSplineAtSplineInputKey_Params params {};
		params.SplineComp = SplineComp;
		params.InKey = InKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetCreationTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBFunctionLibrary::GetCreationTime(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetCreationTime");
		
		UGBFunctionLibrary_GetCreationTime_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetConsoleString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutString                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::GetConsoleString(const class FString& ConsoleVar, class FString* OutString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetConsoleString");
		
		UGBFunctionLibrary_GetConsoleString_Params params {};
		params.ConsoleVar = ConsoleVar;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutString != nullptr)
			*OutString = params.OutString;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetConsoleInt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutInt                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::GetConsoleInt(const class FString& ConsoleVar, int32_t* OutInt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetConsoleInt");
		
		UGBFunctionLibrary_GetConsoleInt_Params params {};
		params.ConsoleVar = ConsoleVar;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutInt != nullptr)
			*OutInt = params.OutInt;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetConsoleHelp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutHelp                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::GetConsoleHelp(const class FString& ConsoleVar, class FString* OutHelp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetConsoleHelp");
		
		UGBFunctionLibrary_GetConsoleHelp_Params params {};
		params.ConsoleVar = ConsoleVar;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHelp != nullptr)
			*OutHelp = params.OutHelp;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetConsoleFloat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutFloat                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::GetConsoleFloat(const class FString& ConsoleVar, float* OutFloat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetConsoleFloat");
		
		UGBFunctionLibrary_GetConsoleFloat_Params params {};
		params.ConsoleVar = ConsoleVar;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutFloat != nullptr)
			*OutFloat = params.OutFloat;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetConsoleBool
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConsoleVar                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutBool                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::GetConsoleBool(const class FString& ConsoleVar, int32_t* OutBool)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetConsoleBool");
		
		UGBFunctionLibrary_GetConsoleBool_Params params {};
		params.ConsoleVar = ConsoleVar;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBool != nullptr)
			*OutBool = params.OutBool;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetConfigFilename
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConfigFile                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::GetConfigFilename(const class FString& ConfigFile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetConfigFilename");
		
		UGBFunctionLibrary_GetConfigFilename_Params params {};
		params.ConfigFile = ConfigFile;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetComponentByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UActorComponent* UGBFunctionLibrary::GetComponentByName(class AActor* Target, const class FName& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetComponentByName");
		
		UGBFunctionLibrary_GetComponentByName_Params params {};
		params.Target = Target;
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetClassDefaultObject
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UObject* UGBFunctionLibrary::GetClassDefaultObject(class UClass* Class)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetClassDefaultObject");
		
		UGBFunctionLibrary_GetClassDefaultObject_Params params {};
		params.Class = Class;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetBuildType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIncludeEditor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::GetBuildType(bool bIncludeEditor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetBuildType");
		
		UGBFunctionLibrary_GetBuildType_Params params {};
		params.bIncludeEditor = bIncludeEditor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetBuildNumber
	 * 		Flags  -> ()
	 */
	class FString UGBFunctionLibrary::GetBuildNumber()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetBuildNumber");
		
		UGBFunctionLibrary_GetBuildNumber_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetBaseFilename
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::GetBaseFilename(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetBaseFilename");
		
		UGBFunctionLibrary_GetBaseFilename_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetAssetSoftObjPtrs
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Path                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::GetAssetSoftObjPtrs(const class FString& Path)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetAssetSoftObjPtrs");
		
		UGBFunctionLibrary_GetAssetSoftObjPtrs_Params params {};
		params.Path = Path;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetActorCameraComponent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCameraComponent* UGBFunctionLibrary::GetActorCameraComponent(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetActorCameraComponent");
		
		UGBFunctionLibrary_GetActorCameraComponent_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GetActor2DBoundingBox
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bNonColliding                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutMins                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutMaxs                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::GetActor2DBoundingBox(class AActor* Target, bool bNonColliding, struct FVector2D* OutMins, struct FVector2D* OutMaxs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GetActor2DBoundingBox");
		
		UGBFunctionLibrary_GetActor2DBoundingBox_Params params {};
		params.Target = Target;
		params.bNonColliding = bNonColliding;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutMins != nullptr)
			*OutMins = params.OutMins;
		if (OutMaxs != nullptr)
			*OutMaxs = params.OutMaxs;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Get_PhysicalMaterial
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UMaterial*                                   Material                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UPhysicalMaterial* UGBFunctionLibrary::Get_PhysicalMaterial(class UMaterial* Material)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Get_PhysicalMaterial");
		
		UGBFunctionLibrary_Get_PhysicalMaterial_Params params {};
		params.Material = Material;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.GenerateMissionDisplayName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InMapName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InVariantName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::GenerateMissionDisplayName(const class FString& InMapName, const class FString& InVariantName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.GenerateMissionDisplayName");
		
		UGBFunctionLibrary_GenerateMissionDisplayName_Params params {};
		params.InMapName = InMapName;
		params.InVariantName = InVariantName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.FlushPressedKeys
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::FlushPressedKeys(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.FlushPressedKeys");
		
		UGBFunctionLibrary_FlushPressedKeys_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.FlushPressedActions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                ActionNames                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::FlushPressedActions(class APlayerController* PlayerController, TArray<class FName> ActionNames)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.FlushPressedActions");
		
		UGBFunctionLibrary_FlushPressedActions_Params params {};
		params.PlayerController = PlayerController;
		params.ActionNames = ActionNames;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.FlushPressedAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::FlushPressedAction(class APlayerController* PlayerController, const class FName& ActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.FlushPressedAction");
		
		UGBFunctionLibrary_FlushPressedAction_Params params {};
		params.PlayerController = PlayerController;
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.FileExists
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::FileExists(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.FileExists");
		
		UGBFunctionLibrary_FileExists_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.EvalBool
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InOpt                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Default                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::EvalBool(const class FString& InOpt, bool Default)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.EvalBool");
		
		UGBFunctionLibrary_EvalBool_Params params {};
		params.InOpt = InOpt;
		params.Default = Default;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.DrawDebugWideArrow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineStart                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineEnd                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Width                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLinearColor                                LineColor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Thickness                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::DrawDebugWideArrow(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, float Width, const struct FLinearColor& LineColor, float Duration, float Thickness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.DrawDebugWideArrow");
		
		UGBFunctionLibrary_DrawDebugWideArrow_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.LineStart = LineStart;
		params.LineEnd = LineEnd;
		params.Width = Width;
		params.LineColor = LineColor;
		params.Duration = Duration;
		params.Thickness = Thickness;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.DeProject
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTransform                                  ViewTM                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              FOV                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ScreenSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ScreenPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutWorldLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutWorldDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::DeProject(const struct FTransform& ViewTM, float FOV, const struct FVector2D& ScreenSize, const struct FVector2D& ScreenPosition, struct FVector* OutWorldLocation, struct FVector* OutWorldDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.DeProject");
		
		UGBFunctionLibrary_DeProject_Params params {};
		params.ViewTM = ViewTM;
		params.FOV = FOV;
		params.ScreenSize = ScreenSize;
		params.ScreenPosition = ScreenPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutWorldLocation != nullptr)
			*OutWorldLocation = params.OutWorldLocation;
		if (OutWorldDirection != nullptr)
			*OutWorldDirection = params.OutWorldDirection;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.DeleteFile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLogWarnings                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::DeleteFile(const class FString& Filename, bool bLogWarnings)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.DeleteFile");
		
		UGBFunctionLibrary_DeleteFile_Params params {};
		params.Filename = Filename;
		params.bLogWarnings = bLogWarnings;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.CreateVolume
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  SpawnTM                                                    (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      VolumeClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AVolume* UGBFunctionLibrary::CreateVolume(class UObject* WorldContextObject, const struct FTransform& SpawnTM, const struct FVector& Size, class UClass* VolumeClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.CreateVolume");
		
		UGBFunctionLibrary_CreateVolume_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.SpawnTM = SpawnTM;
		params.Size = Size;
		params.VolumeClass = VolumeClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.CreateMeshComponentCopy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      NewOwner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UMeshComponent*                              Source                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UMeshComponent* UGBFunctionLibrary::CreateMeshComponentCopy(class AActor* NewOwner, class UMeshComponent* Source)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.CreateMeshComponentCopy");
		
		UGBFunctionLibrary_CreateMeshComponentCopy_Params params {};
		params.NewOwner = NewOwner;
		params.Source = Source;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.CopyMeshComponents
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      NewOwner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UMeshComponent*                              ParentComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UMeshComponent* UGBFunctionLibrary::CopyMeshComponents(class AActor* NewOwner, class UMeshComponent* ParentComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.CopyMeshComponents");
		
		UGBFunctionLibrary_CopyMeshComponents_Params params {};
		params.NewOwner = NewOwner;
		params.ParentComponent = ParentComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.CopyInstanceVertexColorsIfCompatible
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UStaticMeshComponent*                        SourceComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UStaticMeshComponent*                        TargetComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::CopyInstanceVertexColorsIfCompatible(class UStaticMeshComponent* SourceComponent, class UStaticMeshComponent* TargetComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.CopyInstanceVertexColorsIfCompatible");
		
		UGBFunctionLibrary_CopyInstanceVertexColorsIfCompatible_Params params {};
		params.SourceComponent = SourceComponent;
		params.TargetComponent = TargetComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.ConvertMinutesTo24Hours
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            MinutesOfDay                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::ConvertMinutesTo24Hours(int32_t MinutesOfDay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.ConvertMinutesTo24Hours");
		
		UGBFunctionLibrary_ConvertMinutesTo24Hours_Params params {};
		params.MinutesOfDay = MinutesOfDay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Convert24HoursToMinutes
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      TimeString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UGBFunctionLibrary::Convert24HoursToMinutes(const class FString& TimeString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Convert24HoursToMinutes");
		
		UGBFunctionLibrary_Convert24HoursToMinutes_Params params {};
		params.TimeString = TimeString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_SetString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Config_SetString(const class FString& Filename, const class FString& Section, const class FString& Key, const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_SetString");
		
		UGBFunctionLibrary_Config_SetString_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_SetInt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Config_SetInt(const class FString& Filename, const class FString& Section, const class FString& Key, int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_SetInt");
		
		UGBFunctionLibrary_Config_SetInt_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_SetFloat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Config_SetFloat(const class FString& Filename, const class FString& Section, const class FString& Key, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_SetFloat");
		
		UGBFunctionLibrary_Config_SetFloat_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_SetBool
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Config_SetBool(const class FString& Filename, const class FString& Section, const class FString& Key, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_SetBool");
		
		UGBFunctionLibrary_Config_SetBool_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_SetArray
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Values                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Config_SetArray(const class FString& Filename, const class FString& Section, const class FString& Key, TArray<class FString> Values)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_SetArray");
		
		UGBFunctionLibrary_Config_SetArray_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		params.Values = Values;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_Save
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Config_Save(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_Save");
		
		UGBFunctionLibrary_Config_Save_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_RemoveFromArray
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Config_RemoveFromArray(const class FString& Filename, const class FString& Section, const class FString& Key, const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_RemoveFromArray");
		
		UGBFunctionLibrary_Config_RemoveFromArray_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_GetString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBFunctionLibrary::Config_GetString(const class FString& Filename, const class FString& Section, const class FString& Key, bool* bValid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_GetString");
		
		UGBFunctionLibrary_Config_GetString_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bValid != nullptr)
			*bValid = params.bValid;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_GetInt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UGBFunctionLibrary::Config_GetInt(const class FString& Filename, const class FString& Section, const class FString& Key, bool* bValid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_GetInt");
		
		UGBFunctionLibrary_Config_GetInt_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bValid != nullptr)
			*bValid = params.bValid;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_GetFloat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBFunctionLibrary::Config_GetFloat(const class FString& Filename, const class FString& Section, const class FString& Key, bool* bValid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_GetFloat");
		
		UGBFunctionLibrary_Config_GetFloat_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bValid != nullptr)
			*bValid = params.bValid;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_GetBool
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::Config_GetBool(const class FString& Filename, const class FString& Section, const class FString& Key, bool* bValid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_GetBool");
		
		UGBFunctionLibrary_Config_GetBool_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bValid != nullptr)
			*bValid = params.bValid;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_GetArray
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class FString> UGBFunctionLibrary::Config_GetArray(const class FString& Filename, const class FString& Section, const class FString& Key, bool* bValid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_GetArray");
		
		UGBFunctionLibrary_Config_GetArray_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bValid != nullptr)
			*bValid = params.bValid;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Config_AddToArray
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Section                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Config_AddToArray(const class FString& Filename, const class FString& Section, const class FString& Key, const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Config_AddToArray");
		
		UGBFunctionLibrary_Config_AddToArray_Params params {};
		params.Filename = Filename;
		params.Section = Section;
		params.Key = Key;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.CondenseJsonString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      JsonString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutCondensedString                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::CondenseJsonString(const class FString& JsonString, class FString* OutCondensedString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.CondenseJsonString");
		
		UGBFunctionLibrary_CondenseJsonString_Params params {};
		params.JsonString = JsonString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCondensedString != nullptr)
			*OutCondensedString = params.OutCondensedString;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Component_SetCastHiddenShadow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         PrimitiveComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bNewCastHiddenShadow                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Component_SetCastHiddenShadow(class UPrimitiveComponent* PrimitiveComponent, bool bNewCastHiddenShadow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Component_SetCastHiddenShadow");
		
		UGBFunctionLibrary_Component_SetCastHiddenShadow_Params params {};
		params.PrimitiveComponent = PrimitiveComponent;
		params.bNewCastHiddenShadow = bNewCastHiddenShadow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.CaptureComponent2D_SaveImage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USceneCaptureComponent2D*                    Target                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ImagePath                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLinearColor                                ClearColour                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::CaptureComponent2D_SaveImage(class USceneCaptureComponent2D* Target, const class FString& ImagePath, const struct FLinearColor& ClearColour)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.CaptureComponent2D_SaveImage");
		
		UGBFunctionLibrary_CaptureComponent2D_SaveImage_Params params {};
		params.Target = Target;
		params.ImagePath = ImagePath;
		params.ClearColour = ClearColour;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.CaptureComponent2D_Project
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USceneCaptureComponent2D*                    Target                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutPixelLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::CaptureComponent2D_Project(class USceneCaptureComponent2D* Target, const struct FVector& Location, struct FVector2D* OutPixelLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.CaptureComponent2D_Project");
		
		UGBFunctionLibrary_CaptureComponent2D_Project_Params params {};
		params.Target = Target;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPixelLocation != nullptr)
			*OutPixelLocation = params.OutPixelLocation;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.CaptureComponent2D_DeProject
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USceneCaptureComponent2D*                    Target                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ScreenPos                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutWorldOrigin                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutWorldDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::CaptureComponent2D_DeProject(class USceneCaptureComponent2D* Target, const struct FVector2D& ScreenPos, struct FVector* OutWorldOrigin, struct FVector* OutWorldDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.CaptureComponent2D_DeProject");
		
		UGBFunctionLibrary_CaptureComponent2D_DeProject_Params params {};
		params.Target = Target;
		params.ScreenPos = ScreenPos;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutWorldOrigin != nullptr)
			*OutWorldOrigin = params.OutWorldOrigin;
		if (OutWorldDirection != nullptr)
			*OutWorldDirection = params.OutWorldDirection;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Capture2D_SaveImage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASceneCapture2D*                             Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ImagePath                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLinearColor                                ClearColour                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::Capture2D_SaveImage(class ASceneCapture2D* Target, const class FString& ImagePath, const struct FLinearColor& ClearColour)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Capture2D_SaveImage");
		
		UGBFunctionLibrary_Capture2D_SaveImage_Params params {};
		params.Target = Target;
		params.ImagePath = ImagePath;
		params.ClearColour = ClearColour;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Capture2D_Project
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASceneCapture2D*                             Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutPixelLocation                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Capture2D_Project(class ASceneCapture2D* Target, const struct FVector& Location, struct FVector2D* OutPixelLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Capture2D_Project");
		
		UGBFunctionLibrary_Capture2D_Project_Params params {};
		params.Target = Target;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPixelLocation != nullptr)
			*OutPixelLocation = params.OutPixelLocation;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Capture2D_DeProject
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASceneCapture2D*                             Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ScreenPos                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutWorldOrigin                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutWorldDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Capture2D_DeProject(class ASceneCapture2D* Target, const struct FVector2D& ScreenPos, struct FVector* OutWorldOrigin, struct FVector* OutWorldDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Capture2D_DeProject");
		
		UGBFunctionLibrary_Capture2D_DeProject_Params params {};
		params.Target = Target;
		params.ScreenPos = ScreenPos;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutWorldOrigin != nullptr)
			*OutWorldOrigin = params.OutWorldOrigin;
		if (OutWorldDirection != nullptr)
			*OutWorldDirection = params.OutWorldDirection;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.ByteToSignedAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      ByteValue                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBFunctionLibrary::ByteToSignedAlpha(unsigned char ByteValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.ByteToSignedAlpha");
		
		UGBFunctionLibrary_ByteToSignedAlpha_Params params {};
		params.ByteValue = ByteValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.ByteToAlpha
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      ByteValue                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBFunctionLibrary::ByteToAlpha(unsigned char ByteValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.ByteToAlpha");
		
		UGBFunctionLibrary_ByteToAlpha_Params params {};
		params.ByteValue = ByteValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.BlueprintSyncLoadClass
	 * 		Flags  -> ()
	 */
	class UClass* UGBFunctionLibrary::BlueprintSyncLoadClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.BlueprintSyncLoadClass");
		
		UGBFunctionLibrary_BlueprintSyncLoadClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.BlueprintSyncLoadAsset
	 * 		Flags  -> ()
	 */
	class UObject* UGBFunctionLibrary::BlueprintSyncLoadAsset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.BlueprintSyncLoadAsset");
		
		UGBFunctionLibrary_BlueprintSyncLoadAsset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.Array_Sort
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<int32_t>                                    TargetArray                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bAscendingOrder                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        VariableName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBFunctionLibrary::Array_Sort(TArray<int32_t> TargetArray, bool bAscendingOrder, const class FName& VariableName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.Array_Sort");
		
		UGBFunctionLibrary_Array_Sort_Params params {};
		params.TargetArray = TargetArray;
		params.bAscendingOrder = bAscendingOrder;
		params.VariableName = VariableName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.AngleWithin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              AngleDegrees                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MinAngleDegrees                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxAngleDegrees                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInclusive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBFunctionLibrary::AngleWithin(float AngleDegrees, float MinAngleDegrees, float MaxAngleDegrees, bool bInclusive)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.AngleWithin");
		
		UGBFunctionLibrary_AngleWithin_Params params {};
		params.AngleDegrees = AngleDegrees;
		params.MinAngleDegrees = MinAngleDegrees;
		params.MaxAngleDegrees = MaxAngleDegrees;
		params.bInclusive = bInclusive;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBFunctionLibrary.AlphaToByte
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              AlphaValue                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	unsigned char UGBFunctionLibrary::AlphaToByte(float AlphaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBFunctionLibrary.AlphaToByte");
		
		UGBFunctionLibrary_AlphaToByte_Params params {};
		params.AlphaValue = AlphaValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBFunctionLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBFunctionLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBFunctionLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBGameEngine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBGameEngine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameEngine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.TerminateDedicatedServer
	 * 		Flags  -> ()
	 */
	void UGBGameInstance::TerminateDedicatedServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.TerminateDedicatedServer");
		
		UGBGameInstance_TerminateDedicatedServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.ShowLoadingScreen
	 * 		Flags  -> ()
	 */
	void UGBGameInstance::ShowLoadingScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.ShowLoadingScreen");
		
		UGBGameInstance_ShowLoadingScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.SetLoadingScreenWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserWidget*                                 UserWidget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameInstance::SetLoadingScreenWidget(class UUserWidget* UserWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.SetLoadingScreenWidget");
		
		UGBGameInstance_SetLoadingScreenWidget_Params params {};
		params.UserWidget = UserWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.HideLoadingScreen
	 * 		Flags  -> ()
	 */
	void UGBGameInstance::HideLoadingScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.HideLoadingScreen");
		
		UGBGameInstance_HideLoadingScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.GetLoadingScreenWidget
	 * 		Flags  -> ()
	 */
	class UUserWidget* UGBGameInstance::GetLoadingScreenWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.GetLoadingScreenWidget");
		
		UGBGameInstance_GetLoadingScreenWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.DefaultControlsShown
	 * 		Flags  -> ()
	 */
	void UGBGameInstance::DefaultControlsShown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.DefaultControlsShown");
		
		UGBGameInstance_DefaultControlsShown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.CreateInviteLoadingScreenWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConnectCommand                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UGBGameInstance::CreateInviteLoadingScreenWidget(const class FString& ConnectCommand, const class FString& MapName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.CreateInviteLoadingScreenWidget");
		
		UGBGameInstance_CreateInviteLoadingScreenWidget_Params params {};
		params.ConnectCommand = ConnectCommand;
		params.MapName = MapName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.CreateDefaultLoadingScreenWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UGBGameInstance::CreateDefaultLoadingScreenWidget(const class FString& MapName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.CreateDefaultLoadingScreenWidget");
		
		UGBGameInstance_CreateDefaultLoadingScreenWidget_Params params {};
		params.MapName = MapName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.CreateDedicatedServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CommandLine                                                (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bShowLog                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBGameInstance::CreateDedicatedServer(const class FString& CommandLine, bool bShowLog)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.CreateDedicatedServer");
		
		UGBGameInstance_CreateDedicatedServer_Params params {};
		params.CommandLine = CommandLine;
		params.bShowLog = bShowLog;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameInstance.BroadcastOnLoadingScreenEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameInstance::BroadcastOnLoadingScreenEvent(const class FName& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameInstance.BroadcastOnLoadingScreenEvent");
		
		UGBGameInstance_BroadcastOnLoadingScreenEvent_Params params {};
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBGameInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBGameInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.UpdateGameRules
	 * 		Flags  -> ()
	 */
	void AGBGameMode::UpdateGameRules()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.UpdateGameRules");
		
		AGBGameMode_UpdateGameRules_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.UnFreezeBots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::UnFreezeBots(unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.UnFreezeBots");
		
		AGBGameMode_UnFreezeBots_Params params {};
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.TimeLimitTimer
	 * 		Flags  -> ()
	 */
	void AGBGameMode::TimeLimitTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.TimeLimitTimer");
		
		AGBGameMode_TimeLimitTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.TimeLimitReached
	 * 		Flags  -> ()
	 */
	void AGBGameMode::TimeLimitReached()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.TimeLimitReached");
		
		AGBGameMode_TimeLimitReached_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.StandAloneCommand
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::StandAloneCommand(const class FString& Command, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.StandAloneCommand");
		
		AGBGameMode_StandAloneCommand_Params params {};
		params.Command = Command;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.ShouldCheckForTeamKills
	 * 		Flags  -> ()
	 */
	bool AGBGameMode::ShouldCheckForTeamKills()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.ShouldCheckForTeamKills");
		
		AGBGameMode_ShouldCheckForTeamKills_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SetTimeOfDay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewTimeOfDay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::SetTimeOfDay(int32_t NewTimeOfDay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SetTimeOfDay");
		
		AGBGameMode_SetTimeOfDay_Params params {};
		params.NewTimeOfDay = NewTimeOfDay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SetRoundTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewRoundTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::SetRoundTime(int32_t NewRoundTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SetRoundTime");
		
		AGBGameMode_SetRoundTime_Params params {};
		params.NewRoundTime = NewRoundTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SetRoundStageTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::SetRoundStageTime(int32_t NewTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SetRoundStageTime");
		
		AGBGameMode_SetRoundStageTime_Params params {};
		params.NewTime = NewTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SetRoundStage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewRoundStage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::SetRoundStage(const class FName& NewRoundStage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SetRoundStage");
		
		AGBGameMode_SetRoundStage_Params params {};
		params.NewRoundStage = NewRoundStage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SetMissionFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      NewMissionFileName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::SetMissionFileName(const class FString& NewMissionFileName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SetMissionFileName");
		
		AGBGameMode_SetMissionFileName_Params params {};
		params.NewMissionFileName = NewMissionFileName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SetMissionData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBMissionData*                              NewMissionData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSpawnActors                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bRunScript                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::SetMissionData(class UGBMissionData* NewMissionData, bool bSpawnActors, bool bRunScript, bool bForce)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SetMissionData");
		
		AGBGameMode_SetMissionData_Params params {};
		params.NewMissionData = NewMissionData;
		params.bSpawnActors = bSpawnActors;
		params.bRunScript = bRunScript;
		params.bForce = bForce;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SetDifficulty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewDifficulty                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::SetDifficulty(int32_t NewDifficulty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SetDifficulty");
		
		AGBGameMode_SetDifficulty_Params params {};
		params.NewDifficulty = NewDifficulty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SetDefaultRoundStageTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RoundStageName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NewTimeLimit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::SetDefaultRoundStageTime(const class FName& RoundStageName, int32_t NewTimeLimit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SetDefaultRoundStageTime");
		
		AGBGameMode_SetDefaultRoundStageTime_Params params {};
		params.RoundStageName = RoundStageName;
		params.NewTimeLimit = NewTimeLimit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SendEveryoneToReadyRoom
	 * 		Flags  -> ()
	 */
	void AGBGameMode::SendEveryoneToReadyRoom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SendEveryoneToReadyRoom");
		
		AGBGameMode_SendEveryoneToReadyRoom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.SendEveryoneToPlayArea
	 * 		Flags  -> ()
	 */
	void AGBGameMode::SendEveryoneToPlayArea()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.SendEveryoneToPlayArea");
		
		AGBGameMode_SendEveryoneToPlayArea_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.RunMissionScript
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ScriptName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::RunMissionScript(const class FString& ScriptName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.RunMissionScript");
		
		AGBGameMode_RunMissionScript_Params params {};
		params.ScriptName = ScriptName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.RetryStandalone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::RetryStandalone(class AGBPlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.RetryStandalone");
		
		AGBGameMode_RetryStandalone_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.RemoveBots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::RemoveBots(unsigned char Count, unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.RemoveBots");
		
		AGBGameMode_RemoveBots_Params params {};
		params.Count = Count;
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.RefreshDroppedItemList
	 * 		Flags  -> ()
	 */
	void AGBGameMode::RefreshDroppedItemList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.RefreshDroppedItemList");
		
		AGBGameMode_RefreshDroppedItemList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.RefreshDeadBodyList
	 * 		Flags  -> ()
	 */
	void AGBGameMode::RefreshDeadBodyList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.RefreshDeadBodyList");
		
		AGBGameMode_RefreshDeadBodyList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.PrepLatecomer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBGameMode::PrepLatecomer(class AGBPlayerState* GBPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.PrepLatecomer");
		
		AGBGameMode_PrepLatecomer_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.PlayerReadyStatusChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EReadyStatus                                       ReadyStatus                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::PlayerReadyStatusChanged(class AGBPlayerState* GBPlayerState, EReadyStatus ReadyStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.PlayerReadyStatusChanged");
		
		AGBGameMode_PlayerReadyStatusChanged_Params params {};
		params.GBPlayerState = GBPlayerState;
		params.ReadyStatus = ReadyStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.PlayerInsertionPointChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBInsertionPoint*                           InsertionPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::PlayerInsertionPointChanged(class AGBPlayerState* GBPlayerState, class AGBInsertionPoint* InsertionPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.PlayerInsertionPointChanged");
		
		AGBGameMode_PlayerInsertionPointChanged_Params params {};
		params.GBPlayerState = GBPlayerState;
		params.InsertionPoint = InsertionPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.PlayerGameModeRequest
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Request                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::PlayerGameModeRequest(class AGBPlayerState* GBPlayerState, const class FString& Request)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.PlayerGameModeRequest");
		
		AGBGameMode_PlayerGameModeRequest_Params params {};
		params.GBPlayerState = GBPlayerState;
		params.Request = Request;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.PlayerEnteredReadyRoom
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::PlayerEnteredReadyRoom(class AGBPlayerState* GBPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.PlayerEnteredReadyRoom");
		
		AGBGameMode_PlayerEnteredReadyRoom_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.PlayerEnteredPlayArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::PlayerEnteredPlayArea(class AGBPlayerState* GBPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.PlayerEnteredPlayArea");
		
		AGBGameMode_PlayerEnteredPlayArea_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.PlayerCanEnterPlayArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBGameMode::PlayerCanEnterPlayArea(class AGBPlayerState* GBPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.PlayerCanEnterPlayArea");
		
		AGBGameMode_PlayerCanEnterPlayArea_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnVoteCommandEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::OnVoteCommandEvent(class APlayerController* PlayerController, const class FString& Command, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnVoteCommandEvent");
		
		AGBGameMode_OnVoteCommandEvent_Params params {};
		params.PlayerController = PlayerController;
		params.Command = Command;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnVoteCommand
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::OnVoteCommand(class APlayerController* PlayerController, const class FString& Command, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnVoteCommand");
		
		AGBGameMode_OnVoteCommand_Params params {};
		params.PlayerController = PlayerController;
		params.Command = Command;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnRoundStageTimeElapsed
	 * 		Flags  -> ()
	 */
	void AGBGameMode::OnRoundStageTimeElapsed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnRoundStageTimeElapsed");
		
		AGBGameMode_OnRoundStageTimeElapsed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnRoundStageSet
	 * 		Flags  -> ()
	 */
	void AGBGameMode::OnRoundStageSet()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnRoundStageSet");
		
		AGBGameMode_OnRoundStageSet_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnRoundStageAborted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Reason                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::OnRoundStageAborted(const class FName& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnRoundStageAborted");
		
		AGBGameMode_OnRoundStageAborted_Params params {};
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnRetryStandalone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::OnRetryStandalone(class AGBPlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnRetryStandalone");
		
		AGBGameMode_OnRetryStandalone_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnProcessCommandEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::OnProcessCommandEvent(const class FString& Command, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnProcessCommandEvent");
		
		AGBGameMode_OnProcessCommandEvent_Params params {};
		params.Command = Command;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnProcessCommand
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::OnProcessCommand(const class FString& Command, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnProcessCommand");
		
		AGBGameMode_OnProcessCommand_Params params {};
		params.Command = Command;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnLuaError
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::OnLuaError(const class FString& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnLuaError");
		
		AGBGameMode_OnLuaError_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnInitGameStateEvent
	 * 		Flags  -> ()
	 */
	void AGBGameMode::OnInitGameStateEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnInitGameStateEvent");
		
		AGBGameMode_OnInitGameStateEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnInitGameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::OnInitGameEvent(const class FString& Options)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnInitGameEvent");
		
		AGBGameMode_OnInitGameEvent_Params params {};
		params.Options = Options;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.OnCharacterDiedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 CharacterController                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 KillerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::OnCharacterDiedEvent(class ACharacter* Character, class AController* CharacterController, class AController* KillerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.OnCharacterDiedEvent");
		
		AGBGameMode_OnCharacterDiedEvent_Params params {};
		params.Character = Character;
		params.CharacterController = CharacterController;
		params.KillerController = KillerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.MakeEveryoneSpectate
	 * 		Flags  -> ()
	 */
	void AGBGameMode::MakeEveryoneSpectate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.MakeEveryoneSpectate");
		
		AGBGameMode_MakeEveryoneSpectate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.KillBots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::KillBots(unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.KillBots");
		
		AGBGameMode_KillBots_Params params {};
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.HasReachedTimeLimit
	 * 		Flags  -> ()
	 */
	bool AGBGameMode::HasReachedTimeLimit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.HasReachedTimeLimit");
		
		AGBGameMode_HasReachedTimeLimit_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.HasBots
	 * 		Flags  -> ()
	 */
	bool AGBGameMode::HasBots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.HasBots");
		
		AGBGameMode_HasBots_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.HandleStartRoundCommand
	 * 		Flags  -> ()
	 */
	void AGBGameMode::HandleStartRoundCommand()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.HandleStartRoundCommand");
		
		AGBGameMode_HandleStartRoundCommand_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.HandleRestartRoundCommand
	 * 		Flags  -> ()
	 */
	void AGBGameMode::HandleRestartRoundCommand()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.HandleRestartRoundCommand");
		
		AGBGameMode_HandleRestartRoundCommand_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.HandleEndRoundCommand
	 * 		Flags  -> ()
	 */
	void AGBGameMode::HandleEndRoundCommand()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.HandleEndRoundCommand");
		
		AGBGameMode_HandleEndRoundCommand_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetTableGameMode
	 * 		Flags  -> ()
	 */
	struct FLuaValue AGBGameMode::GetTableGameMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetTableGameMode");
		
		AGBGameMode_GetTableGameMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetSpawnInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     SpawnLocation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    SpawnRotation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool AGBGameMode::GetSpawnInfo(class AGBPlayerState* GBPlayerState, struct FVector* SpawnLocation, struct FRotator* SpawnRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetSpawnInfo");
		
		AGBGameMode_GetSpawnInfo_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SpawnLocation != nullptr)
			*SpawnLocation = params.SpawnLocation;
		if (SpawnRotation != nullptr)
			*SpawnRotation = params.SpawnRotation;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetRoundStageTimeRemaining
	 * 		Flags  -> ()
	 */
	float AGBGameMode::GetRoundStageTimeRemaining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetRoundStageTimeRemaining");
		
		AGBGameMode_GetRoundStageTimeRemaining_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetRoundStage
	 * 		Flags  -> ()
	 */
	class FName AGBGameMode::GetRoundStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetRoundStage");
		
		AGBGameMode_GetRoundStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetReadyRoomStart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AActor* AGBGameMode::GetReadyRoomStart(class AGBPlayerState* GBPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetReadyRoomStart");
		
		AGBGameMode_GetReadyRoomStart_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetReadyPlayerTeamCounts
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bExcludeBots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<int32_t> AGBGameMode::GetReadyPlayerTeamCounts(bool bExcludeBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetReadyPlayerTeamCounts");
		
		AGBGameMode_GetReadyPlayerTeamCounts_Params params {};
		params.bExcludeBots = bExcludeBots;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetRandomInsertionPoint
	 * 		Flags  -> ()
	 */
	class AGBInsertionPoint* AGBGameMode::GetRandomInsertionPoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetRandomInsertionPoint");
		
		AGBGameMode_GetRandomInsertionPoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetPlayerLoadoutInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBKitInfo* AGBGameMode::GetPlayerLoadoutInfo(class AController* Controller, const class FName& LoadoutName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetPlayerLoadoutInfo");
		
		AGBGameMode_GetPlayerLoadoutInfo_Params params {};
		params.Controller = Controller;
		params.LoadoutName = LoadoutName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetMissionFileName
	 * 		Flags  -> ()
	 */
	class FString AGBGameMode::GetMissionFileName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetMissionFileName");
		
		AGBGameMode_GetMissionFileName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetMissionData
	 * 		Flags  -> ()
	 */
	class UGBMissionData* AGBGameMode::GetMissionData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetMissionData");
		
		AGBGameMode_GetMissionData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetDisplayName
	 * 		Flags  -> ()
	 */
	class FText AGBGameMode::GetDisplayName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetDisplayName");
		
		AGBGameMode_GetDisplayName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetDefaultRoundStageTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RoundStageName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGBGameMode::GetDefaultRoundStageTime(const class FName& RoundStageName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetDefaultRoundStageTime");
		
		AGBGameMode_GetDefaultRoundStageTime_Params params {};
		params.RoundStageName = RoundStageName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetBriefingRoomWidget
	 * 		Flags  -> ()
	 */
	class UClass* AGBGameMode::GetBriefingRoomWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetBriefingRoomWidget");
		
		AGBGameMode_GetBriefingRoomWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetBotControllers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AGBAIController*> AGBGameMode::GetBotControllers(unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetBotControllers");
		
		AGBGameMode_GetBotControllers_Params params {};
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetBestLateComerInsertionPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBInsertionPoint* AGBGameMode::GetBestLateComerInsertionPoint(class AGBPlayerState* GBPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetBestLateComerInsertionPoint");
		
		AGBGameMode_GetBestLateComerInsertionPoint_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetAISpawnManagerClass
	 * 		Flags  -> ()
	 */
	class UClass* AGBGameMode::GetAISpawnManagerClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetAISpawnManagerClass");
		
		AGBGameMode_GetAISpawnManagerClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetAISpawnManager
	 * 		Flags  -> ()
	 */
	class AGBAISpawnManager* AGBGameMode::GetAISpawnManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetAISpawnManager");
		
		AGBGameMode_GetAISpawnManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.GetAIBarkManager
	 * 		Flags  -> ()
	 */
	class AGBAIBarkManager* AGBGameMode::GetAIBarkManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.GetAIBarkManager");
		
		AGBGameMode_GetAIBarkManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.FreezeBots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::FreezeBots(unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.FreezeBots");
		
		AGBGameMode_FreezeBots_Params params {};
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.EnterReadyRoom
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::EnterReadyRoom(class AGBPlayerState* GBPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.EnterReadyRoom");
		
		AGBGameMode_EnterReadyRoom_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.EnterPlayArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::EnterPlayArea(class AGBPlayerState* GBPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.EnterPlayArea");
		
		AGBGameMode_EnterPlayArea_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.ClearRoundStageTime
	 * 		Flags  -> ()
	 */
	void AGBGameMode::ClearRoundStageTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.ClearRoundStageTime");
		
		AGBGameMode_ClearRoundStageTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.CharacterDied
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 CharacterController                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 KillerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::CharacterDied(class ACharacter* Character, class AController* CharacterController, class AController* KillerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.CharacterDied");
		
		AGBGameMode_CharacterDied_Params params {};
		params.Character = Character;
		params.CharacterController = CharacterController;
		params.KillerController = KillerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.BroadcastLocalized
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Message                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Switch                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APlayerState*                                RelatedPlayerState_2                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APlayerState*                                RelatedPlayerState_3                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     OptionalObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::BroadcastLocalized(class AActor* Sender, class UClass* Message, int32_t Switch, class APlayerState* RelatedPlayerState_2, class APlayerState* RelatedPlayerState_3, class UObject* OptionalObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.BroadcastLocalized");
		
		AGBGameMode_BroadcastLocalized_Params params {};
		params.Sender = Sender;
		params.Message = Message;
		params.Switch = Switch;
		params.RelatedPlayerState_2 = RelatedPlayerState_2;
		params.RelatedPlayerState_3 = RelatedPlayerState_3;
		params.OptionalObject = OptionalObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.BroadcastGameMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        GameMessageId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::BroadcastGameMessage(const class FName& GameMessageId, const class FName& Type, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.BroadcastGameMessage");
		
		AGBGameMode_BroadcastGameMessage_Params params {};
		params.GameMessageId = GameMessageId;
		params.Type = Type;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.Broadcast
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              SenderPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        MessageType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::Broadcast(class AGBPlayerState* SenderPlayerState, const class FString& Message, const class FName& MessageType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.Broadcast");
		
		AGBGameMode_Broadcast_Params params {};
		params.SenderPlayerState = SenderPlayerState;
		params.Message = Message;
		params.MessageType = MessageType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.BeginScheduledShutdown
	 * 		Flags  -> ()
	 */
	void AGBGameMode::BeginScheduledShutdown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.BeginScheduledShutdown");
		
		AGBGameMode_BeginScheduledShutdown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.BecomeSpectator
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              GBPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::BecomeSpectator(class AGBPlayerState* GBPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.BecomeSpectator");
		
		AGBGameMode_BecomeSpectator_Params params {};
		params.GBPlayerState = GBPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.ApplyLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::ApplyLoadout(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.ApplyLoadout");
		
		AGBGameMode_ApplyLoadout_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.AFKDetected
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::AFKDetected(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.AFKDetected");
		
		AGBGameMode_AFKDetected_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.AddDefaultLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::AddDefaultLoadout(const class FName& LoadoutName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.AddDefaultLoadout");
		
		AGBGameMode_AddDefaultLoadout_Params params {};
		params.LoadoutName = LoadoutName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.AddBots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::AddBots(unsigned char Count, unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.AddBots");
		
		AGBGameMode_AddBots_Params params {};
		params.Count = Count;
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameMode.AbortRoundStage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Reason                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameMode::AbortRoundStage(const class FName& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameMode.AbortRoundStage");
		
		AGBGameMode_AbortRoundStage_Params params {};
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeActorInterface.SetActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewActive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameModeActorInterface::SetActive(bool bNewActive)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeActorInterface.SetActive");
		
		UGBGameModeActorInterface_SetActive_Params params {};
		params.bNewActive = bNewActive;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeActorInterface.IsActive
	 * 		Flags  -> ()
	 */
	bool UGBGameModeActorInterface::IsActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeActorInterface.IsActive");
		
		UGBGameModeActorInterface_IsActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBGameModeActorInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBGameModeActorInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameModeActorInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeFunctionLibrary.GetMissionVersion
	 * 		Flags  -> ()
	 */
	int32_t UGBGameModeFunctionLibrary::GetMissionVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeFunctionLibrary.GetMissionVersion");
		
		UGBGameModeFunctionLibrary_GetMissionVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeFunctionLibrary.GetMissionScriptFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ScriptName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBGameModeFunctionLibrary::GetMissionScriptFileName(const class FString& ScriptName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeFunctionLibrary.GetMissionScriptFileName");
		
		UGBGameModeFunctionLibrary_GetMissionScriptFileName_Params params {};
		params.ScriptName = ScriptName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeFunctionLibrary.GetMissionFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MissionName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBGameModeFunctionLibrary::GetMissionFileName(class UObject* WorldContextObject, const class FString& MissionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeFunctionLibrary.GetMissionFileName");
		
		UGBGameModeFunctionLibrary_GetMissionFileName_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.MissionName = MissionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeFunctionLibrary.GetMissionExtension
	 * 		Flags  -> ()
	 */
	class FString UGBGameModeFunctionLibrary::GetMissionExtension()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeFunctionLibrary.GetMissionExtension");
		
		UGBGameModeFunctionLibrary_GetMissionExtension_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeFunctionLibrary.GetGameModeOptions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBGameModeFunctionLibrary::GetGameModeOptions(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeFunctionLibrary.GetGameModeOptions");
		
		UGBGameModeFunctionLibrary_GetGameModeOptions_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBGameModeFunctionLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBGameModeFunctionLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameModeFunctionLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeLuaState.GetTimeSeconds
	 * 		Flags  -> ()
	 */
	struct FLuaValue UGBGameModeLuaState::GetTimeSeconds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeLuaState.GetTimeSeconds");
		
		UGBGameModeLuaState_GetTimeSeconds_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeLuaState.GetScript
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Self                                                       (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBGameModeLuaState::GetScript(const struct FLuaValue& Self)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeLuaState.GetScript");
		
		UGBGameModeLuaState_GetScript_Params params {};
		params.Self = Self;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeLuaState.GetComp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Self                                                       (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBGameModeLuaState::GetComp(const struct FLuaValue& Self)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeLuaState.GetComp");
		
		UGBGameModeLuaState_GetComp_Params params {};
		params.Self = Self;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameModeLuaState.DebugPrint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Message                                                    (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBGameModeLuaState::DebugPrint(const struct FLuaValue& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameModeLuaState.DebugPrint");
		
		UGBGameModeLuaState_DebugPrint_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBGameModeLuaState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBGameModeLuaState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameModeLuaState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.SphereOverlapDamageableComponentsSorted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<EObjectTypeQuery>                           ObjectTypes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class UPrimitiveComponent*>                 OutComponents                                              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::SphereOverlapDamageableComponentsSorted(class UObject* WorldContextObject, const struct FVector& Origin, float Radius, TArray<class AActor*> IgnoreActors, TArray<EObjectTypeQuery> ObjectTypes, TArray<class UPrimitiveComponent*>* OutComponents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.SphereOverlapDamageableComponentsSorted");
		
		UGBGameplayStatics_SphereOverlapDamageableComponentsSorted_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Origin = Origin;
		params.Radius = Radius;
		params.IgnoreActors = IgnoreActors;
		params.ObjectTypes = ObjectTypes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutComponents != nullptr)
			*OutComponents = params.OutComponents;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.SetReplicatedAlphaValues
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FReplicatedAlpha                            ReplicatedAlpha                                            (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              CurrentAlpha                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TargetAlpha                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameplayStatics::SetReplicatedAlphaValues(class UObject* WorldContextObject, struct FReplicatedAlpha* ReplicatedAlpha, float CurrentAlpha, float TargetAlpha)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.SetReplicatedAlphaValues");
		
		UGBGameplayStatics_SetReplicatedAlphaValues_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.CurrentAlpha = CurrentAlpha;
		params.TargetAlpha = TargetAlpha;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ReplicatedAlpha != nullptr)
			*ReplicatedAlpha = params.ReplicatedAlpha;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.ResetEncompassedActors
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AVolume*                                     Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameplayStatics::ResetEncompassedActors(class AVolume* Volume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.ResetEncompassedActors");
		
		UGBGameplayStatics_ResetEncompassedActors_Params params {};
		params.Volume = Volume;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.ResetActors
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameplayStatics::ResetActors(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.ResetActors");
		
		UGBGameplayStatics_ResetActors_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.ResetActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameplayStatics::ResetActor(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.ResetActor");
		
		UGBGameplayStatics_ResetActor_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.PositionIsInWater
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     position                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ECollisionChannel                                  CollisionChannel                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::PositionIsInWater(class UObject* WorldContextObject, const struct FVector& position, ECollisionChannel CollisionChannel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.PositionIsInWater");
		
		UGBGameplayStatics_PositionIsInWater_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.position = position;
		params.CollisionChannel = CollisionChannel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.NukeActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameplayStatics::NukeActor(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.NukeActor");
		
		UGBGameplayStatics_NukeActor_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.IsSpawnLocationValid
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     SpawnLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              CapsuleHalfHeight                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              CapsuleRadius                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::IsSpawnLocationValid(class UObject* WorldContextObject, const struct FVector& SpawnLocation, float CapsuleHalfHeight, float CapsuleRadius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.IsSpawnLocationValid");
		
		UGBGameplayStatics_IsSpawnLocationValid_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.SpawnLocation = SpawnLocation;
		params.CapsuleHalfHeight = CapsuleHalfHeight;
		params.CapsuleRadius = CapsuleRadius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.IsNetReady
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::IsNetReady(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.IsNetReady");
		
		UGBGameplayStatics_IsNetReady_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.IsLocallyViewed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Viewed                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::IsLocallyViewed(class AActor* Viewed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.IsLocallyViewed");
		
		UGBGameplayStatics_IsLocallyViewed_Params params {};
		params.Viewed = Viewed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.GrabAllOptions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Options                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              OutKeys                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              OutValues                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::GrabAllOptions(const class FString& Options, TArray<class FString>* OutKeys, TArray<class FString>* OutValues)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.GrabAllOptions");
		
		UGBGameplayStatics_GrabAllOptions_Params params {};
		params.Options = Options;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutKeys != nullptr)
			*OutKeys = params.OutKeys;
		if (OutValues != nullptr)
			*OutValues = params.OutValues;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.GetValidatedSpawnLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     SpawnLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              CapsuleHalfHeight                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              CapsuleRadius                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutValidatedSpawnLocation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::GetValidatedSpawnLocation(class UObject* WorldContextObject, const struct FVector& SpawnLocation, float CapsuleHalfHeight, float CapsuleRadius, struct FVector* OutValidatedSpawnLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.GetValidatedSpawnLocation");
		
		UGBGameplayStatics_GetValidatedSpawnLocation_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.SpawnLocation = SpawnLocation;
		params.CapsuleHalfHeight = CapsuleHalfHeight;
		params.CapsuleRadius = CapsuleRadius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutValidatedSpawnLocation != nullptr)
			*OutValidatedSpawnLocation = params.OutValidatedSpawnLocation;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.GetUniqueIdAsString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBGameplayStatics::GetUniqueIdAsString(class APlayerState* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.GetUniqueIdAsString");
		
		UGBGameplayStatics_GetUniqueIdAsString_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.GetReplicatedAlphaValues
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FReplicatedAlpha                            ReplicatedAlpha                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              CurrentAlpha                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TargetAlpha                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Timestamp                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameplayStatics::GetReplicatedAlphaValues(const struct FReplicatedAlpha& ReplicatedAlpha, float* CurrentAlpha, float* TargetAlpha, float* Timestamp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.GetReplicatedAlphaValues");
		
		UGBGameplayStatics_GetReplicatedAlphaValues_Params params {};
		params.ReplicatedAlpha = ReplicatedAlpha;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (CurrentAlpha != nullptr)
			*CurrentAlpha = params.CurrentAlpha;
		if (TargetAlpha != nullptr)
			*TargetAlpha = params.TargetAlpha;
		if (Timestamp != nullptr)
			*Timestamp = params.Timestamp;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.GetPredictionTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBGameplayStatics::GetPredictionTime(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.GetPredictionTime");
		
		UGBGameplayStatics_GetPredictionTime_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.GetLocallyViewingPlayerController
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Viewed                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBPlayerController* UGBGameplayStatics::GetLocallyViewingPlayerController(class AActor* Viewed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.GetLocallyViewingPlayerController");
		
		UGBGameplayStatics_GetLocallyViewingPlayerController_Params params {};
		params.Viewed = Viewed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.FindPlayerStateByPlayerNameOrUniqueId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlayerNameOrUniqueId                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBPlayerState* UGBGameplayStatics::FindPlayerStateByPlayerNameOrUniqueId(class UObject* WorldContextObject, const class FString& PlayerNameOrUniqueId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.FindPlayerStateByPlayerNameOrUniqueId");
		
		UGBGameplayStatics_FindPlayerStateByPlayerNameOrUniqueId_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.PlayerNameOrUniqueId = PlayerNameOrUniqueId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.FindPlayerControllerByPlayerNameOrUniqueId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlayerNameOrUniqueId                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBPlayerController* UGBGameplayStatics::FindPlayerControllerByPlayerNameOrUniqueId(class UObject* WorldContextObject, const class FString& PlayerNameOrUniqueId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.FindPlayerControllerByPlayerNameOrUniqueId");
		
		UGBGameplayStatics_FindPlayerControllerByPlayerNameOrUniqueId_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.PlayerNameOrUniqueId = PlayerNameOrUniqueId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.EncompassesPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AVolume*                                     Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              SphereRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutDistanceToPoint                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::EncompassesPoint(class AVolume* Volume, const struct FVector& Point, float SphereRadius, float* OutDistanceToPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.EncompassesPoint");
		
		UGBGameplayStatics_EncompassesPoint_Params params {};
		params.Volume = Volume;
		params.Point = Point;
		params.SphereRadius = SphereRadius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutDistanceToPoint != nullptr)
			*OutDistanceToPoint = params.OutDistanceToPoint;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.ConeOverlapDamageableComponentsSorted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Dir                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ConeHalfAngle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<EObjectTypeQuery>                           ObjectTypes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class UPrimitiveComponent*>                 OutComponents                                              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::ConeOverlapDamageableComponentsSorted(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& Dir, float ConeHalfAngle, float Radius, TArray<class AActor*> IgnoreActors, TArray<EObjectTypeQuery> ObjectTypes, TArray<class UPrimitiveComponent*>* OutComponents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.ConeOverlapDamageableComponentsSorted");
		
		UGBGameplayStatics_ConeOverlapDamageableComponentsSorted_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Origin = Origin;
		params.Dir = Dir;
		params.ConeHalfAngle = ConeHalfAngle;
		params.Radius = Radius;
		params.IgnoreActors = IgnoreActors;
		params.ObjectTypes = ObjectTypes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutComponents != nullptr)
			*OutComponents = params.OutComponents;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.CanDamageStaticMesh
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UStaticMeshComponent*                        StaticComp                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     DamageOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxTraceChecks                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ECollisionChannel                                  TraceChannel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<EPhysicalSurface>                           SurfaceTypesToIgnore                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OutHit                                                     (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::CanDamageStaticMesh(class UStaticMeshComponent* StaticComp, const struct FVector& DamageOrigin, int32_t MaxTraceChecks, TArray<class AActor*> IgnoreActors, ECollisionChannel TraceChannel, TArray<EPhysicalSurface> SurfaceTypesToIgnore, struct FHitResult* OutHit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.CanDamageStaticMesh");
		
		UGBGameplayStatics_CanDamageStaticMesh_Params params {};
		params.StaticComp = StaticComp;
		params.DamageOrigin = DamageOrigin;
		params.MaxTraceChecks = MaxTraceChecks;
		params.IgnoreActors = IgnoreActors;
		params.TraceChannel = TraceChannel;
		params.SurfaceTypesToIgnore = SurfaceTypesToIgnore;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHit != nullptr)
			*OutHit = params.OutHit;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.CanDamageSkeletalMesh
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USkeletalMeshComponent*                      SkeletalComp                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     DamageOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                Bones                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              IgnoreActors                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		ECollisionChannel                                  TraceChannel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<EPhysicalSurface>                           SurfaceTypesToIgnore                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OutHit                                                     (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGBGameplayStatics::CanDamageSkeletalMesh(class USkeletalMeshComponent* SkeletalComp, const struct FVector& DamageOrigin, TArray<class FName> Bones, TArray<class AActor*> IgnoreActors, ECollisionChannel TraceChannel, TArray<EPhysicalSurface> SurfaceTypesToIgnore, struct FHitResult* OutHit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.CanDamageSkeletalMesh");
		
		UGBGameplayStatics_CanDamageSkeletalMesh_Params params {};
		params.SkeletalComp = SkeletalComp;
		params.DamageOrigin = DamageOrigin;
		params.Bones = Bones;
		params.IgnoreActors = IgnoreActors;
		params.TraceChannel = TraceChannel;
		params.SurfaceTypesToIgnore = SurfaceTypesToIgnore;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHit != nullptr)
			*OutHit = params.OutHit;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameplayStatics.ApplyRadialDamageDirect
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      DamagedActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxDamage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MinDamage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MinDamageRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxDamageRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DamageFalloff                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Origin                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FHitResult>                          HitResults                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AController*                                 EventInstigator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      DamageCauser                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      DamageTypeClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBGameplayStatics::ApplyRadialDamageDirect(class AActor* DamagedActor, float MaxDamage, float MinDamage, float MinDamageRadius, float MaxDamageRadius, float DamageFalloff, const struct FVector& Origin, TArray<struct FHitResult> HitResults, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameplayStatics.ApplyRadialDamageDirect");
		
		UGBGameplayStatics_ApplyRadialDamageDirect_Params params {};
		params.DamagedActor = DamagedActor;
		params.MaxDamage = MaxDamage;
		params.MinDamage = MinDamage;
		params.MinDamageRadius = MinDamageRadius;
		params.MaxDamageRadius = MaxDamageRadius;
		params.DamageFalloff = DamageFalloff;
		params.Origin = Origin;
		params.HitResults = HitResults;
		params.EventInstigator = EventInstigator;
		params.DamageCauser = DamageCauser;
		params.DamageTypeClass = DamageTypeClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBGameplayStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBGameplayStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameplayStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameSession.UpdateServerDetailsTimer
	 * 		Flags  -> ()
	 */
	void AGBGameSession::UpdateServerDetailsTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameSession.UpdateServerDetailsTimer");
		
		AGBGameSession_UpdateServerDetailsTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameSession.UpdateServerDetails
	 * 		Flags  -> ()
	 */
	void AGBGameSession::UpdateServerDetails()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameSession.UpdateServerDetails");
		
		AGBGameSession_UpdateServerDetails_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameSession.MutePlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameSession::MutePlayer(class APlayerState* Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameSession.MutePlayer");
		
		AGBGameSession_MutePlayer_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBGameSession.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBGameSession::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameSession");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.UsesReadyRoom
	 * 		Flags  -> ()
	 */
	bool AGBGameState::UsesReadyRoom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.UsesReadyRoom");
		
		AGBGameState_UsesReadyRoom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.UpdateMatchStatsAfterRoundEnd
	 * 		Flags  -> ()
	 */
	void AGBGameState::UpdateMatchStatsAfterRoundEnd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.UpdateMatchStatsAfterRoundEnd");
		
		AGBGameState_UpdateMatchStatsAfterRoundEnd_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.UpdatedTeamAttitudes
	 * 		Flags  -> ()
	 */
	void AGBGameState::UpdatedTeamAttitudes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.UpdatedTeamAttitudes");
		
		AGBGameState_UpdatedTeamAttitudes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.UpdatedGameStats
	 * 		Flags  -> ()
	 */
	void AGBGameState::UpdatedGameStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.UpdatedGameStats");
		
		AGBGameState_UpdatedGameStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.UpdatedGameRules
	 * 		Flags  -> ()
	 */
	void AGBGameState::UpdatedGameRules()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.UpdatedGameRules");
		
		AGBGameState_UpdatedGameRules_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SyncTeamScoreLists
	 * 		Flags  -> ()
	 */
	void AGBGameState::SyncTeamScoreLists()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SyncTeamScoreLists");
		
		AGBGameState_SyncTeamScoreLists_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetWatchMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EWatchMode                                         InWatchMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetWatchMode(EWatchMode InWatchMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetWatchMode");
		
		AGBGameState_SetWatchMode_Params params {};
		params.InWatchMode = InWatchMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetWatchConfig
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      InWatchConfig                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetWatchConfig(unsigned char InWatchConfig)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetWatchConfig");
		
		AGBGameState_SetWatchConfig_Params params {};
		params.InWatchConfig = InWatchConfig;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetTeamAttitude
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGenericTeamId                              Team                                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGenericTeamId                              OtherTeam                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETeamAttitude                                      Attitude                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetTeamAttitude(const struct FGenericTeamId& Team, const struct FGenericTeamId& OtherTeam, ETeamAttitude Attitude)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetTeamAttitude");
		
		AGBGameState_SetTeamAttitude_Params params {};
		params.Team = Team;
		params.OtherTeam = OtherTeam;
		params.Attitude = Attitude;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetServerName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      NewServerName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetServerName(const class FString& NewServerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetServerName");
		
		AGBGameState_SetServerName_Params params {};
		params.NewServerName = NewServerName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetServerMOTD
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      NewServerMOTD                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetServerMOTD(const class FString& NewServerMOTD)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetServerMOTD");
		
		AGBGameState_SetServerMOTD_Params params {};
		params.NewServerMOTD = NewServerMOTD;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetRoundIsTemporaryGameMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsTemporary                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetRoundIsTemporaryGameMode(bool IsTemporary)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetRoundIsTemporaryGameMode");
		
		AGBGameState_SetRoundIsTemporaryGameMode_Params params {};
		params.IsTemporary = IsTemporary;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetPlayerTeamRole
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InRole                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetPlayerTeamRole(unsigned char TeamId, const class FName& InRole)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetPlayerTeamRole");
		
		AGBGameState_SetPlayerTeamRole_Params params {};
		params.TeamId = TeamId;
		params.InRole = InRole;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetPlayAreaOpen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsOpen                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetPlayAreaOpen(bool bIsOpen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetPlayAreaOpen");
		
		AGBGameState_SetPlayAreaOpen_Params params {};
		params.bIsOpen = bIsOpen;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetObjectiveLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     InObjectiveLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetObjectiveLocation(const struct FVector& InObjectiveLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetObjectiveLocation");
		
		AGBGameState_SetObjectiveLocation_Params params {};
		params.InObjectiveLocation = InObjectiveLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetMissionSettingValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetMissionSettingValue(const class FName& Name, int32_t NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetMissionSettingValue");
		
		AGBGameState_SetMissionSettingValue_Params params {};
		params.Name = Name;
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetLastMissionFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InLastMissionFileName                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetLastMissionFileName(const class FString& InLastMissionFileName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetLastMissionFileName");
		
		AGBGameState_SetLastMissionFileName_Params params {};
		params.InLastMissionFileName = InLastMissionFileName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetIsCapturing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InIsCapturing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetIsCapturing(bool InIsCapturing)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetIsCapturing");
		
		AGBGameState_SetIsCapturing_Params params {};
		params.InIsCapturing = InIsCapturing;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetGameModeName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InGameModeName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetGameModeName(const class FName& InGameModeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetGameModeName");
		
		AGBGameState_SetGameModeName_Params params {};
		params.InGameModeName = InGameModeName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SetCaptureZone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              InCaptureRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InCaptureHeight                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      DefenderTeamId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               InZoneIsSpherical                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::SetCaptureZone(float InCaptureRadius, float InCaptureHeight, unsigned char DefenderTeamId, bool InZoneIsSpherical)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SetCaptureZone");
		
		AGBGameState_SetCaptureZone_Params params {};
		params.InCaptureRadius = InCaptureRadius;
		params.InCaptureHeight = InCaptureHeight;
		params.DefenderTeamId = DefenderTeamId;
		params.InZoneIsSpherical = InZoneIsSpherical;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ServerPrepMissionSummaryEvent
	 * 		Flags  -> ()
	 */
	void AGBGameState::ServerPrepMissionSummaryEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ServerPrepMissionSummaryEvent");
		
		AGBGameState_ServerPrepMissionSummaryEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.SendTimeRemainingAlertToWatches
	 * 		Flags  -> ()
	 */
	void AGBGameState::SendTimeRemainingAlertToWatches()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.SendTimeRemainingAlertToWatches");
		
		AGBGameState_SendTimeRemainingAlertToWatches_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.RoundStageSet
	 * 		Flags  -> ()
	 */
	void AGBGameState::RoundStageSet()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.RoundStageSet");
		
		AGBGameState_RoundStageSet_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ResetTeamScores
	 * 		Flags  -> ()
	 */
	void AGBGameState::ResetTeamScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ResetTeamScores");
		
		AGBGameState_ResetTeamScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ResetPlayerScores
	 * 		Flags  -> ()
	 */
	void AGBGameState::ResetPlayerScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ResetPlayerScores");
		
		AGBGameState_ResetPlayerScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ResetMatchStats
	 * 		Flags  -> ()
	 */
	void AGBGameState::ResetMatchStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ResetMatchStats");
		
		AGBGameState_ResetMatchStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ReportClientMissingAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      AssetName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::ReportClientMissingAsset(const class FString& AssetName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ReportClientMissingAsset");
		
		AGBGameState_ReportClientMissingAsset_Params params {};
		params.AssetName = AssetName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.PlayAreaOpen
	 * 		Flags  -> ()
	 */
	bool AGBGameState::PlayAreaOpen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.PlayAreaOpen");
		
		AGBGameState_PlayAreaOpen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnVoteStartedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                VoteStarter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            VoteTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::OnVoteStartedEvent(class APlayerState* VoteStarter, const class FString& Command, const class FString& Params, int32_t VoteTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnVoteStartedEvent");
		
		AGBGameState_OnVoteStartedEvent_Params params {};
		params.VoteStarter = VoteStarter;
		params.Command = Command;
		params.Params = Params;
		params.VoteTime = VoteTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnVoteStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                VoteStarter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            VoteTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::OnVoteStarted(class APlayerState* VoteStarter, const class FString& Command, const class FString& Params, int32_t VoteTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnVoteStarted");
		
		AGBGameState_OnVoteStarted_Params params {};
		params.VoteStarter = VoteStarter;
		params.Command = Command;
		params.Params = Params;
		params.VoteTime = VoteTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnVoteEndedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bPassed                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NextVoteDelay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::OnVoteEndedEvent(bool bPassed, int32_t NextVoteDelay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnVoteEndedEvent");
		
		AGBGameState_OnVoteEndedEvent_Params params {};
		params.bPassed = bPassed;
		params.NextVoteDelay = NextVoteDelay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnVoteEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bPassed                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NextVoteDelay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::OnVoteEnded(bool bPassed, int32_t NextVoteDelay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnVoteEnded");
		
		AGBGameState_OnVoteEnded_Params params {};
		params.bPassed = bPassed;
		params.NextVoteDelay = NextVoteDelay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnVoteCountUpdatedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            YesVotes                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NoVotes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::OnVoteCountUpdatedEvent(int32_t YesVotes, int32_t NoVotes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnVoteCountUpdatedEvent");
		
		AGBGameState_OnVoteCountUpdatedEvent_Params params {};
		params.YesVotes = YesVotes;
		params.NoVotes = NoVotes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnVoteCountUpdated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            YesVotes                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NoVotes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::OnVoteCountUpdated(int32_t YesVotes, int32_t NoVotes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnVoteCountUpdated");
		
		AGBGameState_OnVoteCountUpdated_Params params {};
		params.YesVotes = YesVotes;
		params.NoVotes = NoVotes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_WatchMode
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_WatchMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_WatchMode");
		
		AGBGameState_OnRep_WatchMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_WatchConfig
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_WatchConfig()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_WatchConfig");
		
		AGBGameState_OnRep_WatchConfig_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_UsesReadyRoom
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_UsesReadyRoom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_UsesReadyRoom");
		
		AGBGameState_OnRep_UsesReadyRoom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_TeamScoreLists
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_TeamScoreLists()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_TeamScoreLists");
		
		AGBGameState_OnRep_TeamScoreLists_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_TeamAttitudes
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_TeamAttitudes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_TeamAttitudes");
		
		AGBGameState_OnRep_TeamAttitudes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_SearchLocations
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_SearchLocations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_SearchLocations");
		
		AGBGameState_OnRep_SearchLocations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_RoundTime
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_RoundTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_RoundTime");
		
		AGBGameState_OnRep_RoundTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_RoundStage
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_RoundStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_RoundStage");
		
		AGBGameState_OnRep_RoundStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_PlayerLoadouts
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_PlayerLoadouts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_PlayerLoadouts");
		
		AGBGameState_OnRep_PlayerLoadouts_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_ObjectiveLocation
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_ObjectiveLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_ObjectiveLocation");
		
		AGBGameState_OnRep_ObjectiveLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_MissionSettings
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_MissionSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_MissionSettings");
		
		AGBGameState_OnRep_MissionSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_MissionName
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_MissionName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_MissionName");
		
		AGBGameState_OnRep_MissionName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_MatchStats
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_MatchStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_MatchStats");
		
		AGBGameState_OnRep_MatchStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_IsRoundBased
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_IsRoundBased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_IsRoundBased");
		
		AGBGameState_OnRep_IsRoundBased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_GameStringTables
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_GameStringTables()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_GameStringTables");
		
		AGBGameState_OnRep_GameStringTables_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_GameStats
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_GameStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_GameStats");
		
		AGBGameState_OnRep_GameStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_GameRules
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_GameRules()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_GameRules");
		
		AGBGameState_OnRep_GameRules_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_GameObjectives
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_GameObjectives()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_GameObjectives");
		
		AGBGameState_OnRep_GameObjectives_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_GameModeName
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_GameModeName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_GameModeName");
		
		AGBGameState_OnRep_GameModeName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_Difficulty
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_Difficulty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_Difficulty");
		
		AGBGameState_OnRep_Difficulty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_CaptureZone
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_CaptureZone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_CaptureZone");
		
		AGBGameState_OnRep_CaptureZone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_CaptureState
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_CaptureState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_CaptureState");
		
		AGBGameState_OnRep_CaptureState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnRep_AllowLateJoiners
	 * 		Flags  -> ()
	 */
	void AGBGameState::OnRep_AllowLateJoiners()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnRep_AllowLateJoiners");
		
		AGBGameState_OnRep_AllowLateJoiners_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.OnGameMessageEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        GameMessageId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::OnGameMessageEvent(const class FName& GameMessageId, const class FName& Type, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.OnGameMessageEvent");
		
		AGBGameState_OnGameMessageEvent_Params params {};
		params.GameMessageId = GameMessageId;
		params.Type = Type;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.MulticastTimeRemainingAlertToWatches
	 * 		Flags  -> ()
	 */
	void AGBGameState::MulticastTimeRemainingAlertToWatches()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.MulticastTimeRemainingAlertToWatches");
		
		AGBGameState_MulticastTimeRemainingAlertToWatches_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.IsRoundBased
	 * 		Flags  -> ()
	 */
	bool AGBGameState::IsRoundBased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.IsRoundBased");
		
		AGBGameState_IsRoundBased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.IsGameRuleEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RuleName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBGameState::IsGameRuleEnabled(const class FName& RuleName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.IsGameRuleEnabled");
		
		AGBGameState_IsGameRuleEnabled_Params params {};
		params.RuleName = RuleName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.InitMissionName
	 * 		Flags  -> ()
	 */
	void AGBGameState::InitMissionName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.InitMissionName");
		
		AGBGameState_InitMissionName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.IncrementRoundNumber
	 * 		Flags  -> ()
	 */
	void AGBGameState::IncrementRoundNumber()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.IncrementRoundNumber");
		
		AGBGameState_IncrementRoundNumber_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.HasMissionSetting
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBGameState::HasMissionSetting(const class FName& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.HasMissionSetting");
		
		AGBGameState_HasMissionSetting_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetWinningTeamForRound
	 * 		Flags  -> ()
	 */
	int32_t AGBGameState::GetWinningTeamForRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetWinningTeamForRound");
		
		AGBGameState_GetWinningTeamForRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetWatchMode
	 * 		Flags  -> ()
	 */
	EWatchMode AGBGameState::GetWatchMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetWatchMode");
		
		AGBGameState_GetWatchMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetWatchConfig
	 * 		Flags  -> ()
	 */
	unsigned char AGBGameState::GetWatchConfig()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetWatchConfig");
		
		AGBGameState_GetWatchConfig_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetVotingCommands
	 * 		Flags  -> ()
	 */
	TArray<class FString> AGBGameState::GetVotingCommands()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetVotingCommands");
		
		AGBGameState_GetVotingCommands_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetTimeLimit
	 * 		Flags  -> ()
	 */
	int32_t AGBGameState::GetTimeLimit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetTimeLimit");
		
		AGBGameState_GetTimeLimit_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetTeamElementCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInPlayOnly                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGBGameState::GetTeamElementCount(unsigned char TeamId, bool bInPlayOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetTeamElementCount");
		
		AGBGameState_GetTeamElementCount_Params params {};
		params.TeamId = TeamId;
		params.bInPlayOnly = bInPlayOnly;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetServerName
	 * 		Flags  -> ()
	 */
	class FString AGBGameState::GetServerName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetServerName");
		
		AGBGameState_GetServerName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetServerMOTD
	 * 		Flags  -> ()
	 */
	class FString AGBGameState::GetServerMOTD()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetServerMOTD");
		
		AGBGameState_GetServerMOTD_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetSearchLocations
	 * 		Flags  -> ()
	 */
	TArray<struct FGBGameObjective> AGBGameState::GetSearchLocations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetSearchLocations");
		
		AGBGameState_GetSearchLocations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetScoreListForTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FGBScoreLine> AGBGameState::GetScoreListForTeam(unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetScoreListForTeam");
		
		AGBGameState_GetScoreListForTeam_Params params {};
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetRoundTime
	 * 		Flags  -> ()
	 */
	int32_t AGBGameState::GetRoundTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetRoundTime");
		
		AGBGameState_GetRoundTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetRoundStageTime
	 * 		Flags  -> ()
	 */
	float AGBGameState::GetRoundStageTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetRoundStageTime");
		
		AGBGameState_GetRoundStageTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetRoundStage
	 * 		Flags  -> ()
	 */
	class FName AGBGameState::GetRoundStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetRoundStage");
		
		AGBGameState_GetRoundStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetRoundNumber
	 * 		Flags  -> ()
	 */
	int32_t AGBGameState::GetRoundNumber()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetRoundNumber");
		
		AGBGameState_GetRoundNumber_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetRoundIsTemporaryGameMode
	 * 		Flags  -> ()
	 */
	bool AGBGameState::GetRoundIsTemporaryGameMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetRoundIsTemporaryGameMode");
		
		AGBGameState_GetRoundIsTemporaryGameMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetPlayerTeamInfos
	 * 		Flags  -> ()
	 */
	TArray<struct FGBTeamInfo> AGBGameState::GetPlayerTeamInfos()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetPlayerTeamInfos");
		
		AGBGameState_GetPlayerTeamInfos_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetPlayerTeamInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FGBTeamInfo AGBGameState::GetPlayerTeamInfo(unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetPlayerTeamInfo");
		
		AGBGameState_GetPlayerTeamInfo_Params params {};
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetPlayerTeamCount
	 * 		Flags  -> ()
	 */
	int32_t AGBGameState::GetPlayerTeamCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetPlayerTeamCount");
		
		AGBGameState_GetPlayerTeamCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetPlayerScoreTemplate
	 * 		Flags  -> ()
	 */
	struct FGBScoreCollection AGBGameState::GetPlayerScoreTemplate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetPlayerScoreTemplate");
		
		AGBGameState_GetPlayerScoreTemplate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetPlayerRichPresenceStatus
	 * 		Flags  -> ()
	 */
	class FString AGBGameState::GetPlayerRichPresenceStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetPlayerRichPresenceStatus");
		
		AGBGameState_GetPlayerRichPresenceStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetPlayerLoadoutNames
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bRestrictionMappedOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class FName> AGBGameState::GetPlayerLoadoutNames(bool bRestrictionMappedOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetPlayerLoadoutNames");
		
		AGBGameState_GetPlayerLoadoutNames_Params params {};
		params.bRestrictionMappedOnly = bRestrictionMappedOnly;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetPlayerList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bExcludeBots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AGBPlayerState*> AGBGameState::GetPlayerList(unsigned char TeamId, bool bExcludeBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetPlayerList");
		
		AGBGameState_GetPlayerList_Params params {};
		params.TeamId = TeamId;
		params.bExcludeBots = bExcludeBots;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetPermittedMissionList
	 * 		Flags  -> ()
	 */
	TArray<class FString> AGBGameState::GetPermittedMissionList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetPermittedMissionList");
		
		AGBGameState_GetPermittedMissionList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetPermittedGameModes
	 * 		Flags  -> ()
	 */
	TArray<class FString> AGBGameState::GetPermittedGameModes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetPermittedGameModes");
		
		AGBGameState_GetPermittedGameModes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetObjectiveLocation
	 * 		Flags  -> ()
	 */
	struct FVector AGBGameState::GetObjectiveLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetObjectiveLocation");
		
		AGBGameState_GetObjectiveLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetMissionSettings
	 * 		Flags  -> ()
	 */
	TArray<struct FGBMissionSetting> AGBGameState::GetMissionSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetMissionSettings");
		
		AGBGameState_GetMissionSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetMissionSetting
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FGBMissionSetting AGBGameState::GetMissionSetting(const class FName& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetMissionSetting");
		
		AGBGameState_GetMissionSetting_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetMissionName
	 * 		Flags  -> ()
	 */
	class FText AGBGameState::GetMissionName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetMissionName");
		
		AGBGameState_GetMissionName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetMatchStats
	 * 		Flags  -> ()
	 */
	struct FGBMatchStats AGBGameState::GetMatchStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetMatchStats");
		
		AGBGameState_GetMatchStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetLocalisedGameText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DefaultValue                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPrettifyDefault                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText AGBGameState::GetLocalisedGameText(const class FString& Key, const class FString& DefaultValue, bool bPrettifyDefault)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetLocalisedGameText");
		
		AGBGameState_GetLocalisedGameText_Params params {};
		params.Key = Key;
		params.DefaultValue = DefaultValue;
		params.bPrettifyDefault = bPrettifyDefault;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetLastMissionFileName
	 * 		Flags  -> ()
	 */
	class FString AGBGameState::GetLastMissionFileName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetLastMissionFileName");
		
		AGBGameState_GetLastMissionFileName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetIsCapturing
	 * 		Flags  -> ()
	 */
	bool AGBGameState::GetIsCapturing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetIsCapturing");
		
		AGBGameState_GetIsCapturing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetGameStatValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString AGBGameState::GetGameStatValue(const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetGameStatValue");
		
		AGBGameState_GetGameStatValue_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetGameStats
	 * 		Flags  -> ()
	 */
	TArray<class FString> AGBGameState::GetGameStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetGameStats");
		
		AGBGameState_GetGameStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetGameRules
	 * 		Flags  -> ()
	 */
	TMap<class FName, bool> AGBGameState::GetGameRules()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetGameRules");
		
		AGBGameState_GetGameRules_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetGameObjectives
	 * 		Flags  -> ()
	 */
	TArray<struct FGBGameObjective> AGBGameState::GetGameObjectives()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetGameObjectives");
		
		AGBGameState_GetGameObjectives_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetGameModeName
	 * 		Flags  -> ()
	 */
	class FName AGBGameState::GetGameModeName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetGameModeName");
		
		AGBGameState_GetGameModeName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetDifficulty
	 * 		Flags  -> ()
	 */
	int32_t AGBGameState::GetDifficulty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetDifficulty");
		
		AGBGameState_GetDifficulty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetCumulativeScoreForTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGBGameState::GetCumulativeScoreForTeam(unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetCumulativeScoreForTeam");
		
		AGBGameState_GetCumulativeScoreForTeam_Params params {};
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetCaptureZone
	 * 		Flags  -> ()
	 */
	struct FGBCaptureZone AGBGameState::GetCaptureZone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetCaptureZone");
		
		AGBGameState_GetCaptureZone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.GetBriefingRoomWidget
	 * 		Flags  -> ()
	 */
	class UClass* AGBGameState::GetBriefingRoomWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.GetBriefingRoomWidget");
		
		AGBGameState_GetBriefingRoomWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ForceResetActors
	 * 		Flags  -> ()
	 */
	void AGBGameState::ForceResetActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ForceResetActors");
		
		AGBGameState_ForceResetActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.FindPlayerStateByPlayerNameOrUniqueId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerNameOrUniqueId                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBPlayerState* AGBGameState::FindPlayerStateByPlayerNameOrUniqueId(const class FString& PlayerNameOrUniqueId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.FindPlayerStateByPlayerNameOrUniqueId");
		
		AGBGameState_FindPlayerStateByPlayerNameOrUniqueId_Params params {};
		params.PlayerNameOrUniqueId = PlayerNameOrUniqueId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.FindPlayerControllerByPlayerNameOrUniqueId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerNameOrUniqueId                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class APlayerController* AGBGameState::FindPlayerControllerByPlayerNameOrUniqueId(const class FString& PlayerNameOrUniqueId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.FindPlayerControllerByPlayerNameOrUniqueId");
		
		AGBGameState_FindPlayerControllerByPlayerNameOrUniqueId_Params params {};
		params.PlayerNameOrUniqueId = PlayerNameOrUniqueId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.DecrementRoundNumber
	 * 		Flags  -> ()
	 */
	void AGBGameState::DecrementRoundNumber()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.DecrementRoundNumber");
		
		AGBGameState_DecrementRoundNumber_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.CreateTeamScores
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::CreateTeamScores(unsigned char TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.CreateTeamScores");
		
		AGBGameState_CreateTeamScores_Params params {};
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ClearTeamScores
	 * 		Flags  -> ()
	 */
	void AGBGameState::ClearTeamScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ClearTeamScores");
		
		AGBGameState_ClearTeamScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ClearSearchLocations
	 * 		Flags  -> ()
	 */
	void AGBGameState::ClearSearchLocations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ClearSearchLocations");
		
		AGBGameState_ClearSearchLocations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ClearPlayerScoresTemplate
	 * 		Flags  -> ()
	 */
	void AGBGameState::ClearPlayerScoresTemplate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ClearPlayerScoresTemplate");
		
		AGBGameState_ClearPlayerScoresTemplate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ClearPlayerScores
	 * 		Flags  -> ()
	 */
	void AGBGameState::ClearPlayerScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ClearPlayerScores");
		
		AGBGameState_ClearPlayerScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ClearGameStats
	 * 		Flags  -> ()
	 */
	void AGBGameState::ClearGameStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ClearGameStats");
		
		AGBGameState_ClearGameStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ClearGameObjectives
	 * 		Flags  -> ()
	 */
	void AGBGameState::ClearGameObjectives()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ClearGameObjectives");
		
		AGBGameState_ClearGameObjectives_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.BroadcastGameMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        GameMessageId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::BroadcastGameMessage(const class FName& GameMessageId, const class FName& Type, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.BroadcastGameMessage");
		
		AGBGameState_BroadcastGameMessage_Params params {};
		params.GameMessageId = GameMessageId;
		params.Type = Type;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AwardTeamScore
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ScoreName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ScoreMultiple                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::AwardTeamScore(unsigned char TeamId, const class FName& ScoreName, int32_t ScoreMultiple)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AwardTeamScore");
		
		AGBGameState_AwardTeamScore_Params params {};
		params.TeamId = TeamId;
		params.ScoreName = ScoreName;
		params.ScoreMultiple = ScoreMultiple;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AreTeamScoresInitialised
	 * 		Flags  -> ()
	 */
	bool AGBGameState::AreTeamScoresInitialised()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AreTeamScoresInitialised");
		
		AGBGameState_AreTeamScoresInitialised_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.ArePlayerScoresInitialised
	 * 		Flags  -> ()
	 */
	bool AGBGameState::ArePlayerScoresInitialised()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.ArePlayerScoresInitialised");
		
		AGBGameState_ArePlayerScoresInitialised_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AllowLateJoiners
	 * 		Flags  -> ()
	 */
	bool AGBGameState::AllowLateJoiners()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AllowLateJoiners");
		
		AGBGameState_AllowLateJoiners_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AddTeamScoreType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ScoreName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ScoreDescription                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ScoreToAdd                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OneOff                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::AddTeamScoreType(const class FName& ScoreName, const class FString& ScoreDescription, int32_t ScoreToAdd, bool OneOff)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AddTeamScoreType");
		
		AGBGameState_AddTeamScoreType_Params params {};
		params.ScoreName = ScoreName;
		params.ScoreDescription = ScoreDescription;
		params.ScoreToAdd = ScoreToAdd;
		params.OneOff = OneOff;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AddSearchLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EGBGameObjectiveType                               ObjectiveType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::AddSearchLocation(unsigned char TeamId, const class FName& Name, EGBGameObjectiveType ObjectiveType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AddSearchLocation");
		
		AGBGameState_AddSearchLocation_Params params {};
		params.TeamId = TeamId;
		params.Name = Name;
		params.ObjectiveType = ObjectiveType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AddScoreToCumulativeScore
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ScoreToAdd                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::AddScoreToCumulativeScore(unsigned char TeamId, int32_t ScoreToAdd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AddScoreToCumulativeScore");
		
		AGBGameState_AddScoreToCumulativeScore_Params params {};
		params.TeamId = TeamId;
		params.ScoreToAdd = ScoreToAdd;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AddPlayerTeamInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGBTeamInfo                                 NewPlayerTeam                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::AddPlayerTeamInfo(unsigned char TeamId, const struct FGBTeamInfo& NewPlayerTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AddPlayerTeamInfo");
		
		AGBGameState_AddPlayerTeamInfo_Params params {};
		params.TeamId = TeamId;
		params.NewPlayerTeam = NewPlayerTeam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AddPlayerScoreType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ScoreName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ScoreDescription                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ScoreToAdd                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OneOff                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::AddPlayerScoreType(const class FName& ScoreName, const class FString& ScoreDescription, int32_t ScoreToAdd, bool OneOff)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AddPlayerScoreType");
		
		AGBGameState_AddPlayerScoreType_Params params {};
		params.ScoreName = ScoreName;
		params.ScoreDescription = ScoreDescription;
		params.ScoreToAdd = ScoreToAdd;
		params.OneOff = OneOff;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AddMissionSetting
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MinValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            MaxValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CurrentValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::AddMissionSetting(const class FName& Name, int32_t MinValue, int32_t MaxValue, int32_t CurrentValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AddMissionSetting");
		
		AGBGameState_AddMissionSetting_Params params {};
		params.Name = Name;
		params.MinValue = MinValue;
		params.MaxValue = MaxValue;
		params.CurrentValue = CurrentValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AddGameStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      StatString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::AddGameStat(const class FString& StatString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AddGameStat");
		
		AGBGameState_AddGameStat_Params params {};
		params.StatString = StatString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameState.AddGameObjective
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EGBGameObjectiveType                               ObjectiveType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGameState::AddGameObjective(unsigned char TeamId, const class FName& Name, EGBGameObjectiveType ObjectiveType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameState.AddGameObjective");
		
		AGBGameState_AddGameObjective_Params params {};
		params.TeamId = TeamId;
		params.Name = Name;
		params.ObjectiveType = ObjectiveType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBGameState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBGameState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameTrigger.GetOverlaps
	 * 		Flags  -> ()
	 */
	TArray<class AGBCharacter*> AGBGameTrigger::GetOverlaps()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameTrigger.GetOverlaps");
		
		AGBGameTrigger_GetOverlaps_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBGameTrigger.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBGameTrigger::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameTrigger");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameUserSettings.SetUnfocusedVolumeMultiplier
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              InVolumeMultiplier                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameUserSettings::SetUnfocusedVolumeMultiplier(float InVolumeMultiplier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameUserSettings.SetUnfocusedVolumeMultiplier");
		
		UGBGameUserSettings_SetUnfocusedVolumeMultiplier_Params params {};
		params.InVolumeMultiplier = InVolumeMultiplier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameUserSettings.SetAudioVolume
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InName                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InVolume                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBGameUserSettings::SetAudioVolume(const class FName& InName, float InVolume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameUserSettings.SetAudioVolume");
		
		UGBGameUserSettings_SetAudioVolume_Params params {};
		params.InName = InName;
		params.InVolume = InVolume;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameUserSettings.GetUnfocusedVolumeMultiplier
	 * 		Flags  -> ()
	 */
	float UGBGameUserSettings::GetUnfocusedVolumeMultiplier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameUserSettings.GetUnfocusedVolumeMultiplier");
		
		UGBGameUserSettings_GetUnfocusedVolumeMultiplier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameUserSettings.GetQualityLevelCVarSettingsFromIni
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      QualitySection                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            QualityLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              OutCVarKeys                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              OutCVarValues                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBGameUserSettings::GetQualityLevelCVarSettingsFromIni(const class FString& QualitySection, int32_t QualityLevel, TArray<class FString>* OutCVarKeys, TArray<class FString>* OutCVarValues)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameUserSettings.GetQualityLevelCVarSettingsFromIni");
		
		UGBGameUserSettings_GetQualityLevelCVarSettingsFromIni_Params params {};
		params.QualitySection = QualitySection;
		params.QualityLevel = QualityLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCVarKeys != nullptr)
			*OutCVarKeys = params.OutCVarKeys;
		if (OutCVarValues != nullptr)
			*OutCVarValues = params.OutCVarValues;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameUserSettings.GetGBGameUserSettings
	 * 		Flags  -> ()
	 */
	class UGBGameUserSettings* UGBGameUserSettings::GetGBGameUserSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameUserSettings.GetGBGameUserSettings");
		
		UGBGameUserSettings_GetGBGameUserSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameUserSettings.GetAudioVolume
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InName                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBGameUserSettings::GetAudioVolume(const class FName& InName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameUserSettings.GetAudioVolume");
		
		UGBGameUserSettings_GetAudioVolume_Params params {};
		params.InName = InName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameUserSettings.AreQualityLevelsDirty
	 * 		Flags  -> ()
	 */
	bool UGBGameUserSettings::AreQualityLevelsDirty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameUserSettings.AreQualityLevelsDirty");
		
		UGBGameUserSettings_AreQualityLevelsDirty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBGameUserSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBGameUserSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameUserSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameViewportClient.ScreenshotRequested
	 * 		Flags  -> ()
	 */
	void UGBGameViewportClient::ScreenshotRequested()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameViewportClient.ScreenshotRequested");
		
		UGBGameViewportClient_ScreenshotRequested_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameViewportClient.GetTravelFailureInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      OutLastAttemptedURL                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETravelFailure                                     OutLastTravelFailureType                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutLastTravelErrorString                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBGameViewportClient::GetTravelFailureInfo(class FString* OutLastAttemptedURL, ETravelFailure* OutLastTravelFailureType, class FString* OutLastTravelErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameViewportClient.GetTravelFailureInfo");
		
		UGBGameViewportClient_GetTravelFailureInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutLastAttemptedURL != nullptr)
			*OutLastAttemptedURL = params.OutLastAttemptedURL;
		if (OutLastTravelFailureType != nullptr)
			*OutLastTravelFailureType = params.OutLastTravelFailureType;
		if (OutLastTravelErrorString != nullptr)
			*OutLastTravelErrorString = params.OutLastTravelErrorString;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameViewportClient.GetNetworkFailureInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      OutLastAttemptedURL                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ENetworkFailure                                    OutLastNetworkFailureType                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutLastNetworkErrorString                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBGameViewportClient::GetNetworkFailureInfo(class FString* OutLastAttemptedURL, ENetworkFailure* OutLastNetworkFailureType, class FString* OutLastNetworkErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameViewportClient.GetNetworkFailureInfo");
		
		UGBGameViewportClient_GetNetworkFailureInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutLastAttemptedURL != nullptr)
			*OutLastAttemptedURL = params.OutLastAttemptedURL;
		if (OutLastNetworkFailureType != nullptr)
			*OutLastNetworkFailureType = params.OutLastNetworkFailureType;
		if (OutLastNetworkErrorString != nullptr)
			*OutLastNetworkErrorString = params.OutLastNetworkErrorString;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameViewportClient.GetGameViewportClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UGBGameViewportClient* UGBGameViewportClient::GetGameViewportClient(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameViewportClient.GetGameViewportClient");
		
		UGBGameViewportClient_GetGameViewportClient_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameViewportClient.GetDisconnectReason
	 * 		Flags  -> ()
	 */
	class FText UGBGameViewportClient::GetDisconnectReason()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameViewportClient.GetDisconnectReason");
		
		UGBGameViewportClient_GetDisconnectReason_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameViewportClient.ClearTravelFailureInfo
	 * 		Flags  -> ()
	 */
	void UGBGameViewportClient::ClearTravelFailureInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameViewportClient.ClearTravelFailureInfo");
		
		UGBGameViewportClient_ClearTravelFailureInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameViewportClient.ClearNetworkFailure
	 * 		Flags  -> ()
	 */
	void UGBGameViewportClient::ClearNetworkFailure()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameViewportClient.ClearNetworkFailure");
		
		UGBGameViewportClient_ClearNetworkFailure_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGameViewportClient.ClearDisconnectReason
	 * 		Flags  -> ()
	 */
	void UGBGameViewportClient::ClearDisconnectReason()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGameViewportClient.ClearDisconnectReason");
		
		UGBGameViewportClient_ClearDisconnectReason_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBGameViewportClient.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBGameViewportClient::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGameViewportClient");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.WindupTimer
	 * 		Flags  -> ()
	 */
	void AGBGrenade::WindupTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.WindupTimer");
		
		AGBGrenade_WindupTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.WantsToThrow
	 * 		Flags  -> ()
	 */
	void AGBGrenade::WantsToThrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.WantsToThrow");
		
		AGBGrenade_WantsToThrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.SyncCurrentSpeed
	 * 		Flags  -> ()
	 */
	void AGBGrenade::SyncCurrentSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.SyncCurrentSpeed");
		
		AGBGrenade_SyncCurrentSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.SpawnGrenadeTimer
	 * 		Flags  -> ()
	 */
	void AGBGrenade::SpawnGrenadeTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.SpawnGrenadeTimer");
		
		AGBGrenade_SpawnGrenadeTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.ServerWantsToThrow
	 * 		Flags  -> ()
	 */
	void AGBGrenade::ServerWantsToThrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.ServerWantsToThrow");
		
		AGBGrenade_ServerWantsToThrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.ServerSetCurrentSpeed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewCurrentSpeed                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGrenade::ServerSetCurrentSpeed(int32_t NewCurrentSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.ServerSetCurrentSpeed");
		
		AGBGrenade_ServerSetCurrentSpeed_Params params {};
		params.NewCurrentSpeed = NewCurrentSpeed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.ServerReplacePin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGrenade::ServerReplacePin(bool bForce)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.ServerReplacePin");
		
		AGBGrenade_ServerReplacePin_Params params {};
		params.bForce = bForce;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.ServerPrepareToThrow
	 * 		Flags  -> ()
	 */
	void AGBGrenade::ServerPrepareToThrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.ServerPrepareToThrow");
		
		AGBGrenade_ServerPrepareToThrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.ReplacePin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBGrenade::ReplacePin(bool bForce)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.ReplacePin");
		
		AGBGrenade_ReplacePin_Params params {};
		params.bForce = bForce;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.PrepareToThrow
	 * 		Flags  -> ()
	 */
	void AGBGrenade::PrepareToThrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.PrepareToThrow");
		
		AGBGrenade_PrepareToThrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.OnSpeedChangedEvent
	 * 		Flags  -> ()
	 */
	void AGBGrenade::OnSpeedChangedEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.OnSpeedChangedEvent");
		
		AGBGrenade_OnSpeedChangedEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.IsReadyToThrow
	 * 		Flags  -> ()
	 */
	bool AGBGrenade::IsReadyToThrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.IsReadyToThrow");
		
		AGBGrenade_IsReadyToThrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.IsGrenadeMontagePlaying
	 * 		Flags  -> ()
	 */
	bool AGBGrenade::IsGrenadeMontagePlaying()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.IsGrenadeMontagePlaying");
		
		AGBGrenade_IsGrenadeMontagePlaying_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.GetLaunchVelocity
	 * 		Flags  -> ()
	 */
	struct FVector AGBGrenade::GetLaunchVelocity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.GetLaunchVelocity");
		
		AGBGrenade_GetLaunchVelocity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBGrenade.GetLaunchLocation
	 * 		Flags  -> ()
	 */
	struct FVector AGBGrenade::GetLaunchLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBGrenade.GetLaunchLocation");
		
		AGBGrenade_GetLaunchLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBGrenade.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBGrenade::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBGrenade");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHolster.HolsterItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBHolster::HolsterItem(class AGBItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHolster.HolsterItem");
		
		AGBHolster_HolsterItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHolster.GetHolsterUnequipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     HolsterItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGBSwitchItemInfo                           OutUnequipInfo                                             (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool AGBHolster::GetHolsterUnequipInfo(class AGBItem* HolsterItem, EHand TargetHand, struct FGBSwitchItemInfo* OutUnequipInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHolster.GetHolsterUnequipInfo");
		
		AGBHolster_GetHolsterUnequipInfo_Params params {};
		params.HolsterItem = HolsterItem;
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutUnequipInfo != nullptr)
			*OutUnequipInfo = params.OutUnequipInfo;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHolster.GetHolsterEquipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     HolsterItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGBSwitchItemInfo                           OutEquipInfo                                               (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool AGBHolster::GetHolsterEquipInfo(class AGBItem* HolsterItem, EHand TargetHand, struct FGBSwitchItemInfo* OutEquipInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHolster.GetHolsterEquipInfo");
		
		AGBHolster_GetHolsterEquipInfo_Params params {};
		params.HolsterItem = HolsterItem;
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutEquipInfo != nullptr)
			*OutEquipInfo = params.OutEquipInfo;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHolster.GetHolsteredItem
	 * 		Flags  -> ()
	 */
	class AGBItem* AGBHolster::GetHolsteredItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHolster.GetHolsteredItem");
		
		AGBHolster_GetHolsteredItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBHolster.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBHolster::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBHolster");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.SuggestHint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::SuggestHint(const class FName& HintName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.SuggestHint");
		
		AGBHUD_SuggestHint_Params params {};
		params.HintName = HintName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.ShowReadyRoomPlayerNameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETeamElement                                       PlayerTeamElement                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::ShowReadyRoomPlayerNameEvent(const class FString& PlayerName, ETeamElement PlayerTeamElement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.ShowReadyRoomPlayerNameEvent");
		
		AGBHUD_ShowReadyRoomPlayerNameEvent_Params params {};
		params.PlayerName = PlayerName;
		params.PlayerTeamElement = PlayerTeamElement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.ShowRadialItemsMenuEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AGBItem*>                             Items                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::ShowRadialItemsMenuEvent(TArray<class AGBItem*> Items)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.ShowRadialItemsMenuEvent");
		
		AGBHUD_ShowRadialItemsMenuEvent_Params params {};
		params.Items = Items;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.ShowMenuEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        MenuType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::ShowMenuEvent(const class FName& MenuType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.ShowMenuEvent");
		
		AGBHUD_ShowMenuEvent_Params params {};
		params.MenuType = MenuType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.ShowHint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::ShowHint(const class FName& HintName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.ShowHint");
		
		AGBHUD_ShowHint_Params params {};
		params.HintName = HintName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.OpenUserMenu
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MenuName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::OpenUserMenu(const class FString& MenuName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.OpenUserMenu");
		
		AGBHUD_OpenUserMenu_Params params {};
		params.MenuName = MenuName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.OpenRadialUserMenu
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MenuName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::OpenRadialUserMenu(const class FString& MenuName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.OpenRadialUserMenu");
		
		AGBHUD_OpenRadialUserMenu_Params params {};
		params.MenuName = MenuName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.OpenLinearUserMenu
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MenuName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::OpenLinearUserMenu(const class FString& MenuName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.OpenLinearUserMenu");
		
		AGBHUD_OpenLinearUserMenu_Params params {};
		params.MenuName = MenuName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.OnSuggestHintEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::OnSuggestHintEvent(const class FName& HintName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.OnSuggestHintEvent");
		
		AGBHUD_OnSuggestHintEvent_Params params {};
		params.HintName = HintName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.OnShowHUDEvent
	 * 		Flags  -> ()
	 */
	void AGBHUD::OnShowHUDEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.OnShowHUDEvent");
		
		AGBHUD_OnShowHUDEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.OnShowHintEvent
	 * 		Flags  -> ()
	 */
	void AGBHUD::OnShowHintEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.OnShowHintEvent");
		
		AGBHUD_OnShowHintEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.OnInventorySlotEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bImmediate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::OnInventorySlotEvent(int32_t Index, bool bImmediate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.OnInventorySlotEvent");
		
		AGBHUD_OnInventorySlotEvent_Params params {};
		params.Index = Index;
		params.bImmediate = bImmediate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.OnChatLineAddedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBPlayerState*                              SenderGBPlayerState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::OnChatLineAddedEvent(class AGBPlayerState* SenderGBPlayerState, const class FString& Message, const class FName& Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.OnChatLineAddedEvent");
		
		AGBHUD_OnChatLineAddedEvent_Params params {};
		params.SenderGBPlayerState = SenderGBPlayerState;
		params.Message = Message;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.IsMenuVisibleEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        MenuType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBHUD::IsMenuVisibleEvent(const class FName& MenuType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.IsMenuVisibleEvent");
		
		AGBHUD_IsMenuVisibleEvent_Params params {};
		params.MenuType = MenuType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.InventorySlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bImmediate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::InventorySlot(int32_t Index, bool bImmediate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.InventorySlot");
		
		AGBHUD_InventorySlot_Params params {};
		params.Index = Index;
		params.bImmediate = bImmediate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.HintValid
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBHUD::HintValid(const class FName& HintName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.HintValid");
		
		AGBHUD_HintValid_Params params {};
		params.HintName = HintName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.HideReadyRoomPlayerNameEvent
	 * 		Flags  -> ()
	 */
	void AGBHUD::HideReadyRoomPlayerNameEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.HideReadyRoomPlayerNameEvent");
		
		AGBHUD_HideReadyRoomPlayerNameEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.HideRadialItemsMenuEvent
	 * 		Flags  -> ()
	 */
	void AGBHUD::HideRadialItemsMenuEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.HideRadialItemsMenuEvent");
		
		AGBHUD_HideRadialItemsMenuEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.HideMenuEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        MenuType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBHUD::HideMenuEvent(const class FName& MenuType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.HideMenuEvent");
		
		AGBHUD_HideMenuEvent_Params params {};
		params.MenuType = MenuType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.GetViewTarget
	 * 		Flags  -> ()
	 */
	class AActor* AGBHUD::GetViewTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.GetViewTarget");
		
		AGBHUD_GetViewTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBHUD.GetUserMenu
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MenuName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              OutMenuContent                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool AGBHUD::GetUserMenu(const class FString& MenuName, TArray<class FString>* OutMenuContent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBHUD.GetUserMenu");
		
		AGBHUD_GetUserMenu_Params params {};
		params.MenuName = MenuName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutMenuContent != nullptr)
			*OutMenuContent = params.OutMenuContent;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBHUD.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBHUD::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBHUD");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInputOverrideInterface.OverrideInputKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FKey                                        Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EBPInputEvent                                      EventType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              AmountDepressed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGamepad                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBInputOverrideInterface::OverrideInputKey(const struct FKey& Key, EBPInputEvent EventType, float AmountDepressed, bool bGamepad)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInputOverrideInterface.OverrideInputKey");
		
		UGBInputOverrideInterface_OverrideInputKey_Params params {};
		params.Key = Key;
		params.EventType = EventType;
		params.AmountDepressed = AmountDepressed;
		params.bGamepad = bGamepad;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInputOverrideInterface.OverrideInputAxis
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FKey                                        Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NumSamples                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGamepad                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBInputOverrideInterface::OverrideInputAxis(const struct FKey& Key, float Delta, float DeltaTime, int32_t NumSamples, bool bGamepad)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInputOverrideInterface.OverrideInputAxis");
		
		UGBInputOverrideInterface_OverrideInputAxis_Params params {};
		params.Key = Key;
		params.Delta = Delta;
		params.DeltaTime = DeltaTime;
		params.NumSamples = NumSamples;
		params.bGamepad = bGamepad;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBInputOverrideInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBInputOverrideInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBInputOverrideInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInsertionPoint.SetInsertionPointName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewInsertionPointName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBInsertionPoint::SetInsertionPointName(const class FName& NewInsertionPointName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInsertionPoint.SetInsertionPointName");
		
		AGBInsertionPoint_SetInsertionPointName_Params params {};
		params.NewInsertionPointName = NewInsertionPointName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInsertionPoint.InsertionPointUpdated
	 * 		Flags  -> ()
	 */
	void AGBInsertionPoint::InsertionPointUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInsertionPoint.InsertionPointUpdated");
		
		AGBInsertionPoint_InsertionPointUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInsertionPoint.GetTopDownView
	 * 		Flags  -> ()
	 */
	bool AGBInsertionPoint::GetTopDownView()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInsertionPoint.GetTopDownView");
		
		AGBInsertionPoint_GetTopDownView_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInsertionPoint.GetSpawnInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     SpawnLocation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    SpawnRotation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool AGBInsertionPoint::GetSpawnInfo(struct FVector* SpawnLocation, struct FRotator* SpawnRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInsertionPoint.GetSpawnInfo");
		
		AGBInsertionPoint_GetSpawnInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SpawnLocation != nullptr)
			*SpawnLocation = params.SpawnLocation;
		if (SpawnRotation != nullptr)
			*SpawnRotation = params.SpawnRotation;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInsertionPoint.GetSideView
	 * 		Flags  -> ()
	 */
	bool AGBInsertionPoint::GetSideView()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInsertionPoint.GetSideView");
		
		AGBInsertionPoint_GetSideView_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInsertionPoint.GetPlayers
	 * 		Flags  -> ()
	 */
	TArray<class AGBPlayerState*> AGBInsertionPoint::GetPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInsertionPoint.GetPlayers");
		
		AGBInsertionPoint_GetPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInsertionPoint.GetMaxSupportedPlayers
	 * 		Flags  -> ()
	 */
	int32_t AGBInsertionPoint::GetMaxSupportedPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInsertionPoint.GetMaxSupportedPlayers");
		
		AGBInsertionPoint_GetMaxSupportedPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInsertionPoint.CreateAssociatedPlayerStarts
	 * 		Flags  -> ()
	 */
	void AGBInsertionPoint::CreateAssociatedPlayerStarts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInsertionPoint.CreateAssociatedPlayerStarts");
		
		AGBInsertionPoint_CreateAssociatedPlayerStarts_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBInsertionPoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBInsertionPoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBInsertionPoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.SyncCount
	 * 		Flags  -> ()
	 */
	void UGBInternalMagazineComponent::SyncCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.SyncCount");
		
		UGBInternalMagazineComponent_SyncCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.StartPlusOne
	 * 		Flags  -> ()
	 */
	bool UGBInternalMagazineComponent::StartPlusOne()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.StartPlusOne");
		
		UGBInternalMagazineComponent_StartPlusOne_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.SetIsFiringFromOpenBolt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewIsFiringFromOpenBolt                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBInternalMagazineComponent::SetIsFiringFromOpenBolt(bool bNewIsFiringFromOpenBolt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.SetIsFiringFromOpenBolt");
		
		UGBInternalMagazineComponent_SetIsFiringFromOpenBolt_Params params {};
		params.bNewIsFiringFromOpenBolt = bNewIsFiringFromOpenBolt;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.SetChamberedRound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      NewChamberedRound                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBInternalMagazineComponent::SetChamberedRound(class UClass* NewChamberedRound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.SetChamberedRound");
		
		UGBInternalMagazineComponent_SetChamberedRound_Params params {};
		params.NewChamberedRound = NewChamberedRound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.SetBoltHeldOpen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewBoltIsHeldOpen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBInternalMagazineComponent::SetBoltHeldOpen(bool bNewBoltIsHeldOpen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.SetBoltHeldOpen");
		
		UGBInternalMagazineComponent_SetBoltHeldOpen_Params params {};
		params.bNewBoltIsHeldOpen = bNewBoltIsHeldOpen;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.OnRep_Count
	 * 		Flags  -> ()
	 */
	void UGBInternalMagazineComponent::OnRep_Count()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.OnRep_Count");
		
		UGBInternalMagazineComponent_OnRep_Count_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.IsLiveRoundChambered
	 * 		Flags  -> ()
	 */
	bool UGBInternalMagazineComponent::IsLiveRoundChambered()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.IsLiveRoundChambered");
		
		UGBInternalMagazineComponent_IsLiveRoundChambered_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.GetRoundType
	 * 		Flags  -> ()
	 */
	class FName UGBInternalMagazineComponent::GetRoundType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.GetRoundType");
		
		UGBInternalMagazineComponent_GetRoundType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.GetIsFiringFromOpenBolt
	 * 		Flags  -> ()
	 */
	bool UGBInternalMagazineComponent::GetIsFiringFromOpenBolt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.GetIsFiringFromOpenBolt");
		
		UGBInternalMagazineComponent_GetIsFiringFromOpenBolt_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.GetCount
	 * 		Flags  -> ()
	 */
	int32_t UGBInternalMagazineComponent::GetCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.GetCount");
		
		UGBInternalMagazineComponent_GetCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.GetChamberedRound
	 * 		Flags  -> ()
	 */
	class UClass* UGBInternalMagazineComponent::GetChamberedRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.GetChamberedRound");
		
		UGBInternalMagazineComponent_GetChamberedRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.GetCapacity
	 * 		Flags  -> ()
	 */
	int32_t UGBInternalMagazineComponent::GetCapacity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.GetCapacity");
		
		UGBInternalMagazineComponent_GetCapacity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.GetBulletItemClass
	 * 		Flags  -> ()
	 */
	class UClass* UGBInternalMagazineComponent::GetBulletItemClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.GetBulletItemClass");
		
		UGBInternalMagazineComponent_GetBulletItemClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.GetBoltHeldOpen
	 * 		Flags  -> ()
	 */
	bool UGBInternalMagazineComponent::GetBoltHeldOpen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.GetBoltHeldOpen");
		
		UGBInternalMagazineComponent_GetBoltHeldOpen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.FindCompatibleRound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBBulletItem* UGBInternalMagazineComponent::FindCompatibleRound(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.FindCompatibleRound");
		
		UGBInternalMagazineComponent_FindCompatibleRound_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBInternalMagazineComponent.AddRoundToMagazine
	 * 		Flags  -> ()
	 */
	bool UGBInternalMagazineComponent::AddRoundToMagazine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBInternalMagazineComponent.AddRoundToMagazine");
		
		UGBInternalMagazineComponent_AddRoundToMagazine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBInternalMagazineComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBInternalMagazineComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBInternalMagazineComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemDragDropOperation.MakeItemInteractive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBItemDragDropOperation::MakeItemInteractive(class AGBItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemDragDropOperation.MakeItemInteractive");
		
		UGBItemDragDropOperation_MakeItemInteractive_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemDragDropOperation.Init
	 * 		Flags  -> ()
	 */
	void UGBItemDragDropOperation::Init()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemDragDropOperation.Init");
		
		UGBItemDragDropOperation_Init_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemDragDropOperation.EndDragCleanup
	 * 		Flags  -> ()
	 */
	void UGBItemDragDropOperation::EndDragCleanup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemDragDropOperation.EndDragCleanup");
		
		UGBItemDragDropOperation_EndDragCleanup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemDragDropOperation.DraggedItemDestroyed
	 * 		Flags  -> ()
	 */
	void UGBItemDragDropOperation::DraggedItemDestroyed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemDragDropOperation.DraggedItemDestroyed");
		
		UGBItemDragDropOperation_DraggedItemDestroyed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemDragDropOperation.DraggedItemAttached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USceneComponent*                             TargetComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     TargetRelativeLoc                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBItemDragDropOperation::DraggedItemAttached(class USceneComponent* TargetComponent, const class FName& SocketName, const struct FVector& TargetRelativeLoc)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemDragDropOperation.DraggedItemAttached");
		
		UGBItemDragDropOperation_DraggedItemAttached_Params params {};
		params.TargetComponent = TargetComponent;
		params.SocketName = SocketName;
		params.TargetRelativeLoc = TargetRelativeLoc;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemDragDropOperation.DelayedInit
	 * 		Flags  -> ()
	 */
	void UGBItemDragDropOperation::DelayedInit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemDragDropOperation.DelayedInit");
		
		UGBItemDragDropOperation_DelayedInit_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemDragDropOperation.CreateFloatingWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UGBItemDragDropOperation::CreateFloatingWidget(class UClass* WidgetClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemDragDropOperation.CreateFloatingWidget");
		
		UGBItemDragDropOperation_CreateFloatingWidget_Params params {};
		params.WidgetClass = WidgetClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBItemDragDropOperation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBItemDragDropOperation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBItemDragDropOperation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemProjectile.UpdateAssociatedItem
	 * 		Flags  -> ()
	 */
	void AGBItemProjectile::UpdateAssociatedItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemProjectile.UpdateAssociatedItem");
		
		AGBItemProjectile_UpdateAssociatedItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemProjectile.OnStop
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBItemProjectile::OnStop(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemProjectile.OnStop");
		
		AGBItemProjectile_OnStop_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBItemProjectile.OnBounce
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHitResult                                  ImpactResult                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ImpactVelocity                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBItemProjectile::OnBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBItemProjectile.OnBounce");
		
		AGBItemProjectile_OnBounce_Params params {};
		params.ImpactResult = ImpactResult;
		params.ImpactVelocity = ImpactVelocity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBItemProjectile.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBItemProjectile::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBItemProjectile");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBItemProjectileMovementComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBItemProjectileMovementComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBItemProjectileMovementComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.LoadKitFile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UVaRestJsonObject*                           OutKitJsonObj                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBKitFunctionLibrary::LoadKitFile(const class FString& Filename, class UVaRestJsonObject** OutKitJsonObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.LoadKitFile");
		
		UGBKitFunctionLibrary_LoadKitFile_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutKitJsonObj != nullptr)
			*OutKitJsonObj = params.OutKitJsonObj;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.KitDump
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UVaRestJsonObject*                           KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBKitFunctionLibrary::KitDump(const class FString& Message, class UVaRestJsonObject* KitJsonObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.KitDump");
		
		UGBKitFunctionLibrary_KitDump_Params params {};
		params.Message = Message;
		params.KitJsonObj = KitJsonObj;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.HasRequired
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FPrimaryAssetId>                     PrimaryAssets                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPrimaryAssetType>                   RequiredTypes                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UGBKitFunctionLibrary::HasRequired(TArray<struct FPrimaryAssetId> PrimaryAssets, TArray<struct FPrimaryAssetType> RequiredTypes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.HasRequired");
		
		UGBKitFunctionLibrary_HasRequired_Params params {};
		params.PrimaryAssets = PrimaryAssets;
		params.RequiredTypes = RequiredTypes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetUserPresetsPath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBKitFunctionLibrary::GetUserPresetsPath(const class FString& Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetUserPresetsPath");
		
		UGBKitFunctionLibrary_GetUserPresetsPath_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetUserPresetFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Preset                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBKitFunctionLibrary::GetUserPresetFileName(const class FString& Type, const class FString& Preset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetUserPresetFileName");
		
		UGBKitFunctionLibrary_GetUserPresetFileName_Params params {};
		params.Type = Type;
		params.Preset = Preset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetUserPatchesPath
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetUserPatchesPath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetUserPatchesPath");
		
		UGBKitFunctionLibrary_GetUserPatchesPath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetUserLoadoutFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBKitFunctionLibrary::GetUserLoadoutFileName(const class FName& LoadoutName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetUserLoadoutFileName");
		
		UGBKitFunctionLibrary_GetUserLoadoutFileName_Params params {};
		params.LoadoutName = LoadoutName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetUserItemBuildPath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBKitFunctionLibrary::GetUserItemBuildPath(const class FString& Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetUserItemBuildPath");
		
		UGBKitFunctionLibrary_GetUserItemBuildPath_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetUserItemBuildFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ItemBuild                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBKitFunctionLibrary::GetUserItemBuildFileName(const class FString& Type, const class FString& ItemBuild)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetUserItemBuildFileName");
		
		UGBKitFunctionLibrary_GetUserItemBuildFileName_Params params {};
		params.Type = Type;
		params.ItemBuild = ItemBuild;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetTypeField
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetTypeField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetTypeField");
		
		UGBKitFunctionLibrary_GetTypeField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetSkinMaterialPrefix
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPrimaryAssetId                             ItemAssetId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UGBKitFunctionLibrary::GetSkinMaterialPrefix(const struct FPrimaryAssetId& ItemAssetId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetSkinMaterialPrefix");
		
		UGBKitFunctionLibrary_GetSkinMaterialPrefix_Params params {};
		params.ItemAssetId = ItemAssetId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetSkinField
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetSkinField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetSkinField");
		
		UGBKitFunctionLibrary_GetSkinField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetPresetField
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetPresetField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetPresetField");
		
		UGBKitFunctionLibrary_GetPresetField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetPlayerLoadoutName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UGBKitFunctionLibrary::GetPlayerLoadoutName(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetPlayerLoadoutName");
		
		UGBKitFunctionLibrary_GetPlayerLoadoutName_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetKitVersion
	 * 		Flags  -> ()
	 */
	int32_t UGBKitFunctionLibrary::GetKitVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetKitVersion");
		
		UGBKitFunctionLibrary_GetKitVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetKitItemList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Owner                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UVaRestJsonObject*                           KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSkipAuth                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bForceSynchronousLoad                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AGBItem*>                             OutItems                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool UGBKitFunctionLibrary::GetKitItemList(class AActor* Owner, class UVaRestJsonObject* KitJsonObj, bool bSkipAuth, bool bForceSynchronousLoad, TArray<class AGBItem*>* OutItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetKitItemList");
		
		UGBKitFunctionLibrary_GetKitItemList_Params params {};
		params.Owner = Owner;
		params.KitJsonObj = KitJsonObj;
		params.bSkipAuth = bSkipAuth;
		params.bForceSynchronousLoad = bForceSynchronousLoad;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutItems != nullptr)
			*OutItems = params.OutItems;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetKitExtension
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetKitExtension()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetKitExtension");
		
		UGBKitFunctionLibrary_GetKitExtension_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetKitAssetListOfType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UVaRestJsonObject*                           KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPrimaryAssetType                           AssetType                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FSoftObjectPath> UGBKitFunctionLibrary::GetKitAssetListOfType(class UVaRestJsonObject* KitJsonObj, const struct FPrimaryAssetType& AssetType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetKitAssetListOfType");
		
		UGBKitFunctionLibrary_GetKitAssetListOfType_Params params {};
		params.KitJsonObj = KitJsonObj;
		params.AssetType = AssetType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetKitAssetList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UVaRestJsonObject*                           KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FSoftObjectPath> UGBKitFunctionLibrary::GetKitAssetList(class UVaRestJsonObject* KitJsonObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetKitAssetList");
		
		UGBKitFunctionLibrary_GetKitAssetList_Params params {};
		params.KitJsonObj = KitJsonObj;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetItemField
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetItemField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetItemField");
		
		UGBKitFunctionLibrary_GetItemField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetItemBuildField
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetItemBuildField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetItemBuildField");
		
		UGBKitFunctionLibrary_GetItemBuildField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetFullPatchPath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PatchName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBKitFunctionLibrary::GetFullPatchPath(const class FString& PatchName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetFullPatchPath");
		
		UGBKitFunctionLibrary_GetFullPatchPath_Params params {};
		params.PatchName = PatchName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetDefaultPatchesPath
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetDefaultPatchesPath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetDefaultPatchesPath");
		
		UGBKitFunctionLibrary_GetDefaultPatchesPath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetDefaultLoadoutFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        LoadoutName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBKitFunctionLibrary::GetDefaultLoadoutFileName(const class FName& LoadoutName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetDefaultLoadoutFileName");
		
		UGBKitFunctionLibrary_GetDefaultLoadoutFileName_Params params {};
		params.LoadoutName = LoadoutName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetDefaultItemBuildPath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBKitFunctionLibrary::GetDefaultItemBuildPath(const class FString& Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetDefaultItemBuildPath");
		
		UGBKitFunctionLibrary_GetDefaultItemBuildPath_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetDefaultItemBuildFileName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Type                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ItemBuild                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBKitFunctionLibrary::GetDefaultItemBuildFileName(const class FString& Type, const class FString& ItemBuild)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetDefaultItemBuildFileName");
		
		UGBKitFunctionLibrary_GetDefaultItemBuildFileName_Params params {};
		params.Type = Type;
		params.ItemBuild = ItemBuild;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetDataField
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetDataField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetDataField");
		
		UGBKitFunctionLibrary_GetDataField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetChildrenField
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetChildrenField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetChildrenField");
		
		UGBKitFunctionLibrary_GetChildrenField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.GetBuildNameField
	 * 		Flags  -> ()
	 */
	class FString UGBKitFunctionLibrary::GetBuildNameField()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.GetBuildNameField");
		
		UGBKitFunctionLibrary_GetBuildNameField_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.CreateKitInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        KitName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UVaRestJsonObject*                           KitJsonObj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBKitInfo* UGBKitFunctionLibrary::CreateKitInfo(class UObject* WorldContextObject, const class FName& KitName, class UVaRestJsonObject* KitJsonObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.CreateKitInfo");
		
		UGBKitFunctionLibrary_CreateKitInfo_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.KitName = KitName;
		params.KitJsonObj = KitJsonObj;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitFunctionLibrary.CreateKitFromItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      BuildName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UVaRestJsonObject*                           OutKitJsonObj                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBKitFunctionLibrary::CreateKitFromItem(const class FString& BuildName, class AGBItem* Item, class UVaRestJsonObject** OutKitJsonObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitFunctionLibrary.CreateKitFromItem");
		
		UGBKitFunctionLibrary_CreateKitFromItem_Params params {};
		params.BuildName = BuildName;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutKitJsonObj != nullptr)
			*OutKitJsonObj = params.OutKitJsonObj;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBKitFunctionLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBKitFunctionLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBKitFunctionLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitInfo.OnRep_ReplicatedLoadout
	 * 		Flags  -> ()
	 */
	void AGBKitInfo::OnRep_ReplicatedLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitInfo.OnRep_ReplicatedLoadout");
		
		AGBKitInfo_OnRep_ReplicatedLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitInfo.OnLoadAssetsComplete
	 * 		Flags  -> ()
	 */
	void AGBKitInfo::OnLoadAssetsComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitInfo.OnLoadAssetsComplete");
		
		AGBKitInfo_OnLoadAssetsComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBKitInfo.ApplyToCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBKitInfo::ApplyToCharacter(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBKitInfo.ApplyToCharacter");
		
		AGBKitInfo_ApplyToCharacter_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBKitInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBKitInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBKitInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLadderComponent.GetLadderTop
	 * 		Flags  -> ()
	 */
	float UGBLadderComponent::GetLadderTop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLadderComponent.GetLadderTop");
		
		UGBLadderComponent_GetLadderTop_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLadderComponent.GetLadderBottom
	 * 		Flags  -> ()
	 */
	float UGBLadderComponent::GetLadderBottom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLadderComponent.GetLadderBottom");
		
		UGBLadderComponent_GetLadderBottom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLadderComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLadderComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLadderComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLevelSummary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLevelSummary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLevelSummary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLocalPlayer.GetPlayerSettings
	 * 		Flags  -> ()
	 */
	class UGBPlayerSettings* UGBLocalPlayer::GetPlayerSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLocalPlayer.GetPlayerSettings");
		
		UGBLocalPlayer_GetPlayerSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLocalPlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLocalPlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLocalPlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.ToString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::ToString(const struct FLuaValue& Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.ToString");
		
		UGBLuaActorPackage_ToString_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.SetTeamId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   TeamId                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::SetTeamId(const struct FLuaValue& Actor, const struct FLuaValue& TeamId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.SetTeamId");
		
		UGBLuaActorPackage_SetTeamId_Params params {};
		params.Actor = Actor;
		params.TeamId = TeamId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.SetHidden
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Hidden                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaActorPackage::SetHidden(const struct FLuaValue& Actor, const struct FLuaValue& Hidden)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.SetHidden");
		
		UGBLuaActorPackage_SetHidden_Params params {};
		params.Actor = Actor;
		params.Hidden = Hidden;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.SetEnableCollision
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Enabled                                                    (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaActorPackage::SetEnableCollision(const struct FLuaValue& Actor, const struct FLuaValue& Enabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.SetEnableCollision");
		
		UGBLuaActorPackage_SetEnableCollision_Params params {};
		params.Actor = Actor;
		params.Enabled = Enabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.SetActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   NewActive                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaActorPackage::SetActive(const struct FLuaValue& Actor, const struct FLuaValue& NewActive)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.SetActive");
		
		UGBLuaActorPackage_SetActive_Params params {};
		params.Actor = Actor;
		params.NewActive = NewActive;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.RemoveTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Tag                                                        (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaActorPackage::RemoveTag(const struct FLuaValue& Actor, const struct FLuaValue& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.RemoveTag");
		
		UGBLuaActorPackage_RemoveTag_Params params {};
		params.Actor = Actor;
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.IsOverlapping
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   OtherActor                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::IsOverlapping(const struct FLuaValue& Actor, const struct FLuaValue& OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.IsOverlapping");
		
		UGBLuaActorPackage_IsOverlapping_Params params {};
		params.Actor = Actor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.IsActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::IsActive(const struct FLuaValue& Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.IsActive");
		
		UGBLuaActorPackage_IsActive_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.HasTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Tag                                                        (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::HasTag(const struct FLuaValue& Actor, const struct FLuaValue& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.HasTag");
		
		UGBLuaActorPackage_HasTag_Params params {};
		params.Actor = Actor;
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.GetTeamId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::GetTeamId(const struct FLuaValue& Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.GetTeamId");
		
		UGBLuaActorPackage_GetTeamId_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.GetTags
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::GetTags(const struct FLuaValue& Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.GetTags");
		
		UGBLuaActorPackage_GetTags_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.GetTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Index                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::GetTag(const struct FLuaValue& Actor, const struct FLuaValue& Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.GetTag");
		
		UGBLuaActorPackage_GetTag_Params params {};
		params.Actor = Actor;
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.GetRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::GetRotation(const struct FLuaValue& Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.GetRotation");
		
		UGBLuaActorPackage_GetRotation_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.GetOverlaps
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Class                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::GetOverlaps(const struct FLuaValue& Actor, const struct FLuaValue& Class)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.GetOverlaps");
		
		UGBLuaActorPackage_GetOverlaps_Params params {};
		params.Actor = Actor;
		params.Class = Class;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.GetName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::GetName(const struct FLuaValue& Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.GetName");
		
		UGBLuaActorPackage_GetName_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.GetLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaActorPackage::GetLocation(const struct FLuaValue& Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.GetLocation");
		
		UGBLuaActorPackage_GetLocation_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaActorPackage.AddTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Actor                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Tag                                                        (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaActorPackage::AddTag(const struct FLuaValue& Actor, const struct FLuaValue& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaActorPackage.AddTag");
		
		UGBLuaActorPackage_AddTag_Params params {};
		params.Actor = Actor;
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaActorPackage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaActorPackage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaActorPackage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.ProjectPointToNavigation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Point                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   QueryExtent                                                (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaAIPackage::ProjectPointToNavigation(const struct FLuaValue& Point, const struct FLuaValue& QueryExtent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.ProjectPointToNavigation");
		
		UGBLuaAIPackage_ProjectPointToNavigation_Params params {};
		params.Point = Point;
		params.QueryExtent = QueryExtent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.KillAI
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   AIController                                               (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaAIPackage::KillAI(const struct FLuaValue& AIController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.KillAI");
		
		UGBLuaAIPackage_KillAI_Params params {};
		params.AIController = AIController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.GetSpawnPointInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   SpawnPoint                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaAIPackage::GetSpawnPointInfo(const struct FLuaValue& SpawnPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.GetSpawnPointInfo");
		
		UGBLuaAIPackage_GetSpawnPointInfo_Params params {};
		params.SpawnPoint = SpawnPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.GetRandomReachablePointInRadius
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Origin                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Radius                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaAIPackage::GetRandomReachablePointInRadius(const struct FLuaValue& Origin, const struct FLuaValue& Radius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.GetRandomReachablePointInRadius");
		
		UGBLuaAIPackage_GetRandomReachablePointInRadius_Params params {};
		params.Origin = Origin;
		params.Radius = Radius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.GetMaxCount
	 * 		Flags  -> ()
	 */
	struct FLuaValue UGBLuaAIPackage::GetMaxCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.GetMaxCount");
		
		UGBLuaAIPackage_GetMaxCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.GetGuardPointName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   GuardPoint                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaAIPackage::GetGuardPointName(const struct FLuaValue& GuardPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.GetGuardPointName");
		
		UGBLuaAIPackage_GetGuardPointName_Params params {};
		params.GuardPoint = GuardPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.GetControllers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Class                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Tag                                                        (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   TeamId                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   SquadId                                                    (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaAIPackage::GetControllers(const struct FLuaValue& Class, const struct FLuaValue& Tag, const struct FLuaValue& TeamId, const struct FLuaValue& SquadId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.GetControllers");
		
		UGBLuaAIPackage_GetControllers_Params params {};
		params.Class = Class;
		params.Tag = Tag;
		params.TeamId = TeamId;
		params.SquadId = SquadId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.CreateWithTransform
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   VirtualSpawnPoint                                          (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   SpawnTransform                                             (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   AIControllerTag                                            (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   FreezeTime                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaAIPackage::CreateWithTransform(const struct FLuaValue& VirtualSpawnPoint, const struct FLuaValue& SpawnTransform, const struct FLuaValue& AIControllerTag, const struct FLuaValue& FreezeTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.CreateWithTransform");
		
		UGBLuaAIPackage_CreateWithTransform_Params params {};
		params.VirtualSpawnPoint = VirtualSpawnPoint;
		params.SpawnTransform = SpawnTransform;
		params.AIControllerTag = AIControllerTag;
		params.FreezeTime = FreezeTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.CreateOverDuration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Duration                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Count                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   OrderedSpawnPoints                                         (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   AIControllerTag                                            (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaAIPackage::CreateOverDuration(const struct FLuaValue& Duration, const struct FLuaValue& Count, const struct FLuaValue& OrderedSpawnPoints, const struct FLuaValue& AIControllerTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.CreateOverDuration");
		
		UGBLuaAIPackage_CreateOverDuration_Params params {};
		params.Duration = Duration;
		params.Count = Count;
		params.OrderedSpawnPoints = OrderedSpawnPoints;
		params.AIControllerTag = AIControllerTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.Create
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   SpawnPoint                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   AIControllerTag                                            (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   FreezeTime                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaAIPackage::Create(const struct FLuaValue& SpawnPoint, const struct FLuaValue& AIControllerTag, const struct FLuaValue& FreezeTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.Create");
		
		UGBLuaAIPackage_Create_Params params {};
		params.SpawnPoint = SpawnPoint;
		params.AIControllerTag = AIControllerTag;
		params.FreezeTime = FreezeTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.CleanUp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   AIControllerTag                                            (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaAIPackage::CleanUp(const struct FLuaValue& AIControllerTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.CleanUp");
		
		UGBLuaAIPackage_CleanUp_Params params {};
		params.AIControllerTag = AIControllerTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaAIPackage.CheckLocationReachable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   StartLocation                                              (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   EndLocation                                                (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   PartialOk                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaAIPackage::CheckLocationReachable(const struct FLuaValue& StartLocation, const struct FLuaValue& EndLocation, const struct FLuaValue& PartialOk)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaAIPackage.CheckLocationReachable");
		
		UGBLuaAIPackage_CheckLocationReachable_Params params {};
		params.StartLocation = StartLocation;
		params.EndLocation = EndLocation;
		params.PartialOk = PartialOk;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaAIPackage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaAIPackage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaAIPackage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetWatchMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   WatchMode                                                  (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   DisplayBearing                                             (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   DisplayDistance                                            (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   DisplayUpDown                                              (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Measure2D                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetWatchMode(const struct FLuaValue& WatchMode, const struct FLuaValue& DisplayBearing, const struct FLuaValue& DisplayDistance, const struct FLuaValue& DisplayUpDown, const struct FLuaValue& Measure2D)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetWatchMode");
		
		UGBLuaGameModePackage_SetWatchMode_Params params {};
		params.WatchMode = WatchMode;
		params.DisplayBearing = DisplayBearing;
		params.DisplayDistance = DisplayDistance;
		params.DisplayUpDown = DisplayUpDown;
		params.Measure2D = Measure2D;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetTeamScoreTypes
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   ScoreTypeTable                                             (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetTeamScoreTypes(const struct FLuaValue& ScoreTypeTable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetTeamScoreTypes");
		
		UGBLuaGameModePackage_SetTeamScoreTypes_Params params {};
		params.ScoreTypeTable = ScoreTypeTable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetTeamAttitude
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Team                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   OtherTeam                                                  (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Attitude                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetTeamAttitude(const struct FLuaValue& Team, const struct FLuaValue& OtherTeam, const struct FLuaValue& Attitude)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetTeamAttitude");
		
		UGBLuaGameModePackage_SetTeamAttitude_Params params {};
		params.Team = Team;
		params.OtherTeam = OtherTeam;
		params.Attitude = Attitude;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetRoundStageTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   RoundStageTime                                             (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetRoundStageTime(const struct FLuaValue& RoundStageTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetRoundStageTime");
		
		UGBLuaGameModePackage_SetRoundStageTime_Params params {};
		params.RoundStageTime = RoundStageTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetRoundStage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   RoundStageName                                             (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetRoundStage(const struct FLuaValue& RoundStageName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetRoundStage");
		
		UGBLuaGameModePackage_SetRoundStage_Params params {};
		params.RoundStageName = RoundStageName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetRoundIsTemporaryGameMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   IsTemporary                                                (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetRoundIsTemporaryGameMode(const struct FLuaValue& IsTemporary)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetRoundIsTemporaryGameMode");
		
		UGBLuaGameModePackage_SetRoundIsTemporaryGameMode_Params params {};
		params.IsTemporary = IsTemporary;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetPlayerTeamRole
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   TeamId                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   NewRole                                                    (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetPlayerTeamRole(const struct FLuaValue& TeamId, const struct FLuaValue& NewRole)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetPlayerTeamRole");
		
		UGBLuaGameModePackage_SetPlayerTeamRole_Params params {};
		params.TeamId = TeamId;
		params.NewRole = NewRole;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetPlayerScoreTypes
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   ScoreTypeTable                                             (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetPlayerScoreTypes(const struct FLuaValue& ScoreTypeTable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetPlayerScoreTypes");
		
		UGBLuaGameModePackage_SetPlayerScoreTypes_Params params {};
		params.ScoreTypeTable = ScoreTypeTable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetObjectiveLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   ObjectiveLocation                                          (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetObjectiveLocation(const struct FLuaValue& ObjectiveLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetObjectiveLocation");
		
		UGBLuaGameModePackage_SetObjectiveLocation_Params params {};
		params.ObjectiveLocation = ObjectiveLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetGameModeName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   GameModeName                                               (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetGameModeName(const struct FLuaValue& GameModeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetGameModeName");
		
		UGBLuaGameModePackage_SetGameModeName_Params params {};
		params.GameModeName = GameModeName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetDefaultRoundStageTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   RoundStageName                                             (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   NewTimeLimit                                               (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetDefaultRoundStageTime(const struct FLuaValue& RoundStageName, const struct FLuaValue& NewTimeLimit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetDefaultRoundStageTime");
		
		UGBLuaGameModePackage_SetDefaultRoundStageTime_Params params {};
		params.RoundStageName = RoundStageName;
		params.NewTimeLimit = NewTimeLimit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetCaptureZone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   CaptureRadius                                              (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   CaptureHeight                                              (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   DefenderTeamId                                             (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   ZoneIsSpherical                                            (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetCaptureZone(const struct FLuaValue& CaptureRadius, const struct FLuaValue& CaptureHeight, const struct FLuaValue& DefenderTeamId, const struct FLuaValue& ZoneIsSpherical)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetCaptureZone");
		
		UGBLuaGameModePackage_SetCaptureZone_Params params {};
		params.CaptureRadius = CaptureRadius;
		params.CaptureHeight = CaptureHeight;
		params.DefenderTeamId = DefenderTeamId;
		params.ZoneIsSpherical = ZoneIsSpherical;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SetCaptureState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   IsCapturing                                                (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::SetCaptureState(const struct FLuaValue& IsCapturing)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SetCaptureState");
		
		UGBLuaGameModePackage_SetCaptureState_Params params {};
		params.IsCapturing = IsCapturing;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SendEveryoneToReadyRoom
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::SendEveryoneToReadyRoom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SendEveryoneToReadyRoom");
		
		UGBLuaGameModePackage_SendEveryoneToReadyRoom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.SendEveryoneToPlayArea
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::SendEveryoneToPlayArea()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.SendEveryoneToPlayArea");
		
		UGBLuaGameModePackage_SendEveryoneToPlayArea_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.ResetWatch
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::ResetWatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.ResetWatch");
		
		UGBLuaGameModePackage_ResetWatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.ResetTeamScores
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::ResetTeamScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.ResetTeamScores");
		
		UGBLuaGameModePackage_ResetTeamScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.ResetPlayerScores
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::ResetPlayerScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.ResetPlayerScores");
		
		UGBLuaGameModePackage_ResetPlayerScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.ResetMatchStats
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::ResetMatchStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.ResetMatchStats");
		
		UGBLuaGameModePackage_ResetMatchStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.PrepLatecomer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Target                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameModePackage::PrepLatecomer(const struct FLuaValue& Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.PrepLatecomer");
		
		UGBLuaGameModePackage_PrepLatecomer_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.MakeEveryoneSpectate
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::MakeEveryoneSpectate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.MakeEveryoneSpectate");
		
		UGBLuaGameModePackage_MakeEveryoneSpectate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.GetScript
	 * 		Flags  -> ()
	 */
	struct FLuaValue UGBLuaGameModePackage::GetScript()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.GetScript");
		
		UGBLuaGameModePackage_GetScript_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.GetRoundStageTime
	 * 		Flags  -> ()
	 */
	struct FLuaValue UGBLuaGameModePackage::GetRoundStageTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.GetRoundStageTime");
		
		UGBLuaGameModePackage_GetRoundStageTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.GetRoundStage
	 * 		Flags  -> ()
	 */
	struct FLuaValue UGBLuaGameModePackage::GetRoundStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.GetRoundStage");
		
		UGBLuaGameModePackage_GetRoundStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.GetReadyPlayerTeamCounts
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   ExcludeBots                                                (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameModePackage::GetReadyPlayerTeamCounts(const struct FLuaValue& ExcludeBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.GetReadyPlayerTeamCounts");
		
		UGBLuaGameModePackage_GetReadyPlayerTeamCounts_Params params {};
		params.ExcludeBots = ExcludeBots;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.GetPlayerListByLives
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   TeamId                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   MinLives                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   ExcludeBots                                                (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameModePackage::GetPlayerListByLives(const struct FLuaValue& TeamId, const struct FLuaValue& MinLives, const struct FLuaValue& ExcludeBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.GetPlayerListByLives");
		
		UGBLuaGameModePackage_GetPlayerListByLives_Params params {};
		params.TeamId = TeamId;
		params.MinLives = MinLives;
		params.ExcludeBots = ExcludeBots;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.GetPlayerList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   TeamId                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   ExcludeBots                                                (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameModePackage::GetPlayerList(const struct FLuaValue& TeamId, const struct FLuaValue& ExcludeBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.GetPlayerList");
		
		UGBLuaGameModePackage_GetPlayerList_Params params {};
		params.TeamId = TeamId;
		params.ExcludeBots = ExcludeBots;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.GetPlayerCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   ExcludeBots                                                (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameModePackage::GetPlayerCount(const struct FLuaValue& ExcludeBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.GetPlayerCount");
		
		UGBLuaGameModePackage_GetPlayerCount_Params params {};
		params.ExcludeBots = ExcludeBots;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.GetInsertionPointName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   InsertionPoint                                             (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameModePackage::GetInsertionPointName(const struct FLuaValue& InsertionPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.GetInsertionPointName");
		
		UGBLuaGameModePackage_GetInsertionPointName_Params params {};
		params.InsertionPoint = InsertionPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.GetBestLateComerInsertionPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Target                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameModePackage::GetBestLateComerInsertionPoint(const struct FLuaValue& Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.GetBestLateComerInsertionPoint");
		
		UGBLuaGameModePackage_GetBestLateComerInsertionPoint_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.EnterReadyRoom
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Target                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::EnterReadyRoom(const struct FLuaValue& Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.EnterReadyRoom");
		
		UGBLuaGameModePackage_EnterReadyRoom_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.EnterPlayArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Target                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::EnterPlayArea(const struct FLuaValue& Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.EnterPlayArea");
		
		UGBLuaGameModePackage_EnterPlayArea_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.ClearSearchLocations
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::ClearSearchLocations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.ClearSearchLocations");
		
		UGBLuaGameModePackage_ClearSearchLocations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.ClearRoundStageTime
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::ClearRoundStageTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.ClearRoundStageTime");
		
		UGBLuaGameModePackage_ClearRoundStageTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.ClearGameStats
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::ClearGameStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.ClearGameStats");
		
		UGBLuaGameModePackage_ClearGameStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.ClearGameObjectives
	 * 		Flags  -> ()
	 */
	void UGBLuaGameModePackage::ClearGameObjectives()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.ClearGameObjectives");
		
		UGBLuaGameModePackage_ClearGameObjectives_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.BroadcastGameMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   GameMessageId                                              (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Type                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Duration                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::BroadcastGameMessage(const struct FLuaValue& GameMessageId, const struct FLuaValue& Type, const struct FLuaValue& Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.BroadcastGameMessage");
		
		UGBLuaGameModePackage_BroadcastGameMessage_Params params {};
		params.GameMessageId = GameMessageId;
		params.Type = Type;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.AwardTeamScore
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   TeamId                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   ScoreName                                                  (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   ScoreMultiple                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::AwardTeamScore(const struct FLuaValue& TeamId, const struct FLuaValue& ScoreName, const struct FLuaValue& ScoreMultiple)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.AwardTeamScore");
		
		UGBLuaGameModePackage_AwardTeamScore_Params params {};
		params.TeamId = TeamId;
		params.ScoreName = ScoreName;
		params.ScoreMultiple = ScoreMultiple;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.AddSearchLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   TeamId                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Name                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Type                                                       (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::AddSearchLocation(const struct FLuaValue& TeamId, const struct FLuaValue& Name, const struct FLuaValue& Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.AddSearchLocation");
		
		UGBLuaGameModePackage_AddSearchLocation_Params params {};
		params.TeamId = TeamId;
		params.Name = Name;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.AddPlayerTeam
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Team                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Name                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   ProfileName                                                (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::AddPlayerTeam(const struct FLuaValue& Team, const struct FLuaValue& Name, const struct FLuaValue& ProfileName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.AddPlayerTeam");
		
		UGBLuaGameModePackage_AddPlayerTeam_Params params {};
		params.Team = Team;
		params.Name = Name;
		params.ProfileName = ProfileName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.AddObjectiveMarker
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Location                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   TeamId                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Name                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   MarkerType                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Active                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameModePackage::AddObjectiveMarker(const struct FLuaValue& Location, const struct FLuaValue& TeamId, const struct FLuaValue& Name, const struct FLuaValue& MarkerType, const struct FLuaValue& Active)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.AddObjectiveMarker");
		
		UGBLuaGameModePackage_AddObjectiveMarker_Params params {};
		params.Location = Location;
		params.TeamId = TeamId;
		params.Name = Name;
		params.MarkerType = MarkerType;
		params.Active = Active;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.AddGameStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   GameStat                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::AddGameStat(const struct FLuaValue& GameStat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.AddGameStat");
		
		UGBLuaGameModePackage_AddGameStat_Params params {};
		params.GameStat = GameStat;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameModePackage.AddGameObjective
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   TeamId                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Name                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Type                                                       (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaGameModePackage::AddGameObjective(const struct FLuaValue& TeamId, const struct FLuaValue& Name, const struct FLuaValue& Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameModePackage.AddGameObjective");
		
		UGBLuaGameModePackage_AddGameObjective_Params params {};
		params.TeamId = TeamId;
		params.Name = Name;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaGameModePackage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaGameModePackage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaGameModePackage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameplayStaticsPackage.PlaceItemAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   ItemClass                                                  (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Location                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Rotation                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameplayStaticsPackage::PlaceItemAt(const struct FLuaValue& ItemClass, const struct FLuaValue& Location, const struct FLuaValue& Rotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameplayStaticsPackage.PlaceItemAt");
		
		UGBLuaGameplayStaticsPackage_PlaceItemAt_Params params {};
		params.ItemClass = ItemClass;
		params.Location = Location;
		params.Rotation = Rotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameplayStaticsPackage.GetValidatedSpawnLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   SpawnLocation                                              (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   CapsuleHalfHeight                                          (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   CapsuleRadius                                              (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameplayStaticsPackage::GetValidatedSpawnLocation(const struct FLuaValue& SpawnLocation, const struct FLuaValue& CapsuleHalfHeight, const struct FLuaValue& CapsuleRadius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameplayStaticsPackage.GetValidatedSpawnLocation");
		
		UGBLuaGameplayStaticsPackage_GetValidatedSpawnLocation_Params params {};
		params.SpawnLocation = SpawnLocation;
		params.CapsuleHalfHeight = CapsuleHalfHeight;
		params.CapsuleRadius = CapsuleRadius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsWithTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Tag                                                        (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameplayStaticsPackage::GetAllActorsWithTag(const struct FLuaValue& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsWithTag");
		
		UGBLuaGameplayStaticsPackage_GetAllActorsWithTag_Params params {};
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsOfClassWithTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Class                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Tag                                                        (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameplayStaticsPackage::GetAllActorsOfClassWithTag(const struct FLuaValue& Class, const struct FLuaValue& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsOfClassWithTag");
		
		UGBLuaGameplayStaticsPackage_GetAllActorsOfClassWithTag_Params params {};
		params.Class = Class;
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Class                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaGameplayStaticsPackage::GetAllActorsOfClass(const struct FLuaValue& Class)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaGameplayStaticsPackage.GetAllActorsOfClass");
		
		UGBLuaGameplayStaticsPackage_GetAllActorsOfClass_Params params {};
		params.Class = Class;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaGameplayStaticsPackage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaGameplayStaticsPackage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaGameplayStaticsPackage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaInterface.GetLuaTable
	 * 		Flags  -> ()
	 */
	struct FLuaValue UGBLuaInterface::GetLuaTable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaInterface.GetLuaTable");
		
		UGBLuaInterface_GetLuaTable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaMathPackage.GetRandomRange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Min                                                        (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Max                                                        (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaMathPackage::GetRandomRange(const struct FLuaValue& Min, const struct FLuaValue& Max)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaMathPackage.GetRandomRange");
		
		UGBLuaMathPackage_GetRandomRange_Params params {};
		params.Min = Min;
		params.Max = Max;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaMathPackage.GetRandom
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Max                                                        (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaMathPackage::GetRandom(const struct FLuaValue& Max)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaMathPackage.GetRandom");
		
		UGBLuaMathPackage_GetRandom_Params params {};
		params.Max = Max;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaMathPackage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaMathPackage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaMathPackage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.ShowWorldPrompt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Location                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Tag                                                        (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Duration                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::ShowWorldPrompt(const struct FLuaValue& Player, const struct FLuaValue& Location, const struct FLuaValue& Tag, const struct FLuaValue& Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.ShowWorldPrompt");
		
		UGBLuaPlayerPackage_ShowWorldPrompt_Params params {};
		params.Player = Player;
		params.Location = Location;
		params.Tag = Tag;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.ShowHint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   PlayerState                                                (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   HintName                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   WidgetName                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::ShowHint(const struct FLuaValue& PlayerState, const struct FLuaValue& HintName, const struct FLuaValue& WidgetName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.ShowHint");
		
		UGBLuaPlayerPackage_ShowHint_Params params {};
		params.PlayerState = PlayerState;
		params.HintName = HintName;
		params.WidgetName = WidgetName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.ShowGameMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Message                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Type                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Duration                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::ShowGameMessage(const struct FLuaValue& Player, const struct FLuaValue& Message, const struct FLuaValue& Type, const struct FLuaValue& Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.ShowGameMessage");
		
		UGBLuaPlayerPackage_ShowGameMessage_Params params {};
		params.Player = Player;
		params.Message = Message;
		params.Type = Type;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.SetReadyStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   NewStatus                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::SetReadyStatus(const struct FLuaValue& Player, const struct FLuaValue& NewStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.SetReadyStatus");
		
		UGBLuaPlayerPackage_SetReadyStatus_Params params {};
		params.Player = Player;
		params.NewStatus = NewStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.SetLives
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   NewLives                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::SetLives(const struct FLuaValue& Player, const struct FLuaValue& NewLives)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.SetLives");
		
		UGBLuaPlayerPackage_SetLives_Params params {};
		params.Player = Player;
		params.NewLives = NewLives;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.SetInsertionPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   NewInsertionPoint                                          (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::SetInsertionPoint(const struct FLuaValue& Player, const struct FLuaValue& NewInsertionPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.SetInsertionPoint");
		
		UGBLuaPlayerPackage_SetInsertionPoint_Params params {};
		params.Player = Player;
		params.NewInsertionPoint = NewInsertionPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.SetAllowedToRestart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Allowed                                                    (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::SetAllowedToRestart(const struct FLuaValue& Player, const struct FLuaValue& Allowed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.SetAllowedToRestart");
		
		UGBLuaPlayerPackage_SetAllowedToRestart_Params params {};
		params.Player = Player;
		params.Allowed = Allowed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.ResetPlayerScores
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   PlayerState                                                (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::ResetPlayerScores(const struct FLuaValue& PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.ResetPlayerScores");
		
		UGBLuaPlayerPackage_ResetPlayerScores_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.RemoveIgnoreUseInputReason
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Reason                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::RemoveIgnoreUseInputReason(const struct FLuaValue& Player, const struct FLuaValue& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.RemoveIgnoreUseInputReason");
		
		UGBLuaPlayerPackage_RemoveIgnoreUseInputReason_Params params {};
		params.Player = Player;
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.IsAlive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::IsAlive(const struct FLuaValue& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.IsAlive");
		
		UGBLuaPlayerPackage_IsAlive_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.HasItemWithTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Tag                                                        (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::HasItemWithTag(const struct FLuaValue& Player, const struct FLuaValue& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.HasItemWithTag");
		
		UGBLuaPlayerPackage_HasItemWithTag_Params params {};
		params.Player = Player;
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.GiveItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   ItemClass                                                  (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   bEquip                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::GiveItem(const struct FLuaValue& Player, const struct FLuaValue& ItemClass, const struct FLuaValue& bEquip)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.GiveItem");
		
		UGBLuaPlayerPackage_GiveItem_Params params {};
		params.Player = Player;
		params.ItemClass = ItemClass;
		params.bEquip = bEquip;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.GetReadyStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::GetReadyStatus(const struct FLuaValue& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.GetReadyStatus");
		
		UGBLuaPlayerPackage_GetReadyStatus_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.GetPlayerState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::GetPlayerState(const struct FLuaValue& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.GetPlayerState");
		
		UGBLuaPlayerPackage_GetPlayerState_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.GetPlayerStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   PlayerState                                                (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Key                                                        (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::GetPlayerStat(const struct FLuaValue& PlayerState, const struct FLuaValue& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.GetPlayerStat");
		
		UGBLuaPlayerPackage_GetPlayerStat_Params params {};
		params.PlayerState = PlayerState;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.GetName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::GetName(const struct FLuaValue& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.GetName");
		
		UGBLuaPlayerPackage_GetName_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.GetLives
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::GetLives(const struct FLuaValue& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.GetLives");
		
		UGBLuaPlayerPackage_GetLives_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.GetInventory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::GetInventory(const struct FLuaValue& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.GetInventory");
		
		UGBLuaPlayerPackage_GetInventory_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.GetInsertionPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::GetInsertionPoint(const struct FLuaValue& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.GetInsertionPoint");
		
		UGBLuaPlayerPackage_GetInsertionPoint_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.GetCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaPlayerPackage::GetCharacter(const struct FLuaValue& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.GetCharacter");
		
		UGBLuaPlayerPackage_GetCharacter_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.FreezePlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Duration                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::FreezePlayer(const struct FLuaValue& Player, const struct FLuaValue& Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.FreezePlayer");
		
		UGBLuaPlayerPackage_FreezePlayer_Params params {};
		params.Player = Player;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.ClearAllIgnoreUseInputReasons
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::ClearAllIgnoreUseInputReasons(const struct FLuaValue& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.ClearAllIgnoreUseInputReasons");
		
		UGBLuaPlayerPackage_ClearAllIgnoreUseInputReasons_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.AwardPlayerScore
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   PlayerState                                                (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   ScoreName                                                  (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   ScoreMultiple                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::AwardPlayerScore(const struct FLuaValue& PlayerState, const struct FLuaValue& ScoreName, const struct FLuaValue& ScoreMultiple)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.AwardPlayerScore");
		
		UGBLuaPlayerPackage_AwardPlayerScore_Params params {};
		params.PlayerState = PlayerState;
		params.ScoreName = ScoreName;
		params.ScoreMultiple = ScoreMultiple;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaPlayerPackage.AddIgnoreUseInputReason
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Player                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Reason                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaPlayerPackage::AddIgnoreUseInputReason(const struct FLuaValue& Player, const struct FLuaValue& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaPlayerPackage.AddIgnoreUseInputReason");
		
		UGBLuaPlayerPackage_AddIgnoreUseInputReason_Params params {};
		params.Player = Player;
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaPlayerPackage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaPlayerPackage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaPlayerPackage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaStaticsLibrary.LuaValueToScript
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   LuaValue                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaStaticsLibrary::LuaValueToScript(const struct FLuaValue& LuaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaStaticsLibrary.LuaValueToScript");
		
		UGBLuaStaticsLibrary_LuaValueToScript_Params params {};
		params.LuaValue = LuaValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaStaticsLibrary.LuaValueToPlayerState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   LuaValue                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	class AGBPlayerState* UGBLuaStaticsLibrary::LuaValueToPlayerState(const struct FLuaValue& LuaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaStaticsLibrary.LuaValueToPlayerState");
		
		UGBLuaStaticsLibrary_LuaValueToPlayerState_Params params {};
		params.LuaValue = LuaValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaStaticsLibrary.LuaValueToCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   LuaValue                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	class AGBCharacter* UGBLuaStaticsLibrary::LuaValueToCharacter(const struct FLuaValue& LuaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaStaticsLibrary.LuaValueToCharacter");
		
		UGBLuaStaticsLibrary_LuaValueToCharacter_Params params {};
		params.LuaValue = LuaValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaStaticsLibrary.LuaTableToRotator
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   Value                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	struct FRotator UGBLuaStaticsLibrary::LuaTableToRotator(const struct FLuaValue& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaStaticsLibrary.LuaTableToRotator");
		
		UGBLuaStaticsLibrary_LuaTableToRotator_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaStaticsLibrary.ActorsToLuaTable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      LuaStateClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              Actors                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaStaticsLibrary::ActorsToLuaTable(class UObject* WorldContextObject, class UClass* LuaStateClass, TArray<class AActor*> Actors)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaStaticsLibrary.ActorsToLuaTable");
		
		UGBLuaStaticsLibrary_ActorsToLuaTable_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.LuaStateClass = LuaStateClass;
		params.Actors = Actors;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaStaticsLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaStaticsLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaStaticsLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaTimerPackage.SetTimer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   InTimerHandle                                              (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   InTable                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   InFunction                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   InRate                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   InLoop                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaTimerPackage::SetTimer(const struct FLuaValue& InTimerHandle, const struct FLuaValue& InTable, const struct FLuaValue& InFunction, const struct FLuaValue& InRate, const struct FLuaValue& InLoop)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaTimerPackage.SetTimer");
		
		UGBLuaTimerPackage_SetTimer_Params params {};
		params.InTimerHandle = InTimerHandle;
		params.InTable = InTable;
		params.InFunction = InFunction;
		params.InRate = InRate;
		params.InLoop = InLoop;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaTimerPackage.ClearTimer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   InTimerHandle                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void UGBLuaTimerPackage::ClearTimer(const struct FLuaValue& InTimerHandle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaTimerPackage.ClearTimer");
		
		UGBLuaTimerPackage_ClearTimer_Params params {};
		params.InTimerHandle = InTimerHandle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaTimerPackage.ClearAll
	 * 		Flags  -> ()
	 */
	void UGBLuaTimerPackage::ClearAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaTimerPackage.ClearAll");
		
		UGBLuaTimerPackage_ClearAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaTimerPackage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaTimerPackage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaTimerPackage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorSubtract
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   A                                                          (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   B                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorSubtract(const struct FLuaValue& A, const struct FLuaValue& B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorSubtract");
		
		UGBLuaVectorPackage_VectorSubtract_Params params {};
		params.A = A;
		params.B = B;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorStr
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   LuaVector                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorStr(const struct FLuaValue& LuaVector)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorStr");
		
		UGBLuaVectorPackage_VectorStr_Params params {};
		params.LuaVector = LuaVector;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorSizeSquared2D
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   A                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorSizeSquared2D(const struct FLuaValue& A)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorSizeSquared2D");
		
		UGBLuaVectorPackage_VectorSizeSquared2D_Params params {};
		params.A = A;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorSizeSquared
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   A                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorSizeSquared(const struct FLuaValue& A)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorSizeSquared");
		
		UGBLuaVectorPackage_VectorSizeSquared_Params params {};
		params.A = A;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorSize2D
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   A                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorSize2D(const struct FLuaValue& A)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorSize2D");
		
		UGBLuaVectorPackage_VectorSize2D_Params params {};
		params.A = A;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorSize
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   A                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorSize(const struct FLuaValue& A)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorSize");
		
		UGBLuaVectorPackage_VectorSize_Params params {};
		params.A = A;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorNew
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   SelfPackage                                                (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   X                                                          (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Y                                                          (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   Z                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorNew(const struct FLuaValue& SelfPackage, const struct FLuaValue& X, const struct FLuaValue& Y, const struct FLuaValue& Z)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorNew");
		
		UGBLuaVectorPackage_VectorNew_Params params {};
		params.SelfPackage = SelfPackage;
		params.X = X;
		params.Y = Y;
		params.Z = Z;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorMultiply
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   A                                                          (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   B                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorMultiply(const struct FLuaValue& A, const struct FLuaValue& B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorMultiply");
		
		UGBLuaVectorPackage_VectorMultiply_Params params {};
		params.A = A;
		params.B = B;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorEquals
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   A                                                          (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   B                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorEquals(const struct FLuaValue& A, const struct FLuaValue& B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorEquals");
		
		UGBLuaVectorPackage_VectorEquals_Params params {};
		params.A = A;
		params.B = B;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorDivide
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   A                                                          (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   B                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorDivide(const struct FLuaValue& A, const struct FLuaValue& B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorDivide");
		
		UGBLuaVectorPackage_VectorDivide_Params params {};
		params.A = A;
		params.B = B;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.VectorAdd
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLuaValue                                   A                                                          (Parm, NativeAccessSpecifierPublic)
	 * 		struct FLuaValue                                   B                                                          (Parm, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::VectorAdd(const struct FLuaValue& A, const struct FLuaValue& B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.VectorAdd");
		
		UGBLuaVectorPackage_VectorAdd_Params params {};
		params.A = A;
		params.B = B;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBLuaVectorPackage.BuildVector
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Vector                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FLuaValue UGBLuaVectorPackage::BuildVector(const struct FVector& Vector)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBLuaVectorPackage.BuildVector");
		
		UGBLuaVectorPackage_BuildVector_Params params {};
		params.Vector = Vector;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBLuaVectorPackage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBLuaVectorPackage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBLuaVectorPackage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.VerifyBulletItemClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      CheckBulletItemClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBMagazine::VerifyBulletItemClass(class UClass* CheckBulletItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.VerifyBulletItemClass");
		
		AGBMagazine_VerifyBulletItemClass_Params params {};
		params.CheckBulletItemClass = CheckBulletItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.SetTracerItemClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      NewTracerItemClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBMagazine::SetTracerItemClass(class UClass* NewTracerItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.SetTracerItemClass");
		
		AGBMagazine_SetTracerItemClass_Params params {};
		params.NewTracerItemClass = NewTracerItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.SetTracerFrequency
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewTracerFrequency                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBMagazine::SetTracerFrequency(int32_t NewTracerFrequency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.SetTracerFrequency");
		
		AGBMagazine_SetTracerFrequency_Params params {};
		params.NewTracerFrequency = NewTracerFrequency;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.SetStartTracerCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewStartTracerCount                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBMagazine::SetStartTracerCount(int32_t NewStartTracerCount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.SetStartTracerCount");
		
		AGBMagazine_SetStartTracerCount_Params params {};
		params.NewStartTracerCount = NewStartTracerCount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.SetBulletItemClass
	 * 		Flags  -> ()
	 */
	void AGBMagazine::SetBulletItemClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.SetBulletItemClass");
		
		AGBMagazine_SetBulletItemClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.OnCountUpdatedEvent
	 * 		Flags  -> ()
	 */
	void AGBMagazine::OnCountUpdatedEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.OnCountUpdatedEvent");
		
		AGBMagazine_OnCountUpdatedEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.OnAdjustCountEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAdjusted                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBMagazine::OnAdjustCountEvent(bool bAdjusted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.OnAdjustCountEvent");
		
		AGBMagazine_OnAdjustCountEvent_Params params {};
		params.bAdjusted = bAdjusted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetTracerItemClass
	 * 		Flags  -> ()
	 */
	class UClass* AGBMagazine::GetTracerItemClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetTracerItemClass");
		
		AGBMagazine_GetTracerItemClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetMagazineType
	 * 		Flags  -> ()
	 */
	class FName AGBMagazine::GetMagazineType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetMagazineType");
		
		AGBMagazine_GetMagazineType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetExactCountText
	 * 		Flags  -> ()
	 */
	class FText AGBMagazine::GetExactCountText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetExactCountText");
		
		AGBMagazine_GetExactCountText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetEstimatedCountText
	 * 		Flags  -> ()
	 */
	class FText AGBMagazine::GetEstimatedCountText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetEstimatedCountText");
		
		AGBMagazine_GetEstimatedCountText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetCount
	 * 		Flags  -> ()
	 */
	int32_t AGBMagazine::GetCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetCount");
		
		AGBMagazine_GetCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetCapacity
	 * 		Flags  -> ()
	 */
	int32_t AGBMagazine::GetCapacity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetCapacity");
		
		AGBMagazine_GetCapacity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetBulletProjectileClass
	 * 		Flags  -> ()
	 */
	class UClass* AGBMagazine::GetBulletProjectileClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetBulletProjectileClass");
		
		AGBMagazine_GetBulletProjectileClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetBulletItemClass
	 * 		Flags  -> ()
	 */
	class UClass* AGBMagazine::GetBulletItemClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetBulletItemClass");
		
		AGBMagazine_GetBulletItemClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetBaseBulletProjectileClass
	 * 		Flags  -> ()
	 */
	class UClass* AGBMagazine::GetBaseBulletProjectileClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetBaseBulletProjectileClass");
		
		AGBMagazine_GetBaseBulletProjectileClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.GetBaseBulletItemClass
	 * 		Flags  -> ()
	 */
	class UClass* AGBMagazine::GetBaseBulletItemClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.GetBaseBulletItemClass");
		
		AGBMagazine_GetBaseBulletItemClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMagazine.AdjustCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBMagazine::AdjustCount(int32_t Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMagazine.AdjustCount");
		
		AGBMagazine_AdjustCount_Params params {};
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBMagazine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBMagazine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBMagazine");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBMissionData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBMissionData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBMissionData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMuzzleDevice.GetVolumeMultiplier
	 * 		Flags  -> ()
	 */
	float AGBMuzzleDevice::GetVolumeMultiplier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMuzzleDevice.GetVolumeMultiplier");
		
		AGBMuzzleDevice_GetVolumeMultiplier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMuzzleDevice.GetMuzzleDeviceThread
	 * 		Flags  -> ()
	 */
	class FName AGBMuzzleDevice::GetMuzzleDeviceThread()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMuzzleDevice.GetMuzzleDeviceThread");
		
		AGBMuzzleDevice_GetMuzzleDeviceThread_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBMuzzleDevice.GetClassMuzzleDeviceThread
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName AGBMuzzleDevice::GetClassMuzzleDeviceThread(class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBMuzzleDevice.GetClassMuzzleDeviceThread");
		
		AGBMuzzleDevice_GetClassMuzzleDeviceThread_Params params {};
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBMuzzleDevice.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBMuzzleDevice::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBMuzzleDevice");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBNavLinkProxy.SmartLinkReached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Agent                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Destination                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBNavLinkProxy::SmartLinkReached(class AActor* Agent, const struct FVector& Destination)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBNavLinkProxy.SmartLinkReached");
		
		AGBNavLinkProxy_SmartLinkReached_Params params {};
		params.Agent = Agent;
		params.Destination = Destination;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBNavLinkProxy.OnNavigationGenerationFinished
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ANavigationData*                             NavData                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBNavLinkProxy::OnNavigationGenerationFinished(class ANavigationData* NavData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBNavLinkProxy.OnNavigationGenerationFinished");
		
		AGBNavLinkProxy_OnNavigationGenerationFinished_Params params {};
		params.NavData = NavData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBNavLinkProxy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBNavLinkProxy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBNavLinkProxy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBNavLinkProxy_Door.GetDoorRef
	 * 		Flags  -> ()
	 */
	class AActor* AGBNavLinkProxy_Door::GetDoorRef()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBNavLinkProxy_Door.GetDoorRef");
		
		AGBNavLinkProxy_Door_GetDoorRef_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBNavLinkProxy_Door.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBNavLinkProxy_Door::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBNavLinkProxy_Door");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBNavLinkProxy_Ladder.GetLadderRef
	 * 		Flags  -> ()
	 */
	class AActor* AGBNavLinkProxy_Ladder::GetLadderRef()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBNavLinkProxy_Ladder.GetLadderRef");
		
		AGBNavLinkProxy_Ladder_GetLadderRef_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBNavLinkProxy_Ladder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBNavLinkProxy_Ladder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBNavLinkProxy_Ladder");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBObjectiveMarker.UpdateObjectiveSprite
	 * 		Flags  -> ()
	 */
	void AGBObjectiveMarker::UpdateObjectiveSprite()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBObjectiveMarker.UpdateObjectiveSprite");
		
		AGBObjectiveMarker_UpdateObjectiveSprite_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBObjectiveMarker.SetObjectiveName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBObjectiveMarker::SetObjectiveName(const class FName& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBObjectiveMarker.SetObjectiveName");
		
		AGBObjectiveMarker_SetObjectiveName_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBObjectiveMarker.SetObjectiveMarkerType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewObjectiveMarkerType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBObjectiveMarker::SetObjectiveMarkerType(const class FName& NewObjectiveMarkerType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBObjectiveMarker.SetObjectiveMarkerType");
		
		AGBObjectiveMarker_SetObjectiveMarkerType_Params params {};
		params.NewObjectiveMarkerType = NewObjectiveMarkerType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBObjectiveMarker.ObjectiveUpdated
	 * 		Flags  -> ()
	 */
	void AGBObjectiveMarker::ObjectiveUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBObjectiveMarker.ObjectiveUpdated");
		
		AGBObjectiveMarker_ObjectiveUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBObjectiveMarker.GetObjectiveSprite
	 * 		Flags  -> ()
	 */
	class UTexture2D* AGBObjectiveMarker::GetObjectiveSprite()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBObjectiveMarker.GetObjectiveSprite");
		
		AGBObjectiveMarker_GetObjectiveSprite_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBObjectiveMarker.GetObjectiveName
	 * 		Flags  -> ()
	 */
	class FName AGBObjectiveMarker::GetObjectiveName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBObjectiveMarker.GetObjectiveName");
		
		AGBObjectiveMarker_GetObjectiveName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBObjectiveMarker.GetObjectiveMarkerType
	 * 		Flags  -> ()
	 */
	class FName AGBObjectiveMarker::GetObjectiveMarkerType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBObjectiveMarker.GetObjectiveMarkerType");
		
		AGBObjectiveMarker_GetObjectiveMarkerType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBObjectiveMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBObjectiveMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBObjectiveMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBParticleImpactBySurfaceType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBParticleImpactBySurfaceType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBParticleImpactBySurfaceType");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBPhysicsCollisionHandler.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBPhysicsCollisionHandler::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPhysicsCollisionHandler");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlatform.UpdateNameTag
	 * 		Flags  -> ()
	 */
	void AGBPlatform::UpdateNameTag()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlatform.UpdateNameTag");
		
		AGBPlatform_UpdateNameTag_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlatform.OnTakeHit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RefBoneName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     RefPosPosition                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlatform::OnTakeHit(const class FName& RefBoneName, const struct FVector& RefPosPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlatform.OnTakeHit");
		
		AGBPlatform_OnTakeHit_Params params {};
		params.RefBoneName = RefBoneName;
		params.RefPosPosition = RefPosPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlatform.OnReceivePlayerState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlatform::OnReceivePlayerState(class APlayerState* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlatform.OnReceivePlayerState");
		
		AGBPlatform_OnReceivePlayerState_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBPlatform.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBPlatform::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPlatform");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerCameraManager.GetCameraStyle
	 * 		Flags  -> ()
	 */
	class FName AGBPlayerCameraManager::GetCameraStyle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerCameraManager.GetCameraStyle");
		
		AGBPlayerCameraManager_GetCameraStyle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBPlayerCameraManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBPlayerCameraManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPlayerCameraManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerInput.ValidateInputSettings
	 * 		Flags  -> ()
	 */
	void UGBPlayerInput::ValidateInputSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerInput.ValidateInputSettings");
		
		UGBPlayerInput_ValidateInputSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBPlayerInput.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBPlayerInput::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPlayerInput");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.UpdateFOVDefault
	 * 		Flags  -> ()
	 */
	void UGBPlayerSettings::UpdateFOVDefault()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.UpdateFOVDefault");
		
		UGBPlayerSettings_UpdateFOVDefault_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.SetUseSimpleShadowsForCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBPlayerSettings::SetUseSimpleShadowsForCharacter(bool bNewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.SetUseSimpleShadowsForCharacter");
		
		UGBPlayerSettings_SetUseSimpleShadowsForCharacter_Params params {};
		params.bNewValue = bNewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.SetPlayerPatch
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        TargetSocket                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ShortPath                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBPlayerSettings::SetPlayerPatch(const class FName& TargetSocket, const class FString& ShortPath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.SetPlayerPatch");
		
		UGBPlayerSettings_SetPlayerPatch_Params params {};
		params.TargetSocket = TargetSocket;
		params.ShortPath = ShortPath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.SetPlayerName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      NewPlayerName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBPlayerSettings::SetPlayerName(const class FString& NewPlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.SetPlayerName");
		
		UGBPlayerSettings_SetPlayerName_Params params {};
		params.NewPlayerName = NewPlayerName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.SceneViewportResized
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   ViewportSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBPlayerSettings::SceneViewportResized(const struct FVector2D& ViewportSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.SceneViewportResized");
		
		UGBPlayerSettings_SceneViewportResized_Params params {};
		params.ViewportSize = ViewportSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.LoadSettings
	 * 		Flags  -> ()
	 */
	void UGBPlayerSettings::LoadSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.LoadSettings");
		
		UGBPlayerSettings_LoadSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.HintValid
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        HintName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBPlayerSettings::HintValid(const class FName& HintName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.HintValid");
		
		UGBPlayerSettings_HintValid_Params params {};
		params.HintName = HintName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.GetPlayerPatchString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        TargetSocket                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UGBPlayerSettings::GetPlayerPatchString(const class FName& TargetSocket)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.GetPlayerPatchString");
		
		UGBPlayerSettings_GetPlayerPatchString_Params params {};
		params.TargetSocket = TargetSocket;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.GetCharVoiceDataId
	 * 		Flags  -> ()
	 */
	struct FPrimaryAssetId UGBPlayerSettings::GetCharVoiceDataId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.GetCharVoiceDataId");
		
		UGBPlayerSettings_GetCharVoiceDataId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.BindSceneViewportResized
	 * 		Flags  -> ()
	 */
	void UGBPlayerSettings::BindSceneViewportResized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.BindSceneViewportResized");
		
		UGBPlayerSettings_BindSceneViewportResized_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerSettings.ApplySettings
	 * 		Flags  -> ()
	 */
	void UGBPlayerSettings::ApplySettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerSettings.ApplySettings");
		
		UGBPlayerSettings_ApplySettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBPlayerSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBPlayerSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPlayerSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerStart.UpdateCollisionStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      TestActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerStart::UpdateCollisionStatus(class AActor* TestActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerStart.UpdateCollisionStatus");
		
		AGBPlayerStart_UpdateCollisionStatus_Params params {};
		params.TestActor = TestActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerStart.SetGroup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewGroupName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerStart::SetGroup(const class FName& NewGroupName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerStart.SetGroup");
		
		AGBPlayerStart_SetGroup_Params params {};
		params.NewGroupName = NewGroupName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerStart.SetCollisionStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPlayerStartCollisionStatus                        NewCollisionStatus                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerStart::SetCollisionStatus(EPlayerStartCollisionStatus NewCollisionStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerStart.SetCollisionStatus");
		
		AGBPlayerStart_SetCollisionStatus_Params params {};
		params.NewCollisionStatus = NewCollisionStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerStart.IsValidFor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBPlayerStart::IsValidFor(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerStart.IsValidFor");
		
		AGBPlayerStart_IsValidFor_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerStart.GetGroup
	 * 		Flags  -> ()
	 */
	class FName AGBPlayerStart::GetGroup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerStart.GetGroup");
		
		AGBPlayerStart_GetGroup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerStart.GetCollisionStatus
	 * 		Flags  -> ()
	 */
	EPlayerStartCollisionStatus AGBPlayerStart::GetCollisionStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerStart.GetCollisionStatus");
		
		AGBPlayerStart_GetCollisionStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBPlayerStart.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBPlayerStart::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPlayerStart");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.WasInPlay
	 * 		Flags  -> ()
	 */
	bool AGBPlayerState::WasInPlay()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.WasInPlay");
		
		AGBPlayerState_WasInPlay_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.UpdateRichPresence
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::UpdateRichPresence()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.UpdateRichPresence");
		
		AGBPlayerState_UpdateRichPresence_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SyncPlayerScores
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::SyncPlayerScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SyncPlayerScores");
		
		AGBPlayerState_SyncPlayerScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetWasInPlay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetWasInPlay(bool bValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetWasInPlay");
		
		AGBPlayerState_SetWasInPlay_Params params {};
		params.bValue = bValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetTeamElement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ETeamElement                                       NewTeamElement                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetTeamElement(ETeamElement NewTeamElement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetTeamElement");
		
		AGBPlayerState_SetTeamElement_Params params {};
		params.NewTeamElement = NewTeamElement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetServerConnectString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      NewServerConnectString                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetServerConnectString(const class FString& NewServerConnectString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetServerConnectString");
		
		AGBPlayerState_SetServerConnectString_Params params {};
		params.NewServerConnectString = NewServerConnectString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetReadyStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EReadyStatus                                       NewStatus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetReadyStatus(EReadyStatus NewStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetReadyStatus");
		
		AGBPlayerState_SetReadyStatus_Params params {};
		params.NewStatus = NewStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetReadyRoomStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EReadyRoomStatus                                   NewStatus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetReadyRoomStatus(EReadyRoomStatus NewStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetReadyRoomStatus");
		
		AGBPlayerState_SetReadyRoomStatus_Params params {};
		params.NewStatus = NewStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetOnDuty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewOnDuty                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetOnDuty(bool bNewOnDuty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetOnDuty");
		
		AGBPlayerState_SetOnDuty_Params params {};
		params.bNewOnDuty = bNewOnDuty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetLives
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewLives                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetLives(unsigned char NewLives)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetLives");
		
		AGBPlayerState_SetLives_Params params {};
		params.NewLives = NewLives;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetInsertionPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBInsertionPoint*                           NewInsertionPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetInsertionPoint(class AGBInsertionPoint* NewInsertionPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetInsertionPoint");
		
		AGBPlayerState_SetInsertionPoint_Params params {};
		params.NewInsertionPoint = NewInsertionPoint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetAllowedToRestart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetAllowedToRestart(bool bNewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetAllowedToRestart");
		
		AGBPlayerState_SetAllowedToRestart_Params params {};
		params.bNewValue = bNewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.SetAlertLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EAlertLevel                                        InAlertLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::SetAlertLevel(EAlertLevel InAlertLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.SetAlertLevel");
		
		AGBPlayerState_SetAlertLevel_Params params {};
		params.InAlertLevel = InAlertLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ServerSyncPlayerScores
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::ServerSyncPlayerScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ServerSyncPlayerScores");
		
		AGBPlayerState_ServerSyncPlayerScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ServerReportClientMissingAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      AssetName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::ServerReportClientMissingAsset(const class FString& AssetName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ServerReportClientMissingAsset");
		
		AGBPlayerState_ServerReportClientMissingAsset_Params params {};
		params.AssetName = AssetName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ServerRegisterPlayerWithSession
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<unsigned char>                              AuthSessionTicket                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::ServerRegisterPlayerWithSession(TArray<unsigned char> AuthSessionTicket)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ServerRegisterPlayerWithSession");
		
		AGBPlayerState_ServerRegisterPlayerWithSession_Params params {};
		params.AuthSessionTicket = AuthSessionTicket;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ResetStats
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::ResetStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ResetStats");
		
		AGBPlayerState_ResetStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ResetPlayerScores
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::ResetPlayerScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ResetPlayerScores");
		
		AGBPlayerState_ResetPlayerScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ReportClientMissingAsset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      AssetName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::ReportClientMissingAsset(const class FString& AssetName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ReportClientMissingAsset");
		
		AGBPlayerState_ReportClientMissingAsset_Params params {};
		params.AssetName = AssetName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRepPlayerNameEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bBeenWelcomed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::OnRepPlayerNameEvent(bool bBeenWelcomed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRepPlayerNameEvent");
		
		AGBPlayerState_OnRepPlayerNameEvent_Params params {};
		params.bBeenWelcomed = bBeenWelcomed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRep_TeamId
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::OnRep_TeamId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRep_TeamId");
		
		AGBPlayerState_OnRep_TeamId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRep_TeamElement
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::OnRep_TeamElement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRep_TeamElement");
		
		AGBPlayerState_OnRep_TeamElement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRep_ReplicatedPlayerStats
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::OnRep_ReplicatedPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRep_ReplicatedPlayerStats");
		
		AGBPlayerState_OnRep_ReplicatedPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRep_ReadyStatus
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::OnRep_ReadyStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRep_ReadyStatus");
		
		AGBPlayerState_OnRep_ReadyStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRep_ReadyRoomStatus
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::OnRep_ReadyRoomStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRep_ReadyRoomStatus");
		
		AGBPlayerState_OnRep_ReadyRoomStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRep_PlayerScores
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::OnRep_PlayerScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRep_PlayerScores");
		
		AGBPlayerState_OnRep_PlayerScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRep_PlayerPatchList
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::OnRep_PlayerPatchList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRep_PlayerPatchList");
		
		AGBPlayerState_OnRep_PlayerPatchList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRep_ClientAssetIsMissing
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::OnRep_ClientAssetIsMissing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRep_ClientAssetIsMissing");
		
		AGBPlayerState_OnRep_ClientAssetIsMissing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.OnRep_AlertLevel
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::OnRep_AlertLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.OnRep_AlertLevel");
		
		AGBPlayerState_OnRep_AlertLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.IsOnlyASpectatorBP
	 * 		Flags  -> ()
	 */
	bool AGBPlayerState::IsOnlyASpectatorBP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.IsOnlyASpectatorBP");
		
		AGBPlayerState_IsOnlyASpectatorBP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.IsLocal
	 * 		Flags  -> ()
	 */
	bool AGBPlayerState::IsLocal()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.IsLocal");
		
		AGBPlayerState_IsLocal_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.IncrementStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      StatKey                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::IncrementStat(const class FName& StatName, const class FString& StatKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.IncrementStat");
		
		AGBPlayerState_IncrementStat_Params params {};
		params.StatName = StatName;
		params.StatKey = StatKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetTotalStatValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGBPlayerState::GetTotalStatValue(const class FName& StatName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetTotalStatValue");
		
		AGBPlayerState_GetTotalStatValue_Params params {};
		params.StatName = StatName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetTeamElement
	 * 		Flags  -> ()
	 */
	ETeamElement AGBPlayerState::GetTeamElement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetTeamElement");
		
		AGBPlayerState_GetTeamElement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetStatValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      StatKey                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t AGBPlayerState::GetStatValue(const class FName& StatName, const class FString& StatKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetStatValue");
		
		AGBPlayerState_GetStatValue_Params params {};
		params.StatName = StatName;
		params.StatKey = StatKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetStatKeys
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class FString> AGBPlayerState::GetStatKeys(const class FName& StatName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetStatKeys");
		
		AGBPlayerState_GetStatKeys_Params params {};
		params.StatName = StatName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetServerConnectString
	 * 		Flags  -> ()
	 */
	class FString AGBPlayerState::GetServerConnectString()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetServerConnectString");
		
		AGBPlayerState_GetServerConnectString_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetReplicatedPlayerStats
	 * 		Flags  -> ()
	 */
	TArray<class FString> AGBPlayerState::GetReplicatedPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetReplicatedPlayerStats");
		
		AGBPlayerState_GetReplicatedPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetReadyStatus
	 * 		Flags  -> ()
	 */
	EReadyStatus AGBPlayerState::GetReadyStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetReadyStatus");
		
		AGBPlayerState_GetReadyStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetReadyRoomStatus
	 * 		Flags  -> ()
	 */
	EReadyRoomStatus AGBPlayerState::GetReadyRoomStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetReadyRoomStatus");
		
		AGBPlayerState_GetReadyRoomStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetQuickAdminCommands
	 * 		Flags  -> ()
	 */
	TArray<class FString> AGBPlayerState::GetQuickAdminCommands()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetQuickAdminCommands");
		
		AGBPlayerState_GetQuickAdminCommands_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetPlayerScoreTemplateFromGameState
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::GetPlayerScoreTemplateFromGameState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetPlayerScoreTemplateFromGameState");
		
		AGBPlayerState_GetPlayerScoreTemplateFromGameState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetPlayerScores
	 * 		Flags  -> ()
	 */
	TArray<struct FGBScoreLine> AGBPlayerState::GetPlayerScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetPlayerScores");
		
		AGBPlayerState_GetPlayerScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetPlayerRotation
	 * 		Flags  -> ()
	 */
	float AGBPlayerState::GetPlayerRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetPlayerRotation");
		
		AGBPlayerState_GetPlayerRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetPlayerPatchString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        TargetSocket                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString AGBPlayerState::GetPlayerPatchString(const class FName& TargetSocket)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetPlayerPatchString");
		
		AGBPlayerState_GetPlayerPatchString_Params params {};
		params.TargetSocket = TargetSocket;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetPlayerLocation
	 * 		Flags  -> ()
	 */
	struct FVector AGBPlayerState::GetPlayerLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetPlayerLocation");
		
		AGBPlayerState_GetPlayerLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetPing
	 * 		Flags  -> ()
	 */
	float AGBPlayerState::GetPing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetPing");
		
		AGBPlayerState_GetPing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetOnDuty
	 * 		Flags  -> ()
	 */
	bool AGBPlayerState::GetOnDuty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetOnDuty");
		
		AGBPlayerState_GetOnDuty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetOldName
	 * 		Flags  -> ()
	 */
	class FString AGBPlayerState::GetOldName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetOldName");
		
		AGBPlayerState_GetOldName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetLives
	 * 		Flags  -> ()
	 */
	unsigned char AGBPlayerState::GetLives()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetLives");
		
		AGBPlayerState_GetLives_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetInsertionPoint
	 * 		Flags  -> ()
	 */
	class AGBInsertionPoint* AGBPlayerState::GetInsertionPoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetInsertionPoint");
		
		AGBPlayerState_GetInsertionPoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetCharacter
	 * 		Flags  -> ()
	 */
	class AGBCharacter* AGBPlayerState::GetCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetCharacter");
		
		AGBPlayerState_GetCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.GetAlertLevel
	 * 		Flags  -> ()
	 */
	EAlertLevel AGBPlayerState::GetAlertLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.GetAlertLevel");
		
		AGBPlayerState_GetAlertLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ClearStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      StatKey                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::ClearStat(const class FName& StatName, const class FString& StatKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ClearStat");
		
		AGBPlayerState_ClearStat_Params params {};
		params.StatName = StatName;
		params.StatKey = StatKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ClearReplicatedPlayerStats
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::ClearReplicatedPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ClearReplicatedPlayerStats");
		
		AGBPlayerState_ClearReplicatedPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ClearPlayerScores
	 * 		Flags  -> ()
	 */
	void AGBPlayerState::ClearPlayerScores()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ClearPlayerScores");
		
		AGBPlayerState_ClearPlayerScores_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.AwardPlayerScore
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ScoreName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ScoreMultiple                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::AwardPlayerScore(const class FName& ScoreName, int32_t ScoreMultiple)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.AwardPlayerScore");
		
		AGBPlayerState_AwardPlayerScore_Params params {};
		params.ScoreName = ScoreName;
		params.ScoreMultiple = ScoreMultiple;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.ArePlayerScoresInitialised
	 * 		Flags  -> ()
	 */
	bool AGBPlayerState::ArePlayerScoresInitialised()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.ArePlayerScoresInitialised");
		
		AGBPlayerState_ArePlayerScoresInitialised_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.AllowedToRestart
	 * 		Flags  -> ()
	 */
	bool AGBPlayerState::AllowedToRestart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.AllowedToRestart");
		
		AGBPlayerState_AllowedToRestart_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.AllowedToChangeKit
	 * 		Flags  -> ()
	 */
	bool AGBPlayerState::AllowedToChangeKit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.AllowedToChangeKit");
		
		AGBPlayerState_AllowedToChangeKit_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPlayerState.AddReplicatedPlayerStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      StatString                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPlayerState::AddReplicatedPlayerStat(const class FString& StatString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPlayerState.AddReplicatedPlayerStat");
		
		AGBPlayerState_AddReplicatedPlayerStat_Params params {};
		params.StatString = StatString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBPlayerState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBPlayerState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPlayerState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPortalSystemManager.RemoveLight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ULightComponent*                             LightComponent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPortalSystemManager::RemoveLight(class ULightComponent* LightComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPortalSystemManager.RemoveLight");
		
		AGBPortalSystemManager_RemoveLight_Params params {};
		params.LightComponent = LightComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBPortalSystemManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBPortalSystemManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPortalSystemManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPouch.SetLastFilledWith
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      NewLastFilledWith                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewLastFilledWithSkinName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPouch::SetLastFilledWith(class UClass* NewLastFilledWith, const class FName& NewLastFilledWithSkinName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPouch.SetLastFilledWith");
		
		AGBPouch_SetLastFilledWith_Params params {};
		params.NewLastFilledWith = NewLastFilledWith;
		params.NewLastFilledWithSkinName = NewLastFilledWithSkinName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPouch.GetPouchType
	 * 		Flags  -> ()
	 */
	class FName AGBPouch::GetPouchType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPouch.GetPouchType");
		
		AGBPouch_GetPouchType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPouch.GetFillCount
	 * 		Flags  -> ()
	 */
	int32_t AGBPouch::GetFillCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPouch.GetFillCount");
		
		AGBPouch_GetFillCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPouch.GetChildUnequipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     ChildItem                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGBSwitchItemInfo                           OutUnequipInfo                                             (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool AGBPouch::GetChildUnequipInfo(class AGBItem* ChildItem, EHand TargetHand, struct FGBSwitchItemInfo* OutUnequipInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPouch.GetChildUnequipInfo");
		
		AGBPouch_GetChildUnequipInfo_Params params {};
		params.ChildItem = ChildItem;
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutUnequipInfo != nullptr)
			*OutUnequipInfo = params.OutUnequipInfo;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPouch.GetChildEquipInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     ChildItem                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EHand                                              TargetHand                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGBSwitchItemInfo                           OutEquipInfo                                               (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool AGBPouch::GetChildEquipInfo(class AGBItem* ChildItem, EHand TargetHand, struct FGBSwitchItemInfo* OutEquipInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPouch.GetChildEquipInfo");
		
		AGBPouch_GetChildEquipInfo_Params params {};
		params.ChildItem = ChildItem;
		params.TargetHand = TargetHand;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutEquipInfo != nullptr)
			*OutEquipInfo = params.OutEquipInfo;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBPouch.FillWith
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      FillItemClass                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        FillSkinName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBPouch::FillWith(class UClass* FillItemClass, const class FName& FillSkinName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBPouch.FillWith");
		
		AGBPouch_FillWith_Params params {};
		params.FillItemClass = FillItemClass;
		params.FillSkinName = FillSkinName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBPouch.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBPouch::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBPouch");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.SingleInstanceOnly
	 * 		Flags  -> ()
	 */
	bool AGBRailAttachment::SingleInstanceOnly()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.SingleInstanceOnly");
		
		AGBRailAttachment_SingleInstanceOnly_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.SetRecoilSlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewRecoilSlot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBRailAttachment::SetRecoilSlot(int32_t NewRecoilSlot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.SetRecoilSlot");
		
		AGBRailAttachment_SetRecoilSlot_Params params {};
		params.NewRecoilSlot = NewRecoilSlot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.OnRep_RailAttachmentReplication
	 * 		Flags  -> ()
	 */
	void AGBRailAttachment::OnRep_RailAttachmentReplication()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.OnRep_RailAttachmentReplication");
		
		AGBRailAttachment_OnRep_RailAttachmentReplication_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.IsValidRail
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UGBRailComponent*                            RailComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBRailAttachment::IsValidRail(class UGBRailComponent* RailComp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.IsValidRail");
		
		AGBRailAttachment_IsValidRail_Params params {};
		params.RailComp = RailComp;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.IsNotTooFarForward
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBFirearm*                                  ParentFirearm                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     WorldLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBRailAttachment::IsNotTooFarForward(class AGBFirearm* ParentFirearm, const struct FVector& WorldLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.IsNotTooFarForward");
		
		AGBRailAttachment_IsNotTooFarForward_Params params {};
		params.ParentFirearm = ParentFirearm;
		params.WorldLocation = WorldLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.IsNotTooFarBack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBFirearm*                                  ParentFirearm                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     WorldLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBRailAttachment::IsNotTooFarBack(class AGBFirearm* ParentFirearm, const struct FVector& WorldLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.IsNotTooFarBack");
		
		AGBRailAttachment_IsNotTooFarBack_Params params {};
		params.ParentFirearm = ParentFirearm;
		params.WorldLocation = WorldLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.GetValidRailOffsetsFor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBFirearm*                                  ParentFirearm                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FValidatedRecoilSlots>               OutValidatedRecoilSlots                                    (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AGBRailAttachment::GetValidRailOffsetsFor(class AGBFirearm* ParentFirearm, TArray<struct FValidatedRecoilSlots>* OutValidatedRecoilSlots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.GetValidRailOffsetsFor");
		
		AGBRailAttachment_GetValidRailOffsetsFor_Params params {};
		params.ParentFirearm = ParentFirearm;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutValidatedRecoilSlots != nullptr)
			*OutValidatedRecoilSlots = params.OutValidatedRecoilSlots;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.GetValidMountPointOffsets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     BaseItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FVector> AGBRailAttachment::GetValidMountPointOffsets(class AGBItem* BaseItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.GetValidMountPointOffsets");
		
		AGBRailAttachment_GetValidMountPointOffsets_Params params {};
		params.BaseItem = BaseItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.GetRecoilSlot
	 * 		Flags  -> ()
	 */
	int32_t AGBRailAttachment::GetRecoilSlot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.GetRecoilSlot");
		
		AGBRailAttachment_GetRecoilSlot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.GetRailMountValidation
	 * 		Flags  -> ()
	 */
	ERailMountValidation AGBRailAttachment::GetRailMountValidation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.GetRailMountValidation");
		
		AGBRailAttachment_GetRailMountValidation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.GetParentFirearm
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      RootItem                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBFirearm* AGBRailAttachment::GetParentFirearm(class AActor* RootItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.GetParentFirearm");
		
		AGBRailAttachment_GetParentFirearm_Params params {};
		params.RootItem = RootItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.GetMountPoints
	 * 		Flags  -> ()
	 */
	TArray<class UGBRailMountComponent*> AGBRailAttachment::GetMountPoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.GetMountPoints");
		
		AGBRailAttachment_GetMountPoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.GetFirearmType
	 * 		Flags  -> ()
	 */
	ERailFirearmType AGBRailAttachment::GetFirearmType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.GetFirearmType");
		
		AGBRailAttachment_GetFirearmType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.GetBackOffset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     OutBackOffset                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBRailAttachment::GetBackOffset(struct FVector* OutBackOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.GetBackOffset");
		
		AGBRailAttachment_GetBackOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBackOffset != nullptr)
			*OutBackOffset = params.OutBackOffset;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.GetAttachmentOverlaps
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bForceCollision                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AGBRailAttachment*> AGBRailAttachment::GetAttachmentOverlaps(bool bForceCollision)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.GetAttachmentOverlaps");
		
		AGBRailAttachment_GetAttachmentOverlaps_Params params {};
		params.bForceCollision = bForceCollision;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailAttachment.AutoAttach
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBItem*                                     ParentItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AGBRailAttachment::AutoAttach(class AGBItem* ParentItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailAttachment.AutoAttach");
		
		AGBRailAttachment_AutoAttach_Params params {};
		params.ParentItem = ParentItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBRailAttachment.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBRailAttachment::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBRailAttachment");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailComponent.GetRecoilSlots
	 * 		Flags  -> ()
	 */
	int32_t UGBRailComponent::GetRecoilSlots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailComponent.GetRecoilSlots");
		
		UGBRailComponent_GetRecoilSlots_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBRailComponent.GetRailFace
	 * 		Flags  -> ()
	 */
	ERailFace UGBRailComponent::GetRailFace()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBRailComponent.GetRailFace");
		
		UGBRailComponent_GetRailFace_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBRailComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBRailComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBRailComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBRailMountComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBRailMountComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBRailMountComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBReadyRoomPlayerStart.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBReadyRoomPlayerStart::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBReadyRoomPlayerStart");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.SetSightLineRelativeRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRotator                                    NewRelativeRotation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UGBSightComponent::SetSightLineRelativeRotation(const struct FRotator& NewRelativeRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.SetSightLineRelativeRotation");
		
		UGBSightComponent_SetSightLineRelativeRotation_Params params {};
		params.NewRelativeRotation = NewRelativeRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.SetSightLineRelativeLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     NewRelativeLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBSightComponent::SetSightLineRelativeLocation(const struct FVector& NewRelativeLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.SetSightLineRelativeLocation");
		
		UGBSightComponent_SetSightLineRelativeLocation_Params params {};
		params.NewRelativeLocation = NewRelativeLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.SetSceneCaptureComponent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USceneCaptureComponent2D*                    NewSceneCaptureComp                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBSightComponent::SetSceneCaptureComponent(class USceneCaptureComponent2D* NewSceneCaptureComp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.SetSceneCaptureComponent");
		
		UGBSightComponent_SetSceneCaptureComponent_Params params {};
		params.NewSceneCaptureComp = NewSceneCaptureComp;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.SetMagnificationLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewMagnificationLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBSightComponent::SetMagnificationLevel(float NewMagnificationLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.SetMagnificationLevel");
		
		UGBSightComponent_SetMagnificationLevel_Params params {};
		params.NewMagnificationLevel = NewMagnificationLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.ServerSetZeroDistance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewZeroDistance                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBSightComponent::ServerSetZeroDistance(int32_t NewZeroDistance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.ServerSetZeroDistance");
		
		UGBSightComponent_ServerSetZeroDistance_Params params {};
		params.NewZeroDistance = NewZeroDistance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.ServerSetReticleColourIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewReticleColourIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBSightComponent::ServerSetReticleColourIndex(unsigned char NewReticleColourIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.ServerSetReticleColourIndex");
		
		UGBSightComponent_ServerSetReticleColourIndex_Params params {};
		params.NewReticleColourIndex = NewReticleColourIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.ServerSetReticleBrightnessLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NewReticleBrightnessLevel                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBSightComponent::ServerSetReticleBrightnessLevel(unsigned char NewReticleBrightnessLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.ServerSetReticleBrightnessLevel");
		
		UGBSightComponent_ServerSetReticleBrightnessLevel_Params params {};
		params.NewReticleBrightnessLevel = NewReticleBrightnessLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.ServerSetMagnificationLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewMagnificationLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBSightComponent::ServerSetMagnificationLevel(float NewMagnificationLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.ServerSetMagnificationLevel");
		
		UGBSightComponent_ServerSetMagnificationLevel_Params params {};
		params.NewMagnificationLevel = NewMagnificationLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.OnRep_ReticleColourIndex
	 * 		Flags  -> ()
	 */
	void UGBSightComponent::OnRep_ReticleColourIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.OnRep_ReticleColourIndex");
		
		UGBSightComponent_OnRep_ReticleColourIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.OnRep_ReticleBrightness
	 * 		Flags  -> ()
	 */
	void UGBSightComponent::OnRep_ReticleBrightness()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.OnRep_ReticleBrightness");
		
		UGBSightComponent_OnRep_ReticleBrightness_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.OnRep_MagnificationLevel
	 * 		Flags  -> ()
	 */
	void UGBSightComponent::OnRep_MagnificationLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.OnRep_MagnificationLevel");
		
		UGBSightComponent_OnRep_MagnificationLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.OnEndViewTarget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBSightComponent::OnEndViewTarget(class APlayerController* PlayerController, class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.OnEndViewTarget");
		
		UGBSightComponent_OnEndViewTarget_Params params {};
		params.PlayerController = PlayerController;
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.HasValidSightLine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBFirearm*                                  RelativeFirearm                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AGBItem*>                             OtherAttachments                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class AGBItem*                                     OutBlockedBy                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBSightComponent::HasValidSightLine(class AGBFirearm* RelativeFirearm, TArray<class AGBItem*> OtherAttachments, class AGBItem** OutBlockedBy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.HasValidSightLine");
		
		UGBSightComponent_HasValidSightLine_Params params {};
		params.RelativeFirearm = RelativeFirearm;
		params.OtherAttachments = OtherAttachments;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBlockedBy != nullptr)
			*OutBlockedBy = params.OutBlockedBy;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetZeroDistance
	 * 		Flags  -> ()
	 */
	int32_t UGBSightComponent::GetZeroDistance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetZeroDistance");
		
		UGBSightComponent_GetZeroDistance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetStatKey
	 * 		Flags  -> ()
	 */
	class FString UGBSightComponent::GetStatKey()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetStatKey");
		
		UGBSightComponent_GetStatKey_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetSightLineRelativeRotation
	 * 		Flags  -> ()
	 */
	struct FRotator UGBSightComponent::GetSightLineRelativeRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetSightLineRelativeRotation");
		
		UGBSightComponent_GetSightLineRelativeRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetSightLineRelativeLocation
	 * 		Flags  -> ()
	 */
	struct FVector UGBSightComponent::GetSightLineRelativeLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetSightLineRelativeLocation");
		
		UGBSightComponent_GetSightLineRelativeLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetSightLineFocus
	 * 		Flags  -> ()
	 */
	bool UGBSightComponent::GetSightLineFocus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetSightLineFocus");
		
		UGBSightComponent_GetSightLineFocus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetReticleColourIndex
	 * 		Flags  -> ()
	 */
	int32_t UGBSightComponent::GetReticleColourIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetReticleColourIndex");
		
		UGBSightComponent_GetReticleColourIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetOpticRadius
	 * 		Flags  -> ()
	 */
	float UGBSightComponent::GetOpticRadius()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetOpticRadius");
		
		UGBSightComponent_GetOpticRadius_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetMinMagnificationLevel
	 * 		Flags  -> ()
	 */
	float UGBSightComponent::GetMinMagnificationLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetMinMagnificationLevel");
		
		UGBSightComponent_GetMinMagnificationLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetMaxMagnificationLevel
	 * 		Flags  -> ()
	 */
	float UGBSightComponent::GetMaxMagnificationLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetMaxMagnificationLevel");
		
		UGBSightComponent_GetMaxMagnificationLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetMatchingFrontSightPost
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBFirearm*                                  RelativeFirearm                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UGBFrontSightPostComponent*                  OutFrontSightPostComponent                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBSightComponent::GetMatchingFrontSightPost(class AGBFirearm* RelativeFirearm, class UGBFrontSightPostComponent** OutFrontSightPostComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetMatchingFrontSightPost");
		
		UGBSightComponent_GetMatchingFrontSightPost_Params params {};
		params.RelativeFirearm = RelativeFirearm;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutFrontSightPostComponent != nullptr)
			*OutFrontSightPostComponent = params.OutFrontSightPostComponent;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetMagnificationLevel
	 * 		Flags  -> ()
	 */
	float UGBSightComponent::GetMagnificationLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetMagnificationLevel");
		
		UGBSightComponent_GetMagnificationLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetLevelAngle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBFirearm*                                  RelativeFirearm                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     WorldBoneLocation                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     RelativeLocationOffset                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGBSightComponent::GetLevelAngle(class AGBFirearm* RelativeFirearm, const struct FVector& WorldBoneLocation, const struct FVector& RelativeLocationOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetLevelAngle");
		
		UGBSightComponent_GetLevelAngle_Params params {};
		params.RelativeFirearm = RelativeFirearm;
		params.WorldBoneLocation = WorldBoneLocation;
		params.RelativeLocationOffset = RelativeLocationOffset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetFocus
	 * 		Flags  -> ()
	 */
	bool UGBSightComponent::GetFocus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetFocus");
		
		UGBSightComponent_GetFocus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetDefaultMagnificationLevel
	 * 		Flags  -> ()
	 */
	float UGBSightComponent::GetDefaultMagnificationLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetDefaultMagnificationLevel");
		
		UGBSightComponent_GetDefaultMagnificationLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetAnimRotOffset
	 * 		Flags  -> ()
	 */
	struct FRotator UGBSightComponent::GetAnimRotOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetAnimRotOffset");
		
		UGBSightComponent_GetAnimRotOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSightComponent.GetAnimLocOffset
	 * 		Flags  -> ()
	 */
	struct FVector UGBSightComponent::GetAnimLocOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSightComponent.GetAnimLocOffset");
		
		UGBSightComponent_GetAnimLocOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBSightComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBSightComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBSightComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBSkinDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBSkinDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBSkinDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSky.StartCycle
	 * 		Flags  -> ()
	 */
	void AGBSky::StartCycle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSky.StartCycle");
		
		AGBSky_StartCycle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSky.SetInitialTimeOfDay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewInitialTimeOfDay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBSky::SetInitialTimeOfDay(int32_t NewInitialTimeOfDay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSky.SetInitialTimeOfDay");
		
		AGBSky_SetInitialTimeOfDay_Params params {};
		params.NewInitialTimeOfDay = NewInitialTimeOfDay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSky.OnTimeSpanChangeEvent
	 * 		Flags  -> ()
	 */
	void AGBSky::OnTimeSpanChangeEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSky.OnTimeSpanChangeEvent");
		
		AGBSky_OnTimeSpanChangeEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSky.OnRep_InitialTimeOfDay
	 * 		Flags  -> ()
	 */
	void AGBSky::OnRep_InitialTimeOfDay()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSky.OnRep_InitialTimeOfDay");
		
		AGBSky_OnRep_InitialTimeOfDay_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSky.OnRep_CycleStartTime
	 * 		Flags  -> ()
	 */
	void AGBSky::OnRep_CycleStartTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSky.OnRep_CycleStartTime");
		
		AGBSky_OnRep_CycleStartTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSky.GetTimeSpanTag
	 * 		Flags  -> ()
	 */
	class FName AGBSky::GetTimeSpanTag()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSky.GetTimeSpanTag");
		
		AGBSky_GetTimeSpanTag_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSky.GetInitialTimeOfDay
	 * 		Flags  -> ()
	 */
	int32_t AGBSky::GetInitialTimeOfDay()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSky.GetInitialTimeOfDay");
		
		AGBSky_GetInitialTimeOfDay_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSky.GetHoursMinutesSeconds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            OutHours                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutMinutes                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OutSeconds                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AGBSky::GetHoursMinutesSeconds(int32_t* OutHours, int32_t* OutMinutes, int32_t* OutSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSky.GetHoursMinutesSeconds");
		
		AGBSky_GetHoursMinutesSeconds_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHours != nullptr)
			*OutHours = params.OutHours;
		if (OutMinutes != nullptr)
			*OutMinutes = params.OutMinutes;
		if (OutSeconds != nullptr)
			*OutSeconds = params.OutSeconds;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBSky.EndCycle
	 * 		Flags  -> ()
	 */
	void AGBSky::EndCycle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBSky.EndCycle");
		
		AGBSky_EndCycle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBSky.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBSky::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBSky");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBSoundNodeMasterSlave.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBSoundNodeMasterSlave::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBSoundNodeMasterSlave");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBSoundNodePitchDilation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBSoundNodePitchDilation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBSoundNodePitchDilation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBSpawnProtectionVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBSpawnProtectionVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBSpawnProtectionVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.SyncTubeContents
	 * 		Flags  -> ()
	 */
	void UGBTubeMagComponent::SyncTubeContents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.SyncTubeContents");
		
		UGBTubeMagComponent_SyncTubeContents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.StartPlusOne
	 * 		Flags  -> ()
	 */
	bool UGBTubeMagComponent::StartPlusOne()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.StartPlusOne");
		
		UGBTubeMagComponent_StartPlusOne_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.SetIsFiringFromOpenBolt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewIsFiringFromOpenBolt                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBTubeMagComponent::SetIsFiringFromOpenBolt(bool bNewIsFiringFromOpenBolt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.SetIsFiringFromOpenBolt");
		
		UGBTubeMagComponent_SetIsFiringFromOpenBolt_Params params {};
		params.bNewIsFiringFromOpenBolt = bNewIsFiringFromOpenBolt;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.SetChamberedRound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      NewChamberedRound                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBTubeMagComponent::SetChamberedRound(class UClass* NewChamberedRound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.SetChamberedRound");
		
		UGBTubeMagComponent_SetChamberedRound_Params params {};
		params.NewChamberedRound = NewChamberedRound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.SetBoltHeldOpen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewBoltIsHeldOpen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBTubeMagComponent::SetBoltHeldOpen(bool bNewBoltIsHeldOpen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.SetBoltHeldOpen");
		
		UGBTubeMagComponent_SetBoltHeldOpen_Params params {};
		params.bNewBoltIsHeldOpen = bNewBoltIsHeldOpen;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.OnRep_TubeContents
	 * 		Flags  -> ()
	 */
	void UGBTubeMagComponent::OnRep_TubeContents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.OnRep_TubeContents");
		
		UGBTubeMagComponent_OnRep_TubeContents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.IsLiveRoundChambered
	 * 		Flags  -> ()
	 */
	bool UGBTubeMagComponent::IsLiveRoundChambered()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.IsLiveRoundChambered");
		
		UGBTubeMagComponent_IsLiveRoundChambered_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.GetTubeContents
	 * 		Flags  -> ()
	 */
	TArray<class UClass*> UGBTubeMagComponent::GetTubeContents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.GetTubeContents");
		
		UGBTubeMagComponent_GetTubeContents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.GetRoundType
	 * 		Flags  -> ()
	 */
	class FName UGBTubeMagComponent::GetRoundType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.GetRoundType");
		
		UGBTubeMagComponent_GetRoundType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.GetIsFiringFromOpenBolt
	 * 		Flags  -> ()
	 */
	bool UGBTubeMagComponent::GetIsFiringFromOpenBolt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.GetIsFiringFromOpenBolt");
		
		UGBTubeMagComponent_GetIsFiringFromOpenBolt_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.GetCount
	 * 		Flags  -> ()
	 */
	int32_t UGBTubeMagComponent::GetCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.GetCount");
		
		UGBTubeMagComponent_GetCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.GetChamberedRound
	 * 		Flags  -> ()
	 */
	class UClass* UGBTubeMagComponent::GetChamberedRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.GetChamberedRound");
		
		UGBTubeMagComponent_GetChamberedRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.GetCapacity
	 * 		Flags  -> ()
	 */
	int32_t UGBTubeMagComponent::GetCapacity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.GetCapacity");
		
		UGBTubeMagComponent_GetCapacity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.GetBulletItemClass
	 * 		Flags  -> ()
	 */
	class UClass* UGBTubeMagComponent::GetBulletItemClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.GetBulletItemClass");
		
		UGBTubeMagComponent_GetBulletItemClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.GetBoltHeldOpen
	 * 		Flags  -> ()
	 */
	bool UGBTubeMagComponent::GetBoltHeldOpen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.GetBoltHeldOpen");
		
		UGBTubeMagComponent_GetBoltHeldOpen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.FindCompatibleRound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AGBCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBBulletItem* UGBTubeMagComponent::FindCompatibleRound(class AGBCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.FindCompatibleRound");
		
		UGBTubeMagComponent_FindCompatibleRound_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBTubeMagComponent.AddRoundToTube
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      NewRound                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBTubeMagComponent::AddRoundToTube(class UClass* NewRound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBTubeMagComponent.AddRoundToTube");
		
		UGBTubeMagComponent_AddRoundToTube_Params params {};
		params.NewRound = NewRound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBTubeMagComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBTubeMagComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBTubeMagComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBTypes.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBTypes::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBTypes");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.UnbindKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FInputBoundKey                              TargetKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::UnbindKey(const struct FInputBoundKey& TargetKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.UnbindKey");
		
		UGBUIFunctionLibrary_UnbindKey_Params params {};
		params.TargetKey = TargetKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.UnBindCommand
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        CommandName                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::UnBindCommand(const class FName& CommandName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.UnBindCommand");
		
		UGBUIFunctionLibrary_UnBindCommand_Params params {};
		params.CommandName = CommandName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.SetMouseSmoothing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               NewMouseSmoothing                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::SetMouseSmoothing(bool NewMouseSmoothing)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.SetMouseSmoothing");
		
		UGBUIFunctionLibrary_SetMouseSmoothing_Params params {};
		params.NewMouseSmoothing = NewMouseSmoothing;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.SetMousePosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   MousePosition                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::SetMousePosition(const struct FVector2D& MousePosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.SetMousePosition");
		
		UGBUIFunctionLibrary_SetMousePosition_Params params {};
		params.MousePosition = MousePosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.SetInvertMouse
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               NewInvertMouse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::SetInvertMouse(bool NewInvertMouse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.SetInvertMouse");
		
		UGBUIFunctionLibrary_SetInvertMouse_Params params {};
		params.NewInvertMouse = NewInvertMouse;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.SetDoubleClickTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewDoubleClickTime                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::SetDoubleClickTime(float NewDoubleClickTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.SetDoubleClickTime");
		
		UGBUIFunctionLibrary_SetDoubleClickTime_Params params {};
		params.NewDoubleClickTime = NewDoubleClickTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.SaveBinds
	 * 		Flags  -> ()
	 */
	void UGBUIFunctionLibrary::SaveBinds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.SaveBinds");
		
		UGBUIFunctionLibrary_SaveBinds_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.ResetBindsToDefault
	 * 		Flags  -> ()
	 */
	void UGBUIFunctionLibrary::ResetBindsToDefault()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.ResetBindsToDefault");
		
		UGBUIFunctionLibrary_ResetBindsToDefault_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.RemoveAllWidgetsOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               TopLevelOnly                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::RemoveAllWidgetsOfClass(class UObject* WorldContextObject, class UClass* WidgetClass, bool TopLevelOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.RemoveAllWidgetsOfClass");
		
		UGBUIFunctionLibrary_RemoveAllWidgetsOfClass_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.WidgetClass = WidgetClass;
		params.TopLevelOnly = TopLevelOnly;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.MoviePlayerStopPlaying
	 * 		Flags  -> ()
	 */
	void UGBUIFunctionLibrary::MoviePlayerStopPlaying()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.MoviePlayerStopPlaying");
		
		UGBUIFunctionLibrary_MoviePlayerStopPlaying_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.IsMoviePlayerFinishedLoading
	 * 		Flags  -> ()
	 */
	bool UGBUIFunctionLibrary::IsMoviePlayerFinishedLoading()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.IsMoviePlayerFinishedLoading");
		
		UGBUIFunctionLibrary_IsMoviePlayerFinishedLoading_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.IsMoviePlayerCurrentlyPlaying
	 * 		Flags  -> ()
	 */
	bool UGBUIFunctionLibrary::IsMoviePlayerCurrentlyPlaying()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.IsMoviePlayerCurrentlyPlaying");
		
		UGBUIFunctionLibrary_IsMoviePlayerCurrentlyPlaying_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.IsChildOf
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWidget*                                     ChildWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UWidget*                                     PossibleParent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBUIFunctionLibrary::IsChildOf(class UWidget* ChildWidget, class UWidget* PossibleParent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.IsChildOf");
		
		UGBUIFunctionLibrary_IsChildOf_Params params {};
		params.ChildWidget = ChildWidget;
		params.PossibleParent = PossibleParent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.InsertChildAt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWidget*                                     Parent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UWidget*                                     Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UPanelSlot* UGBUIFunctionLibrary::InsertChildAt(class UWidget* Parent, int32_t Index, class UWidget* Content)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.InsertChildAt");
		
		UGBUIFunctionLibrary_InsertChildAt_Params params {};
		params.Parent = Parent;
		params.Index = Index;
		params.Content = Content;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.InitStringTable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        StringTableId                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      StringNameSpace                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBUIFunctionLibrary::InitStringTable(const class FName& StringTableId, const class FString& StringNameSpace)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.InitStringTable");
		
		UGBUIFunctionLibrary_InitStringTable_Params params {};
		params.StringTableId = StringTableId;
		params.StringNameSpace = StringNameSpace;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetWidgetFromName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UUserWidget*                                 ParentUserWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Name                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UWidget* UGBUIFunctionLibrary::GetWidgetFromName(class UUserWidget* ParentUserWidget, const class FName& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetWidgetFromName");
		
		UGBUIFunctionLibrary_GetWidgetFromName_Params params {};
		params.ParentUserWidget = ParentUserWidget;
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetParentOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWidget*                                     ChildWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UGBUIFunctionLibrary::GetParentOfClass(class UWidget* ChildWidget, class UClass* WidgetClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetParentOfClass");
		
		UGBUIFunctionLibrary_GetParentOfClass_Params params {};
		params.ChildWidget = ChildWidget;
		params.WidgetClass = WidgetClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetMouseSmoothing
	 * 		Flags  -> ()
	 */
	bool UGBUIFunctionLibrary::GetMouseSmoothing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetMouseSmoothing");
		
		UGBUIFunctionLibrary_GetMouseSmoothing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetMonitorNativeResolutions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FVector2D>                           OutMonitorResolutions                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool UGBUIFunctionLibrary::GetMonitorNativeResolutions(TArray<struct FVector2D>* OutMonitorResolutions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetMonitorNativeResolutions");
		
		UGBUIFunctionLibrary_GetMonitorNativeResolutions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutMonitorResolutions != nullptr)
			*OutMonitorResolutions = params.OutMonitorResolutions;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetMapScreenshots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Prefix                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGBUIFunctionLibrary::GetMapScreenshots(const class FString& Prefix, const class FString& MapName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetMapScreenshots");
		
		UGBUIFunctionLibrary_GetMapScreenshots_Params params {};
		params.Prefix = Prefix;
		params.MapName = MapName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetMapList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      GameModePrefix                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FMapListItem>                        OutMapList                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::GetMapList(const class FString& GameModePrefix, TArray<struct FMapListItem>* OutMapList)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetMapList");
		
		UGBUIFunctionLibrary_GetMapList_Params params {};
		params.GameModePrefix = GameModePrefix;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutMapList != nullptr)
			*OutMapList = params.OutMapList;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetMapInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutTitle                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutAuthor                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        OutDescription                                             (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UGBUIFunctionLibrary::GetMapInfo(const class FString& MapName, class FString* OutTitle, class FString* OutAuthor, class FText* OutDescription)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetMapInfo");
		
		UGBUIFunctionLibrary_GetMapInfo_Params params {};
		params.MapName = MapName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTitle != nullptr)
			*OutTitle = params.OutTitle;
		if (OutAuthor != nullptr)
			*OutAuthor = params.OutAuthor;
		if (OutDescription != nullptr)
			*OutDescription = params.OutDescription;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetInvertMouse
	 * 		Flags  -> ()
	 */
	bool UGBUIFunctionLibrary::GetInvertMouse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetInvertMouse");
		
		UGBUIFunctionLibrary_GetInvertMouse_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetInputBoundKeyDisplayName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FInputBoundKey                              TargetKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class FText UGBUIFunctionLibrary::GetInputBoundKeyDisplayName(const struct FInputBoundKey& TargetKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetInputBoundKeyDisplayName");
		
		UGBUIFunctionLibrary_GetInputBoundKeyDisplayName_Params params {};
		params.TargetKey = TargetKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetGameModeList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              OutGameModeDisplayNames                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::GetGameModeList(TArray<class FString>* OutGameModeDisplayNames)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetGameModeList");
		
		UGBUIFunctionLibrary_GetGameModeList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutGameModeDisplayNames != nullptr)
			*OutGameModeDisplayNames = params.OutGameModeDisplayNames;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetFirstWidgetOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               TopLevelOnly                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UGBUIFunctionLibrary::GetFirstWidgetOfClass(class UObject* WorldContextObject, class UClass* WidgetClass, bool TopLevelOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetFirstWidgetOfClass");
		
		UGBUIFunctionLibrary_GetFirstWidgetOfClass_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.WidgetClass = WidgetClass;
		params.TopLevelOnly = TopLevelOnly;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetFirstChildOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWidget*                                     ParentWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bImmediateOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UUserWidget* UGBUIFunctionLibrary::GetFirstChildOfClass(class UWidget* ParentWidget, class UClass* WidgetClass, bool bImmediateOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetFirstChildOfClass");
		
		UGBUIFunctionLibrary_GetFirstChildOfClass_Params params {};
		params.ParentWidget = ParentWidget;
		params.WidgetClass = WidgetClass;
		params.bImmediateOnly = bImmediateOnly;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetDoubleClickTime
	 * 		Flags  -> ()
	 */
	float UGBUIFunctionLibrary::GetDoubleClickTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetDoubleClickTime");
		
		UGBUIFunctionLibrary_GetDoubleClickTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetCommandBoundKeys
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Command                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FInputBoundKey> UGBUIFunctionLibrary::GetCommandBoundKeys(const class FName& Command)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetCommandBoundKeys");
		
		UGBUIFunctionLibrary_GetCommandBoundKeys_Params params {};
		params.Command = Command;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetCommandBoundKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Command                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FInputBoundKey UGBUIFunctionLibrary::GetCommandBoundKey(const class FName& Command)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetCommandBoundKey");
		
		UGBUIFunctionLibrary_GetCommandBoundKey_Params params {};
		params.Command = Command;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetChildrenOfClass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWidget*                                     ParentWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UUserWidget*>                         ChildWidgets                                               (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bImmediateOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::GetChildrenOfClass(class UWidget* ParentWidget, TArray<class UUserWidget*>* ChildWidgets, class UClass* WidgetClass, bool bImmediateOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetChildrenOfClass");
		
		UGBUIFunctionLibrary_GetChildrenOfClass_Params params {};
		params.ParentWidget = ParentWidget;
		params.WidgetClass = WidgetClass;
		params.bImmediateOnly = bImmediateOnly;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ChildWidgets != nullptr)
			*ChildWidgets = params.ChildWidgets;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.GetBoundKeyFromKeyEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FKeyEvent                                   KeyEvent                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	struct FInputBoundKey UGBUIFunctionLibrary::GetBoundKeyFromKeyEvent(const struct FKeyEvent& KeyEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.GetBoundKeyFromKeyEvent");
		
		UGBUIFunctionLibrary_GetBoundKeyFromKeyEvent_Params params {};
		params.KeyEvent = KeyEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.ForcePlayerInputUpdate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::ForcePlayerInputUpdate(class APlayerController* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.ForcePlayerInputUpdate");
		
		UGBUIFunctionLibrary_ForcePlayerInputUpdate_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.FindScreenEdgeLocationForWorldLocationAlt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTransform                                  ViewTM                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              FOV                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   ScreenSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     WorldLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EdgePercent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutScreenPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutRotationAngleDegrees                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsOnScreen                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::FindScreenEdgeLocationForWorldLocationAlt(const struct FTransform& ViewTM, float FOV, const struct FVector2D& ScreenSize, const struct FVector& WorldLocation, float EdgePercent, struct FVector2D* OutScreenPosition, float* OutRotationAngleDegrees, bool* bIsOnScreen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.FindScreenEdgeLocationForWorldLocationAlt");
		
		UGBUIFunctionLibrary_FindScreenEdgeLocationForWorldLocationAlt_Params params {};
		params.ViewTM = ViewTM;
		params.FOV = FOV;
		params.ScreenSize = ScreenSize;
		params.WorldLocation = WorldLocation;
		params.EdgePercent = EdgePercent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutScreenPosition != nullptr)
			*OutScreenPosition = params.OutScreenPosition;
		if (OutRotationAngleDegrees != nullptr)
			*OutRotationAngleDegrees = params.OutRotationAngleDegrees;
		if (bIsOnScreen != nullptr)
			*bIsOnScreen = params.bIsOnScreen;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.FindScreenEdgeLocationForWorldLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     InLocation                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EdgePercent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutScreenPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutRotationAngleDegrees                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsOnScreen                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::FindScreenEdgeLocationForWorldLocation(class UObject* WorldContextObject, const struct FVector& InLocation, float EdgePercent, struct FVector2D* OutScreenPosition, float* OutRotationAngleDegrees, bool* bIsOnScreen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.FindScreenEdgeLocationForWorldLocation");
		
		UGBUIFunctionLibrary_FindScreenEdgeLocationForWorldLocation_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.InLocation = InLocation;
		params.EdgePercent = EdgePercent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutScreenPosition != nullptr)
			*OutScreenPosition = params.OutScreenPosition;
		if (OutRotationAngleDegrees != nullptr)
			*OutRotationAngleDegrees = params.OutRotationAngleDegrees;
		if (bIsOnScreen != nullptr)
			*bIsOnScreen = params.bIsOnScreen;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.BreakGeometry
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGeometry                                   Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutPosition                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutAbsolutePosition                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   OutSize                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutScale                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::BreakGeometry(const struct FGeometry& Geometry, struct FVector2D* OutPosition, struct FVector2D* OutAbsolutePosition, struct FVector2D* OutSize, float* OutScale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.BreakGeometry");
		
		UGBUIFunctionLibrary_BreakGeometry_Params params {};
		params.Geometry = Geometry;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPosition != nullptr)
			*OutPosition = params.OutPosition;
		if (OutAbsolutePosition != nullptr)
			*OutAbsolutePosition = params.OutAbsolutePosition;
		if (OutSize != nullptr)
			*OutSize = params.OutSize;
		if (OutScale != nullptr)
			*OutScale = params.OutScale;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.BindExecToKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ExecCommand                                                (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInputBoundKey                              TargetKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::BindExecToKey(const class FString& ExecCommand, const struct FInputBoundKey& TargetKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.BindExecToKey");
		
		UGBUIFunctionLibrary_BindExecToKey_Params params {};
		params.ExecCommand = ExecCommand;
		params.TargetKey = TargetKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.BindAxisToKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        AxisName                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInputBoundKey                              TargetKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		float                                              Scale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::BindAxisToKey(const class FName& AxisName, const struct FInputBoundKey& TargetKey, float Scale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.BindAxisToKey");
		
		UGBUIFunctionLibrary_BindAxisToKey_Params params {};
		params.AxisName = AxisName;
		params.TargetKey = TargetKey;
		params.Scale = Scale;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUIFunctionLibrary.BindActionToKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInputBoundKey                              TargetKey                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UGBUIFunctionLibrary::BindActionToKey(const class FName& ActionName, const struct FInputBoundKey& TargetKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUIFunctionLibrary.BindActionToKey");
		
		UGBUIFunctionLibrary_BindActionToKey_Params params {};
		params.ActionName = ActionName;
		params.TargetKey = TargetKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBUIFunctionLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBUIFunctionLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBUIFunctionLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUseInterface.ServerUseWithParams
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUseInterface::ServerUseWithParams(class AController* Controller, const class FName& UseType, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUseInterface.ServerUseWithParams");
		
		UGBUseInterface_ServerUseWithParams_Params params {};
		params.Controller = Controller;
		params.UseType = UseType;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUseInterface.ServerUse
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUseInterface::ServerUse(class AController* Controller, const class FName& UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUseInterface.ServerUse");
		
		UGBUseInterface_ServerUse_Params params {};
		params.Controller = Controller;
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUseInterface.ClientUseWithParams
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUseInterface::ClientUseWithParams(class AController* Controller, const class FName& UseType, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUseInterface.ClientUseWithParams");
		
		UGBUseInterface_ClientUseWithParams_Params params {};
		params.Controller = Controller;
		params.UseType = UseType;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUseInterface.ClientUse
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUseInterface::ClientUse(class AController* Controller, const class FName& UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUseInterface.ClientUse");
		
		UGBUseInterface_ClientUse_Params params {};
		params.Controller = Controller;
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUseInterface.AIUseWithParams
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUseInterface::AIUseWithParams(class AController* Controller, const class FName& UseType, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUseInterface.AIUseWithParams");
		
		UGBUseInterface_AIUseWithParams_Params params {};
		params.Controller = Controller;
		params.UseType = UseType;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUseInterface.AIUse
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBUseInterface::AIUse(class AController* Controller, const class FName& UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUseInterface.AIUse");
		
		UGBUseInterface_AIUse_Params params {};
		params.Controller = Controller;
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUseInterface.AIQuestionWithParams
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Params                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UGBUseInterface::AIQuestionWithParams(class AController* Controller, const class FName& UseType, const class FString& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUseInterface.AIQuestionWithParams");
		
		UGBUseInterface_AIQuestionWithParams_Params params {};
		params.Controller = Controller;
		params.UseType = UseType;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBUseInterface.AIQuestion
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        UseType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UGBUseInterface::AIQuestion(class AController* Controller, const class FName& UseType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBUseInterface.AIQuestion");
		
		UGBUseInterface_AIQuestion_Params params {};
		params.Controller = Controller;
		params.UseType = UseType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBUseInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBUseInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBUseInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBVOIPAudioComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBVOIPAudioComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBVOIPAudioComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBVOIPManager.SetVOIPSwitchEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkComponent*                                AkComponent                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EVOIPType                                          VOIPType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBVOIPManager::SetVOIPSwitchEvent(class UAkComponent* AkComponent, EVOIPType VOIPType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBVOIPManager.SetVOIPSwitchEvent");
		
		UGBVOIPManager_SetVOIPSwitchEvent_Params params {};
		params.AkComponent = AkComponent;
		params.VOIPType = VOIPType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBVOIPManager.SetCharVoiceSwitchEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAkComponent*                                AkComponent                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsRadio                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsLocal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBVOIPManager::SetCharVoiceSwitchEvent(class UAkComponent* AkComponent, bool bIsRadio, bool bIsLocal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBVOIPManager.SetCharVoiceSwitchEvent");
		
		UGBVOIPManager_SetCharVoiceSwitchEvent_Params params {};
		params.AkComponent = AkComponent;
		params.bIsRadio = bIsRadio;
		params.bIsLocal = bIsLocal;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBVOIPManager.OnPlayerCharVoicePostEventCallback
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EAkCallbackType                                    CallbackType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkCallbackInfo*                             CallbackInfo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGBVOIPManager::OnPlayerCharVoicePostEventCallback(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBVOIPManager.OnPlayerCharVoicePostEventCallback");
		
		UGBVOIPManager_OnPlayerCharVoicePostEventCallback_Params params {};
		params.CallbackType = CallbackType;
		params.CallbackInfo = CallbackInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBVOIPManager.GetPlayerController
	 * 		Flags  -> ()
	 */
	class AGBPlayerController* UGBVOIPManager::GetPlayerController()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBVOIPManager.GetPlayerController");
		
		UGBVOIPManager_GetPlayerController_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UGBVOIPManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGBVOIPManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBVOIPManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBWaterVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBWaterVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBWaterVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBWeatherInfo.OnUpdateTransformEvent
	 * 		Flags  -> ()
	 */
	void AGBWeatherInfo::OnUpdateTransformEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBWeatherInfo.OnUpdateTransformEvent");
		
		AGBWeatherInfo_OnUpdateTransformEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBWeatherInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBWeatherInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBWeatherInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBWorldSettings.GetWorldSettings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AGBWorldSettings* AGBWorldSettings::GetWorldSettings(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBWorldSettings.GetWorldSettings");
		
		AGBWorldSettings_GetWorldSettings_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBWorldSettings.GetLevelSummary
	 * 		Flags  -> ()
	 */
	class UGBLevelSummary* AGBWorldSettings::GetLevelSummary()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBWorldSettings.GetLevelSummary");
		
		AGBWorldSettings_GetLevelSummary_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.GBWorldSettings.GetDefaultSpatialSoundTag
	 * 		Flags  -> ()
	 */
	class FName AGBWorldSettings::GetDefaultSpatialSoundTag()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.GBWorldSettings.GetDefaultSpatialSoundTag");
		
		AGBWorldSettings_GetDefaultSpatialSoundTag_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AGBWorldSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGBWorldSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.GBWorldSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.JoyColorWheel.SetColor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLinearColor                                NewColor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               SkipAnimation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UJoyColorWheel::SetColor(const struct FLinearColor& NewColor, bool SkipAnimation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.JoyColorWheel.SetColor");
		
		UJoyColorWheel_SetColor_Params params {};
		params.NewColor = NewColor;
		params.SkipAnimation = SkipAnimation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.JoyColorWheel.GetColor
	 * 		Flags  -> ()
	 */
	struct FLinearColor UJoyColorWheel::GetColor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.JoyColorWheel.GetColor");
		
		UJoyColorWheel_GetColor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UJoyColorWheel.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UJoyColorWheel::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.JoyColorWheel");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.VectorRadiansToDegrees
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     RadVector                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTKMathFunctionLibrary::VectorRadiansToDegrees(const struct FVector& RadVector)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.VectorRadiansToDegrees");
		
		UTKMathFunctionLibrary_VectorRadiansToDegrees_Params params {};
		params.RadVector = RadVector;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.VectorDegreesToRadians
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     DegVector                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTKMathFunctionLibrary::VectorDegreesToRadians(const struct FVector& DegVector)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.VectorDegreesToRadians");
		
		UTKMathFunctionLibrary_VectorDegreesToRadians_Params params {};
		params.DegVector = DegVector;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.SphereBoxIntersection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     SphereOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              SphereRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     BoxOrigin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     BoxExtent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::SphereBoxIntersection(const struct FVector& SphereOrigin, float SphereRadius, const struct FVector& BoxOrigin, const struct FVector& BoxExtent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.SphereBoxIntersection");
		
		UTKMathFunctionLibrary_SphereBoxIntersection_Params params {};
		params.SphereOrigin = SphereOrigin;
		params.SphereRadius = SphereRadius;
		params.BoxOrigin = BoxOrigin;
		params.BoxExtent = BoxExtent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.SignedDistancePlanePoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     PlaneNormal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     PlanePoint                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTKMathFunctionLibrary::SignedDistancePlanePoint(const struct FVector& PlaneNormal, const struct FVector& PlanePoint, const struct FVector& Point)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.SignedDistancePlanePoint");
		
		UTKMathFunctionLibrary_SignedDistancePlanePoint_Params params {};
		params.PlaneNormal = PlaneNormal;
		params.PlanePoint = PlanePoint;
		params.Point = Point;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.SetVectorLength
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTKMathFunctionLibrary::SetVectorLength(const struct FVector& A, float Size)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.SetVectorLength");
		
		UTKMathFunctionLibrary_SetVectorLength_Params params {};
		params.A = A;
		params.Size = Size;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.SetCenterOfMassOffset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         Target                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTKMathFunctionLibrary::SetCenterOfMassOffset(class UPrimitiveComponent* Target, const struct FVector& Offset, const class FName& BoneName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.SetCenterOfMassOffset");
		
		UTKMathFunctionLibrary_SetCenterOfMassOffset_Params params {};
		params.Target = Target;
		params.Offset = Offset;
		params.BoneName = BoneName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.RoundToUpperMultiple
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Multiple                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               skipSelf                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UTKMathFunctionLibrary::RoundToUpperMultiple(int32_t A, int32_t Multiple, bool skipSelf)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.RoundToUpperMultiple");
		
		UTKMathFunctionLibrary_RoundToUpperMultiple_Params params {};
		params.A = A;
		params.Multiple = Multiple;
		params.skipSelf = skipSelf;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.RoundToNearestMultiple
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Multiple                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UTKMathFunctionLibrary::RoundToNearestMultiple(int32_t A, int32_t Multiple)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.RoundToNearestMultiple");
		
		UTKMathFunctionLibrary_RoundToNearestMultiple_Params params {};
		params.A = A;
		params.Multiple = Multiple;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.RoundToLowerMultiple
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Multiple                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               skipSelf                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UTKMathFunctionLibrary::RoundToLowerMultiple(int32_t A, int32_t Multiple, bool skipSelf)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.RoundToLowerMultiple");
		
		UTKMathFunctionLibrary_RoundToLowerMultiple_Params params {};
		params.A = A;
		params.Multiple = Multiple;
		params.skipSelf = skipSelf;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.ProjectPointOnLine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     LineOrigin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineDirection                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTKMathFunctionLibrary::ProjectPointOnLine(const struct FVector& LineOrigin, const struct FVector& LineDirection, const struct FVector& Point)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.ProjectPointOnLine");
		
		UTKMathFunctionLibrary_ProjectPointOnLine_Params params {};
		params.LineOrigin = LineOrigin;
		params.LineDirection = LineDirection;
		params.Point = Point;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.PointOnWhichSideOfLineSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     LinePoint1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LinePoint2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UTKMathFunctionLibrary::PointOnWhichSideOfLineSegment(const struct FVector& LinePoint1, const struct FVector& LinePoint2, const struct FVector& Point)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.PointOnWhichSideOfLineSegment");
		
		UTKMathFunctionLibrary_PointOnWhichSideOfLineSegment_Params params {};
		params.LinePoint1 = LinePoint1;
		params.LinePoint2 = LinePoint2;
		params.Point = Point;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.NegateVector2D
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector2D UTKMathFunctionLibrary::NegateVector2D(const struct FVector2D& A)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.NegateVector2D");
		
		UTKMathFunctionLibrary_NegateVector2D_Params params {};
		params.A = A;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.NegateInt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t UTKMathFunctionLibrary::NegateInt(int32_t A)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.NegateInt");
		
		UTKMathFunctionLibrary_NegateInt_Params params {};
		params.A = A;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.NegateFloat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTKMathFunctionLibrary::NegateFloat(float A)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.NegateFloat");
		
		UTKMathFunctionLibrary_NegateFloat_Params params {};
		params.A = A;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.LineToLineIntersection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     IntersectionPoint                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LinePoint1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineDir1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LinePoint2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineDir2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::LineToLineIntersection(struct FVector* IntersectionPoint, const struct FVector& LinePoint1, const struct FVector& LineDir1, const struct FVector& LinePoint2, const struct FVector& LineDir2)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.LineToLineIntersection");
		
		UTKMathFunctionLibrary_LineToLineIntersection_Params params {};
		params.LinePoint1 = LinePoint1;
		params.LineDir1 = LineDir1;
		params.LinePoint2 = LinePoint2;
		params.LineDir2 = LineDir2;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (IntersectionPoint != nullptr)
			*IntersectionPoint = params.IntersectionPoint;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.LineExtentBoxIntersection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FBox                                        InBox                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Start                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     End                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Extent                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitLocation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitNormal                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HitTime                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::LineExtentBoxIntersection(const struct FBox& InBox, const struct FVector& Start, const struct FVector& End, const struct FVector& Extent, struct FVector* HitLocation, struct FVector* HitNormal, float* HitTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.LineExtentBoxIntersection");
		
		UTKMathFunctionLibrary_LineExtentBoxIntersection_Params params {};
		params.InBox = InBox;
		params.Start = Start;
		params.End = End;
		params.Extent = Extent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (HitLocation != nullptr)
			*HitLocation = params.HitLocation;
		if (HitNormal != nullptr)
			*HitNormal = params.HitNormal;
		if (HitTime != nullptr)
			*HitTime = params.HitTime;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.IsPowerOfTwo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            X                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::IsPowerOfTwo(int32_t X)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.IsPowerOfTwo");
		
		UTKMathFunctionLibrary_IsPowerOfTwo_Params params {};
		params.X = X;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.IsPointInsideBox
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     BoxOrigin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     BoxExtent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::IsPointInsideBox(const struct FVector& Point, const struct FVector& BoxOrigin, const struct FVector& BoxExtent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.IsPointInsideBox");
		
		UTKMathFunctionLibrary_IsPointInsideBox_Params params {};
		params.Point = Point;
		params.BoxOrigin = BoxOrigin;
		params.BoxExtent = BoxExtent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.IsMultipleOf
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Multiple                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::IsMultipleOf(int32_t A, int32_t Multiple)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.IsMultipleOf");
		
		UTKMathFunctionLibrary_IsMultipleOf_Params params {};
		params.A = A;
		params.Multiple = Multiple;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.IsLineInsideSphere
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     LineStart                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineDir                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LineLength                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     SphereOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              SphereRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::IsLineInsideSphere(const struct FVector& LineStart, const struct FVector& LineDir, float LineLength, const struct FVector& SphereOrigin, float SphereRadius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.IsLineInsideSphere");
		
		UTKMathFunctionLibrary_IsLineInsideSphere_Params params {};
		params.LineStart = LineStart;
		params.LineDir = LineDir;
		params.LineLength = LineLength;
		params.SphereOrigin = SphereOrigin;
		params.SphereRadius = SphereRadius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.IsEvenNumber
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::IsEvenNumber(float A)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.IsEvenNumber");
		
		UTKMathFunctionLibrary_IsEvenNumber_Params params {};
		params.A = A;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.GridSnap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Grid                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTKMathFunctionLibrary::GridSnap(const struct FVector& A, float Grid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.GridSnap");
		
		UTKMathFunctionLibrary_GridSnap_Params params {};
		params.A = A;
		params.Grid = Grid;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.GetVelocityAtPoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         Target                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               DrawDebugInfo                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTKMathFunctionLibrary::GetVelocityAtPoint(class UPrimitiveComponent* Target, const struct FVector& Point, const class FName& BoneName, bool DrawDebugInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.GetVelocityAtPoint");
		
		UTKMathFunctionLibrary_GetVelocityAtPoint_Params params {};
		params.Target = Target;
		params.Point = Point;
		params.BoneName = BoneName;
		params.DrawDebugInfo = DrawDebugInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.ConvertPhysicsLinearVelocity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Velocity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESpeedUnit                                         SpeedUnit                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTKMathFunctionLibrary::ConvertPhysicsLinearVelocity(const struct FVector& Velocity, ESpeedUnit SpeedUnit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.ConvertPhysicsLinearVelocity");
		
		UTKMathFunctionLibrary_ConvertPhysicsLinearVelocity_Params params {};
		params.Velocity = Velocity;
		params.SpeedUnit = SpeedUnit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.ConvertAnchorToAnchor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAnchors                                    CurrentAnchor                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FMargin                                     Offsets                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FAnchors                                    TargetAnchor                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FMargin                                     ConvertedOffsets                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTKMathFunctionLibrary::ConvertAnchorToAnchor(class UObject* WorldContextObject, const struct FAnchors& CurrentAnchor, const struct FMargin& Offsets, const struct FAnchors& TargetAnchor, struct FMargin* ConvertedOffsets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.ConvertAnchorToAnchor");
		
		UTKMathFunctionLibrary_ConvertAnchorToAnchor_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.CurrentAnchor = CurrentAnchor;
		params.Offsets = Offsets;
		params.TargetAnchor = TargetAnchor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ConvertedOffsets != nullptr)
			*ConvertedOffsets = params.ConvertedOffsets;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.ClosestPointsOnTwoLines
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     closestPointLine1                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     closestPointLine2                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LinePoint1                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     lineVec1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LinePoint2                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     lineVec2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::ClosestPointsOnTwoLines(struct FVector* closestPointLine1, struct FVector* closestPointLine2, const struct FVector& LinePoint1, const struct FVector& lineVec1, const struct FVector& LinePoint2, const struct FVector& lineVec2)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.ClosestPointsOnTwoLines");
		
		UTKMathFunctionLibrary_ClosestPointsOnTwoLines_Params params {};
		params.LinePoint1 = LinePoint1;
		params.lineVec1 = lineVec1;
		params.LinePoint2 = LinePoint2;
		params.lineVec2 = lineVec2;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (closestPointLine1 != nullptr)
			*closestPointLine1 = params.closestPointLine1;
		if (closestPointLine2 != nullptr)
			*closestPointLine2 = params.closestPointLine2;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.ClosestPointsOfLineSegments
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Line1Start                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Line1End                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Line2Start                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Line2End                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LinePoint1                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LinePoint2                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTKMathFunctionLibrary::ClosestPointsOfLineSegments(const struct FVector& Line1Start, const struct FVector& Line1End, const struct FVector& Line2Start, const struct FVector& Line2End, struct FVector* LinePoint1, struct FVector* LinePoint2)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.ClosestPointsOfLineSegments");
		
		UTKMathFunctionLibrary_ClosestPointsOfLineSegments_Params params {};
		params.Line1Start = Line1Start;
		params.Line1End = Line1End;
		params.Line2Start = Line2Start;
		params.Line2End = Line2End;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (LinePoint1 != nullptr)
			*LinePoint1 = params.LinePoint1;
		if (LinePoint2 != nullptr)
			*LinePoint2 = params.LinePoint2;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.ClosestPointOnSphereToLine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     SphereOrigin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              SphereRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineOrigin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineDir                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTKMathFunctionLibrary::ClosestPointOnSphereToLine(const struct FVector& SphereOrigin, float SphereRadius, const struct FVector& LineOrigin, const struct FVector& LineDir)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.ClosestPointOnSphereToLine");
		
		UTKMathFunctionLibrary_ClosestPointOnSphereToLine_Params params {};
		params.SphereOrigin = SphereOrigin;
		params.SphereRadius = SphereRadius;
		params.LineOrigin = LineOrigin;
		params.LineDir = LineDir;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.ClosestPointOnLineSeqment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     Point                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineStart                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTKMathFunctionLibrary::ClosestPointOnLineSeqment(const struct FVector& Point, const struct FVector& LineStart, const struct FVector& LineEnd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.ClosestPointOnLineSeqment");
		
		UTKMathFunctionLibrary_ClosestPointOnLineSeqment_Params params {};
		params.Point = Point;
		params.LineStart = LineStart;
		params.LineEnd = LineEnd;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function GroundBranch.TKMathFunctionLibrary.AreLineSegmentsCrossing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     pointA1                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     pointA2                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     pointB1                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     pointB2                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTKMathFunctionLibrary::AreLineSegmentsCrossing(const struct FVector& pointA1, const struct FVector& pointA2, const struct FVector& pointB1, const struct FVector& pointB2)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function GroundBranch.TKMathFunctionLibrary.AreLineSegmentsCrossing");
		
		UTKMathFunctionLibrary_AreLineSegmentsCrossing_Params params {};
		params.pointA1 = pointA1;
		params.pointA2 = pointA2;
		params.pointB1 = pointB1;
		params.pointB2 = pointB2;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UTKMathFunctionLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTKMathFunctionLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class GroundBranch.TKMathFunctionLibrary");
		return ptr;
	}

}


