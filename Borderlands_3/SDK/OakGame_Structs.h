#pragma once

/**
 * Name: Borderlands_3
 * Version: 4.20.3
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Enums
	// --------------------------------------------------
	/**
	 * Enum OakGame.EExitDownStateReason
	 */
	enum class EExitDownStateReason : uint8_t
	{
		ExitDownStateReason_None         = 0,
		ExitDownStateReason_Revived      = 1,
		ExitDownStateReason_SecondWind   = 2,
		ExitDownStateReason_TimerExpired = 3,
		ExitDownStateReason_Interrupted  = 4,
		ExitDownStateReason_Instant      = 5,
		ExitDownStateReason_Custom       = 6,
		ExitDownStateReason_MAX          = 7
	};

	/**
	 * Enum OakGame.EDownState
	 */
	enum class EDownState : uint8_t
	{
		DownState_Healthy         = 0,
		DownState_Down            = 1,
		DownState_DownAndExerting = 2,
		DownState_Resurrecting    = 3,
		DownState_GivingUp        = 4,
		DownState_MAX             = 5
	};

	/**
	 * Enum OakGame.EReviveState
	 */
	enum class EReviveState : uint8_t
	{
		ReviveState_None         = 0,
		ReviveState_BeingRevived = 1,
		ReviveState_Reviving     = 2,
		ReviveState_MAX          = 3
	};

	/**
	 * Enum OakGame.EOakElementalType
	 */
	enum class EOakElementalType : uint8_t
	{
		None      = 0,
		Corrosive = 1,
		Cryo      = 2,
		Fire      = 3,
		Shock     = 4,
		Radiation = 5,
		MAX       = 6
	};

	/**
	 * Enum OakGame.EKilledEnemyFriendEventType
	 */
	enum class EKilledEnemyFriendEventType : uint8_t
	{
		None       = 0,
		Enemy      = 1,
		NamedEnemy = 2,
		Boss       = 3,
		MAX        = 4
	};

	/**
	 * Enum OakGame.EMatchmakingState
	 */
	enum class EMatchmakingState : uint8_t
	{
		Idle              = 0,
		PreparingToSearch = 1,
		Searching         = 2,
		ConfirmingPlayers = 3,
		StartingGameplay  = 4,
		Canceling         = 5,
		MAX               = 6
	};

	/**
	 * Enum OakGame.EBossbarEventType
	 */
	enum class EBossbarEventType : uint8_t
	{
		Intro_Event                = 0,
		Enable_Invulnerable_Event  = 1,
		Disable_Invulnerable_Event = 2,
		Shake_Event                = 3,
		Destroy_Event              = 4,
		NONE                       = 5,
		MAX                        = 6
	};

	/**
	 * Enum OakGame.EOakLeague
	 */
	enum class EOakLeague : uint8_t
	{
		OL_None          = 0,
		OL_BloodyHarvest = 1,
		OL_ValentinesDay = 2,
		OL_TheCartels    = 3,
		OL_SummerOfGreed = 4,
		OL_MAX           = 5
	};

	/**
	 * Enum OakGame.EEffectivePlayerCountSetting
	 */
	enum class EEffectivePlayerCountSetting : uint8_t
	{
		GameForced    = 0,
		UserRequested = 1,
		Actual        = 2,
		MAX           = 3
	};

	/**
	 * Enum OakGame.EOakGameStateUIGroupMode
	 */
	enum class EOakGameStateUIGroupMode : uint8_t
	{
		Unknown     = 0,
		Cooperation = 1,
		Coopetition = 2,
		MAX         = 3
	};

	/**
	 * Enum OakGame.EMultiplayerLootMode
	 */
	enum class EMultiplayerLootMode : uint8_t
	{
		Standard  = 0,
		Instanced = 1,
		MAX       = 2
	};

	/**
	 * Enum OakGame.ENewGameState
	 */
	enum class ENewGameState : uint8_t
	{
		None                  = 0,
		IntroMovie            = 1,
		CharacterSelect       = 2,
		WaitingForPlayerPawns = 3,
		MAX                   = 4
	};

	/**
	 * Enum OakGame.EPlayerExperienceType
	 */
	enum class EPlayerExperienceType : uint8_t
	{
		Generic = 0,
		Combat  = 1,
		Mission = 2,
		MAX     = 3
	};

	/**
	 * Enum OakGame.EPlayerExperienceSource
	 */
	enum class EPlayerExperienceSource : uint8_t
	{
		XPUnknown        = 0,
		XPCombat         = 1,
		PlotMissionAward = 2,
		Discovery        = 3,
		SideMissionAward = 4,
		SaveGame         = 5,
		MAX              = 6
	};

	/**
	 * Enum OakGame.ECommandRingLocationType
	 */
	enum class ECommandRingLocationType : uint8_t
	{
		Default = 0,
		Ground  = 1,
		Feet    = 2,
		MAX     = 3
	};

	/**
	 * Enum OakGame.ECommandRingAlignmentType
	 */
	enum class ECommandRingAlignmentType : uint8_t
	{
		Default      = 0,
		SurfaceWorld = 1,
		SurfaceView  = 2,
		View         = 3,
		View2D       = 4,
		Actor        = 5,
		MAX          = 6
	};

	/**
	 * Enum OakGame.ECommandRingReferenceActorType
	 */
	enum class ECommandRingReferenceActorType : uint8_t
	{
		Target = 0,
		Owner  = 1,
		Custom = 2,
		MAX    = 3
	};

	/**
	 * Enum OakGame.EOakStatusEffectResourceEffectType
	 */
	enum class EOakStatusEffectResourceEffectType : uint8_t
	{
		Cryo = 0,
		MAX  = 1
	};

	/**
	 * Enum OakGame.EHealthAdded
	 */
	enum class EHealthAdded : uint8_t
	{
		Success = 0,
		Falure  = 1,
		MAX     = 2
	};

	/**
	 * Enum OakGame.EValidIndex
	 */
	enum class EValidIndex : uint8_t
	{
		Valid   = 0,
		Invalid = 1,
		MAX     = 2
	};

	/**
	 * Enum OakGame.EHealthState
	 */
	enum class EHealthState : uint8_t
	{
		Healthy = 0,
		Low     = 1,
		VeryLow = 2,
		Injured = 3,
		Dead    = 4,
		MAX     = 5
	};

	/**
	 * Enum OakGame.EWeaponActionChannel
	 */
	enum class EWeaponActionChannel : uint8_t
	{
		Use    = 0,
		Zoom   = 1,
		Reload = 2,
		Other  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EZoomEventType
	 */
	enum class EZoomEventType : uint8_t
	{
		None       = 0,
		ZoomingIn  = 1,
		ZoomingOut = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EDeathType
	 */
	enum class EDeathType : uint8_t
	{
		None                 = 0,
		HealthDepleted       = 1,
		Suicide              = 2,
		ScriptedInstantDeath = 3,
		FellOutOfWorld       = 4,
		Ragdoll              = 5,
		MAX                  = 6
	};

	/**
	 * Enum OakGame.EOakGender
	 */
	enum class EOakGender : uint8_t
	{
		Male   = 0,
		Female = 1,
		Random = 2,
		MAX    = 3
	};

	/**
	 * Enum OakGame.EWeaponHolsteredSizeType
	 */
	enum class EWeaponHolsteredSizeType : uint8_t
	{
		Small      = 0,
		Medium     = 1,
		Large      = 2,
		ExtraLarge = 3,
		MAX        = 4
	};

	/**
	 * Enum OakGame.ETargetedNameplateType
	 */
	enum class ETargetedNameplateType : uint8_t
	{
		Standard = 0,
		NPC      = 1,
		Boss     = 2,
		None     = 3,
		MAX      = 4
	};

	/**
	 * Enum OakGame.EA9KSawState
	 */
	enum class EA9KSawState : uint8_t
	{
		NotStarted             = 0,
		Cooldown               = 1,
		PickTarget             = 2,
		TryToReachTarget       = 3,
		ReachedTarget          = 4,
		EquipSaw               = 5,
		WaitForQuipAnimDone    = 6,
		Anticipation           = 7,
		PrepareToShootAndShoot = 8,
		WaitForBPCallback      = 9,
		FollowingTarget        = 10,
		Resting                = 11,
		MAX                    = 12
	};

	/**
	 * Enum OakGame.EVaultRewardType
	 */
	enum class EVaultRewardType : uint8_t
	{
		None              = 0,
		EridianAnalyser   = 1,
		EridianResonator  = 2,
		ArtifactSlot      = 3,
		EridianFabricator = 4,
		MayhemMode        = 5,
		MAX               = 6
	};

	/**
	 * Enum OakGame.ETrackedIconOwner
	 */
	enum class ETrackedIconOwner : uint8_t
	{
		Unknown            = 0,
		Released           = 1,
		Minimap_Clamped    = 2,
		Minimap_Interior3D = 3,
		InWorldContainer   = 4,
		MAX                = 5
	};

	/**
	 * Enum OakGame.EAnointedDeathState
	 */
	enum class EAnointedDeathState : uint8_t
	{
		PreFreeze     = 0,
		Freezing      = 1,
		Frozen        = 2,
		ShatterKilled = 3,
		TimedOut      = 4,
		MAX           = 5
	};

	/**
	 * Enum OakGame.EVehicleDeathType
	 */
	enum class EVehicleDeathType : uint8_t
	{
		None           = 0,
		HealthDepleted = 1,
		FellOutOfWorld = 2,
		DigistuctOut   = 3,
		InstantDeath   = 4,
		MAX            = 5
	};

	/**
	 * Enum OakGame.EClearInputFilter
	 */
	enum class EClearInputFilter : uint8_t
	{
		ClearWeapons        = 0,
		ClearInputComponent = 1,
		DisableHover        = 2,
		ClearAll            = 3,
		MAX                 = 4
	};

	/**
	 * Enum OakGame.ENavPainterLayer
	 */
	enum class ENavPainterLayer : uint8_t
	{
		Default  = 0,
		Driver   = 1,
		Scripted = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EVehicleEffectEvent
	 */
	enum class EVehicleEffectEvent : uint8_t
	{
		None                      = 0,
		Boost                     = 1,
		BoostChargeCountChanged   = 2,
		BoostPoolEmpty            = 3,
		BoostPoolFull             = 4,
		StartEngine               = 5,
		Braking                   = 6,
		Hover                     = 7,
		Horn                      = 8,
		Digithrust                = 9,
		ShieldBreak               = 10,
		ShieldHealthEvent_Normal  = 11,
		ShieldHealthEvent_Low     = 12,
		ShieldHealthEvent_VeryLow = 13,
		ShieldFullHealth          = 14,
		Backfire                  = 15,
		MaxRPMBackfire            = 16,
		HealthEvent_Healthy       = 17,
		HealthEvent_Low           = 18,
		HealthEvent_VeryLow       = 19,
		HealthEvent_Dead          = 20,
		StatusEffect_CryoFrozen   = 21,
		StatusEffect_CryoThawing  = 22,
		StatusEffect_Cryo         = 23,
		StatusEffect_Corrosive    = 24,
		StatusEffect_Shock        = 25,
		StatusEffect_Fire         = 26,
		StatusEffect_Radiation    = 27,
		MAX                       = 28
	};

	/**
	 * Enum OakGame.ENavCorrectionSetting
	 */
	enum class ENavCorrectionSetting : uint8_t
	{
		Default  = 0,
		Enabled  = 1,
		Disabled = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EVehicleHealthState
	 */
	enum class EVehicleHealthState : uint8_t
	{
		Healthy = 0,
		Low     = 1,
		VeryLow = 2,
		Dead    = 3,
		MAX     = 4
	};

	/**
	 * Enum OakGame.EIronBearExitReason
	 */
	enum class EIronBearExitReason : uint8_t
	{
		Undefined          = 0,
		ActionSkillStopped = 1,
		ManualExit         = 2,
		Died               = 3,
		FellOutOfWorld     = 4,
		EmergencyExit      = 5,
		MAX                = 6
	};

	/**
	 * Enum OakGame.EIronBearHardPointOrientation
	 */
	enum class EIronBearHardPointOrientation : uint8_t
	{
		None  = 0,
		Left  = 1,
		Right = 2,
		MAX   = 3
	};

	/**
	 * Enum OakGame.EIronBearCoreType
	 */
	enum class EIronBearCoreType : uint8_t
	{
		None                   = 0,
		GundamBear             = 1,
		StrengthThroughBalance = 2,
		GunnersNest            = 3,
		SurpriseforYou         = 4,
		VeryIronBear           = 5,
		HighVoltage            = 6,
		IronCub                = 7,
		MAX                    = 8
	};

	/**
	 * Enum OakGame.EIronBearDamageLevel
	 */
	enum class EIronBearDamageLevel : uint8_t
	{
		None     = 0,
		Light    = 1,
		Moderate = 2,
		Heavy    = 3,
		MAX      = 4
	};

	/**
	 * Enum OakGame.EIronBearSpawnStyle
	 */
	enum class EIronBearSpawnStyle : uint8_t
	{
		Full  = 0,
		Quick = 1,
		MAX   = 2
	};

	/**
	 * Enum OakGame.EJumpType
	 */
	enum class EJumpType : uint8_t
	{
		None             = 0,
		Default          = 1,
		Sprint           = 2,
		Slide            = 3,
		UpwardLadderJump = 4,
		MAX              = 5
	};

	/**
	 * Enum OakGame.EGameModeNotificationType
	 */
	enum class EGameModeNotificationType : uint8_t
	{
		None                       = 0,
		Raid_RaidSurvived          = 1,
		Raid_TeleporterActivated   = 2,
		Raid_Defeat                = 3,
		Raid_PlayerIsOut           = 4,
		Raid_Start                 = 5,
		Raid_CountDown             = 6,
		COS_Victory                = 7,
		COS_Defeat                 = 8,
		COS_Wave                   = 9,
		COS_NotAllPlayersAssembled = 10,
		GearUp_Victory             = 11,
		GearUp_Defeat              = 12,
		GearUp_Respawn             = 13,
		GearUp_Start               = 14,
		GearUp_Countdown           = 15,
		GearUp_SupplyDrop          = 16,
		GearUp_CircleClosing       = 17,
		GearUp_NewCircle           = 18,
		Off                        = 19,
		MAX                        = 20
	};

	/**
	 * Enum OakGame.EDeathCircleStatus
	 */
	enum class EDeathCircleStatus : uint8_t
	{
		DCS_None          = 0,
		DCS_Stable        = 1,
		DCS_Transitioning = 2,
		DCS_Complete      = 3,
		DCS_MAX           = 4
	};

	/**
	 * Enum OakGame.EOakReticleFeedbackGameEvent
	 */
	enum class EOakReticleFeedbackGameEvent : uint8_t
	{
		None         = 0,
		DamageCaused = 1,
		DeathCaused  = 2,
		MAX          = 3
	};

	/**
	 * Enum OakGame.ECanReRollInventoryResult
	 */
	enum class ECanReRollInventoryResult : uint8_t
	{
		Yes        = 0,
		CantAfford = 1,
		No         = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EPOIActivationResult
	 */
	enum class EPOIActivationResult : uint8_t
	{
		Success                    = 0,
		Failure_Generic            = 1,
		Failure_PlayerInMenu       = 2,
		Failure_AllyDown           = 3,
		Failure_FastTravelDisabled = 4,
		Failure_PlayerInVehicle    = 5,
		Failure_ClientJoining      = 6,
		Failure_PlayerDueling      = 7,
		Failure_PhotoModeActive    = 8,
		MAX                        = 9
	};

	/**
	 * Enum OakGame.EKickReason
	 */
	enum class EKickReason : uint8_t
	{
		None                = 0,
		Kicked              = 1,
		Invite              = 2,
		QuitGame            = 3,
		SessionEnd          = 4,
		TitleScreen         = 5,
		IncompatibleMission = 6,
		MAX                 = 7
	};

	/**
	 * Enum OakGame.EInventoryListType
	 */
	enum class EInventoryListType : uint8_t
	{
		IL_Primary  = 0,
		IL_Bank     = 1,
		IL_LostLoot = 2,
		IL_GearUp   = 3,
		IL_MAX      = 4
	};

	/**
	 * Enum OakGame.EPlayerDifficultySetting
	 */
	enum class EPlayerDifficultySetting : uint8_t
	{
		Normal    = 0,
		StoryMode = 1,
		MAX       = 2
	};

	/**
	 * Enum OakGame.ELateJoinState
	 */
	enum class ELateJoinState : uint8_t
	{
		NotLateJoining     = 0,
		SelectingCharacter = 1,
		ApplyingSaveGame   = 2,
		MAX                = 3
	};

	/**
	 * Enum OakGame.ETradeRequestReceptionType
	 */
	enum class ETradeRequestReceptionType : uint8_t
	{
		All         = 0,
		FriendsOnly = 1,
		Off         = 2,
		MAX         = 3
	};

	/**
	 * Enum OakGame.EHyperHoopState
	 */
	enum class EHyperHoopState : uint8_t
	{
		Invalid       = 0,
		NotStarted    = 1,
		AttachingPawn = 2,
		Accelerating  = 3,
		Moving        = 4,
		Deccelerating = 5,
		DetachingPawn = 6,
		MAX           = 7
	};

	/**
	 * Enum OakGame.EVendingMachineBuyType
	 */
	enum class EVendingMachineBuyType : uint8_t
	{
		Regular          = 0,
		BuyBack          = 1,
		GearSoldByFriend = 2,
		ItemOfTheDay     = 3,
		MAX              = 4
	};

	/**
	 * Enum OakGame.EVendingMachineScrollDirection
	 */
	enum class EVendingMachineScrollDirection : uint8_t
	{
		Forward  = 0,
		Backward = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.EGrenadeThrowFailureReason
	 */
	enum class EGrenadeThrowFailureReason : uint8_t
	{
		UnknownError     = 0,
		ActionsLocked    = 1,
		NotHealthy       = 2,
		InternalCooldown = 3,
		NotEnoughAmmo    = 4,
		MAX              = 5
	};

	/**
	 * Enum OakGame.EDuelClassification
	 */
	enum class EDuelClassification : uint8_t
	{
		Standard1v1 = 0,
		FreeForAll  = 1,
		MAX         = 2
	};

	/**
	 * Enum OakGame.EDuelLoseReason
	 */
	enum class EDuelLoseReason : uint8_t
	{
		None         = 0,
		PlayerKilled = 1,
		PlayerQuit   = 2,
		OutOfBounds  = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EVehicleImpactForce
	 */
	enum class EVehicleImpactForce : uint8_t
	{
		Unknown   = 0,
		Grinding  = 1,
		VerySmall = 2,
		Small     = 3,
		Medium    = 4,
		Heavy     = 5,
		Count     = 6,
		MAX       = 7
	};

	/**
	 * Enum OakGame.EEffectStateType
	 */
	enum class EEffectStateType : uint8_t
	{
		Play  = 0,
		Stop  = 1,
		Count = 2,
		MAX   = 3
	};

	/**
	 * Enum OakGame.EFreezeType
	 */
	enum class EFreezeType : uint8_t
	{
		Cryo     = 0,
		Anointed = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.EShieldEffectState
	 */
	enum class EShieldEffectState : uint8_t
	{
		Full     = 0,
		Damaged  = 1,
		Depleted = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EFreezeState
	 */
	enum class EFreezeState : uint8_t
	{
		None     = 0,
		Freezing = 1,
		Frozen   = 2,
		Thawing  = 3,
		MAX      = 4
	};

	/**
	 * Enum OakGame.EOakUIInventoryItemUseType
	 */
	enum class EOakUIInventoryItemUseType : uint8_t
	{
		Unknown            = 0,
		EquippableInternal = 1,
		UsableInternal     = 2,
		MAX                = 3
	};

	/**
	 * Enum OakGame.EInteractiveObjectInteractiveState
	 */
	enum class EInteractiveObjectInteractiveState : uint8_t
	{
		None           = 0,
		Interactive    = 1,
		NonInteractive = 2,
		Uninitialized  = 3,
		MAX            = 4
	};

	/**
	 * Enum OakGame.EInteractiveObjectLockState
	 */
	enum class EInteractiveObjectLockState : uint8_t
	{
		None          = 0,
		Unlocked      = 1,
		Locked        = 2,
		Uninitialized = 3,
		MAX           = 4
	};

	/**
	 * Enum OakGame.EInteractiveObjectState
	 */
	enum class EInteractiveObjectState : uint8_t
	{
		None          = 0,
		Enabling      = 1,
		Enabled       = 2,
		Disabling     = 3,
		Disabled      = 4,
		Locked        = 5,
		Uninitialized = 6,
		MAX           = 7
	};

	/**
	 * Enum OakGame.EPlayerAlertType
	 */
	enum class EPlayerAlertType : uint8_t
	{
		Location = 0,
		Neutral  = 1,
		Friendly = 2,
		Hostile  = 3,
		Loot     = 4,
		Chest    = 5,
		Max      = 6
	};

	/**
	 * Enum OakGame.EInteractiveObjectTrapActivationType
	 */
	enum class EInteractiveObjectTrapActivationType : uint8_t
	{
		ActivateTrap   = 0,
		DeactivateTrap = 1,
		MAX            = 2
	};

	/**
	 * Enum OakGame.EManagedWidgetType
	 */
	enum class EManagedWidgetType : uint8_t
	{
		Basic                  = 0,
		OnlineMessageAnimation = 1,
		MAX                    = 2
	};

	/**
	 * Enum OakGame.EZoneMapChallengeStatus
	 */
	enum class EZoneMapChallengeStatus : uint8_t
	{
		ZMC_AvailableChallenge = 0,
		ZMC_CompletedChallenge = 1,
		ZMC_Unknown            = 2,
		ZMC_MAX                = 3
	};

	/**
	 * Enum OakGame.EZoneMapMissionStatus
	 */
	enum class EZoneMapMissionStatus : uint8_t
	{
		ZMM_AvailableMission    = 0,
		ZMM_TrackedObjective    = 1,
		ZMM_OptionalObjective   = 2,
		ZMM_NotTrackedObjective = 3,
		ZMM_OutOfMap            = 4,
		ZMM_Unknown             = 5,
		ZMM_MAX                 = 6
	};

	/**
	 * Enum OakGame.EZoneMapViewerState
	 */
	enum class EZoneMapViewerState : uint8_t
	{
		Level   = 0,
		Planet  = 1,
		Galaxy  = 2,
		Invalid = 3,
		MAX     = 4
	};

	/**
	 * Enum OakGame.EZoneMapMovementMode
	 */
	enum class EZoneMapMovementMode : uint8_t
	{
		Direct      = 0,
		Interpolate = 1,
		Animate     = 2,
		MAX         = 3
	};

	/**
	 * Enum OakGame.EMissionDeliveryMenuDisplayState
	 */
	enum class EMissionDeliveryMenuDisplayState : uint8_t
	{
		Description = 0,
		Friends     = 1,
		MAX         = 2
	};

	/**
	 * Enum OakGame.EOakMessageType
	 */
	enum class EOakMessageType : uint8_t
	{
		MessageType_PlayerJoined       = 0,
		MessageType_PlayerChangedName  = 1,
		MessageType_PlayerLeft         = 2,
		MessageType_PlayerUnableToJoin = 3,
		MessageType_SpectatorJoined    = 4,
		MessageType_MAX                = 5
	};

	/**
	 * Enum OakGame.EMessageSpecialType
	 */
	enum class EMessageSpecialType : uint8_t
	{
		MST_None          = 0,
		MST_TradeOffer    = 1,
		MST_SeatSwapOffer = 2,
		MST_MAX           = 3
	};

	/**
	 * Enum OakGame.EMainMenuViewpointType
	 */
	enum class EMainMenuViewpointType : uint8_t
	{
		TitleScreen     = 0,
		OptionsMenu     = 1,
		PlaythroughMode = 2,
		NewGameSettings = 3,
		MainMenuGroup   = 4,
		CharacterSelect = 5,
		BehindTheScenes = 6,
		MAX             = 7
	};

	/**
	 * Enum OakGame.EActivityFeedImageAspectRatio
	 */
	enum class EActivityFeedImageAspectRatio : uint8_t
	{
		FEED_IMAGE_ASPECT_RATIO_1_X    = 0,
		FEED_IMAGE_ASPECT_RATIO_1_51_X = 1,
		FEED_IMAGE_ASPECT_RATIO_2_08_X = 2,
		FEED_IMAGE_ASPECT_RATIO_16_X   = 3,
		FEED_IMAGE_ASPECT_RATIO_4_X    = 4,
		FEED_IMAGE_ASPECT_RATIO_MAX    = 5
	};

	/**
	 * Enum OakGame.EAIOOrientedParticleTargetType
	 */
	enum class EAIOOrientedParticleTargetType : uint8_t
	{
		None            = 0,
		DefaultPosition = 1,
		UIObject        = 2,
		MAX             = 3
	};

	/**
	 * Enum OakGame.EA9KFightPhase
	 */
	enum class EA9KFightPhase : uint8_t
	{
		NotStarted = 0,
		Phase1     = 1,
		Phase2     = 2,
		Phase3     = 3,
		Phase4     = 4,
		Dead       = 5,
		MAX        = 6
	};

	/**
	 * Enum OakGame.EVehicleAchetypeNative
	 */
	enum class EVehicleAchetypeNative : uint8_t
	{
		Null      = 0,
		Technical = 1,
		Outrunner = 2,
		Revolver  = 3,
		Emperor   = 4,
		Num       = 5,
		MAX       = 6
	};

	/**
	 * Enum OakGame.EHeldActorPreset
	 */
	enum class EHeldActorPreset : uint8_t
	{
		Explosive = 0,
		Melee     = 1,
		Shield    = 2,
		MAX       = 3
	};

	/**
	 * Enum OakGame.ECarnivoraBones
	 */
	enum class ECarnivoraBones : uint8_t
	{
		Root               = 0,
		RW_Root            = 1,
		RW_SuspensionR0    = 2,
		RW_SuspensionR1    = 3,
		RW_Wheel0          = 4,
		RW_Tire0           = 5,
		RW_Wheel1          = 6,
		RW_Tire1           = 7,
		RW_Wheel2          = 8,
		RW_Tire2           = 9,
		RW_SuspensionB0    = 10,
		RW_SuspensionB1    = 11,
		TrackShaft3        = 12,
		TrackSuspension3   = 13,
		TrackTire3         = 14,
		TrackShaft3_T      = 15,
		SideAxle           = 16,
		TrackShaft0        = 17,
		TrackSuspension2   = 18,
		TrackTire2         = 19,
		TrackShaft0_T      = 20,
		SideAxle1          = 21,
		TrackShaft1        = 22,
		SideAxleSecondary  = 23,
		TrackSuspension1   = 24,
		TrackTire1         = 25,
		TrackShaft1_T      = 26,
		SideAxleSecondary1 = 27,
		SideAxle2          = 28,
		TrackShaft2        = 29,
		TrackSuspension0   = 30,
		TrackTire0         = 31,
		TrackShaft2_T      = 32,
		TunnelDoor         = 33,
		MainAxle           = 34,
		MainAxle_Part1     = 35,
		MainAxle_Part2     = 36,
		Count              = 37,
		MAX                = 38
	};

	/**
	 * Enum OakGame.EEmperorBones
	 */
	enum class EEmperorBones : uint8_t
	{
		Body                    = 0,
		Cannon_Yaw              = 1,
		Cannon_Pitch            = 2,
		Cannon_Recoil           = 3,
		EntropyCore             = 4,
		CannonTurret_Main       = 5,
		CannonTurret_Pitch      = 6,
		L_Turret_Yaw            = 7,
		L_Turret_Pitch          = 8,
		R_Turret_Yaw            = 9,
		R_Turret_Pitch          = 10,
		F_R_Wheel               = 11,
		F_R_Wheel1              = 12,
		F_R_Wheel2              = 13,
		F_L_Wheel               = 14,
		F_L_Wheel1              = 15,
		F_L_Wheel2              = 16,
		R_R_Wheel               = 17,
		R_L_Wheel               = 18,
		R_L_Wheel1              = 19,
		R_R_Wheel1              = 20,
		F_L_ThreadSuspension    = 21,
		F_R_ThreadSuspension    = 22,
		F_L_BigWheel_Suspension = 23,
		F_R_BigWheel_Suspension = 24,
		F_R_Hover01             = 25,
		F_R_Hover02             = 26,
		F_R_Hover03             = 27,
		F_L_Hover01             = 28,
		F_L_Hover02             = 29,
		F_L_Hover03             = 30,
		R_R_Hover01             = 31,
		R_R_Hover02             = 32,
		R_L_Hover01             = 33,
		R_L_Hover02             = 34,
		Count                   = 35,
		MAX                     = 36
	};

	/**
	 * Enum OakGame.EOutrunnerBoosterBones
	 */
	enum class EOutrunnerBoosterBones : uint8_t
	{
		Body          = 0,
		L_Muffler     = 1,
		R_Muffler     = 2,
		M_Turbine     = 3,
		L_Turbine     = 4,
		R_Turbine     = 5,
		L_Top_Muffler = 6,
		L_Bot_Muffler = 7,
		R_Top_Muffler = 8,
		R_Bot_Muffler = 9,
		L_Razor_Wing  = 10,
		R_Razor_Wing  = 11,
		Count         = 12,
		MAX           = 13
	};

	/**
	 * Enum OakGame.EOutrunnerBones
	 */
	enum class EOutrunnerBones : uint8_t
	{
		Body              = 0,
		F_L_SuspensionArm = 1,
		F_L_Steering      = 2,
		F_L_Wheel         = 3,
		F_R_SuspensionArm = 4,
		F_R_Steering      = 5,
		F_R_Wheel         = 6,
		R_L_SuspensionArm = 7,
		R_L_Steering      = 8,
		R_L_Wheel         = 9,
		R_R_SuspensionArm = 10,
		R_R_Steering      = 11,
		R_R_Wheel         = 12,
		Turret_Yaw        = 13,
		F_Cannon          = 14,
		F_Cannon_Visual   = 15,
		Turret_Pitch      = 16,
		SteeringWheel     = 17,
		F_L_Spring01      = 18,
		F_L_Spring02      = 19,
		F_R_Spring01      = 20,
		F_R_Spring02      = 21,
		R_L_Spring01      = 22,
		R_L_Spring02      = 23,
		R_R_Spring01      = 24,
		R_R_Spring02      = 25,
		SeatMain          = 26,
		Count             = 27,
		MAX               = 28
	};

	/**
	 * Enum OakGame.ERevolverBoosterBones
	 */
	enum class ERevolverBoosterBones : uint8_t
	{
		Root    = 0,
		Main    = 1,
		Muffler = 2,
		Helix   = 3,
		Count   = 4,
		MAX     = 5
	};

	/**
	 * Enum OakGame.ERevolverBones
	 */
	enum class ERevolverBones : uint8_t
	{
		Body_Banking  = 0,
		Body_Pitch    = 1,
		Wheels        = 2,
		SteeringWheel = 3,
		Count         = 4,
		MAX           = 5
	};

	/**
	 * Enum OakGame.ETechnicalBones
	 */
	enum class ETechnicalBones : uint8_t
	{
		Body                      = 0,
		LeftMuffler               = 1,
		RightMuffler              = 2,
		Engine                    = 3,
		R_Axle                    = 4,
		R_R_Wheel                 = 5,
		R_L_Wheel                 = 6,
		F_R_Wheel                 = 7,
		F_L_Wheel                 = 8,
		F_L_Axle                  = 9,
		F_L_Steering              = 10,
		F_L_Steering_T            = 11,
		F_L_SteeringShaft         = 12,
		F_L_SuspensionUp          = 13,
		F_L_SuspensionBodyUp_T    = 14,
		F_L_SuspensionBodyDn      = 15,
		F_L_SuspensionDn_T        = 16,
		F_L_SuspensionSprings     = 17,
		F_L_SuspensionSpringsBody = 18,
		F_R_Axle                  = 19,
		F_R_Steering              = 20,
		F_R_Steering_T            = 21,
		F_R_SteeringShaft         = 22,
		F_R_SuspensionUp          = 23,
		F_R_SuspensionBodyUp_T    = 24,
		F_R_SuspensionBodyDn      = 25,
		F_R_SuspensionDn_T        = 26,
		F_R_SuspensionSprings     = 27,
		F_R_SuspensionSpringsBody = 28,
		F_Cannon                  = 29,
		F_Cannon_Visual           = 30,
		Turret                    = 31,
		Player2                   = 32,
		R_DriveShaftPole          = 33,
		R_DriveShaftBodyPole      = 34,
		R_DriveShaftAttach        = 35,
		R_DriveShaftBodyAttach    = 36,
		F_R_DriveShaft00          = 37,
		F_R_DriveShaft01          = 38,
		F_R_DriveShaft02          = 39,
		F_L_DriveShaft00          = 40,
		F_L_DriveShaft01          = 41,
		F_L_DriveShaft02          = 42,
		SteeringWheel             = 43,
		F_R_Wheel_Hover           = 44,
		F_L_Wheel_Hover           = 45,
		R_R_Wheel_Hover           = 46,
		R_L_Wheel_Hover           = 47,
		F_DriveShaftAttach        = 48,
		F_DriveShaftPole          = 49,
		F_DriveShaftBodyAttach    = 50,
		R_L_Suspension_Body       = 51,
		R_L_Suspension_Axle       = 52,
		R_R_Suspension_Body       = 53,
		R_R_Suspension_Axle       = 54,
		EngineShaft               = 55,
		EngineBelt                = 56,
		Seat                      = 57,
		Count                     = 58,
		MAX                       = 59
	};

	/**
	 * Enum OakGame.ETrailerBones
	 */
	enum class ETrailerBones : uint8_t
	{
		F_Axle          = 0,
		F_R_Wheel       = 1,
		F_L_Wheel       = 2,
		R_Axle          = 3,
		R_R_Wheel       = 4,
		R_L_Wheel       = 5,
		R_R_Spring_Axle = 6,
		R_L_Spring_Axle = 7,
		R_R_Spring_Body = 8,
		R_L_Spring_Body = 9,
		Count           = 10,
		MAX             = 11
	};

	/**
	 * Enum OakGame.EDualWeaponBones
	 */
	enum class EDualWeaponBones : uint8_t
	{
		Root              = 0,
		Main              = 1,
		Base              = 2,
		L_Base            = 3,
		L_Shoulder        = 4,
		L_Elbow           = 5,
		L_End             = 6,
		L_Elbow_Piston    = 7,
		L_Shoulder_Piston = 8,
		L_Pitch           = 9,
		L_Projectile      = 10,
		R_Base            = 11,
		R_Shoulder        = 12,
		R_Elbow           = 13,
		R_End             = 14,
		R_Elbow_Piston    = 15,
		R_Shoulder_Piston = 16,
		R_Pitch           = 17,
		R_Projectile      = 18,
		L_BaseAttach      = 19,
		R_BaseAttach      = 20,
		Count             = 21,
		MAX               = 22
	};

	/**
	 * Enum OakGame.EWeaponBones
	 */
	enum class EWeaponBones : uint8_t
	{
		None         = 0,
		Root         = 1,
		Main         = 2,
		Turret_Yaw   = 3,
		Turret_Pitch = 4,
		Cannon_Yaw   = 5,
		Cannon_Pitch = 6,
		Projectile   = 7,
		Count        = 8,
		MAX          = 9
	};

	/**
	 * Enum OakGame.EPetRespawnCooldownRefundType
	 */
	enum class EPetRespawnCooldownRefundType : uint8_t
	{
		PetProfileChanged = 0,
		MAX               = 1
	};

	/**
	 * Enum OakGame.EPetReleaseReason
	 */
	enum class EPetReleaseReason : uint8_t
	{
		SpawnCheckFailed  = 0,
		PetProfileChanged = 1,
		PetDied           = 2,
		PlayerDied        = 3,
		MAX               = 4
	};

	/**
	 * Enum OakGame.EBehindTheScenesItemType
	 */
	enum class EBehindTheScenesItemType : uint8_t
	{
		Video     = 0,
		Slideshow = 1,
		MAX       = 2
	};

	/**
	 * Enum OakGame.EIntroType
	 */
	enum class EIntroType : uint8_t
	{
		EnterFromGround    = 0,
		EnterFromSwapSeat  = 1,
		HijackFromGround   = 2,
		HijackFromSwapSeat = 3,
		MAX                = 4
	};

	/**
	 * Enum OakGame.ECARStatus
	 */
	enum class ECARStatus : uint8_t
	{
		Locked    = 0,
		Unfolding = 1,
		Active    = 2,
		Inactive  = 3,
		MAX       = 4
	};

	/**
	 * Enum OakGame.ECarnivoraFakeTurretShootingStyle
	 */
	enum class ECarnivoraFakeTurretShootingStyle : uint8_t
	{
		TARGET_AROUND_PLAYER = 0,
		CONE_IN_DIRECTION    = 1,
		MAX                  = 2
	};

	/**
	 * Enum OakGame.ECarnivoraAverageLocation
	 */
	enum class ECarnivoraAverageLocation : uint8_t
	{
		FRONT_RIGHT = 0,
		FRONT_LEFT  = 1,
		BACK_RIGHT  = 2,
		BACK_LEFT   = 3,
		NUM         = 4,
		MAX         = 5
	};

	/**
	 * Enum OakGame.ECarnivoraPartName
	 */
	enum class ECarnivoraPartName : uint8_t
	{
		FRONT_WHEEL   = 0,
		FRONT_WHEEL01 = 1,
		FRONT_WHEEL02 = 2,
		TIRE_TRACK    = 3,
		TIRE_TRACK01  = 4,
		TIRE_TRACK02  = 5,
		TIRE_TRACK03  = 6,
		NUM           = 7,
		MAX           = 8
	};

	/**
	 * Enum OakGame.ECharacterEchoDataMediaPlaybackType
	 */
	enum class ECharacterEchoDataMediaPlaybackType : uint8_t
	{
		PlayAndClose       = 0,
		LoopUntilAudioEnds = 1,
		MAX                = 2
	};

	/**
	 * Enum OakGame.ECrosshairColorsEnum
	 */
	enum class ECrosshairColorsEnum : uint8_t
	{
		NONE   = 0,
		WHITE  = 1,
		GREEN  = 2,
		RED    = 3,
		TEAL   = 4,
		ORANGE = 5,
		PURPLE = 6,
		MAX    = 7
	};

	/**
	 * Enum OakGame.EDamagePresentationLevel
	 */
	enum class EDamagePresentationLevel : uint8_t
	{
		Negligible = 0,
		Low        = 1,
		Medium     = 2,
		High       = 3,
		MAX        = 4
	};

	/**
	 * Enum OakGame.EDiscoveryAreaDrawStyle
	 */
	enum class EDiscoveryAreaDrawStyle : uint8_t
	{
		None         = 0,
		Wire         = 1,
		Solid        = 2,
		SolidAndWire = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EDuelTotemDestroyReason
	 */
	enum class EDuelTotemDestroyReason : uint8_t
	{
		None         = 0,
		TimedOut     = 1,
		Canceled     = 2,
		DuelFinished = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EPotentialDuelState
	 */
	enum class EPotentialDuelState : uint8_t
	{
		None                = 0,
		WaitingToBeAccepted = 1,
		WaitingToStart      = 2,
		Started             = 3,
		MAX                 = 4
	};

	/**
	 * Enum OakGame.EActiveDuelStatus
	 */
	enum class EActiveDuelStatus : uint8_t
	{
		WaitingToStart = 0,
		InProgress     = 1,
		Finished       = 2,
		MAX            = 3
	};

	/**
	 * Enum OakGame.EDuelMode
	 */
	enum class EDuelMode : uint8_t
	{
		OnFoot  = 0,
		Vehicle = 1,
		MAX     = 2
	};

	/**
	 * Enum OakGame.ECanSprintResult
	 */
	enum class ECanSprintResult : uint8_t
	{
		Yes    = 0,
		No     = 1,
		Cancel = 2,
		MAX    = 3
	};

	/**
	 * Enum OakGame.EEchoDeviceButton
	 */
	enum class EEchoDeviceButton : uint8_t
	{
		Button1 = 0,
		Button2 = 1,
		Button3 = 2,
		Count   = 3,
		MAX     = 4
	};

	/**
	 * Enum OakGame.EEchoLogBlockedStartMethod
	 */
	enum class EEchoLogBlockedStartMethod : uint8_t
	{
		Cancel          = 0,
		PlayInWorldOnly = 1,
		Queue           = 2,
		Interrupt       = 3,
		MAX             = 4
	};

	/**
	 * Enum OakGame.EEchoLogDisplayCategory
	 */
	enum class EEchoLogDisplayCategory : uint8_t
	{
		EchoLog    = 0,
		EridianLog = 1,
		TyphonLog  = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EDamagePresentationModifier
	 */
	enum class EDamagePresentationModifier : uint8_t
	{
		Default  = 0,
		Increase = 1,
		Decrease = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EElementalEffectSizeComputationType
	 */
	enum class EElementalEffectSizeComputationType : uint8_t
	{
		BoundsSphereRadius     = 0,
		BoundsBoxExtentMaxAxis = 1,
		MAX                    = 2
	};

	/**
	 * Enum OakGame.EElementalInteractionMode
	 */
	enum class EElementalInteractionMode : uint8_t
	{
		Default      = 0,
		OnlyTransmit = 1,
		OnlyReceive  = 2,
		MAX          = 3
	};

	/**
	 * Enum OakGame.EElementalInteractionSourceMode
	 */
	enum class EElementalInteractionSourceMode : uint8_t
	{
		Default              = 0,
		Always               = 1,
		Never                = 2,
		OnlyThroughBlueprint = 3,
		MAX                  = 4
	};

	/**
	 * Enum OakGame.EPuddleState
	 */
	enum class EPuddleState : uint8_t
	{
		Spawning   = 0,
		Idle       = 1,
		CleaningUp = 2,
		CleanedUp  = 3,
		MAX        = 4
	};

	/**
	 * Enum OakGame.ENativeEnemyExperienceType
	 */
	enum class ENativeEnemyExperienceType : uint8_t
	{
		Chump          = 0,
		Normal         = 1,
		NormalHigh     = 2,
		Tough          = 3,
		ToughHigh      = 4,
		Badass         = 5,
		SuperBadass    = 6,
		UltimateBadass = 7,
		Boss           = 8,
		MAX            = 9
	};

	/**
	 * Enum OakGame.EWeaponInputChannel
	 */
	enum class EWeaponInputChannel : uint8_t
	{
		Channel1 = 0,
		Channel2 = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.EWeaponUseMode
	 */
	enum class EWeaponUseMode : uint8_t
	{
		Mode1 = 0,
		Mode2 = 1,
		Mode3 = 2,
		MAX   = 3
	};

	/**
	 * Enum OakGame.EFriendEventPriority
	 */
	enum class EFriendEventPriority : uint8_t
	{
		Highest = 0,
		High    = 1,
		Normal  = 2,
		Low     = 3,
		MAX     = 4
	};

	/**
	 * Enum OakGame.EFriendEventType
	 */
	enum class EFriendEventType : uint8_t
	{
		None                        = 0,
		LevelUp                     = 1,
		GearSold                    = 2,
		GearReceived                = 3,
		PlotMissionCompletion       = 4,
		SideMissionCompletion       = 5,
		PropagateRareSpawnMission   = 6,
		KilledEnemy                 = 7,
		KilledNamedEnemy            = 8,
		KilledBoss                  = 9,
		GuardianRankMilestone       = 10,
		ChallengeUpdate             = 11,
		ChallengeCompletion         = 12,
		ProvingGroundCompletion     = 13,
		CircleOfSlaughterCompletion = 14,
		RaidCompletion              = 15,
		UnlockedTrueVaultHunterMode = 16,
		SlotMachineJackpot          = 17,
		OpenedGoldenChest           = 18,
		SentMail                    = 19,
		FriendGearPurchased         = 20,
		LookingForHelp              = 21,
		AchievementUnlocked         = 22,
		ChallengeUpdatesMerged      = 23,
		LikedEvent                  = 24,
		CustomizationAcquired       = 25,
		Max                         = 26
	};

	/**
	 * Enum OakGame.EFriendEventNotificationLifetime
	 */
	enum class EFriendEventNotificationLifetime : uint8_t
	{
		Normal   = 0,
		Long     = 1,
		VeryLong = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EFriendEventNotificationFrequency
	 */
	enum class EFriendEventNotificationFrequency : uint8_t
	{
		Off      = 0,
		VeryLow  = 1,
		Low      = 2,
		Normal   = 3,
		High     = 4,
		VeryHigh = 5,
		MAX      = 6
	};

	/**
	 * Enum OakGame.EFrontendStandInAnimType
	 */
	enum class EFrontendStandInAnimType : uint8_t
	{
		Default           = 0,
		CharacterSelect   = 1,
		CharacterCreate   = 2,
		RnRCharaterCreate = 3,
		MAX               = 4
	};

	/**
	 * Enum OakGame.EOakCharacterMovementConditionType
	 */
	enum class EOakCharacterMovementConditionType : uint8_t
	{
		IsGroundSlamming        = 0,
		IsLandingFromGroundSlam = 1,
		MAX                     = 2
	};

	/**
	 * Enum OakGame.EBoostChargeCountComparisonMode
	 */
	enum class EBoostChargeCountComparisonMode : uint8_t
	{
		Equal              = 0,
		NotEqual           = 1,
		GreaterThan        = 2,
		GreaterThanOrEqual = 3,
		SmallerThan        = 4,
		SmallerThanOrEqual = 5,
		FullCharges        = 6,
		MAX                = 7
	};

	/**
	 * Enum OakGame.EBoostPoolValueComparisonMode
	 */
	enum class EBoostPoolValueComparisonMode : uint8_t
	{
		Equal              = 0,
		NotEqual           = 1,
		GreaterThan        = 2,
		GreaterThanOrEqual = 3,
		SmallerThan        = 4,
		SmallerThanOrEqual = 5,
		MAX                = 6
	};

	/**
	 * Enum OakGame.EGbxGFxDialogBoxButtonType
	 */
	enum class EGbxGFxDialogBoxButtonType : uint8_t
	{
		ListButtons = 0,
		HintBox     = 1,
		MAX         = 2
	};

	/**
	 * Enum OakGame.EGbxGFxDialogBoxStyle
	 */
	enum class EGbxGFxDialogBoxStyle : uint8_t
	{
		Default    = 0,
		Warning    = 1,
		Error      = 2,
		Keybinding = 3,
		MAX        = 4
	};

	/**
	 * Enum OakGame.EShiftReportReason
	 */
	enum class EShiftReportReason : uint8_t
	{
		Username             = 0,
		Sportsmanship        = 1,
		Abuse                = 2,
		HateSpeech           = 3,
		LeavingOrAfk         = 4,
		Cheating             = 5,
		UserGeneratedContent = 6,
		IllicitBehavior      = 7,
		MAX                  = 8
	};

	/**
	 * Enum OakGame.EGbxInputEvent_OakUIAxis_Events
	 */
	enum class EGbxInputEvent_OakUIAxis_Events : uint8_t
	{
		Pressed                      = 0,
		Held                         = 1,
		Released                     = 2,
		EGbxInputEvent_OakUIAxis_MAX = 3
	};

	/**
	 * Enum OakGame.EGeyserBehavior
	 */
	enum class EGeyserBehavior : uint8_t
	{
		None         = 0,
		Intermittent = 1,
		AlwaysOn     = 2,
		MAX          = 3
	};

	/**
	 * Enum OakGame.EGeyserState
	 */
	enum class EGeyserState : uint8_t
	{
		None                 = 0,
		SteamOn              = 1,
		SteamOff             = 2,
		SteamAnticipationOn  = 3,
		SteamAnticipationOff = 4,
		MAX                  = 5
	};

	/**
	 * Enum OakGame.EAmmoBarMode
	 */
	enum class EAmmoBarMode : uint8_t
	{
		None              = 0,
		NoMode            = 1,
		ModeSwitch        = 2,
		COV               = 3,
		EridianFabricator = 4,
		MAX               = 5
	};

	/**
	 * Enum OakGame.EMovieFFRWState
	 */
	enum class EMovieFFRWState : uint8_t
	{
		RegularPlayback = 0,
		FastForward     = 1,
		Rewind          = 2,
		MAX             = 3
	};

	/**
	 * Enum OakGame.EBuddyWidgetFanfareState
	 */
	enum class EBuddyWidgetFanfareState : uint8_t
	{
		None       = 0,
		LevelUp    = 1,
		SecondWind = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EBuddyWidgetState
	 */
	enum class EBuddyWidgetState : uint8_t
	{
		Healthy               = 0,
		Healthy_JustRespawned = 1,
		Dying                 = 2,
		BeingRevived          = 3,
		Respawning            = 4,
		RespawnTimer          = 5,
		Spectating            = 6,
		MAX                   = 7
	};

	/**
	 * Enum OakGame.EBuddyWidgetContainerAnimState
	 */
	enum class EBuddyWidgetContainerAnimState : uint8_t
	{
		Inactive  = 0,
		SlideIn   = 1,
		SlideOut  = 2,
		SlideDown = 3,
		MAX       = 4
	};

	/**
	 * Enum OakGame.EGFxCARMenuPage
	 */
	enum class EGFxCARMenuPage : uint8_t
	{
		Loadout   = 0,
		Customize = 1,
		Deploy    = 2,
		MAX       = 3
	};

	/**
	 * Enum OakGame.EGFxCARMenuPartCellType
	 */
	enum class EGFxCARMenuPartCellType : uint8_t
	{
		None          = 0,
		LoadoutButton = 1,
		CustomizeCell = 2,
		MAX           = 3
	};

	/**
	 * Enum OakGame.EGFxChallegeProgressWidgetState
	 */
	enum class EGFxChallegeProgressWidgetState : uint8_t
	{
		Off = 0,
		On  = 1,
		Out = 2,
		MAX = 3
	};

	/**
	 * Enum OakGame.ECheckpointWidgetState
	 */
	enum class ECheckpointWidgetState : uint8_t
	{
		None   = 0,
		Hidden = 1,
		Intro  = 2,
		Idle   = 3,
		Exit   = 4,
		MAX    = 5
	};

	/**
	 * Enum OakGame.EColorPickerMode
	 */
	enum class EColorPickerMode : uint8_t
	{
		All              = 0,
		PrimarySecondary = 1,
		PrimaryOnly      = 2,
		MAX              = 3
	};

	/**
	 * Enum OakGame.EColorSelectionType
	 */
	enum class EColorSelectionType : uint8_t
	{
		TopColor           = 0,
		BottomColor        = 1,
		ResetBothToDefault = 2,
		MAX                = 3
	};

	/**
	 * Enum OakGame.ECrosshairType
	 */
	enum class ECrosshairType : uint8_t
	{
		NORMAL   = 0,
		IRONBEAR = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.ECrosshairState
	 */
	enum class ECrosshairState : uint8_t
	{
		NORMAL       = 0,
		ACTION_SKILL = 1,
		SPRINTING    = 2,
		MELEE        = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EGFxCurrencyCounterState
	 */
	enum class EGFxCurrencyCounterState : uint8_t
	{
		Off              = 0,
		AnimatingToValue = 1,
		HoldingOnValue   = 2,
		MAX              = 3
	};

	/**
	 * Enum OakGame.EGFxDuelingTimerState
	 */
	enum class EGFxDuelingTimerState : uint8_t
	{
		TimerOnly     = 0,
		TimerAndMatch = 1,
		Challenger    = 2,
		TimeOut       = 3,
		Hidden        = 4,
		MAX           = 5
	};

	/**
	 * Enum OakGame.EECHOLOGWidgetState
	 */
	enum class EECHOLOGWidgetState : uint8_t
	{
		Inactive     = 0,
		Activating   = 1,
		Displayed    = 2,
		Deactivating = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EGFxMailboxMenuMailSort
	 */
	enum class EGFxMailboxMenuMailSort : uint8_t
	{
		Date   = 0,
		Unread = 1,
		Friend = 2,
		System = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EGFxMailboxMenuState
	 */
	enum class EGFxMailboxMenuState : uint8_t
	{
		None              = 0,
		Receive           = 1,
		Send_ChooseItem   = 2,
		Send_ChooseFriend = 3,
		Send_Confirm      = 4,
		MAX               = 5
	};

	/**
	 * Enum OakGame.EGFxRosterCellType
	 */
	enum class EGFxRosterCellType : uint8_t
	{
		EmptyCell                = 0,
		FindShiftFriendButton    = 1,
		ManageShiftFriendsButton = 2,
		OnlineFriendInThisGame   = 3,
		OnlineFriend             = 4,
		OfflineFriend            = 5,
		MAX                      = 6
	};

	/**
	 * Enum OakGame.EECHOWidgetState
	 */
	enum class EECHOWidgetState : uint8_t
	{
		Inactive     = 0,
		Activating   = 1,
		Displayed    = 2,
		Deactivating = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EGFxExperienceBarState
	 */
	enum class EGFxExperienceBarState : uint8_t
	{
		None                     = 0,
		ExperienceAddedAnimation = 1,
		LevelUpAnimation         = 2,
		FadingOut                = 3,
		MAX                      = 4
	};

	/**
	 * Enum OakGame.EGFxFeedWidgetState
	 */
	enum class EGFxFeedWidgetState : uint8_t
	{
		Off = 0,
		On  = 1,
		Out = 2,
		MAX = 3
	};

	/**
	 * Enum OakGame.EFFYLBarState
	 */
	enum class EFFYLBarState : uint8_t
	{
		Dying        = 0,
		BeingRevived = 1,
		Reviving     = 2,
		MAX          = 3
	};

	/**
	 * Enum OakGame.EGFxFrontendLandingPageType
	 */
	enum class EGFxFrontendLandingPageType : uint8_t
	{
		WantsOnline        = 0,
		WantsLan           = 1,
		WantsInGameForMail = 2,
		MAX                = 3
	};

	/**
	 * Enum OakGame.EGFxFrontendMenuFocusAnim
	 */
	enum class EGFxFrontendMenuFocusAnim : uint8_t
	{
		Standard      = 0,
		MainMenuFocus = 1,
		Focused       = 2,
		MAX           = 3
	};

	/**
	 * Enum OakGame.EGFxFrontendMenuMode
	 */
	enum class EGFxFrontendMenuMode : uint8_t
	{
		Unknown       = 0,
		MainMenu      = 1,
		EchoNetMenus  = 2,
		SettingsMenus = 3,
		NewGameMenu   = 4,
		MAX           = 5
	};

	/**
	 * Enum OakGame.EGFxGrenadeIndicatorMode
	 */
	enum class EGFxGrenadeIndicatorMode : uint8_t
	{
		Hidden = 0,
		Safe   = 1,
		Danger = 2,
		MAX    = 3
	};

	/**
	 * Enum OakGame.EGFxGuardianRankMenuState
	 */
	enum class EGFxGuardianRankMenuState : uint8_t
	{
		None                               = 0,
		MenuLocked                         = 1,
		GuardianRankDisabled               = 2,
		Information_RedeemButtonSelected   = 3,
		Information_PerkSelected           = 4,
		TokenRedemption                    = 5,
		TokenRedemption_WaitingForPurchase = 6,
		MAX                                = 7
	};

	/**
	 * Enum OakGame.ECalibrationOptionSourceType
	 */
	enum class ECalibrationOptionSourceType : uint8_t
	{
		COST_FromPlayerController = 0,
		COST_FromRecent           = 1,
		COST_FromDefaults         = 2,
		COST_MAX                  = 3
	};

	/**
	 * Enum OakGame.EHUDInitAnimWidgetTarget
	 */
	enum class EHUDInitAnimWidgetTarget : uint8_t
	{
		None           = 0,
		HealthBar      = 1,
		XPBar          = 2,
		Minimap        = 3,
		MissionTracker = 4,
		AmmoBar        = 5,
		ShieldBar      = 6,
		GrenadeBar     = 7,
		MAX            = 8
	};

	/**
	 * Enum OakGame.EPromptLinesLayouts
	 */
	enum class EPromptLinesLayouts : uint8_t
	{
		INVALID                     = 0,
		PrimaryPress                = 1,
		PrimaryHold                 = 2,
		PrimaryPress_PrimaryHold    = 3,
		PrimaryPress_SecondaryPress = 4,
		PrimaryPress_SecondaryHold  = 5,
		PrimaryHold_SecondaryPress  = 6,
		PrimaryHold_SecondaryHold   = 7,
		MAX                         = 8
	};

	/**
	 * Enum OakGame.EInteractionPromptGlyphMode
	 */
	enum class EInteractionPromptGlyphMode : uint8_t
	{
		InvalidForUseDef = 0,
		Normal           = 1,
		CantUse          = 2,
		Locked           = 3,
		MAX              = 4
	};

	/**
	 * Enum OakGame.EGFxInventoryMenuBackpackSize
	 */
	enum class EGFxInventoryMenuBackpackSize : uint8_t
	{
		TwoColumns = 0,
		OneColumn  = 1,
		MAX        = 2
	};

	/**
	 * Enum OakGame.EGFxInventoryMenuFocusSide
	 */
	enum class EGFxInventoryMenuFocusSide : uint8_t
	{
		None      = 0,
		PaperDoll = 1,
		Backpack  = 2,
		MAX       = 3
	};

	/**
	 * Enum OakGame.EGFxInWorldIconClampUpdate
	 */
	enum class EGFxInWorldIconClampUpdate : uint8_t
	{
		Unknown        = 0,
		NotClamped     = 1,
		ClampedInFront = 2,
		ClampedBehind  = 3,
		MAX            = 4
	};

	/**
	 * Enum OakGame.EInWorldIconRange
	 */
	enum class EInWorldIconRange : uint8_t
	{
		None = 0,
		Near = 1,
		Far  = 2,
		MAX  = 3
	};

	/**
	 * Enum OakGame.EGFxItemInspectionPages
	 */
	enum class EGFxItemInspectionPages : uint8_t
	{
		None         = 0,
		Inspect      = 1,
		Manufacturer = 2,
		Elemental    = 3,
		Parts        = 4,
		Skins        = 5,
		MAX          = 6
	};

	/**
	 * Enum OakGame.EBackButtonHint
	 */
	enum class EBackButtonHint : uint8_t
	{
		Back   = 0,
		Cancel = 1,
		Exit   = 2,
		MAX    = 3
	};

	/**
	 * Enum OakGame.ETradingMenuState
	 */
	enum class ETradingMenuState : uint8_t
	{
		Offering = 0,
		Backpack = 1,
		Done     = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.ELeaguesMenuLayout
	 */
	enum class ELeaguesMenuLayout : uint8_t
	{
		None       = 0,
		Overview   = 1,
		Challenges = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EGFxMainAndPauseMenuType
	 */
	enum class EGFxMainAndPauseMenuType : uint8_t
	{
		Unknown = 0,
		Main    = 1,
		Pause   = 2,
		MAX     = 3
	};

	/**
	 * Enum OakGame.EGFxMapMenuProgressPanelState
	 */
	enum class EGFxMapMenuProgressPanelState : uint8_t
	{
		None     = 0,
		Progress = 1,
		List     = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EDetailsPanelMode
	 */
	enum class EDetailsPanelMode : uint8_t
	{
		Unknown        = 0,
		NoTarget       = 1,
		POIInfo        = 2,
		Challenge      = 3,
		Mission        = 4,
		PlanetOverview = 5,
		LevelOverview  = 6,
		POIInfoPlayer  = 7,
		MAX            = 8
	};

	/**
	 * Enum OakGame.EGFxMapMenuState
	 */
	enum class EGFxMapMenuState : uint8_t
	{
		None            = 0,
		Tutorial_Stage1 = 1,
		Tutorial_Stage2 = 2,
		Tutorial_Stage3 = 3,
		Tutorial_Stage4 = 4,
		Tutorial_Stage5 = 5,
		Progress        = 6,
		FastTravel      = 7,
		Challenges      = 8,
		Friends         = 9,
		MAX             = 10
	};

	/**
	 * Enum OakGame.EGFxMapMenuMapState
	 */
	enum class EGFxMapMenuMapState : uint8_t
	{
		None   = 0,
		Level  = 1,
		Planet = 2,
		Galaxy = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EGFxMenuTutorialFocusDirection
	 */
	enum class EGFxMenuTutorialFocusDirection : uint8_t
	{
		Center         = 0,
		Left           = 1,
		Right          = 2,
		SameAsStardard = 3,
		MAX            = 4
	};

	/**
	 * Enum OakGame.EGFxMenuTutorialDialogSize
	 */
	enum class EGFxMenuTutorialDialogSize : uint8_t
	{
		Large  = 0,
		Medium = 1,
		Small  = 2,
		MAX    = 3
	};

	/**
	 * Enum OakGame.EGFxMinimapWidgetIconTrackedType
	 */
	enum class EGFxMinimapWidgetIconTrackedType : uint8_t
	{
		Unused               = 0,
		Mission              = 1,
		MinimapIconComponent = 2,
		CustomWaypoint       = 3,
		PlayerIcon           = 4,
		MAX                  = 5
	};

	/**
	 * Enum OakGame.EGFxMissionLogMissionItemType
	 */
	enum class EGFxMissionLogMissionItemType : uint8_t
	{
		Mission = 0,
		EchoLog = 1,
		Header  = 2,
		MAX     = 3
	};

	/**
	 * Enum OakGame.EGFxMissionLogFilterType
	 */
	enum class EGFxMissionLogFilterType : uint8_t
	{
		None                  = 0,
		MissionLogMissionType = 1,
		MissionLogByExpansion = 2,
		MissionLogByRegion    = 3,
		MAX                   = 4
	};

	/**
	 * Enum OakGame.EGFxMissionLogNavType
	 */
	enum class EGFxMissionLogNavType : uint8_t
	{
		None       = 0,
		Missions   = 1,
		EchoLog    = 2,
		TyphonLog  = 3,
		EridianLog = 4,
		MAX        = 5
	};

	/**
	 * Enum OakGame.EGFxMissionLogMissionIconType
	 */
	enum class EGFxMissionLogMissionIconType : uint8_t
	{
		Normal         = 0,
		Plot           = 1,
		Side           = 2,
		Contract       = 3,
		EchoLog        = 4,
		EridianWriting = 5,
		TyphonLog      = 6,
		Complete       = 7,
		Ignored        = 8,
		Failed         = 9,
		HardMission    = 10,
		MAX            = 11
	};

	/**
	 * Enum OakGame.EGFxMissionTrackerAnimationType
	 */
	enum class EGFxMissionTrackerAnimationType : uint8_t
	{
		None                    = 0,
		Active                  = 1,
		SlideIn                 = 2,
		SlideInChecked          = 3,
		SlideOut                = 4,
		SlideInFromAbove        = 5,
		SlideInFromAboveChecked = 6,
		SlideInFromBelow        = 7,
		SlideInFromBelowChecked = 8,
		Checked                 = 9,
		CheckedFailed           = 10,
		Failed                  = 11,
		SlideOutFailed          = 12,
		MAX                     = 13
	};

	/**
	 * Enum OakGame.ETargetedNameplateState
	 */
	enum class ETargetedNameplateState : uint8_t
	{
		NotShowingTarget_Linger = 0,
		NotShowingTarget        = 1,
		ShowingValidTarget      = 2,
		ShowingDyingTarget      = 3,
		MAX                     = 4
	};

	/**
	 * Enum OakGame.ENameplateStyle
	 */
	enum class ENameplateStyle : uint8_t
	{
		Targeted = 0,
		BossBar  = 1,
		Overhead = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EDLCMenuItemUsability
	 */
	enum class EDLCMenuItemUsability : uint8_t
	{
		None                    = 0,
		CanUse                  = 1,
		AlreadyStarted          = 2,
		RequiresMissionProgress = 3,
		NotInstalled            = 4,
		NotLicensed             = 5,
		MAX                     = 6
	};

	/**
	 * Enum OakGame.EOverheadNameplateDisplayState
	 */
	enum class EOverheadNameplateDisplayState : uint8_t
	{
		None               = 0,
		CenteredName_Name  = 1,
		CenteredName_Arrow = 2,
		State_Name         = 3,
		State_Arrow        = 4,
		MAX                = 5
	};

	/**
	 * Enum OakGame.EOverheadNameplateHealthState
	 */
	enum class EOverheadNameplateHealthState : uint8_t
	{
		Healthy      = 0,
		Dying        = 1,
		BeingRevived = 2,
		Respawning   = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EPetCommandWidgetState
	 */
	enum class EPetCommandWidgetState : uint8_t
	{
		Off           = 0,
		Ready         = 1,
		Unlocked      = 2,
		Activated     = 3,
		BeginCooldown = 4,
		CoolingDown   = 5,
		NowReady      = 6,
		CantUse       = 7,
		Initalization = 8,
		MAX           = 9
	};

	/**
	 * Enum OakGame.EGFxPlayerStorageMenuItemAction
	 */
	enum class EGFxPlayerStorageMenuItemAction : uint8_t
	{
		None            = 0,
		MoveToBank      = 1,
		MoveToInventory = 2,
		Inspect         = 3,
		MAX             = 4
	};

	/**
	 * Enum OakGame.EGFxPlayerStorageMenuState
	 */
	enum class EGFxPlayerStorageMenuState : uint8_t
	{
		None                   = 0,
		BankRetrieve           = 1,
		BackpackDeposit        = 2,
		CompareBankFocused     = 3,
		CompareBackpackFocused = 4,
		MAX                    = 5
	};

	/**
	 * Enum OakGame.EQuickChangeMenuSortMode
	 */
	enum class EQuickChangeMenuSortMode : uint8_t
	{
		Rarity     = 0,
		Alphabetic = 1,
		NewToOld   = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EBaseQuickChangeChoiceType
	 */
	enum class EBaseQuickChangeChoiceType : uint8_t
	{
		Skin          = 0,
		Head          = 1,
		Body          = 2,
		Emote         = 3,
		Color         = 4,
		ECHOSkin      = 5,
		Respec        = 6,
		WeaponSkin    = 7,
		WeaponTrinket = 8,
		MAX           = 9
	};

	/**
	 * Enum OakGame.EBaseQuickChangeMenuState
	 */
	enum class EBaseQuickChangeMenuState : uint8_t
	{
		CategorySelection = 0,
		BodySelection     = 1,
		HeadSelection     = 2,
		SkinSelection     = 3,
		ColorSelection    = 4,
		EmoteSelection    = 5,
		ECHOSelection     = 6,
		Respec            = 7,
		TrinketIcon       = 8,
		WeaponSkinIcon    = 9,
		DecorationIcon    = 10,
		None              = 11,
		MAX               = 12
	};

	/**
	 * Enum OakGame.EReloadWidgetDisplayState
	 */
	enum class EReloadWidgetDisplayState : uint8_t
	{
		Default     = 0,
		AmmoLow     = 1,
		NoSpareAmmo = 2,
		NoAmmoAtAll = 3,
		MAX         = 4
	};

	/**
	 * Enum OakGame.GFxSHiFT
	 */
	enum class EGFxSHiFT : uint8_t
	{
		GFxSHiFT_None           = 0,
		GFxSHiFT_NotSignedIn    = 1,
		GFxSHiFT_SignInAccount  = 2,
		GFxSHiFT_CreateAccount  = 3,
		GFxSHiFT_ResetPassword  = 4,
		GFxSHiFT_CodeRedemption = 5,
		GFxSHiFT_RewardHistory  = 6,
		GFxSHiFT_Offline        = 7,
		GFxSHiFT_GFxSHiFT_MAX   = 8
	};

	/**
	 * Enum OakGame.ESirenSkillScreenSlotType
	 */
	enum class ESirenSkillScreenSlotType : uint8_t
	{
		None         = 0,
		ComboAbility = 1,
		ComboEffect  = 2,
		ComboElement = 3,
		Passive      = 4,
		MAX          = 5
	};

	/**
	 * Enum OakGame.ESkillItemActionState
	 */
	enum class ESkillItemActionState : uint8_t
	{
		None                  = 0,
		CanEquipPrimary       = 1,
		CanEquipSecondary     = 2,
		CanEquipBoth          = 3,
		BlockedByTutorial     = 4,
		NoPointsToSpend       = 5,
		Unlock                = 6,
		AddPoint              = 7,
		Maxed                 = 8,
		NotEnoughBranchPoints = 9,
		RequiresTreeUnlock    = 10,
		RequiresOtherSkill    = 11,
		MAX                   = 12
	};

	/**
	 * Enum OakGame.ESkillItemUnlockAnimState
	 */
	enum class ESkillItemUnlockAnimState : uint8_t
	{
		Uninitialized = 0,
		Unplayed      = 1,
		Played        = 2,
		MAX           = 3
	};

	/**
	 * Enum OakGame.ESkillScreenItemPurchaseState
	 */
	enum class ESkillScreenItemPurchaseState : uint8_t
	{
		CannotPurchase = 0,
		FirstPoint     = 1,
		AddPoints      = 2,
		MaxPoints      = 3,
		MAX            = 4
	};

	/**
	 * Enum OakGame.ESkillScreenReceiveHighlightState
	 */
	enum class ESkillScreenReceiveHighlightState : uint8_t
	{
		Off       = 0,
		Available = 1,
		Active    = 2,
		MAX       = 3
	};

	/**
	 * Enum OakGame.ESkillScreenLoadoutSlotClearability
	 */
	enum class ESkillScreenLoadoutSlotClearability : uint8_t
	{
		CannotClear_Error            = 0,
		CannotClear_SlotEmpty        = 1,
		CannotClear_SlotMustBeFilled = 2,
		CannotClear_AbilityInUse     = 3,
		CanClear                     = 4,
		MAX                          = 5
	};

	/**
	 * Enum OakGame.EGFxSkillScreenLoadoutChoiceEquipState
	 */
	enum class EGFxSkillScreenLoadoutChoiceEquipState : uint8_t
	{
		Locked    = 0,
		Available = 1,
		Equipped  = 2,
		MAX       = 3
	};

	/**
	 * Enum OakGame.EGFxSkillScreenState
	 */
	enum class EGFxSkillScreenState : uint8_t
	{
		None                = 0,
		BranchesFocused     = 1,
		LoadoutEdit         = 2,
		PlayingUnlockAnim   = 3,
		TreeLocked_Info     = 4,
		TreeLocked_Branches = 5,
		DraggingSkillItem   = 6,
		MAX                 = 7
	};

	/**
	 * Enum OakGame.ESkillScreenSlotType
	 */
	enum class ESkillScreenSlotType : uint8_t
	{
		None       = 0,
		Compatible = 1,
		All        = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EGFxStatusMenuTransitionReason
	 */
	enum class EGFxStatusMenuTransitionReason : uint8_t
	{
		None     = 0,
		Pushed   = 1,
		NextPage = 2,
		PrevPage = 3,
		Switched = 4,
		Popped   = 5,
		MAX      = 6
	};

	/**
	 * Enum OakGame.EGFxStoreMenuTabType
	 */
	enum class EGFxStoreMenuTabType : uint8_t
	{
		Empty          = 0,
		Featured       = 1,
		Expansions     = 2,
		Customizations = 3,
		Purchased      = 4,
		MAX            = 5
	};

	/**
	 * Enum OakGame.ESubtitleLayoutType
	 */
	enum class ESubtitleLayoutType : uint8_t
	{
		None               = 0,
		SubtitlesOnly      = 1,
		ClosedCaptionsOnly = 2,
		Both               = 3,
		MAX                = 4
	};

	/**
	 * Enum OakGame.EGbxGFxSpinnerWidgetGoToMethod
	 */
	enum class EGbxGFxSpinnerWidgetGoToMethod : uint8_t
	{
		FromCurrent = 0,
		Immediately = 1,
		MAX         = 2
	};

	/**
	 * Enum OakGame.EGFxVaultHunterProfileCardView
	 */
	enum class EGFxVaultHunterProfileCardView : uint8_t
	{
		Skill     = 0,
		Inventory = 1,
		Stat      = 2,
		MAX       = 3
	};

	/**
	 * Enum OakGame.EGFxVaultHunterProfileCardMode
	 */
	enum class EGFxVaultHunterProfileCardMode : uint8_t
	{
		Unknown = 0,
		Friend  = 1,
		Self    = 2,
		MAX     = 3
	};

	/**
	 * Enum OakGame.EGFxVehiclePartWidgetState
	 */
	enum class EGFxVehiclePartWidgetState : uint8_t
	{
		On        = 0,
		Off       = 1,
		RollOn    = 2,
		RollOff   = 3,
		Condensed = 4,
		TurnIn    = 5,
		MAX       = 6
	};

	/**
	 * Enum OakGame.UGFxVehiclePartUnlockedWidgetState
	 */
	enum class EUGFxVehiclePartUnlockedWidgetState : uint8_t
	{
		UGFxVehiclePartUnlockedWidgetState_Off                                    = 0,
		UGFxVehiclePartUnlockedWidgetState_Playing                                = 1,
		UGFxVehiclePartUnlockedWidgetState_UGFxVehiclePartUnlockedWidgetState_MAX = 2
	};

	/**
	 * Enum OakGame.EGFxVehicleWeaponType
	 */
	enum class EGFxVehicleWeaponType : uint8_t
	{
		CHARGE   = 0,
		MAGAZINE = 1,
		HEAT     = 2,
		RECOVERY = 3,
		MAX      = 4
	};

	/**
	 * Enum OakGame.EGFxVendingMachineMenuBackpackState
	 */
	enum class EGFxVendingMachineMenuBackpackState : uint8_t
	{
		Unknown          = 0,
		Buy              = 1,
		Sell             = 2,
		Compare          = 3,
		CompareToMachine = 4,
		MAX              = 5
	};

	/**
	 * Enum OakGame.EVendingMachineSocketMapStates
	 */
	enum class EVendingMachineSocketMapStates : uint8_t
	{
		SOCKETMAP_BUY            = 0,
		SOCKETMAP_SELL           = 1,
		SOCKETMAP_COMPARE        = 2,
		SOCKETMAP_VENDINGCOMPARE = 3,
		SOCKETMAP_MAX            = 4
	};

	/**
	 * Enum OakGame.GFxVendingMachineDisplayMode
	 */
	enum class EGFxVendingMachineDisplayMode : uint8_t
	{
		GFxVendingMachineDisplayMode_GFXVENDOR_Buy     = 0,
		GFxVendingMachineDisplayMode_GFXVENDOR_Sell    = 1,
		GFxVendingMachineDisplayMode_GFXVENDOR_Buyback = 2,
		GFxVendingMachineDisplayMode_GFXVENDOR_END     = 3,
		GFxVendingMachineDisplayMode_GFXVENDOR_MAX     = 4
	};

	/**
	 * Enum OakGame.EGoreRegionType
	 */
	enum class EGoreRegionType : uint8_t
	{
		Head  = 0,
		Arm   = 1,
		Leg   = 2,
		Torso = 3,
		MAX   = 4
	};

	/**
	 * Enum OakGame.EChildPayloadType
	 */
	enum class EChildPayloadType : uint8_t
	{
		Payload_Divider  = 0,
		Payload_MiniMirv = 1,
		Payload_Mirv     = 2,
		Payload_Rain     = 3,
		Payload_Spring   = 4,
		Payload_Sticky   = 5,
		Payload_MAX      = 6
	};

	/**
	 * Enum OakGame.ELingeringDamageStyle
	 */
	enum class ELingeringDamageStyle : uint8_t
	{
		DamageStyle_Burst  = 0,
		DamageStyle_Beam   = 1,
		DamageStyle_Radius = 2,
		DamageStyle_MAX    = 3
	};

	/**
	 * Enum OakGame.EInstanceDataOperator
	 */
	enum class EInstanceDataOperator : uint8_t
	{
		Add      = 0,
		Multiply = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.ESpinDirection
	 */
	enum class ESpinDirection : uint8_t
	{
		SD_NoSpin           = 0,
		SD_Clockwise        = 1,
		SD_Counterclockwise = 2,
		SD_MAX              = 3
	};

	/**
	 * Enum OakGame.EHolsteredGearState
	 */
	enum class EHolsteredGearState : uint8_t
	{
		None      = 0,
		FadingIn  = 1,
		FadingOut = 2,
		MAX       = 3
	};

	/**
	 * Enum OakGame.EInWorldIconFadeType
	 */
	enum class EInWorldIconFadeType : uint8_t
	{
		None           = 0,
		Distance       = 1,
		TargetedRadius = 2,
		MAX            = 3
	};

	/**
	 * Enum OakGame.EInWorldIconClassType
	 */
	enum class EInWorldIconClassType : uint8_t
	{
		Icon      = 0,
		Nameplate = 1,
		MAX       = 2
	};

	/**
	 * Enum OakGame.EInWorldIconEdgeBehavior
	 */
	enum class EInWorldIconEdgeBehavior : uint8_t
	{
		Clamp = 0,
		Hide  = 1,
		MAX   = 2
	};

	/**
	 * Enum OakGame.ELootSpawnTiming
	 */
	enum class ELootSpawnTiming : uint8_t
	{
		OnEnabled    = 0,
		OnEnabling   = 1,
		OnAnimNotify = 2,
		MAX          = 3
	};

	/**
	 * Enum OakGame.EMissionDrivenLootableType
	 */
	enum class EMissionDrivenLootableType : uint8_t
	{
		None                       = 0,
		CopyPickupMissionObjective = 1,
		UseSelfMissionObjective    = 2,
		MAX                        = 3
	};

	/**
	 * Enum OakGame.ELootableOpenReason
	 */
	enum class ELootableOpenReason : uint8_t
	{
		Use    = 0,
		Damage = 1,
		MAX    = 2
	};

	/**
	 * Enum OakGame.EDebugMatchmakingFailure
	 */
	enum class EDebugMatchmakingFailure : uint8_t
	{
		None                        = 0,
		CreateMatchmakingSession    = 1,
		JoinMatchmakingSession      = 2,
		FindMatchmakingSession      = 3,
		FindGameplaySession         = 4,
		JoinGameplaySession         = 5,
		InitClientMatchmakingBeacon = 6,
		CreateHostMatchmakingBeacon = 7,
		MAX                         = 8
	};

	/**
	 * Enum OakGame.EMatchmakingError
	 */
	enum class EMatchmakingError : uint8_t
	{
		None                                = 0,
		StartHostingFailed                  = 1,
		StartMatchmakingRoundFailed         = 2,
		StartMatchmakingSearchFailed        = 3,
		CreateClientMatchmakingBeaconFailed = 4,
		SearchFailed                        = 5,
		JoinGameFailed                      = 6,
		RateLimit                           = 7,
		NetworkFailure                      = 8,
		ClientCriticalFailure               = 9,
		UpdateSessionFailed                 = 10,
		StartGameplayFailed                 = 11,
		SplitscreenJoinFailure              = 12,
		SplitscreenLeaveFailure             = 13,
		NoPlaylistContentAvailable          = 14,
		MAX                                 = 15
	};

	/**
	 * Enum OakGame.EMatchmakingRequirementComparisonOp
	 */
	enum class EMatchmakingRequirementComparisonOp : uint8_t
	{
		None        = 0,
		Equal       = 1,
		NotEqual    = 2,
		LessThan    = 3,
		GreaterThan = 4,
		MAX         = 5
	};

	/**
	 * Enum OakGame.EMatchmakingRequirementType
	 */
	enum class EMatchmakingRequirementType : uint8_t
	{
		None         = 0,
		PlayerLevel  = 1,
		PlotMission  = 2,
		DlcInstalled = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EMatchmakingSearchParameterOp
	 */
	enum class EMatchmakingSearchParameterOp : uint8_t
	{
		Invalid           = 0,
		Equals            = 1,
		NotEquals         = 2,
		GreaterThan       = 3,
		GreaterThanEquals = 4,
		LessThan          = 5,
		LessThanEquals    = 6,
		Max               = 7
	};

	/**
	 * Enum OakGame.EInitialPlayerStatus
	 */
	enum class EInitialPlayerStatus : uint8_t
	{
		NotSelected = 0,
		Selected    = 1,
		MAX         = 2
	};

	/**
	 * Enum OakGame.EOakAbilityTimerResult
	 */
	enum class EOakAbilityTimerResult : uint8_t
	{
		Pulsed   = 0,
		Finished = 1,
		Stopped  = 2,
		Replaced = 3,
		MAX      = 4
	};

	/**
	 * Enum OakGame.EOakAbilityTimerTickPolicy
	 */
	enum class EOakAbilityTimerTickPolicy : uint8_t
	{
		AlwaysTick     = 0,
		OnlyWhenActive = 1,
		MAX            = 2
	};

	/**
	 * Enum OakGame.EOakAbilityTimerReplacePolicy
	 */
	enum class EOakAbilityTimerReplacePolicy : uint8_t
	{
		KeepExisting    = 0,
		ReplaceExisting = 1,
		MAX             = 2
	};

	/**
	 * Enum OakGame.ESkillWidgetSlot
	 */
	enum class ESkillWidgetSlot : uint8_t
	{
		None                     = 0,
		ActionSkillWidget        = 1,
		GrenadeActionSkillWidget = 2,
		MAX                      = 3
	};

	/**
	 * Enum OakGame.EOakAchievements
	 */
	enum class EOakAchievements : uint8_t
	{
		Invalid                              = 0,
		ReachLevel2                          = 1,
		ReachLevel10                         = 2,
		ReachLevel25                         = 3,
		ReachLevel50                         = 4,
		UnlockHeadsSkins                     = 5,
		UnlockVehicleParts                   = 6,
		UsePhotoMode                         = 7,
		WinDuel                              = 8,
		ReviveAnotherPlayer                  = 9,
		SendItemToFriend                     = 10,
		WinLiveGrenadeSlotMachine            = 11,
		PerfectScoreFiringRange              = 12,
		CrazyEarl                            = 13,
		EridianSlabs                         = 14,
		CompleteAllCircleOfSlaughter         = 15,
		DiscoverAllPandoraLocations          = 16,
		DiscoverAllEden6Locations            = 17,
		DiscoverAllPrometheaLocations        = 18,
		DiscoverAllNekrotaphayoLocations     = 19,
		DiscoverAllNamedLocations            = 20,
		CompleteSomeSideMissions             = 21,
		CompleteAllSideMissions              = 22,
		ClearAllProvingGrounds               = 23,
		DefeatAllLegendaryHunts              = 24,
		DefeatAllTargetsOfOpportunity        = 25,
		KillEnemyWithExplodingBarrel         = 26,
		KillEnemyWithGunBlade                = 27,
		KillMultipleEnemiesWithStickyGrenade = 28,
		EquipPurpleGear                      = 29,
		LoyaltyPackage                       = 30,
		CompleteMission1                     = 31,
		CompleteMission2                     = 32,
		CompleteMission3                     = 33,
		CompleteMission4                     = 34,
		CompleteMission5                     = 35,
		CompleteMission6                     = 36,
		CompleteMission7                     = 37,
		CompleteMission8                     = 38,
		CompleteMission9                     = 39,
		CompleteMission10                    = 40,
		CompleteMission11                    = 41,
		Suicide                              = 42,
		GoldenKey                            = 43,
		VaultRewards                         = 44,
		CompleteAllAchievements              = 45,
		DLC1_CompleteMissionVIP              = 46,
		DLC1_EmberChallenges                 = 47,
		DLC1_MayorChallenges                 = 48,
		DLC1_TorgueChallenges                = 49,
		DLC1_Blackjack                       = 50,
		DLC1_Clapstructor                    = 51,
		DLC1_DebtCollector                   = 52,
		DLC2_CompleteMission1                = 53,
		DLC2_CompleteFinalMission            = 54,
		DLC2_KillWendigo                     = 55,
		DLC2_DeathrapKill                    = 56,
		DLC2_CrewChallenges                  = 57,
		DLC2_CollectECHO                     = 58,
		DLC2_RareSpawns                      = 59,
		DLC2_FishJokes                       = 60,
		DLC3_CompleteAllAchievements         = 61,
		DLC3_CrewChallenges                  = 62,
		DLC3_CompleteSideMissions            = 63,
		DLC3_CompleteMission1                = 64,
		DLC3_CompleteMission2                = 65,
		DLC3_CompleteMission3                = 66,
		DLC3_CompleteMission4                = 67,
		DLC3_CompleteFinalMission            = 68,
		DLC4_CompleteMission1                = 69,
		DLC4_DefeatDarkLilith                = 70,
		DLC4_DestroyTheTrain                 = 71,
		DLC4_KillBenedict                    = 72,
		DLC4_DefeatPsychodin                 = 73,
		DLC4_OpenAllGates                    = 74,
		DLC4_SidesAndChallenges              = 75,
		DLC5_WinShootingSpreeRound           = 76,
		DLC5_Extract100PiecesOfGear          = 77,
		DLC5_ExploreEntireWhiteout           = 78,
		DLC6_SolveAllMysteries               = 79,
		DLC6_DefeatHemovorous                = 80,
		DLC6_DestroyMysteriousEridium        = 81,
		MAX                                  = 82
	};

	/**
	 * Enum OakGame.EOakAnimActionAbilityEndAction
	 */
	enum class EOakAnimActionAbilityEndAction : uint8_t
	{
		None       = 0,
		Stop       = 1,
		Abort      = 2,
		AbortReset = 3,
		MAX        = 4
	};

	/**
	 * Enum OakGame.EHostileAttachState
	 */
	enum class EHostileAttachState : uint8_t
	{
		Loop         = 0,
		Attack       = 1,
		GripFeedback = 2,
		GetDown      = 3,
		Ejected      = 4,
		Completed    = 5,
		MAX          = 6
	};

	/**
	 * Enum OakGame.ELeapOnVehicle_SeatType
	 */
	enum class ELeapOnVehicle_SeatType : uint8_t
	{
		SpecifiedSlot      = 0,
		Driver             = 1,
		Gunner             = 2,
		Passenger          = 3,
		Hostile            = 4,
		ELeapOnVehicle_MAX = 5
	};

	/**
	 * Enum OakGame.EOakActionAbilitySecondaryUseActionType
	 */
	enum class EOakActionAbilitySecondaryUseActionType : uint8_t
	{
		None      = 0,
		Primary   = 1,
		Secondary = 2,
		MAX       = 3
	};

	/**
	 * Enum OakGame.EOakActionAbilityStopAction
	 */
	enum class EOakActionAbilityStopAction : uint8_t
	{
		Normal    = 0,
		Expidited = 1,
		Abort     = 2,
		MAX       = 3
	};

	/**
	 * Enum OakGame.ECloneSwapReason
	 */
	enum class ECloneSwapReason : uint8_t
	{
		Manual = 0,
		NewU   = 1,
		MAX    = 2
	};

	/**
	 * Enum OakGame.EOakActionAbilityPetModType
	 */
	enum class EOakActionAbilityPetModType : uint8_t
	{
		None = 0,
		Mod1 = 1,
		Mod2 = 2,
		Mod3 = 3,
		Mod4 = 4,
		Mod5 = 5,
		MAX  = 6
	};

	/**
	 * Enum OakGame.EOakActionAbilityPetEvolutionType
	 */
	enum class EOakActionAbilityPetEvolutionType : uint8_t
	{
		None       = 0,
		Evolution1 = 1,
		Evolution2 = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EOakActionAbilityPetType
	 */
	enum class EOakActionAbilityPetType : uint8_t
	{
		None      = 0,
		Spiderant = 1,
		Jabbermon = 2,
		Skag      = 3,
		Loader    = 4,
		MAX       = 5
	};

	/**
	 * Enum OakGame.EPhaseTranceEffectTargetType
	 */
	enum class EPhaseTranceEffectTargetType : uint8_t
	{
		Actor    = 0,
		Location = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.EPhaseTranceElementalType
	 */
	enum class EPhaseTranceElementalType : uint8_t
	{
		None     = 0,
		Element1 = 1,
		Element2 = 2,
		Element3 = 3,
		Element4 = 4,
		MAX      = 5
	};

	/**
	 * Enum OakGame.EPhaseTranceEffectType
	 */
	enum class EPhaseTranceEffectType : uint8_t
	{
		None    = 0,
		Effect1 = 1,
		Effect2 = 2,
		Effect3 = 3,
		Effect4 = 4,
		Effect5 = 5,
		Effect6 = 6,
		MAX     = 7
	};

	/**
	 * Enum OakGame.EPhaseTranceAttackFamilyType
	 */
	enum class EPhaseTranceAttackFamilyType : uint8_t
	{
		None          = 0,
		AttackFamily1 = 1,
		AttackFamily2 = 2,
		AttackFamily3 = 3,
		AttackFamily4 = 4,
		MAX           = 5
	};

	/**
	 * Enum OakGame.EOperativeBarrierModType
	 */
	enum class EOperativeBarrierModType : uint8_t
	{
		Mod1 = 0,
		Mod2 = 1,
		Mod3 = 2,
		Mod4 = 3,
		Mod5 = 4,
		Mod6 = 5,
		MAX  = 6
	};

	/**
	 * Enum OakGame.EDigiCloneModType
	 */
	enum class EDigiCloneModType : uint8_t
	{
		Mod1 = 0,
		Mod2 = 1,
		Mod3 = 2,
		Mod4 = 3,
		Mod5 = 4,
		Mod6 = 5,
		Mod7 = 6,
		Mod8 = 7,
		Mod9 = 8,
		MAX  = 9
	};

	/**
	 * Enum OakGame.EGRMLNModType
	 */
	enum class EGRMLNModType : uint8_t
	{
		Mod1 = 0,
		Mod2 = 1,
		Mod3 = 2,
		Mod4 = 3,
		Mod5 = 4,
		Mod6 = 5,
		MAX  = 6
	};

	/**
	 * Enum OakGame.EIronBearUIHardpointType
	 */
	enum class EIronBearUIHardpointType : uint8_t
	{
		GRENADE_LAUNCHER   = 0,
		MINIGUN            = 1,
		BEARFIST           = 2,
		FALCON_STRIKE      = 3,
		SALAMANDER_THROWER = 4,
		BUBBLE_SHIELD      = 5,
		RAILGUN            = 6,
		MAX                = 7
	};

	/**
	 * Enum OakGame.EIronBearModType
	 */
	enum class EIronBearModType : uint8_t
	{
		None = 0,
		Mod1 = 1,
		Mod2 = 2,
		Mod3 = 3,
		MAX  = 4
	};

	/**
	 * Enum OakGame.EOakAISwarmRotation
	 */
	enum class EOakAISwarmRotation : uint8_t
	{
		None    = 0,
		Strafe  = 1,
		Forward = 2,
		MAX     = 3
	};

	/**
	 * Enum OakGame.ECARRestrictionType
	 */
	enum class ECARRestrictionType : uint8_t
	{
		Default = 0,
		DLC3    = 1,
		MAX     = 2
	};

	/**
	 * Enum OakGame.ECARPartType
	 */
	enum class ECARPartType : uint8_t
	{
		Wheel         = 0,
		Armor         = 1,
		CoreMod       = 2,
		GunnerWeapon  = 3,
		DriverWeapon  = 4,
		Ornament      = 5,
		MaterialDecal = 6,
		Material      = 7,
		None          = 8,
		MAX           = 9
	};

	/**
	 * Enum OakGame.EChallengRewardFormattingType
	 */
	enum class EChallengRewardFormattingType : uint8_t
	{
		Cash    = 0,
		Eridium = 1,
		Other   = 2,
		MAX     = 3
	};

	/**
	 * Enum OakGame.ECameraAttachState
	 */
	enum class ECameraAttachState : uint8_t
	{
		CAS_Dettached = 0,
		CAS_Attached  = 1,
		CAS_MAX       = 2
	};

	/**
	 * Enum OakGame.EVehicleArchetype
	 */
	enum class EVehicleArchetype : uint8_t
	{
		Null      = 0,
		Technical = 1,
		Outrunner = 2,
		Revolver  = 3,
		Emperor   = 4,
		MAX       = 5
	};

	/**
	 * Enum OakGame.ECinematicState
	 */
	enum class ECinematicState : uint8_t
	{
		Inactive        = 0,
		PlayingIntro    = 1,
		PlayingSequence = 2,
		MAX             = 3
	};

	/**
	 * Enum OakGame.EOakMayhemModeConditionType
	 */
	enum class EOakMayhemModeConditionType : uint8_t
	{
		IsMayhemModeActive = 0,
		CompareMayhemLevel = 1,
		MAX                = 2
	};

	/**
	 * Enum OakGame.EHealthTypeState
	 */
	enum class EHealthTypeState : uint8_t
	{
		Normal   = 0,
		Low      = 1,
		VeryLow  = 2,
		Depleted = 3,
		MAX      = 4
	};

	/**
	 * Enum OakGame.EDamageInstigatorClassification
	 */
	enum class EDamageInstigatorClassification : uint8_t
	{
		Other              = 0,
		PlayerVersusPlayer = 1,
		PlayerVersusAI     = 2,
		AIVersusPlayer     = 3,
		MAX                = 4
	};

	/**
	 * Enum OakGame.EOakElementalDeathEffects
	 */
	enum class EOakElementalDeathEffects : uint8_t
	{
		Default  = 0,
		Custom   = 1,
		Disabled = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EUIDialogCallout
	 */
	enum class EUIDialogCallout : uint8_t
	{
		OutOfGrenades     = 0,
		EquipAskillFailed = 1,
		EquipItemFailed   = 2,
		RemoveItemFailed  = 3,
		InsufficientFunds = 4,
		MAX               = 5
	};

	/**
	 * Enum OakGame.EGRMLNHardpointType
	 */
	enum class EGRMLNHardpointType : uint8_t
	{
		None       = 0,
		MachineGun = 1,
		Mod4       = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EOakDroneFacingMode
	 */
	enum class EOakDroneFacingMode : uint8_t
	{
		None               = 0,
		FaceMoveDir        = 1,
		FaceTarget         = 2,
		FaceMovementTarget = 3,
		MAX                = 4
	};

	/**
	 * Enum OakGame.EOakDroneMovementMode
	 */
	enum class EOakDroneMovementMode : uint8_t
	{
		Projectile    = 0,
		FlyToTarget   = 1,
		HoverAtTarget = 2,
		HoverAtOwner  = 3,
		MAX           = 4
	};

	/**
	 * Enum OakGame.EOakElementalStackBucketType
	 */
	enum class EOakElementalStackBucketType : uint8_t
	{
		Unknown              = 0,
		Character            = 1,
		Weapon               = 2,
		Grenade              = 3,
		InteractiveObject    = 4,
		ElementalInteraction = 5,
		MAX                  = 6
	};

	/**
	 * Enum OakGame.EInviteType
	 */
	enum class EInviteType : uint8_t
	{
		Public      = 0,
		InviteOnly  = 1,
		FriendsOnly = 2,
		MAX         = 3
	};

	/**
	 * Enum OakGame.EFriendSyncState
	 */
	enum class EFriendSyncState : uint8_t
	{
		Disabled = 0,
		Enabled  = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.ECrossplayState
	 */
	enum class ECrossplayState : uint8_t
	{
		Disabled = 0,
		Enabled  = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.ENetworkType
	 */
	enum class ENetworkType : uint8_t
	{
		Offline = 0,
		Lan     = 1,
		Online  = 2,
		MAX     = 3
	};

	/**
	 * Enum OakGame.EPlayerInputLockType
	 */
	enum class EPlayerInputLockType : uint8_t
	{
		None     = 0,
		All      = 1,
		Movement = 2,
		Looking  = 3,
		Jumping  = 4,
		Weapon   = 5,
		MAX      = 6
	};

	/**
	 * Enum OakGame.EActivityCompletionFriendEventType
	 */
	enum class EActivityCompletionFriendEventType : uint8_t
	{
		RaidCompletion              = 0,
		CircleOfSlaughterCompletion = 1,
		ProvingGroundsCompletion    = 2,
		MAX                         = 3
	};

	/**
	 * Enum OakGame.EBenchmarkDataOutputMode
	 */
	enum class EBenchmarkDataOutputMode : uint8_t
	{
		None        = 0,
		Summary     = 1,
		DetailedCSV = 2,
		MAX         = 3
	};

	/**
	 * Enum OakGame.EAmbientOcclusionQuality
	 */
	enum class EAmbientOcclusionQuality : uint8_t
	{
		Off    = 0,
		Low    = 1,
		Medium = 2,
		High   = 3,
		Ultra  = 4,
		MAX    = 5
	};

	/**
	 * Enum OakGame.ECharacterDetail
	 */
	enum class ECharacterDetail : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.ECharacterTextureDetail
	 */
	enum class ECharacterTextureDetail : uint8_t
	{
		Low        = 0,
		Medium     = 1,
		High       = 2,
		Ultra      = 3,
		Deprecated = 4,
		MAX        = 5
	};

	/**
	 * Enum OakGame.EScreenSpaceReflections
	 */
	enum class EScreenSpaceReflections : uint8_t
	{
		Off    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EVolumetricFogType
	 */
	enum class EVolumetricFogType : uint8_t
	{
		Off    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EFoliageDensity
	 */
	enum class EFoliageDensity : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.ETerrainType
	 */
	enum class ETerrainType : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EEnvironmentDetail
	 */
	enum class EEnvironmentDetail : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EDrawDistance
	 */
	enum class EDrawDistance : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EEnvironmentTextureDetail
	 */
	enum class EEnvironmentTextureDetail : uint8_t
	{
		Low        = 0,
		Medium     = 1,
		High       = 2,
		Ultra      = 3,
		Deprecated = 4,
		MAX        = 5
	};

	/**
	 * Enum OakGame.EShadowQuality
	 */
	enum class EShadowQuality : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EAnisotropicFilteringType
	 */
	enum class EAnisotropicFilteringType : uint8_t
	{
		Trilinear = 0,
		TwoX      = 1,
		FourX     = 2,
		EightX    = 3,
		SixteenX  = 4,
		MAX       = 5
	};

	/**
	 * Enum OakGame.EMaterialQuality
	 */
	enum class EMaterialQuality : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.ETextureStreamingQuality
	 */
	enum class ETextureStreamingQuality : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		Ultra  = 3,
		MAX    = 4
	};

	/**
	 * Enum OakGame.EGraphicsQuality
	 */
	enum class EGraphicsQuality : uint8_t
	{
		VeryLow   = 0,
		Low       = 1,
		Medium    = 2,
		High      = 3,
		Ultra     = 4,
		Badass    = 5,
		Undefined = 6,
		MAX       = 7
	};

	/**
	 * Enum OakGame.EFrameRateLimit
	 */
	enum class EFrameRateLimit : uint8_t
	{
		Smooth22_62FPS = 0,
		Capped30FPS    = 1,
		Capped60FPS    = 2,
		Capped120FPS   = 3,
		Unlimited      = 4,
		Custom         = 5,
		MAX            = 6
	};

	/**
	 * Enum OakGame.EResolutionScale
	 */
	enum class EResolutionScale : uint8_t
	{
		Scale     = 0,
		Scale01   = 1,
		Scale02   = 2,
		Scale03   = 3,
		Scale04   = 4,
		Scale05   = 5,
		Scale06   = 6,
		Scale_MAX = 7
	};

	/**
	 * Enum OakGame.ESupportedAspectRatios
	 */
	enum class ESupportedAspectRatios : uint8_t
	{
		AspectRatio_16          = 0,
		AspectRatio_1601        = 1,
		AspectRatio_32          = 2,
		AspectRatio_21          = 3,
		AspectRatio_Unsupported = 4,
		AspectRatio_MAX         = 5
	};

	/**
	 * Enum OakGame.EHUDType
	 */
	enum class EHUDType : uint8_t
	{
		NoHUD             = 0,
		StandardPlayerHUD = 1,
		VehicleHUD        = 2,
		IronbearHUD       = 3,
		MAX               = 4
	};

	/**
	 * Enum OakGame.EOakInputActionEventType
	 */
	enum class EOakInputActionEventType : uint8_t
	{
		None   = 0,
		Button = 1,
		Axis   = 2,
		MAX    = 3
	};

	/**
	 * Enum OakGame.EPickupFlyToSettingsType
	 */
	enum class EPickupFlyToSettingsType : uint8_t
	{
		Dropped           = 0,
		Container         = 1,
		AutoLootContainer = 2,
		MAX               = 3
	};

	/**
	 * Enum OakGame.EOakInventoryItemFlags
	 */
	enum class EOakInventoryItemFlags : uint8_t
	{
		HasBeenSeenInInventoryMenu = 0,
		MarkedAsFavorite           = 1,
		MarkedAsJunk               = 2,
		MAX                        = 3
	};

	/**
	 * Enum OakGame.EOakInventoryMenuPaperDollSlotAdjacency
	 */
	enum class EOakInventoryMenuPaperDollSlotAdjacency : uint8_t
	{
		Mid   = 0,
		Left  = 1,
		Right = 2,
		MAX   = 3
	};

	/**
	 * Enum OakGame.EOakInventoryMenuAmmoState
	 */
	enum class EOakInventoryMenuAmmoState : uint8_t
	{
		Default          = 0,
		Highlighted      = 1,
		HighlightedEmpty = 2,
		Low              = 3,
		Empty            = 4,
		Full             = 5,
		MAX              = 6
	};

	/**
	 * Enum OakGame.EOakInventoryMenuWhatChanged
	 */
	enum class EOakInventoryMenuWhatChanged : uint8_t
	{
		Initial        = 0,
		RefreshAll     = 1,
		SortChanged    = 2,
		AddedItem      = 3,
		RemovedItem    = 4,
		UnequippedItem = 5,
		EquippedItem   = 6,
		MAX            = 7
	};

	/**
	 * Enum OakGame.EOakInventoryMenuSortMode
	 */
	enum class EOakInventoryMenuSortMode : uint8_t
	{
		NewestFirst  = 0,
		Type         = 1,
		Level        = 2,
		Manufacturer = 3,
		Rarity       = 4,
		MAX          = 5
	};

	/**
	 * Enum OakGame.EOakInventoryItemWidgetSelectType
	 */
	enum class EOakInventoryItemWidgetSelectType : uint8_t
	{
		Normal           = 0,
		HideWhenSelected = 1,
		PopoutSelection  = 2,
		MAX              = 3
	};

	/**
	 * Enum OakGame.EOakInventoryItemWidgetDisabledReason
	 */
	enum class EOakInventoryItemWidgetDisabledReason : uint8_t
	{
		NotDisabled          = 0,
		SlotLocked           = 1,
		BrowsingAnotherPanel = 2,
		CantEquipInSlot      = 3,
		MAX                  = 4
	};

	/**
	 * Enum OakGame.EOakStatusMenuInventoryEvent
	 */
	enum class EOakStatusMenuInventoryEvent : uint8_t
	{
		PaperDollItemHighlighted = 0,
		BackpackItemHighlighted  = 1,
		BackpackHighlighted      = 2,
		PaperDollHighlighted     = 3,
		MAX                      = 4
	};

	/**
	 * Enum OakGame.EOakInventoryRarityBalanceTableType
	 */
	enum class EOakInventoryRarityBalanceTableType : uint8_t
	{
		Weapon = 0,
		MAX    = 1
	};

	/**
	 * Enum OakGame.EMailItemType
	 */
	enum class EMailItemType : uint8_t
	{
		None                    = 0,
		GearboxMail             = 1,
		PlayerMail              = 2,
		StreamerMail            = 3,
		NPCMail                 = 4,
		DownloadableEntitlement = 5,
		MAX                     = 6
	};

	/**
	 * Enum OakGame.EReapOrder
	 */
	enum class EReapOrder : uint8_t
	{
		OldestFirst = 0,
		NewestFirst = 1,
		Random      = 2,
		MAX         = 3
	};

	/**
	 * Enum OakGame.EOakManufacturerBalanceTableType
	 */
	enum class EOakManufacturerBalanceTableType : uint8_t
	{
		Weapon = 0,
		MAX    = 1
	};

	/**
	 * Enum OakGame.EOakMinimapIconComponentType
	 */
	enum class EOakMinimapIconComponentType : uint8_t
	{
		Manual                   = 0,
		TargetingComponentDriven = 1,
		WhileAlive               = 2,
		MAX                      = 3
	};

	/**
	 * Enum OakGame.EOakMissionType
	 */
	enum class EOakMissionType : uint8_t
	{
		Default           = 0,
		Plot              = 1,
		Side              = 2,
		ProvingGrounds    = 3,
		CircleOfSlaughter = 4,
		Raid              = 5,
		RareSpawn         = 6,
		Count             = 7,
		MAX               = 8
	};

	/**
	 * Enum OakGame.EOakMusicLayer
	 */
	enum class EOakMusicLayer : uint8_t
	{
		Aux        = 0,
		Bass       = 1,
		Chord      = 2,
		Melody     = 3,
		Perc_Kick  = 4,
		Perc_Large = 5,
		Perc_Small = 6,
		MAX        = 7
	};

	/**
	 * Enum OakGame.EOakMusicPart
	 */
	enum class EOakMusicPart : uint8_t
	{
		Part_None           = 0,
		Part                = 1,
		Part01              = 2,
		Part02              = 3,
		Part03              = 4,
		Part04              = 5,
		Part05              = 6,
		Part06              = 7,
		Part07              = 8,
		Part08              = 9,
		Part09              = 10,
		Part10              = 11,
		Part11              = 12,
		Part12              = 13,
		Part13              = 14,
		Part14              = 15,
		Part15              = 16,
		Part16              = 17,
		Part17              = 18,
		Part18              = 19,
		Part19              = 20,
		Part_SparseAmbiance = 21,
		Part_MAX            = 22
	};

	/**
	 * Enum OakGame.EOakMusicSection
	 */
	enum class EOakMusicSection : uint8_t
	{
		Section_None = 0,
		Section      = 1,
		Section01    = 2,
		Section02    = 3,
		Section03    = 4,
		Section04    = 5,
		Section05    = 6,
		Section06    = 7,
		Section07    = 8,
		Section08    = 9,
		Section09    = 10,
		Section_MAX  = 11
	};

	/**
	 * Enum OakGame.EDrivingOverridePriority
	 */
	enum class EDrivingOverridePriority : uint8_t
	{
		AINode   = 0,
		Aspect   = 1,
		Scripted = 2,
		Count    = 3,
		Invalid  = 4,
		MAX      = 5
	};

	/**
	 * Enum OakGame.ESpeedModifierOverridePriority
	 */
	enum class ESpeedModifierOverridePriority : uint8_t
	{
		AINode   = 0,
		Aspect   = 1,
		Scripted = 2,
		Escort   = 3,
		UserEdge = 4,
		Count    = 5,
		Invalid  = 6,
		MAX      = 7
	};

	/**
	 * Enum OakGame.EOakOnlineLobbyTalkingState
	 */
	enum class EOakOnlineLobbyTalkingState : uint8_t
	{
		NotTalking = 0,
		Talking    = 1,
		Muted      = 2,
		MAX        = 3
	};

	/**
	 * Enum OakGame.EOakOnlineLobbyPlayerPlateState
	 */
	enum class EOakOnlineLobbyPlayerPlateState : uint8_t
	{
		Offline           = 0,
		WaitingForPlayers = 1,
		Invite            = 2,
		SplitPlayerToJoin = 3,
		PlayerListed      = 4,
		MAX               = 5
	};

	/**
	 * Enum OakGame.EOakOnlineLobbyConnectivityState
	 */
	enum class EOakOnlineLobbyConnectivityState : uint8_t
	{
		Unknown = 0,
		Low     = 1,
		Medium  = 2,
		High    = 3,
		None    = 4,
		MAX     = 5
	};

	/**
	 * Enum OakGame.EOakPassiveAbilityHUDIconActivationType
	 */
	enum class EOakPassiveAbilityHUDIconActivationType : uint8_t
	{
		TriggeredEffect = 0,
		StatusEffect    = 1,
		AbilityTimer    = 2,
		Manual          = 3,
		ActiveState     = 4,
		MAX             = 5
	};

	/**
	 * Enum OakGame.EAdditionalTriggeredEffectTargets
	 */
	enum class EAdditionalTriggeredEffectTargets : uint8_t
	{
		None         = 0,
		MyCompanions = 1,
		MyAllies     = 2,
		MAX          = 3
	};

	/**
	 * Enum OakGame.EOakPassiveAbilitySirenArmDurationType
	 */
	enum class EOakPassiveAbilitySirenArmDurationType : uint8_t
	{
		None         = 0,
		AbilityState = 1,
		AbilityTimer = 2,
		StatusEffect = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.ESkillItemRealType
	 */
	enum class ESkillItemRealType : uint8_t
	{
		None             = 0,
		PlayerAbility    = 1,
		Augment          = 2,
		AugmentSlot      = 3,
		CharacterAugment = 4,
		MAX              = 5
	};

	/**
	 * Enum OakGame.ESkillItemDisplayType
	 */
	enum class ESkillItemDisplayType : uint8_t
	{
		None         = 0,
		ActionSkill  = 1,
		ModPrimary   = 2,
		ModSecondary = 3,
		Passive      = 4,
		ClassAbility = 5,
		MAX          = 6
	};

	/**
	 * Enum OakGame.ESkillItemLayoutInfo
	 */
	enum class ESkillItemLayoutInfo : uint8_t
	{
		Left      = 0,
		Center    = 1,
		Right     = 2,
		LeftWing  = 3,
		RightWing = 4,
		MAX       = 5
	};

	/**
	 * Enum OakGame.EScreenCalibrationMode
	 */
	enum class EScreenCalibrationMode : uint8_t
	{
		Off                             = 0,
		HDRBrightness                   = 1,
		StandardBrightnessAndBlackLevel = 2,
		MAX                             = 3
	};

	/**
	 * Enum OakGame.EJoystickScheme
	 */
	enum class EJoystickScheme : uint8_t
	{
		Classic            = 0,
		SouthPaw           = 1,
		OldSchool          = 2,
		OldSchool_Southpaw = 3,
		Count              = 4,
		MAX                = 5
	};

	/**
	 * Enum OakGame.EDrivingButtonScheme
	 */
	enum class EDrivingButtonScheme : uint8_t
	{
		Classic              = 0,
		CameraRelative       = 1,
		VehicleRelative      = 2,
		VehicleRelativeStick = 3,
		Count                = 4,
		MAX                  = 5
	};

	/**
	 * Enum OakGame.EWalkingButtonScheme
	 */
	enum class EWalkingButtonScheme : uint8_t
	{
		Default = 0,
		Classic = 1,
		Count   = 2,
		MAX     = 3
	};

	/**
	 * Enum OakGame.EGameJoinNotificationState
	 */
	enum class EGameJoinNotificationState : uint8_t
	{
		EGJNS_None                  = 0,
		EGJNS_PlayerStateReplicated = 1,
		EGJNS_SyncLevelReplicated   = 2,
		EGJNS_PlayerNotified        = 3,
		EGJNS_MAX                   = 4
	};

	/**
	 * Enum OakGame.EPresentableStatusEffectValueStrategy
	 */
	enum class EPresentableStatusEffectValueStrategy : uint8_t
	{
		PercentOfMaxHealth = 0,
		InstanceCount      = 1,
		MAX                = 2
	};

	/**
	 * Enum OakGame.ERadiateMovementType
	 */
	enum class ERadiateMovementType : uint8_t
	{
		FollowInitialDirection = 0,
		SimpleMoveOnGround     = 1,
		MAX                    = 2
	};

	/**
	 * Enum OakGame.ERadiateMethod
	 */
	enum class ERadiateMethod : uint8_t
	{
		Velocity       = 0,
		MinMaxDistance = 1,
		MAX            = 2
	};

	/**
	 * Enum OakGame.EClassRepNodeMapping
	 */
	enum class EClassRepNodeMapping : uint8_t
	{
		NotRouted              = 0,
		RelevantForConnections = 1,
		Spatialize_Static      = 2,
		Spatialize_Dynamic     = 3,
		Spatialize_Dormancy    = 4,
		MAX                    = 5
	};

	/**
	 * Enum OakGame.EEventTriggerType
	 */
	enum class EEventTriggerType : uint8_t
	{
		StreamingEvent_DirectorTriggered = 0,
		StreamingEvent_WorldTriggered    = 1,
		StreamingEvent_ViewerTriggered   = 2,
		StreamingEvent_MAX               = 3
	};

	/**
	 * Enum OakGame.EStreamingInteractionEventState
	 */
	enum class EStreamingInteractionEventState : uint8_t
	{
		StreamingEvent_Disabled    = 0,
		StreamingEvent_Preliminary = 1,
		StreamingEvent_Standby     = 2,
		StreamingEvent_Active      = 3,
		StreamingEvent_MAX         = 4
	};

	/**
	 * Enum OakGame.ECharacterProfileUpdateStep
	 */
	enum class ECharacterProfileUpdateStep : uint8_t
	{
		Step_MainCharacterInfo  = 0,
		Step_MainCharacterInfo2 = 1,
		Step_Inventory          = 2,
		Step_MAX                = 3
	};

	/**
	 * Enum OakGame.EStreamingManagerState
	 */
	enum class EStreamingManagerState : uint8_t
	{
		StreamingManager_Off         = 0,
		StreamingManager_Initialized = 1,
		StreamingManager_Active      = 2,
		StreamingManager_Paused      = 3,
		StreamingManager_MAX         = 4
	};

	/**
	 * Enum OakGame.EEndEventReasons
	 */
	enum class EEndEventReasons : uint8_t
	{
		Unknown        = 0,
		Success        = 1,
		NoParticipants = 2,
		Timeout        = 3,
		Error          = 4,
		Win            = 5,
		Draw           = 6,
		Lose           = 7,
		MapExited      = 8,
		MAX            = 9
	};

	/**
	 * Enum OakGame.EOakTriggerComponentEventType
	 */
	enum class EOakTriggerComponentEventType : uint8_t
	{
		Touch   = 0,
		UnTouch = 1,
		MAX     = 2
	};

	/**
	 * Enum OakGame.EOakUIChallengeDataProviderPopulateType
	 */
	enum class EOakUIChallengeDataProviderPopulateType : uint8_t
	{
		UNKNOWN = 0,
		Galaxy  = 1,
		Planet  = 2,
		Level   = 3,
		MAX     = 4
	};

	/**
	 * Enum OakGame.EVehicleInputMode
	 */
	enum class EVehicleInputMode : uint8_t
	{
		CameraRelative_Classic     = 0,
		CameraRelative_ThirdPerson = 1,
		VehicleRelative_LeftSide   = 2,
		VehicleRelative_StickOnly  = 3,
		Count                      = 4,
		MAX                        = 5
	};

	/**
	 * Enum OakGame.EVehiclePropertyValueType
	 */
	enum class EVehiclePropertyValueType : uint8_t
	{
		Speed_KPH        = 0,
		PlanarSpeed_KPH  = 1,
		ForwardSpeed_KPH = 2,
		Speed_MPH        = 3,
		PlanarSpeed_MPH  = 4,
		ForwardSpeed_MPH = 5,
		Mass             = 6,
		IsPlayerDriven   = 7,
		IsAIDriven       = 8,
		MAX              = 9
	};

	/**
	 * Enum OakGame.EVoGDisplayState
	 */
	enum class EVoGDisplayState : uint8_t
	{
		None      = 0,
		Inactive  = 1,
		FadingIn  = 2,
		Displayed = 3,
		FadingOut = 4,
		MAX       = 5
	};

	/**
	 * Enum OakGame.EOakWeaponPartType
	 */
	enum class EOakWeaponPartType : uint8_t
	{
		Grip       = 0,
		Foregrip   = 1,
		Mag        = 2,
		Mode       = 3,
		ModeSwitch = 4,
		Barrel     = 5,
		Scope      = 6,
		Reload     = 7,
		Melee      = 8,
		Bolt       = 9,
		Trigger    = 10,
		Hammer     = 11,
		CustomA    = 12,
		CustomB    = 13,
		MAX        = 14
	};

	/**
	 * Enum OakGame.VehicleWeapons
	 */
	enum class EVehicleWeapons : uint8_t
	{
		VehicleWeapons_Technical_BarrelLauncher  = 0,
		VehicleWeapons_Technical_StickyBombs     = 1,
		VehicleWeapons_Technical_TireBombs       = 2,
		VehicleWeapons_Outrunner_HeavyMissile    = 3,
		VehicleWeapons_Outrunner_SwarmerMissile  = 4,
		VehicleWeapons_Outrunner_ShotgunMissile  = 5,
		VehicleWeapons_Emperor_Entropy           = 6,
		VehicleWeapons_Emperor_Hellfire          = 7,
		VehicleWeapons_Outrunner_FlameThrower    = 8,
		VehicleWeapons_Outrunner_TeslaCoil       = 9,
		VehicleWeapons_Technical_MachineGun      = 10,
		VehicleWeapons_Technical_FlakCannon      = 11,
		VehicleWeapons_Revolver_SpikeLauncher    = 12,
		VehicleWeapons_Revolver_SawBladeLauncher = 13,
		VehicleWeapons_Revolver_GrenadeLauncher  = 14,
		VehicleWeapons_Emperor_PulseRifle        = 15,
		VehicleWeapons_Emperor_BouncingLaser     = 16,
		VehicleWeapons_VehicleWeapons_MAX        = 17
	};

	/**
	 * Enum OakGame.EWeaponAudioBodyLoopState
	 */
	enum class EWeaponAudioBodyLoopState : uint8_t
	{
		Active    = 0,
		Equipping = 1,
		Reloading = 2,
		Invalid   = 3,
		MAX       = 4
	};

	/**
	 * Enum OakGame.EWeaponAudioBodyLoopType
	 */
	enum class EWeaponAudioBodyLoopType : uint8_t
	{
		PlayerOnly         = 0,
		BothPlayersAndNPCs = 1,
		NPCOnly            = 2,
		MAX                = 3
	};

	/**
	 * Enum OakGame.EOnlineMessageAnimationEnum
	 */
	enum class EOnlineMessageAnimationEnum : uint8_t
	{
		NONE            = 0,
		EXIT_ANIMATION  = 1,
		INTRO_ANIMATION = 2,
		MAX             = 3
	};

	/**
	 * Enum OakGame.EOperativeBarrierState
	 */
	enum class EOperativeBarrierState : uint8_t
	{
		Activating   = 0,
		Carried      = 1,
		Deployed     = 2,
		ShuttingDown = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EOptionType
	 */
	enum class EOptionType : uint8_t
	{
		Option_TODO                                  = 0,
		Option_Title                                 = 1,
		Option_Keybinding                            = 2,
		Gameplay_InvertMapPitchControls              = 3,
		Gameplay_InvertMapYawControls                = 4,
		Audio_MasterVolume                           = 5,
		Audio_MusicVolume                            = 6,
		Audio_SoundEffectVolume                      = 7,
		Audio_VoiceVolume                            = 8,
		Audio_SoundMode                              = 9,
		Audio_PlayerCallouts                         = 10,
		Audio_MuteAudioOnFocusLost                   = 11,
		Audio_ControllerAudio                        = 12,
		Audio_PushToTalk                             = 13,
		Audio_VoiceChatVolume                        = 14,
		Audio_EnableMicrosoftSpatial_Available       = 15,
		Audio_EnableMicrosoftSpatial_Unavailable     = 16,
		Gameplay_ResetTutorials                      = 17,
		Gameplay_IndividualDifficulty                = 18,
		Gameplay_EnableTrainingMessages              = 19,
		Gameplay_MPHOrKPH                            = 20,
		Gameplay_CenterCrosshair                     = 21,
		Gameplay_FixedMinimapRotation                = 22,
		Gameplay_CensorGore                          = 23,
		Gameplay_MinimapLegendaries                  = 24,
		Network_NetworkConnection                    = 25,
		Network_CrossplayState                       = 26,
		Network_FriendSync                           = 27,
		Network_MatchmakingRegion                    = 28,
		Network_HideTextChat                         = 29,
		Network_TradeRequest                         = 30,
		Network_PlayerToasts                         = 31,
		Network_ToastsDuration                       = 32,
		Network_StreamingService                     = 33,
		Network_IncreasedSubscribersChance           = 34,
		Network_RareChestEventEnabled                = 35,
		Network_BadassEventEnabled                   = 36,
		Network_BadassEventCooldown                  = 37,
		Network_PinataEventEnabled                   = 38,
		Network_MoxxisDrinkEventEnabled              = 39,
		Network_MoxxisDrinkEventBitsProductId        = 40,
		Network_ExtractionEventEnabled               = 41,
		Graphics_WindowMode                          = 42,
		Graphics_Resolutions                         = 43,
		Graphics_VSync                               = 44,
		Graphics_FieldOfView                         = 45,
		Graphics_EnableMotionBlur                    = 46,
		Graphics_TargetDisplay                       = 47,
		Graphics_GraphicsMode                        = 48,
		Graphics_CalibrateSafeArea                   = 49,
		Graphics_CalibrateDisplay                    = 50,
		Graphics_VehicleFieldOfView                  = 51,
		Graphics_FramerateLimiter                    = 52,
		Graphics_EnableCAS                           = 53,
		Graphics_PreferredAPI                        = 54,
		Graphics_AspectRatio                         = 55,
		Graphics_RefreshRate                         = 56,
		Graphics_FramerateLimitCustom                = 57,
		Graphics_ResolutionScale                     = 58,
		Graphics_HUDScaleMultiplier                  = 59,
		Graphics_SplitScreenConfig                   = 60,
		AdvancedGraphics_GraphicsQuality             = 61,
		AdvancedGraphics_AntialiasingMode            = 62,
		AdvancedGraphics_AnisotropicFiltering        = 63,
		AdvancedGraphics_DisplayPerformanceStats     = 64,
		AdvancedGraphics_TextureDetail               = 65,
		AdvancedGraphics_DrawDistance                = 66,
		AdvancedGraphics_Clutter                     = 67,
		AdvancedGraphics_Tessellation                = 68,
		AdvancedGraphics_Foliage                     = 69,
		AdvancedGraphics_VolumetricFog               = 70,
		AdvancedGraphics_ScreenSpaceReflections      = 71,
		AdvancedGraphics_CharacterTextureDetail      = 72,
		AdvancedGraphics_CharacterDetail             = 73,
		AdvancedGraphics_ShadowQuality               = 74,
		AdvancedGraphics_AmbientOcclusionQuality     = 75,
		AdvancedGraphics_CameraMotionBlur            = 76,
		AdvancedGraphics_ObjectMotionBlur            = 77,
		AdvancedGraphics_TextureStreaming            = 78,
		AdvancedGraphics_MaterialQuality             = 79,
		AdvancedGraphics_SystemInfo                  = 80,
		Benchmark_Run                                = 81,
		Benchmark_Type                               = 82,
		Benchmark_DataOutput                         = 83,
		Benchmark_Results                            = 84,
		Benchmark_Uncapped                           = 85,
		Benchmark_ResultPhase                        = 86,
		Benchmark_ResultMeasurementType              = 87,
		Benchmark_ResultDateTime                     = 88,
		Benchmark_ResultFPS                          = 89,
		Benchmark_ResultFrameTime                    = 90,
		Benchmark_ResultLoadTime                     = 91,
		Benchmark_ResultDataOutputPath               = 92,
		Benchmark_ResultDetails0                     = 93,
		Benchmark_ResultDetails1                     = 94,
		Benchmark_ResultDetails2                     = 95,
		Benchmark_ResultDetails3                     = 96,
		Benchmark_ResultDetails4                     = 97,
		Controls_MouseInvertLook                     = 98,
		Controls_MouseSmoothing                      = 99,
		Controls_LookSensitivity                     = 100,
		Controls_MouseWeaponZoomSensitivity          = 101,
		Controls_MouseVehicleSpensitivity            = 102,
		Controls_GamepadInvertVerticalLook           = 103,
		Controls_GamepadInvertHorizontalLook         = 104,
		Controls_GamepadLookSensitivity              = 105,
		Controls_GamepadWeaponZoomSensitivity        = 106,
		Controls_GamepadVehicleSensitivity           = 107,
		Controls_Vibration                           = 108,
		Controls_TriggerFeedback                     = 109,
		Controls_GamepadInvertMapVerticalLook        = 110,
		Controls_GamepadInvertMapHorizontalLook      = 111,
		Controls_MouseAcceleration                   = 112,
		Controls_EnableGamepad                       = 113,
		Controls_GamepadAimingInputStyle             = 114,
		Controls_InvertIronBearHardpoints            = 115,
		Controls_GlyphMode                           = 116,
		Controls_AllowWindowsKey                     = 117,
		ControlsAdvanced_InvertForwardMovement       = 118,
		ControlsAdvanced_InvertStrafeMovement        = 119,
		ControlsAdvanced_LeftDeadZoneCenter          = 120,
		ControlsAdvanced_LeftDeadZoneOuter           = 121,
		ControlsAdvanced_LeftAxialDeadZone           = 122,
		ControlsAdvanced_RightDeadZoneCenter         = 123,
		ControlsAdvanced_RightDeadZoneOuter          = 124,
		ControlsAdvanced_RightAxialDeadZone          = 125,
		Bindings_Move                                = 126,
		Bindings_Look                                = 127,
		Bindings_PCMoveForward                       = 128,
		Bindings_PCMoveBackward                      = 129,
		Bindings_PCStrafeLeft                        = 130,
		Bindings_PCStrafeRight                       = 131,
		Bindings_Jump                                = 132,
		Bindings_Crouch                              = 133,
		Bindings_Sprint                              = 134,
		Bindings_Fire                                = 135,
		Bindings_Reload                              = 136,
		Bindings_Melee                               = 137,
		Bindings_ActionSkill                         = 138,
		Bindings_GrenadeActionSkill2                 = 139,
		Bindings_NextWeapon                          = 140,
		Bindings_PrevWeapon                          = 141,
		Bindings_NextWeaponCycleModeUseAlt           = 142,
		Bindings_SelectWeapon1                       = 143,
		Bindings_SelectWeapon2                       = 144,
		Bindings_SelectWeapon3                       = 145,
		Bindings_SelectWeapon4                       = 146,
		Bindings_DropWeapon                          = 147,
		Bindings_SecondaryUseQuickMenu               = 148,
		Bindings_UseGiveUp                           = 149,
		Bindings_UseGiveUpReload                     = 150,
		Bindings_WeaponToggle                        = 151,
		Bindings_Zoom                                = 152,
		Bindings_Emote1                              = 153,
		Bindings_Emote2                              = 154,
		Bindings_Emote3                              = 155,
		Bindings_Emote4                              = 156,
		Bindings_UnrebindableButton                  = 157,
		Bindings_Vehicle_SteerForward                = 158,
		Bindings_Vehicle_SteerBackward               = 159,
		Bindings_Vehicle_WeaponPrimary               = 160,
		Bindings_Vehicle                             = 161,
		ControlSchemes_Driving                       = 162,
		ControlSchemes_DrivingJoystick               = 163,
		ControlSchemes_Walking                       = 164,
		ControlSchemes_WalkingJoystick               = 165,
		Accessibility_CrosshairFriendlyColor         = 166,
		Accessibility_CrosshairNeutralColor          = 167,
		Accessibility_CrosshairHostileColor          = 168,
		Accessibility_Subtitles                      = 169,
		Accessibility_ClosedCaptioning               = 170,
		Accessibility_CCTextSize                     = 171,
		Accessibility_CCBackgroundOpacity            = 172,
		Accessibility_AimAssist                      = 173,
		Accessibility_GamepadAimAssist               = 174,
		Accessibility_ZoomSnap                       = 175,
		Accessibility_GamepadZoomSnap                = 176,
		Accessibility_MouseZoomSnap                  = 177,
		Accessibility_WeaponZoom                     = 178,
		Accessibility_AutoCenter                     = 179,
		Accessibility_HeadBobScale                   = 180,
		Accessibility_Sprint                         = 181,
		Accessibility_Crouch                         = 182,
		Accessibility_MantleStyle                    = 183,
		Accessibility_MovementRecenters              = 184,
		Accessibility_ShowDamageNumberElementalIcons = 185,
		MAX                                          = 186
	};

	/**
	 * Enum OakGame.EOptionItemType
	 */
	enum class EOptionItemType : uint8_t
	{
		Title             = 0,
		Slider            = 1,
		Spinner           = 2,
		BooleanSpinner    = 3,
		Button            = 4,
		Controls          = 5,
		Keybinding_Button = 6,
		KeyBinding_Axis   = 7,
		TodoItem          = 8,
		DropDownList      = 9,
		MAX               = 10
	};

	/**
	 * Enum OakGame.EEchoPerformanceMode
	 */
	enum class EEchoPerformanceMode : uint8_t
	{
		EchoCommunication = 0,
		EchoLog           = 1,
		VoG               = 2,
		EridianWriting    = 3,
		MAX               = 4
	};

	/**
	 * Enum OakGame.EPhotoModeOptionEffect
	 */
	enum class EPhotoModeOptionEffect : uint8_t
	{
		None               = 0,
		FieldOfView        = 1,
		CameraRoll         = 2,
		Target             = 3,
		FocusDistance      = 4,
		FocusRegion        = 5,
		DOFIntensity       = 6,
		Contrast           = 7,
		Saturation         = 8,
		Gamma              = 9,
		Gain               = 10,
		TimeOfDay          = 11,
		HideCharacters     = 12,
		FilmGrain          = 13,
		Filter             = 14,
		FilterIntensity    = 15,
		VignetteIntensity  = 16,
		VignetteFeathering = 17,
		HideDamageNumbers  = 18,
		OverrideDOF        = 19,
		Border             = 20,
		Tag                = 21,
		MAX                = 22
	};

	/**
	 * Enum OakGame.EEchoDeviceFXPositionMode
	 */
	enum class EEchoDeviceFXPositionMode : uint8_t
	{
		None             = 0,
		UIObject         = 1,
		ViewportPosition = 2,
		MAX              = 3
	};

	/**
	 * Enum OakGame.ETransactionType
	 */
	enum class ETransactionType : uint8_t
	{
		Buy                   = 0,
		Sell                  = 1,
		BuyBack               = 2,
		SellAllJunk           = 3,
		PurchaseCustomization = 4,
		MAX                   = 5
	};

	/**
	 * Enum OakGame.EPlayerStandInType
	 */
	enum class EPlayerStandInType : uint8_t
	{
		Unspecified        = 0,
		FrontendLobby      = 1,
		CharacterSelect    = 2,
		CharacterCreate    = 3,
		SkillScreen        = 4,
		RnRCharacterSelect = 5,
		MAX                = 6
	};

	/**
	 * Enum OakGame.EFrontendStandInSpecialAnimType
	 */
	enum class EFrontendStandInSpecialAnimType : uint8_t
	{
		PlayerArrival                          = 0,
		PrimaryPlayerFlourish                  = 1,
		CharacterSelectSelection               = 2,
		CharacterSelectSelection_NoActionSkill = 3,
		CharacterCreationSelection             = 4,
		MAX                                    = 5
	};

	/**
	 * Enum OakGame.EPlayerTradingStance
	 */
	enum class EPlayerTradingStance : uint8_t
	{
		Deciding     = 0,
		TradeReady   = 1,
		DuelReady    = 2,
		Disconnected = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.EPlayerTradeManagerStatus
	 */
	enum class EPlayerTradeManagerStatus : uint8_t
	{
		Uninitialized  = 0,
		Trading        = 1,
		Dueling        = 2,
		ResolvingTrade = 3,
		ResolvingDuel  = 4,
		MAX            = 5
	};

	/**
	 * Enum OakGame.EPlayThroughType
	 */
	enum class EPlayThroughType : uint8_t
	{
		CurrentPlayThrough   = 0,
		EffectivePlayThrough = 1,
		MAX                  = 2
	};

	/**
	 * Enum OakGame.EProjectedMeshShape
	 */
	enum class EProjectedMeshShape : uint8_t
	{
		Circle = 0,
		Square = 1,
		MAX    = 2
	};

	/**
	 * Enum OakGame.EShieldState
	 */
	enum class EShieldState : uint8_t
	{
		Uninitialized   = 0,
		Empty           = 1,
		PartiallyFilled = 2,
		Filled          = 3,
		MAX             = 4
	};

	/**
	 * Enum OakGame.EShieldAttributeModificationSource
	 */
	enum class EShieldAttributeModificationSource : uint8_t
	{
		Other       = 0,
		Equipped    = 1,
		Filled      = 2,
		Depleted    = 3,
		NotDepleted = 4,
		MAX         = 5
	};

	/**
	 * Enum OakGame.EStackOperator
	 */
	enum class EStackOperator : uint8_t
	{
		Add      = 0,
		Multiply = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.EShieldDamageModifierApplicationTarget
	 */
	enum class EShieldDamageModifierApplicationTarget : uint8_t
	{
		InstigatorCausedDamage   = 0,
		InstigatorReceivedDamage = 1,
		MAX                      = 2
	};

	/**
	 * Enum OakGame.EAugmentTriggerOn
	 */
	enum class EAugmentTriggerOn : uint8_t
	{
		TriggerOn_Filled      = 0,
		TriggerOn_NotFilled   = 1,
		TriggerOn_Depleted    = 2,
		TriggerOn_NotDepleted = 3,
		TriggerOn_MAX         = 4
	};

	/**
	 * Enum OakGame.ESirenGhostArmConfigurationType
	 */
	enum class ESirenGhostArmConfigurationType : uint8_t
	{
		None                = 0,
		FirstPerson         = 1,
		ThirdPerson         = 2,
		FirstAndThirdPerson = 3,
		GhostArmsLocked     = 4,
		MAX                 = 5
	};

	/**
	 * Enum OakGame.EItemDropOnDeathType
	 */
	enum class EItemDropOnDeathType : uint8_t
	{
		DropOnDeath_All         = 0,
		DropOnDeath_FirstDeath  = 1,
		DropOnDeath_LastDeath   = 2,
		DropOnDeath_RandomDeath = 3,
		DropOnDeath_MAX         = 4
	};

	/**
	 * Enum OakGame.ELootInstancingPolicy
	 */
	enum class ELootInstancingPolicy : uint8_t
	{
		Instance          = 0,
		DontInstance      = 1,
		InstanceForPlayer = 2,
		MAX               = 3
	};

	/**
	 * Enum OakGame.ESpawnDroppedPickupLootRequestType
	 */
	enum class ESpawnDroppedPickupLootRequestType : uint8_t
	{
		Drop   = 0,
		Attach = 1,
		MAX    = 2
	};

	/**
	 * Enum OakGame.EStandInAutoScaleMode
	 */
	enum class EStandInAutoScaleMode : uint8_t
	{
		None          = 0,
		ScaleDown     = 1,
		ScaleUpOrDown = 2,
		MAX           = 3
	};

	/**
	 * Enum OakGame.EStandInActorType
	 */
	enum class EStandInActorType : uint8_t
	{
		None                   = 0,
		Player                 = 1,
		PlayerSkillScreen      = 2,
		WeaponSkin             = 3,
		WeaponTrinket          = 4,
		CrewQuartersDecoration = 5,
		CustomActor            = 6,
		MAX                    = 7
	};

	/**
	 * Enum OakGame.EBehaviorOutput
	 */
	enum class EBehaviorOutput : uint8_t
	{
		Found    = 0,
		NotFound = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.ETinkPileUseState
	 */
	enum class ETinkPileUseState : uint8_t
	{
		None      = 0,
		NotUsed   = 1,
		InUse     = 2,
		WasUsed   = 3,
		Resetting = 4,
		MAX       = 5
	};

	/**
	 * Enum OakGame.ETinkPileBuildOption
	 */
	enum class ETinkPileBuildOption : uint8_t
	{
		None               = 0,
		TurretBasic        = 1,
		RocketPodBasic     = 2,
		TurretPlaceholder1 = 3,
		TurretPlaceholder2 = 4,
		TurretPlaceholder3 = 5,
		TurretPlaceholder4 = 6,
		MAX                = 7
	};

	/**
	 * Enum OakGame.ETransporterCraneState
	 */
	enum class ETransporterCraneState : uint8_t
	{
		Deactivated  = 0,
		Stopped      = 1,
		MoveForward  = 2,
		MoveBackward = 3,
		MAX          = 4
	};

	/**
	 * Enum OakGame.ETrophyCaseViewingState
	 */
	enum class ETrophyCaseViewingState : uint8_t
	{
		ViewingNone   = 0,
		ViewingSet    = 1,
		ViewingGroup  = 2,
		ViewingTrophy = 3,
		MAX           = 4
	};

	/**
	 * Enum OakGame.EGroundTurretType
	 */
	enum class EGroundTurretType : uint8_t
	{
		Seated   = 0,
		Standing = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.EUIManagerState
	 */
	enum class EUIManagerState : uint8_t
	{
		NONE              = 0,
		PLAYING_ANIMATION = 1,
		MAX               = 2
	};

	/**
	 * Enum OakGame.UIManagerMessages
	 */
	enum class EUIManagerMessages : uint8_t
	{
		UIManagerMessages_Critical              = 0,
		UIManagerMessages_High                  = 1,
		UIManagerMessages_Normal                = 2,
		UIManagerMessages_Low                   = 3,
		UIManagerMessages_Lowest                = 4,
		UIManagerMessages_UIManagerMessages_MAX = 5
	};

	/**
	 * Enum OakGame.EChallengeCategoryID
	 */
	enum class EChallengeCategoryID : uint8_t
	{
		GameCompletion = 0,
		Enemy          = 1,
		Weapon         = 2,
		Crew           = 3,
		Exploration    = 4,
		Slaughter      = 5,
		Raid           = 6,
		ProvingGround  = 7,
		Max            = 8
	};

	/**
	 * Enum OakGame.ERevolverOffsetMode
	 */
	enum class ERevolverOffsetMode : uint8_t
	{
		None  = 0,
		Left  = 1,
		Right = 2,
		MAX   = 3
	};

	/**
	 * Enum OakGame.EWheelAudioType
	 */
	enum class EWheelAudioType : uint8_t
	{
		Standard             = 0,
		MultiPosition2Wheels = 1,
		MultiPosition1Wheel  = 2,
		SingleWheel          = 3,
		MAX                  = 4
	};

	/**
	 * Enum OakGame.EVehiclePlaySingleAnimMode
	 */
	enum class EVehiclePlaySingleAnimMode : uint8_t
	{
		PlayOnStart = 0,
		PlayOnStop  = 1,
		MAX         = 2
	};

	/**
	 * Enum OakGame.EEmitterEnableMode
	 */
	enum class EEmitterEnableMode : uint8_t
	{
		EnableOnStart              = 0,
		EnableOnStartDisableOnStop = 1,
		EnableOnStop               = 2,
		DisableOnStart             = 3,
		DisableOnStartEnableOnStop = 4,
		DisableOnStop              = 5,
		MAX                        = 6
	};

	/**
	 * Enum OakGame.EFollowVehicleRotation
	 */
	enum class EFollowVehicleRotation : uint8_t
	{
		None        = 0,
		Yaw         = 1,
		YawAndPitch = 2,
		MAX         = 3
	};

	/**
	 * Enum OakGame.EVendingMachineType
	 */
	enum class EVendingMachineType : uint8_t
	{
		Guns      = 0,
		Ammo      = 1,
		Health    = 2,
		CrazyEarl = 3,
		MAX       = 4
	};

	/**
	 * Enum OakGame.VendingMachineDisplayMode
	 */
	enum class EVendingMachineDisplayMode : uint8_t
	{
		EVMDM_Buy     = 0,
		EVMDM_Sell    = 1,
		EVMDM_Buyback = 2,
		EVMDM_MAX     = 3
	};

	/**
	 * Enum OakGame.EVendingMachineTilesMode
	 */
	enum class EVendingMachineTilesMode : uint8_t
	{
		Purchase = 0,
		BuyBack  = 1,
		Sell     = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EVendingMachineInteractionMode
	 */
	enum class EVendingMachineInteractionMode : uint8_t
	{
		Purchase = 0,
		BuyBack  = 1,
		Sell     = 2,
		MAX      = 3
	};

	/**
	 * Enum OakGame.EVendingMachineAnimType
	 */
	enum class EVendingMachineAnimType : uint8_t
	{
		Idle              = 0,
		Back              = 1,
		BackTwice         = 2,
		BackThrice        = 3,
		BackJiggle        = 4,
		Forward           = 5,
		ForwardTwice      = 6,
		ForwardThrice     = 7,
		ForwardJiggle     = 8,
		Purchase          = 9,
		PurchaseInPlace   = 10,
		TurnOn            = 11,
		TurnOff           = 12,
		ErrorJiggle       = 13,
		SlideInFromTop    = 14,
		SlideInFromBottom = 15,
		MAX               = 16
	};

	/**
	 * Enum OakGame.EVendingMachineTrayTileType
	 */
	enum class EVendingMachineTrayTileType : uint8_t
	{
		Regular          = 0,
		Featured         = 1,
		GearSoldByFriend = 2,
		VisibleDummy     = 3,
		EndOfListDummy   = 4,
		MAX              = 5
	};

	/**
	 * Enum OakGame.EWeaponShieldActivationTrigger
	 */
	enum class EWeaponShieldActivationTrigger : uint8_t
	{
		Zoom   = 0,
		Attach = 1,
		Custom = 2,
		MAX    = 3
	};

	/**
	 * Enum OakGame.EWeaponShieldState
	 */
	enum class EWeaponShieldState : uint8_t
	{
		Normal   = 0,
		Depleted = 1,
		MAX      = 2
	};

	/**
	 * Enum OakGame.EWeaponWearValueType
	 */
	enum class EWeaponWearValueType : uint8_t
	{
		Wear = 0,
		Rust = 1,
		Dirt = 2,
		MAX  = 3
	};

	/**
	 * Enum OakGame.EZoneMapTargetType
	 */
	enum class EZoneMapTargetType : uint8_t
	{
		None            = 0,
		POI             = 1,
		Player          = 2,
		CrewChallenge   = 3,
		MissionWaypoint = 4,
		DeployedVehicle = 5,
		MAX             = 6
	};

	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * ScriptStruct OakGame.SectorFromBP
	 * Size -> 0x0078
	 */
	struct FSectorFromBP
	{
	public:
		class USceneComponent*                                     SectorRoot;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                FakeEmissiveWholeFloor;                                  // 0x0008(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseAudioComponent*                                PropaneAudioComponent;                                   // 0x0010(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UStaticMeshComponent*>                        HeatingElements;                                         // 0x0018(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UStaticMeshComponent*>                        FakeEmissives;                                           // 0x0028(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UStaticMeshComponent*>                        DamageZones;                                             // 0x0038(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UParticleSystemComponent*>                    Bursts;                                                  // 0x0048(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UParticleSystemComponent*>                    HeatHazes;                                               // 0x0058(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UParticleSystemComponent*>                    Anticipations;                                           // 0x0068(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.Ring
	 * Size -> 0x0070
	 */
	struct FRing
	{
	public:
		unsigned char                                              UnknownData_LFS3[0x70];                                  // 0x0000(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.Sector
	 * Size -> 0x0068
	 */
	struct FSector
	{
	public:
		unsigned char                                              UnknownData_FLKZ[0x68];                                  // 0x0000(0x0068) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.WeaponSlotEntry
	 * Size -> 0x00F8
	 */
	struct FWeaponSlotEntry
	{
	public:
		class UWeaponSlotData*                                     SlotData;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AWeapon*                                             AttachedWeapon;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AWeapon*                                             PendingAttachedWeapon;                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AWeapon*                                             ClientPredictedPendingAttachedWeapon;                    // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             RestoreSlotData;                                         // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ROOG[0xB8];                                  // 0x0028(0x00B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameResourcePoolReference                          AccuracyPool;                                            // 0x00E0(0x0018) NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.WeaponSlotContainer
	 * Size -> 0x05B8
	 */
	struct FWeaponSlotContainer
	{
	public:
		TArray<struct FWeaponSlotEntry>                            WeaponSlots;                                             // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IDLD[0x5A8];                                 // 0x0010(0x05A8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ZoneMapPOIEntry
	 * Size -> 0x0060
	 */
	struct FZoneMapPOIEntry
	{
	public:
		class UZoneMapPOITypeData*                                 PointOfInterestType;                                     // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PointOfInterestObjectName;                               // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YYLG[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          PointOfInterestTransform;                                // 0x0020(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FIntPoint                                           PointOfInterestFODTexelCoords;                           // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             CustomPOIData;                                           // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.InteractiveObjectTrapEntry
	 * Size -> 0x0010
	 */
	struct FInteractiveObjectTrapEntry
	{
	public:
		class AInteractiveObject*                                  TrapActor;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInteractiveObjectTrapActivationType                       ActivationType;                                          // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ALZC[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InstructionDelay;                                        // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIOOrientedParticleTarget
	 * Size -> 0x000C
	 */
	struct FAIOOrientedParticleTarget
	{
	public:
		unsigned char                                              UnknownData_P51J[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AIOOrientedParticleData
	 * Size -> 0x0040
	 */
	struct FAIOOrientedParticleData
	{
	public:
		class UParticleSystem*                                     ParticleSystem;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                OriginSocket;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParticleBeamTargetParameterName;                         // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DefaultBeamTargetPosition;                               // 0x0018(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3O10[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent*                            ParticleComponent;                                       // 0x0028(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAIOOrientedParticleTarget                          Target;                                                  // 0x0030(0x000C) Transient, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D4CN[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CharacterCorpseState
	 * Size -> 0x00E8
	 */
	struct FCharacterCorpseState
	{
	public:
		unsigned char                                              bEnableCorpseCleanup : 1;                                // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShouldTearOff : 1;                                      // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideVisibleCorpseRemovalTime : 1;                   // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YZB5[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OverrideVisibleCorpseRemovalTime;                        // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ContactWithVehiclesTime;                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SHA8[0xDC];                                  // 0x000C(0x00DC) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.HolsteredWeaponData
	 * Size -> 0x0018
	 */
	struct FHolsteredWeaponData
	{
	public:
		EWeaponHolsteredSizeType                                   WeaponSizeType;                                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPickupLootAttachmentMode                                  AttachMode;                                              // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3AJ1[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVisibleInFirstPerson;                                   // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U94Y[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.InventorySlotEntry
	 * Size -> 0x0034 (FullSize[0x0040] - InheritedSize[0x000C])
	 */
	struct FInventorySlotEntry : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_WLN1[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              EquippedInventory;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Enabled;                                                 // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Selected;                                                // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OJHS[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInventorySlotData*                                  SlotData;                                                // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponTrinketPartData*                              EquippedTrinket;                                         // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              ClientCachedEquippedInventory;                           // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UWeaponTrinketPartData*                              ClientCachedEquippedTrinket;                             // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.InventorySlotContainer
	 * Size -> 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
	 */
	struct FInventorySlotContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FInventorySlotEntry>                         InventorySlots;                                          // 0x00B0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YJ46[0x28];                                  // 0x00C0(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakGenderData
	 * Size -> 0x0098
	 */
	struct FOakGenderData
	{
	public:
		class USkeletalMesh*                                       Mesh;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             MeshOffset;                                              // 0x0008(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FNZV[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGestaltPartListData*                                GestaltPartList;                                         // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AnimBlueprint;                                           // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        AnimSetGenericNames_Enable;                              // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        AnimSetGenericNames_Disable;                             // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UGbxAnimSet*>                                 AnimSets_Enable;                                         // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UGbxAnimSet*>                                 AnimSets_Disable;                                        // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UMaterialInstance*>                           Materials;                                               // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UDialogNameTag*>                              DialogNameTags;                                          // 0x0078(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UDestructibleMesh*                                   CryoMesh;                                                // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GoreSourceMaterialIndex;                                 // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RAHC[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ColorRandomizer
	 * Size -> 0x0010
	 */
	struct FColorRandomizer
	{
	public:
		float                                                      Hue;                                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      Saturation;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FNumericRange                                       Scale;                                                   // 0x0008(0x0008) Edit, NoDestructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakCharacterCustomization
	 * Size -> 0x0014
	 */
	struct FOakCharacterCustomization
	{
	public:
		bool                                                       bRandomizeColor;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H3Z4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FColorRandomizer                                    ColorRandomizer;                                         // 0x0004(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakCharacterColorization
	 * Size -> 0x0078 (FullSize[0x008C] - InheritedSize[0x0014])
	 */
	struct FOakCharacterColorization : public FOakCharacterCustomization
	{
	public:
		struct FLinearColor                                        Primary1;                                                // 0x0014(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverridePrimary1;                                       // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HZ59[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        Primary2;                                                // 0x0028(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverridePrimary2;                                       // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CUVE[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        Secondary1;                                              // 0x003C(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSecondary1;                                     // 0x004C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U4EB[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        Secondary2;                                              // 0x0050(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSecondary2;                                     // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E9NC[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        Tertiary1;                                               // 0x0064(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideTertiary1;                                      // 0x0074(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JVYL[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        Tertiary2;                                               // 0x0078(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideTertiary2;                                      // 0x0088(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N20G[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCharacterTexturePair
	 * Size -> 0x0010
	 */
	struct FOakCharacterTexturePair
	{
	public:
		class UTexture*                                            Comp;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            Normal;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakCharacterPattern
	 * Size -> 0x0038
	 */
	struct FOakCharacterPattern
	{
	public:
		float                                                      Primary;                                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverridePrimary;                                        // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LY1C[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Secondary;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSecondary;                                      // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LC3O[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Tertiary;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideTertiary;                                       // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6USM[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Skin;                                                    // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSkin;                                           // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRandomizeUse;                                           // 0x001D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UBUW[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Chance;                                                  // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRandomizeTexture;                                       // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZV7X[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOakCharacterTexturePair>                    Textures;                                                // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakCharacterSkinTone
	 * Size -> 0x0014 (FullSize[0x0028] - InheritedSize[0x0014])
	 */
	struct FOakCharacterSkinTone : public FOakCharacterCustomization
	{
	public:
		struct FLinearColor                                        SkinTone;                                                // 0x0014(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSkinTone;                                       // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I4OP[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCharacterTattoos
	 * Size -> 0x0014 (FullSize[0x0028] - InheritedSize[0x0014])
	 */
	struct FOakCharacterTattoos : public FOakCharacterCustomization
	{
	public:
		struct FLinearColor                                        TattooColor;                                             // 0x0014(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideTattooColor;                                    // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1Q0Y[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCharacterHair
	 * Size -> 0x003C (FullSize[0x0050] - InheritedSize[0x0014])
	 */
	struct FOakCharacterHair : public FOakCharacterCustomization
	{
	public:
		struct FLinearColor                                        InnerColor;                                              // 0x0014(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideInnerColor;                                     // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KKVU[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        OuterColor;                                              // 0x0028(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideOuterColor;                                     // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4WIL[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        SSSColor;                                                // 0x003C(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSSSColor;                                       // 0x004C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SAVG[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCharacterEyes
	 * Size -> 0x0018
	 */
	struct FOakCharacterEyes
	{
	public:
		TArray<struct FColor>                                      RandomEyeColors;                                         // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideEyeColor;                                       // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PYXC[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCharacterDecal
	 * Size -> 0x005C (FullSize[0x0070] - InheritedSize[0x0014])
	 */
	struct FOakCharacterDecal : public FOakCharacterCustomization
	{
	public:
		float                                                      DecalStrength;                                           // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideDecalStrength;                                  // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_71DD[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        DecalColor;                                              // 0x001C(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideDecalColor;                                     // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZSPJ[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        DecalColorHighlight;                                     // 0x0030(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideDecalColorHighlight;                            // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U1Z5[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            Texture_Comp;                                            // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            Texture_Normal;                                          // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            Texture_BaseColor;                                       // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOakCharacterTexturePair>                    Textures;                                                // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakCharacterCustomizationData
	 * Size -> 0x0248
	 */
	struct FOakCharacterCustomizationData
	{
	public:
		TArray<struct FOakCharacterColorization>                   Customization_Colorizations;                             // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bApplyCustomization_Colorization;                        // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J84R[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakCharacterPattern                                Customization_Pattern;                                   // 0x0018(0x0038) Edit, NativeAccessSpecifierPublic
		bool                                                       bApplyCustomization_Pattern;                             // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_87HT[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakCharacterSkinTone                               Customization_SkinTone;                                  // 0x0054(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bApplyCustomization_SkinTone;                            // 0x007C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HPUC[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakCharacterTattoos                                Customization_Tattoos;                                   // 0x0080(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bApplyCustomization_Tattoos;                             // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R9G8[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOakCharacterHair>                           Customization_Hairs;                                     // 0x00B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bApplyCustomization_Hair;                                // 0x00C0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GC5C[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakCharacterEyes                                   Customization_Eyes;                                      // 0x00C8(0x0018) Edit, NativeAccessSpecifierPublic
		bool                                                       bApplyCustomization_Eyes;                                // 0x00E0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZTO9[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOakCharacterDecal>                          Customization_Decals;                                    // 0x00E8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bApplyCustomization_Decal;                               // 0x00F8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DTNB[0x3];                                   // 0x00F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakCharacterColorization                           Customization_Colorization;                              // 0x00FC(0x008C) NoDestructor, NativeAccessSpecifierPublic
		struct FOakCharacterHair                                   Customization_Hair;                                      // 0x0188(0x0050) NoDestructor, NativeAccessSpecifierPublic
		struct FOakCharacterDecal                                  Customization_Decal;                                     // 0x01D8(0x0070) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakCoordinatedEffectSwitchState
	 * Size -> 0x0020
	 */
	struct FOakCoordinatedEffectSwitchState
	{
	public:
		class FString                                              DisplayName;                                             // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Name;                                                    // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Effect;                                                  // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakCoordinatedEffectSwitch
	 * Size -> 0x0058
	 */
	struct FOakCoordinatedEffectSwitch
	{
	public:
		class UEnum*                                               Enum;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                NativeEnumName;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bNativeEnum;                                             // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              InitialState;                                            // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YUJK[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOakCoordinatedEffectSwitchState>            States;                                                  // 0x0018(0x0010) Edit, EditFixedSize, ZeroConstructor, RepSkip, NativeAccessSpecifierPrivate
		unsigned char                                              CurrentState;                                            // 0x0028(0x0001) ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DUGH[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Owner;                                                   // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGbxActionComponent*                                 ActionComp;                                              // 0x0038(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2YTM[0x10];                                  // 0x0040(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ReplicatedState;                                         // 0x0050(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_L7RE[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.HUDInWorldIconTargetInfo
	 * Size -> 0x0058
	 */
	struct FHUDInWorldIconTargetInfo
	{
	public:
		class UInWorldIconData*                                    IconData;                                                // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Actor;                                                   // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     LocationComponent;                                       // 0x0010(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0020(0x000C) BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               Guid;                                                    // 0x0030(0x0010) BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MRQ0[0x18];                                  // 0x0040(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.FloorSectorRing
	 * Size -> 0x0068
	 */
	struct FFloorSectorRing
	{
	public:
		unsigned char                                              UnknownData_TOEE[0x68];                                  // 0x0000(0x0068) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.FloorSector
	 * Size -> 0x0068
	 */
	struct FFloorSector
	{
	public:
		unsigned char                                              UnknownData_CH14[0x68];                                  // 0x0000(0x0068) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PathSegmentSetting
	 * Size -> 0x0034
	 */
	struct FPathSegmentSetting
	{
	public:
		float                                                      ReachDistance;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReachHeight;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SnapGroundDistance;                                      // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGbxNavGoalModifiers                                GoalModifiers;                                           // 0x000C(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_MovePath
	 * Size -> 0x0040
	 */
	struct FAIAspectSettings_MovePath
	{
	public:
		class FName                                                NodeTag;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowPathSegment;                                       // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CCCG[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPathSegmentSetting                                 IntermediatePath;                                        // 0x000C(0x0034) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_Revive
	 * Size -> 0x0090
	 */
	struct FAIAspectSettings_Revive
	{
	public:
		struct FGbxBlackboardKeySelector                           Target;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FGbxParam                                           ReviveDistance;                                          // 0x0010(0x0080) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.EscortPathValidation
	 * Size -> 0x0014
	 */
	struct FEscortPathValidation
	{
	public:
		float                                                      RotateAngleToSearchPath;                                 // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValidatePathAnticipationTime;                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValidatePathFowardDistance;                              // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ValidatePathIteration;                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanGoIfValidationFailed;                                // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R716[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_VehicleEscortSpeed
	 * Size -> 0x01A0
	 */
	struct FAIAspectSettings_VehicleEscortSpeed
	{
	public:
		struct FGbxParam                                           NearDistance;                                            // 0x0000(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           FarDistance;                                             // 0x0080(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           CatchUpSpeed;                                            // 0x0100(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      GoalUpdateDistance;                                      // 0x0180(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnticipationTime;                                        // 0x0184(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidatePath;                                           // 0x0188(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WB79[0x3];                                   // 0x0189(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FEscortPathValidation                               EscortPathValidation;                                    // 0x018C(0x0014) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_DialogCondition
	 * Size -> 0x0088
	 */
	struct FAIAspectSettings_DialogCondition
	{
	public:
		struct FGbxParam                                           Condition;                                               // 0x0000(0x0080) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UDialogEvent*                                        DialogEvent;                                             // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_Dialog
	 * Size -> 0x0140
	 */
	struct FAIAspectSettings_Dialog
	{
	public:
		TArray<struct FAIAspectSettings_DialogCondition>           ConditionalDialogEvents;                                 // 0x0000(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UDialogEvent*                                        DialogEvent;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FGbxNamedParam>                              DialogParams;                                            // 0x0018(0x0010) Edit, EditFixedSize, ZeroConstructor, NoClear, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UDialogParameter*>                            DialogParamAssets;                                       // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FGbxParam                                           DialogStartDelay;                                        // 0x0038(0x0080) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           DialogCooldownTime;                                      // 0x00B8(0x0080) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bUseDialogCooldownTime;                                  // 0x0138(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayOnStop;                                             // 0x0139(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_43TA[0x6];                                   // 0x013A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_VehicleArchetype
	 * Size -> 0x0002
	 */
	struct FAIAspectSettings_VehicleArchetype
	{
	public:
		EVehicleAchetypeNative                                     VehicleArchetype;                                        // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInverted;                                               // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_VehicleAttitude
	 * Size -> 0x0002
	 */
	struct FAIAspectSettings_VehicleAttitude
	{
	public:
		ETeamAttitude                                              Attitude;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Inverted;                                                // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_VehicleDriverLeaves
	 * Size -> 0x0001
	 */
	struct FAIAspectSettings_VehicleDriverLeaves
	{
	public:
		bool                                                       bInverted;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_VehicleDriving
	 * Size -> 0x0080
	 */
	struct FAIAspectSettings_VehicleDriving
	{
	public:
		struct FGbxParam                                           DisableTurnHandBrake;                                    // 0x0000(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.HornSequenceEntry
	 * Size -> 0x0008
	 */
	struct FHornSequenceEntry
	{
	public:
		float                                                      StartTime;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_VehicleHorn
	 * Size -> 0x0018
	 */
	struct FAIAspectSettings_VehicleHorn
	{
	public:
		TArray<struct FHornSequenceEntry>                          HornSequence;                                            // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bStopWithAction;                                         // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_831P[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_VehicleParts
	 * Size -> 0x0018
	 */
	struct FAIAspectSettings_VehicleParts
	{
	public:
		unsigned char                                              Parts[0x10];                                             // 0x0000(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.AIAspectSettings_VehicleParts.Parts
		bool                                                       bInverted;                                               // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNDK[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RubberbandSpeed
	 * Size -> 0x0218
	 */
	struct FRubberbandSpeed
	{
	public:
		struct FGbxBlackboardKeySelector                           RubberbandTargetKey;                                     // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FGbxParam                                           MinDistance;                                             // 0x0010(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           MaxDistance;                                             // 0x0090(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           MaxSpeed;                                                // 0x0110(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           MinSpeed;                                                // 0x0190(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bBehindOnly;                                             // 0x0210(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ZXJ[0x7];                                   // 0x0211(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AIAspectSettings_VehicleSpeed
	 * Size -> 0x06B8
	 */
	struct FAIAspectSettings_VehicleSpeed
	{
	public:
		struct FGbxParam                                           WantedSpeed;                                             // 0x0000(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bUseWantedSpeed;                                         // 0x0080(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OOOG[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGbxParam                                           WantedSteering;                                          // 0x0088(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bUseWantedSteering;                                      // 0x0108(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IGPC[0x7];                                   // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGbxParam                                           MaxSpeed;                                                // 0x0110(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           UseBoost;                                                // 0x0190(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           ForceReverse;                                            // 0x0210(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           GoBackward;                                              // 0x0290(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           ForceHandbrake;                                          // 0x0310(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           SpeedHack;                                               // 0x0390(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FRubberbandSpeed                                    RubberbandSpeed;                                         // 0x0410(0x0218) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bUseRubberbandSpeed;                                     // 0x0628(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2KKH[0x7];                                   // 0x0629(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGbxParam                                           Duration;                                                // 0x0630(0x0080) Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bUseDuration;                                            // 0x06B0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CA4W[0x7];                                   // 0x06B1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AIPlayThroughData
	 * Size -> 0x00B0
	 */
	struct FAIPlayThroughData
	{
	public:
		unsigned char                                              bOverrideUIDisplayName : 1;                              // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideDisplayName : 1;                                // 0x0000(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideDropOnDeathItemPools : 1;                       // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideEquippedItems : 1;                              // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideHealthInformation : 1;                          // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LSCN[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxUIName*                                          DisplayUIName;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0010(0x0018) NativeAccessSpecifierPublic
		struct FItemPoolCollection                                 DropOnDeathItemPools;                                    // 0x0028(0x0020) Edit, NativeAccessSpecifierPublic
		struct FItemPoolCollection                                 EquippedItemPoolCollection;                              // 0x0048(0x0020) Deprecated, NativeAccessSpecifierPublic
		TArray<struct FItemPoolCollection>                         EquippedItemPoolCollections;                             // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bEquipSingleItemFromCollection;                          // 0x0078(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FZLZ[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAttributeBaseValueData>                     AttributeStartingValues;                                 // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 BalanceTableRow;                                         // 0x0090(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FHealthType>                                 HealthInformation;                                       // 0x00A0(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AILootDropOverride
	 * Size -> 0x0018
	 */
	struct FAILootDropOverride
	{
	public:
		unsigned char                                              bOverrideDropPattern : 1;                                // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideSocketName : 1;                                 // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisabledByDefault : 1;                                  // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WP68[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULootSpawnPatternData*                               OverrideDropPattern;                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AnointedEnemyData
	 * Size -> 0x0010
	 */
	struct FAnointedEnemyData
	{
	public:
		class UClass*                                              PreFreezeAction;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FailsafeDestroyDelay;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuppressItemPoolsForFailsafeShatter;                    // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D73E[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DodgeVOInfo
	 * Size -> 0x0010
	 */
	struct FDodgeVOInfo
	{
	public:
		class UDialogEvent*                                        DialogEvent;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharacterSoundTag*                                  VocalizationTag;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIOCameraStatePostProcessOverrides
	 * Size -> 0x0020
	 */
	struct FAIOCameraStatePostProcessOverrides
	{
	public:
		unsigned char                                              bOverrideFocalDistance : 1;                              // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideFarTransitionRegion : 1;                        // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideNearTransitionRegion : 1;                       // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideFocalRegion : 1;                                // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideFarBlurSize : 1;                                // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideNearBlurSize : 1;                               // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideVignetteIntensity : 1;                          // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VPN9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FocalDistanceOverride;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FarTransitionRegionOverride;                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NearTransitionRegionOverride;                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FocalRegionOverride;                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FarBlurSizeOverride;                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NearBlurSizeOverride;                                    // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VignetteIntensityOverride;                               // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIOCameraStateInfo
	 * Size -> 0x0098
	 */
	struct FAIOCameraStateInfo
	{
	public:
		class FName                                                StateName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0008(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocationSplitscreen;                               // 0x0014(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocationVerticalSplitscreen;                       // 0x0020(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocationQuadSplitscreen;                           // 0x002C(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLookAtLocation;                                    // 0x0038(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLookAtLocationSplitscreen;                         // 0x0044(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLookAtLocationVerticalSplitscreen;                 // 0x0050(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLookAtLocationQuadSplitscreen;                     // 0x005C(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGbxEasingFunc                                      Easing;                                                  // 0x0068(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      TransitionDuration;                                      // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAIOCameraStatePostProcessOverrides                 PostProcessOverrides;                                    // 0x0078(0x0020) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AIOCameraEntryTransition
	 * Size -> 0x0030
	 */
	struct FAIOCameraEntryTransition
	{
	public:
		class FName                                                TransitionName;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FNumericRange                                       AngleRange;                                              // 0x0008(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             StartLocation;                                           // 0x0010(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideLocationDuration;                               // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J0UH[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LocationDurationOverride;                                // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideRotationDuration;                               // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_423J[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RotationDurationOverride;                                // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_21EW[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ReplicatedStolenProjectileData
	 * Size -> 0x0010
	 */
	struct FReplicatedStolenProjectileData
	{
	public:
		class FName                                                Socket;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Projectile;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPlayerCharacterSlotItem
	 * Size -> 0x0014 (FullSize[0x0020] - InheritedSize[0x000C])
	 */
	struct FOakPlayerCharacterSlotItem : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_8S2H[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPlayerCharacterComponentSlotData*                   SlotData;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UPlayerCharacterComponentAugmentData*                AugmentData;                                             // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakPlayerCharacterSlotItemList
	 * Size -> 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
	 */
	struct FOakPlayerCharacterSlotItemList : public FFastArraySerializer
	{
	public:
		class UPlayerCharacterComponent*                           Owner;                                                   // 0x00B0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FOakPlayerCharacterSlotItem>                 Items;                                                   // 0x00B8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.BeastmasterPetStencilData
	 * Size -> 0x0014
	 */
	struct FBeastmasterPetStencilData
	{
	public:
		struct FLinearColor                                        OutlineColor;                                            // 0x0000(0x0010) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OutlineThickness;                                        // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MeleeWeaponAttachmentData
	 * Size -> 0x0040
	 */
	struct FMeleeWeaponAttachmentData
	{
	public:
		class UStaticMesh*                                         Mesh;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Socket;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RelativeLocation;                                        // 0x0010(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RelativeRotation;                                        // 0x001C(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<class UGbxCustomizationTargetData*>                 CustomizationTargets;                                    // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UGbxStaticMeshComponent*                             Component;                                               // 0x0038(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.BeastmasterStandInPetData
	 * Size -> 0x0058
	 */
	struct FBeastmasterStandInPetData
	{
	public:
		unsigned char                                              PetAugmentData[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.BeastmasterStandInPetData.PetAugmentData
		class UClass*                                              PetBlueprint;                                            // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              CustomPetSpawnCE;                                        // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnrageScale;                                             // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Translation;                                             // 0x003C(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0048(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_43J1[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.BeastmasterStandInActionSkillData
	 * Size -> 0x00D8
	 */
	struct FBeastmasterStandInActionSkillData
	{
	public:
		unsigned char                                              ActionSkillClass[0x28];                                  // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.BeastmasterStandInActionSkillData.ActionSkillClass
		class UClass*                                              CustomActor;                                             // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CustomActorTranslationOffset;                            // 0x0030(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IMRR[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CustomCE;                                                // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SkillAnimation;                                          // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              PetAnimation;                                            // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PetAnimationDelay;                                       // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZS0J[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  PetScaleCurve;                                           // 0x0060(0x0078) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.BehindTheScenesItem
	 * Size -> 0x0050
	 */
	struct FBehindTheScenesItem
	{
	public:
		class UBehindTheScenesMediaContainer*                      Content;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                MediaLabelText;                                          // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              ThumbnailTexture[0x28];                                  // 0x0020(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.BehindTheScenesItem.ThumbnailTexture
		EBehindTheScenesItemType                                   ItemType;                                                // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4UYO[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.BehindTheScenesCategory
	 * Size -> 0x0028
	 */
	struct FBehindTheScenesCategory
	{
	public:
		class FText                                                CategoryName;                                            // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FBehindTheScenesItem>                        Items;                                                   // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.BlackJackCardDefinition
	 * Size -> 0x0020
	 */
	struct FBlackJackCardDefinition
	{
	public:
		class FString                                              DebugString;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CardValue;                                               // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SuitIndex;                                               // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CardIndex;                                               // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2JNL[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LadderBehaviorGoalParams
	 * Size -> 0x0068
	 */
	struct FLadderBehaviorGoalParams
	{
	public:
		unsigned char                                              bControlPitch : 1;                                       // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bControlYaw : 1;                                         // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInterruptedByInput : 1;                                 // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableInput : 1;                                       // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7YJY[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInitialRotationAxisParams                          Pitch;                                                   // 0x0008(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FInitialRotationAxisParams                          Yaw;                                                     // 0x0038(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleOverrideData
	 * Size -> 0x0030
	 */
	struct FVehicleOverrideData
	{
	public:
		TArray<class FString>                                      PartSelections;                                          // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      Property;                                                // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class UObject*                                             Data;                                                    // 0x0020(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DataType;                                                // 0x0028(0x0008) Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CameraKeyOffset
	 * Size -> 0x002C
	 */
	struct FCameraKeyOffset
	{
	public:
		bool                                                       TeleportFromStart;                                       // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PPOH[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LookAtLocationOffset;                                    // 0x0004(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocalCameraLocationOffset;                               // 0x0010(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            LocalCameraRotationOffset;                               // 0x001C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      AddedFOV;                                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CameraPitchOffset
	 * Size -> 0x0014
	 */
	struct FCameraPitchOffset
	{
	public:
		float                                                      KeyYawAngle;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForwardOffset;                                           // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpwardOffset;                                            // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DampingBankingRatio;                                     // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CloneSymmetricalKey;                                     // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZZ6F[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CameraIntroBlend
	 * Size -> 0x0098
	 */
	struct FCameraIntroBlend
	{
	public:
		float                                                      TimeBeforeAllowingMovingCamera;                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartBlend;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndBlend;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseACurve;                                              // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I24L[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  BlendByCurve;                                            // 0x0010(0x0078) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      DampingLocation;                                         // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DampingRotation;                                         // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FD93[0x8];                                   // 0x0090(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CarnivoraFakeTurrets
	 * Size -> 0x0060
	 */
	struct FCarnivoraFakeTurrets
	{
	public:
		ECarnivoraFakeTurretShootingStyle                          ShootingStyle;                                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AWY8[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinDelayBetweenBurstWave;                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDelayInsideBurstShot;                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbBulletPerBurst;                                        // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              LightProjectileData;                                     // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProjectileSpeed;                                         // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPrediction;                                           // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageType;                                              // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Range;                                                   // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceFromPoint;                                       // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAngle;                                                // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DirectHitPct;                                            // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpreadAngle;                                             // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DrawDebugProjectileLine;                                 // 0x0044(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4XLF[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              CurrentTargetActor;                                      // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DKL2[0x10];                                  // 0x0050(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SplineTriggers
	 * Size -> 0x0058
	 */
	struct FSplineTriggers
	{
	public:
		unsigned char                                              Trigger[0x28];                                           // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.SplineTriggers.Trigger
		unsigned char                                              Spline[0x28];                                            // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.SplineTriggers.Spline
		bool                                                       bIsReverse;                                              // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2B14[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NextSplineTriggerId;                                     // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CarnivoraDamageZoneInfo
	 * Size -> 0x000C
	 */
	struct FCarnivoraDamageZoneInfo
	{
	public:
		float                                                      FrontDamageMultiplier;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SideDamageMultiplier;                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BackDamageMultiplier;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WheelState
	 * Size -> 0x000C
	 */
	struct FWheelState
	{
	public:
		float                                                      RelativeSpeed;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FLGR[0x8];                                   // 0x0004(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCARMenuVehicleConfig
	 * Size -> 0x0188
	 */
	struct FOakCARMenuVehicleConfig
	{
	public:
		class FString                                              LoadoutSaveName;                                         // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Body[0x28];                                              // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARMenuVehicleConfig.Body
		unsigned char                                              Wheel[0x28];                                             // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARMenuVehicleConfig.Wheel
		unsigned char                                              Armor[0x28];                                             // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARMenuVehicleConfig.Armor
		unsigned char                                              CoreMod[0x28];                                           // 0x0088(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARMenuVehicleConfig.CoreMod
		unsigned char                                              GunnerWeapon[0x28];                                      // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARMenuVehicleConfig.GunnerWeapon
		unsigned char                                              DriverWeapon[0x28];                                      // 0x00D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARMenuVehicleConfig.DriverWeapon
		unsigned char                                              Ornament[0x28];                                          // 0x0100(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARMenuVehicleConfig.Ornament
		unsigned char                                              MaterialDecal[0x28];                                     // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARMenuVehicleConfig.MaterialDecal
		unsigned char                                              Material[0x28];                                          // 0x0150(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARMenuVehicleConfig.Material
		int32_t                                                    ColorIndex1;                                             // 0x0178(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorIndex2;                                             // 0x017C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorIndex3;                                             // 0x0180(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XUFJ[0x4];                                   // 0x0184(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CharacterGroundSlamGradeData
	 * Size -> 0x0028
	 */
	struct FCharacterGroundSlamGradeData
	{
	public:
		float                                                      MinimumHeight;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E4AH[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ControlledMove;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              StartAction;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LandingDistance;                                         // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AAWV[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              LandingAction;                                           // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CharacterItemPoolExpansionInfo
	 * Size -> 0x0020
	 */
	struct FCharacterItemPoolExpansionInfo
	{
	public:
		TArray<struct FItemPoolInfo>                               DropOnDeathItemPools;                                    // 0x0000(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              ItemPoolExpansions[0x10];                                // 0x0010(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.CharacterItemPoolExpansionInfo.ItemPoolExpansions
	};

	/**
	 * ScriptStruct OakGame.ElementalSlideEffect
	 * Size -> 0x0150
	 */
	struct FElementalSlideEffect
	{
	public:
		struct FImpactResponseEffect                               DefaultResponse;                                         // 0x0000(0x0140) Edit, NativeAccessSpecifierPublic
		TArray<struct FImpactResponseInfo>                         ImpactResponses;                                         // 0x0140(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CharacterJumpGoalSetting
	 * Size -> 0x000C
	 */
	struct FCharacterJumpGoalSetting
	{
	public:
		float                                                      InitialZVelocity;                                        // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GoalHeight;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseInitialZVelocity : 1;                                // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseGoalHeight : 1;                                      // 0x0008(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_17F6[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LastCollisionDamageInfo
	 * Size -> 0x0018
	 */
	struct FLastCollisionDamageInfo
	{
	public:
		class AActor*                                              HitActor;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOwnerIsCollider;                                        // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JEK1[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             RelativeVelocity;                                        // 0x000C(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CommandRingTarget
	 * Size -> 0x0028
	 */
	struct FCommandRingTarget
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     BaseComponent;                                           // 0x0008(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x001C(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.TextElementCondition
	 * Size -> 0x0020
	 */
	struct FTextElementCondition
	{
	public:
		class UGbxCondition*                                       Condition;                                               // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TextToAdd;                                               // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CorpseRecord
	 * Size -> 0x0010
	 */
	struct FCorpseRecord
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CorpseStartTime;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GQPL[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CosmeticDamageEventDetails
	 * Size -> 0x0038
	 */
	struct FCosmeticDamageEventDetails
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitLocation;                                             // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitDirection;                                            // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XWRM[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Instigator;                                              // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageType;                                              // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageSource;                                            // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerItemDisplayInfo
	 * Size -> 0x0018
	 */
	struct FPlayerItemDisplayInfo
	{
	public:
		class AOakPlayerController*                                AssociatedPlayer;                                        // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              AssociatedItem;                                          // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              AssociatedDisplayItem;                                   // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CrewQuartersRoomAssignment
	 * Size -> 0x0010
	 */
	struct FCrewQuartersRoomAssignment
	{
	public:
		class UPlayerClassIdentifier*                              AssociatedPlayerClass;                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDynamicRoomBaseData*                                AssociatedRoom;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CSBoosterInfo
	 * Size -> 0x0090
	 */
	struct FCSBoosterInfo
	{
	public:
		class FName                                                NameId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AnimName;                                                // 0x0008(0x0010) ZeroConstructor, Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BoosterTextureName;                                      // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0028(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0040(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                UnlockDescription;                                       // 0x0058(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    Price;                                                   // 0x0070(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QILR[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStatusEffectData*                                   StatusEffectData;                                        // 0x0078(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectDuration;                                          // 0x0080(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8MLJ[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture*                                            Icon;                                                    // 0x0088(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DebugMenuCommandItemData
	 * Size -> 0x0048
	 */
	struct FDebugMenuCommandItemData
	{
	public:
		class FName                                                Category;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Label;                                                   // 0x0008(0x0018) NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) NativeAccessSpecifierPublic
		class FString                                              ExecCommand;                                             // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DebugMenuGradebox
	 * Size -> 0x0028
	 */
	struct FDebugMenuGradebox
	{
	public:
		class UCanvasPanel*                                        Panel;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage*                                              Image;                                                   // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextBlock*                                          Description;                                             // 0x0010(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UTextBlock*>                                  Atts;                                                    // 0x0018(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GbxReportTag
	 * Size -> 0x0030
	 */
	struct FGbxReportTag
	{
	public:
		bool                                                       bShowInMenu;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VGIC[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Tag;                                                     // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0018(0x0018) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DefaultCrosshairData
	 * Size -> 0x0010
	 */
	struct FDefaultCrosshairData
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      XSpread;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YSpread;                                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DiscoveredAreaInfo
	 * Size -> 0x0010
	 */
	struct FDiscoveredAreaInfo
	{
	public:
		class FName                                                DiscoveredAreaName;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   PlaythroughBits;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9G85[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DiscoveredLevelInfo
	 * Size -> 0x0020
	 */
	struct FDiscoveredLevelInfo
	{
	public:
		class FName                                                DiscoveredLevelName;                                     // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDiscoveredAreaInfo>                         DiscoveredAreas;                                         // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		uint32_t                                                   PlaythroughBits;                                         // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LGQP[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DiscoveredPlanetInfo
	 * Size -> 0x0030
	 */
	struct FDiscoveredPlanetInfo
	{
	public:
		unsigned char                                              DiscoveredPlanet[0x28];                                  // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.DiscoveredPlanetInfo.DiscoveredPlanet
		bool                                                       bIsNewPlanet;                                            // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M51L[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DlcLevelTravelPair
	 * Size -> 0x0010
	 */
	struct FDlcLevelTravelPair
	{
	public:
		class UTravelStationData*                                  NonDlcStationData;                                       // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTravelStationData*                                  DlcStationData;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LevelTravelDataListPatch
	 * Size -> 0x0020
	 */
	struct FLevelTravelDataListPatch
	{
	public:
		class ULevelTravelStationData*                             LevelTravelData;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxCondition*                                       LevelTravelDataCondition;                                // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxCondition*                                       MissionIconCondition;                                    // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MovieToPlayDuringTravelMap;                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L635[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LevelTravelDataListStationPatch
	 * Size -> 0x0020
	 */
	struct FLevelTravelDataListStationPatch
	{
	public:
		class FString                                              AssociatedTravelStationName;                             // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FLevelTravelDataListPatch>                   PatchedTravelData;                                       // 0x0010(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ChallengeFilterType
	 * Size -> 0x0028
	 */
	struct FChallengeFilterType
	{
	public:
		class FText                                                FilterName;                                              // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<class UChallengeCategoryData*>                      IncludedCategories;                                      // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LevelledSaveGameData
	 * Size -> 0x00B0
	 */
	struct FLevelledSaveGameData
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RP8H[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              InitialTravelStation[0x28];                              // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.LevelledSaveGameData.InitialTravelStation
		unsigned char                                              ActiveMissionClass[0x28];                                // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.LevelledSaveGameData.ActiveMissionClass
		unsigned char                                              ActiveMissionObjectiveSet[0x28];                         // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.LevelledSaveGameData.ActiveMissionObjectiveSet
		uint32_t                                                   CreditsAmount;                                           // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   EridiumAmount;                                           // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DefaultInventory[0x10];                                  // 0x0088(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.LevelledSaveGameData.DefaultInventory
		uint32_t                                                   RandomRolls;                                             // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y68R[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              RandomInventory[0x10];                                   // 0x00A0(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.LevelledSaveGameData.RandomInventory
	};

	/**
	 * ScriptStruct OakGame.PlayerDuelArenaState
	 * Size -> 0x0010
	 */
	struct FPlayerDuelArenaState
	{
	public:
		class AOakCharacter_Player*                                Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9HQR[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DuelingNumParticipantsInfo
	 * Size -> 0x000C
	 */
	struct FDuelingNumParticipantsInfo
	{
	public:
		int32_t                                                    NumPlayers;                                              // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxArenaSize;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DuelLength;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DuelModeSettings
	 * Size -> 0x0030
	 */
	struct FDuelModeSettings
	{
	public:
		float                                                      DuelArenaTimeout;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DuelChallengeTimeout;                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDuelStartDelay;                                      // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQL5[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DuelStartDelay;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDuelingNumParticipantsInfo>                 NumParticipantsInfo;                                     // 0x0010(0x0010) Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      DuelTotemSpawnTraceVertOffset;                           // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DuelTotemSpawnInFrontDistance;                           // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DuelTotemSpawnFindGroundDistance;                        // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9M8B[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DuelTeamGroup
	 * Size -> 0x0010
	 */
	struct FDuelTeamGroup
	{
	public:
		TArray<class UTeam*>                                       PlayerIndexToTeam;                                       // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerDueling_SavedInfo
	 * Size -> 0x0008
	 */
	struct FPlayerDueling_SavedInfo
	{
	public:
		class UTeam*                                               Team;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerActiveDuelState
	 * Size -> 0x0020
	 */
	struct FPlayerActiveDuelState
	{
	public:
		class AOakCharacter_Player*                                PlayerCharacter;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMainPlayer;                                           // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7997[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTeam*                                               DuelTeam;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPlayerDueling_SavedInfo                            SavedInfo;                                               // 0x0018(0x0008) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.TeamActiveDuelState
	 * Size -> 0x0018
	 */
	struct FTeamActiveDuelState
	{
	public:
		class UTeam*                                               DuelTeam;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPlayerActiveDuelState>                      Players;                                                 // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DuelLoserState
	 * Size -> 0x0020
	 */
	struct FDuelLoserState
	{
	public:
		class AOakCharacter_Player*                                Player;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDuelLoseReason                                            LoseReason;                                              // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_90Q5[0x17];                                  // 0x0009(0x0017) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActiveDuelState
	 * Size -> 0x0050
	 */
	struct FActiveDuelState
	{
	public:
		TArray<struct FTeamActiveDuelState>                        ParticipatingTeams;                                      // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class ADuelArena*                                          DuelArena;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ADuelTotem*                                          DuelTotem;                                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AOakCharacter_Player*                                DuelInstigator;                                          // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTeam*                                               WinningTeam;                                             // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDuelLoserState>                             DuelLosers;                                              // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class APlayerTradeManager*                                 TradeManager;                                            // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ActiveIndex;                                             // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDuelClassification                                        Classification;                                          // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XHK0[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.WeaponConfigurationEvent
	 * Size -> 0x0010
	 */
	struct FWeaponConfigurationEvent
	{
	public:
		int32_t                                                    Priority;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MXBY[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         WwiseEvent;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeaponConfigurationRtpc
	 * Size -> 0x0010
	 */
	struct FWeaponConfigurationRtpc
	{
	public:
		class UWwiseRtpc*                                          RtpcParam;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PriorityAveragingSum;                                    // 0x000C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.EchoInfo
	 * Size -> 0x0060
	 */
	struct FEchoInfo
	{
	public:
		int32_t                                                    DialogPlayingID;                                         // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7F4M[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxDialogComponent*                                 Caller;                                                  // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharacterEchoData*                                  CharacterData;                                           // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPerformanceEchoData*                                PerformanceData;                                         // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWwisePlaybackInstance                              AudioInstance;                                           // 0x0020(0x0018) Transient, NativeAccessSpecifierPublic
		class FString                                              MoodKeyframeToUse;                                       // 0x0038(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VoGMoodKeyToUse;                                         // 0x0048(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVoiceOfGodSpeaker                                         VoGSpeakerID;                                            // 0x0058(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceEchoOnly;                                          // 0x0059(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DV8S[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SupportedElementalInteractionData
	 * Size -> 0x00F8
	 */
	struct FSupportedElementalInteractionData
	{
	public:
		class UElementalInteractionData*                           State;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TransitionTimeScale;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageTriggeredTransitionTimeScale;                      // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideDamageTriggeredSourceDuration;                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideDamageAmount : 1;                               // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideBaseStatusEffectChance : 1;                     // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideBaseStatusEffectDamage : 1;                     // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideBaseStatusEffectDuration : 1;                   // 0x0014(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7660[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttributeInitializationData                        OverrideDamageAmount;                                    // 0x0018(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        OverrideBaseStatusEffectChance;                          // 0x0050(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        OverrideBaseStatusEffectDamage;                          // 0x0088(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        OverrideBaseStatusEffectDuration;                        // 0x00C0(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ElementalInteractionDamageOverlapData
	 * Size -> 0x0008
	 */
	struct FElementalInteractionDamageOverlapData
	{
	public:
		unsigned char                                              UnknownData_HJBQ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ElementalDamageTriggeredInteractionData
	 * Size -> 0x0028
	 */
	struct FElementalDamageTriggeredInteractionData
	{
	public:
		class UElementalInteractionData*                           Interaction;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitLocation;                                             // 0x0008(0x000C) IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y20T[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AController*                                         InstigatorController;                                    // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WF96[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ElementalInteractionTransitionData
	 * Size -> 0x0018
	 */
	struct FElementalInteractionTransitionData
	{
	public:
		class UElementalInteractionData*                           SourceInteraction;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UElementalInteractionData*                           TargetInteraction;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      TransitionTime;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      DamageTriggeredTransitionTime;                           // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.ElementalInteractionManagerPostPhysicsTickFunction
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	struct FElementalInteractionManagerPostPhysicsTickFunction : public FTickFunction
	{
	public:
		unsigned char                                              UnknownData_X0D8[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ElementalInteractionDamageValuesData
	 * Size -> 0x0014
	 */
	struct FElementalInteractionDamageValuesData
	{
	public:
		unsigned char                                              UnknownData_2IIG[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActorElementalInteractionDamageData
	 * Size -> 0x0088
	 */
	struct FActorElementalInteractionDamageData
	{
	public:
		TMap<class UElementalInteractionComponent*, struct FElementalInteractionDamageValuesData> DamageMap;                                               // 0x0000(0x0050) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UIYU[0x28];                                  // 0x0050(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AController*                                         InstigatorController;                                    // 0x0078(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TL71[0x8];                                   // 0x0080(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActorElementalDamageData
	 * Size -> 0x0058
	 */
	struct FActorElementalDamageData
	{
	public:
		TMap<class UClass*, struct FActorElementalInteractionDamageData> DamageInteractions;                                      // 0x0000(0x0050) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		int32_t                                                    DamageCount;                                             // 0x0050(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CWWG[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ProjectedMeshOptions
	 * Size -> 0x0048
	 */
	struct FProjectedMeshOptions
	{
	public:
		EProjectedMeshShape                                        Shape;                                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VZM9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Size;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Scale2D;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Complexity;                                              // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumRings;                                                // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlipNormals;                                            // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGenerateUVs;                                            // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionChannel                                          CollisionChannel;                                        // 0x001A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BAWT[0x1];                                   // 0x001B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartTraceDistance;                                      // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndTraceDistance;                                        // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PushAwayDistance;                                        // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreActor;                                            // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZAHR[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      AdditionalIgnoredActors;                                 // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CJOO[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ElementalPuddleTransitionConfigurationData
	 * Size -> 0x0030
	 */
	struct FElementalPuddleTransitionConfigurationData
	{
	public:
		class UMaterialInterface*                                  DecalMaterial;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UMaterialInterface*                                  MeshMaterial;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UWwiseEvent*                                         AudioLoop;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UPhysicalMaterial*                                   PhysMatOverride;                                         // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        EmitterNames;                                            // 0x0020(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilityAllyQuerySpec
	 * Size -> 0x0010
	 */
	struct FOakPlayerAbilityAllyQuerySpec
	{
	public:
		bool                                                       bInfiniteRange;                                          // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Q1N[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Range;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIncludeCompanions;                                      // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9L52[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LevelBasedExpScale
	 * Size -> 0x000C
	 */
	struct FLevelBasedExpScale
	{
	public:
		int32_t                                                    LevelDifference;                                         // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HigherLevelEnemyExpScale;                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LowerLevelEnemyExpScale;                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ExpAwardWeight
	 * Size -> 0x000C
	 */
	struct FExpAwardWeight
	{
	public:
		int32_t                                                    Players;                                                 // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KillerExpBonus;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExpWeight;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerExperienceFormula
	 * Size -> 0x000C
	 */
	struct FPlayerExperienceFormula
	{
	public:
		float                                                      Multiplier;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Power;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Offset;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerGuardianRankFormula
	 * Size -> 0x0014
	 */
	struct FPlayerGuardianRankFormula
	{
	public:
		float                                                      BaseValue;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseMultiplier;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Multiplier;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Power;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Offset;                                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerVaultCardLevelFormula
	 * Size -> 0x0014
	 */
	struct FPlayerVaultCardLevelFormula
	{
	public:
		float                                                      BaseValue;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseMultiplier;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Multiplier;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Power;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Offset;                                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PaintedTarget
	 * Size -> 0x0060
	 */
	struct FPaintedTarget
	{
	public:
		TWeakObjectPtr<class AActor>                               PaintedTarget;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHUDInWorldIconTargetInfo                           HUDIconInfo;                                             // 0x0008(0x0058) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ExitDownStateInformation
	 * Size -> 0x0028
	 */
	struct FExitDownStateInformation
	{
	public:
		EExitDownStateReason                                       ExitReason;                                              // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A038[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHUDNotificationAsset*                               CustomExitNotification;                                  // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                CustomExitMessageText;                                   // 0x0010(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DiscoveryIOData
	 * Size -> 0x0060
	 */
	struct FDiscoveryIOData
	{
	public:
		class UDownloadableExpansionData*                          DownloadableExpansionData;                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              Class[0x28];                                             // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.DiscoveryIOData.Class
		struct FTransform                                          Transform;                                               // 0x0030(0x0030) Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.GalaxySkyboxData
	 * Size -> 0x0040
	 */
	struct FGalaxySkyboxData
	{
	public:
		unsigned char                                              WorldAsset[0x28];                                        // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.GalaxySkyboxData.WorldAsset
		unsigned char                                              MapNameEnumIdx;                                          // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              ZoneNameEnumIdx;                                         // 0x0029(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ISFU[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxLevelSequence*                                   ArriveSequence;                                          // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxLevelSequence*                                   ExitSequence;                                            // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.ZoneIdToMapIdMappingData
	 * Size -> 0x0002
	 */
	struct FZoneIdToMapIdMappingData
	{
	public:
		unsigned char                                              ZoneNameEnumIdx;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              MapNameEnumIdx;                                          // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.PlanetMapDataToPlanetIdMappingData
	 * Size -> 0x0010
	 */
	struct FPlanetMapDataToPlanetIdMappingData
	{
	public:
		class UPlanetData*                                         PlanetData;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              PlanetID;                                                // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_2OSE[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MapIDToPlanetDataMappingData
	 * Size -> 0x0010
	 */
	struct FMapIDToPlanetDataMappingData
	{
	public:
		unsigned char                                              MapID;                                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3PQM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPlanetData*                                         PlanetData;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.ZoneIDToMissionEventReferenceData
	 * Size -> 0x0018
	 */
	struct FZoneIDToMissionEventReferenceData
	{
	public:
		unsigned char                                              ZoneNameEnumIdx;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3ERU[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMissionEventReference                              MissionEventReference;                                   // 0x0008(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.AmpedShotSettings
	 * Size -> 0x0018
	 */
	struct FAmpedShotSettings
	{
	public:
		class UClass*                                              AmpedShotTracerFX;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AmpedShotBeamFX;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         AmpedShotSound;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PickupEvaluationSettings
	 * Size -> 0x0038
	 */
	struct FPickupEvaluationSettings
	{
	public:
		float                                                      MinEvaluationHeight;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EvaluationWidth;                                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoxExtentZFactor;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SelectedWidthBoost;                                      // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SelectedHeightBoost;                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SelectedBoxZFactorBoost;                                 // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SelectedBoxZFactorBoost_Attached;                        // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttachedPickupPreferredBoxMaxHeight;                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttachedPickupTracedMeshPriorityBoost;                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickupStickiness;                                        // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinLookAtTolerance;                                      // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SkipVisibilityTraceTestRange;                            // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemCardBottomPickupOffset;                              // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemCardUpperLootBeamHeight;                             // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakVehicleManagerSettings
	 * Size -> 0x0020
	 */
	struct FOakVehicleManagerSettings
	{
	public:
		float                                                      OakVehicleManagerUpdateTime;                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeBeforeStartDamaging;                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamagePercentBySecond;                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeBeforeDigistructOut;                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeBeforeExplode;                                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceToDigistruct;                                    // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NavCorrecterSearchRadius;                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NavCorrecterDestroyDelay;                                // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VaultCardActiveChallengeList
	 * Size -> 0x0018
	 */
	struct FVaultCardActiveChallengeList
	{
	public:
		unsigned char                                              UnknownData_XRNR[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<uint32_t>                                           VaultCardChallenges;                                     // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GbxGFxDialogBoxChoiceInfo
	 * Size -> 0x0030
	 */
	struct FGbxGFxDialogBoxChoiceInfo
	{
	public:
		class FText                                                LabelText;                                               // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FName                                                ActionName;                                              // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InputAction;                                             // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCloseDialogOnSelection;                                 // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPressToHoldChoice;                                      // 0x0029(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E3HT[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GbxGFxDialogBoxInfo
	 * Size -> 0x00F0
	 */
	struct FGbxGFxDialogBoxInfo
	{
	public:
		class FText                                                HeaderText;                                              // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                BodyText;                                                // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FGbxGFxDialogBoxChoiceInfo>                  Choices;                                                 // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FScriptDelegate                                      OnChoiceMade;                                            // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y1M4[0x10];                                  // 0x0050(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bKeybindingAllowGamepadInputs;                           // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeybindingAllowMouseKeyboardInputs;                     // 0x0061(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGbxGFxDialogBoxStyle                                      DialogBoxStyle;                                          // 0x0062(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_84V0[0x5];                                   // 0x0063(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                InputText;                                               // 0x0068(0x0018) Edit, NativeAccessSpecifierPublic
		bool                                                       bCanCloseWhenChoicesArrayIsEmpty;                        // 0x0080(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInputTextField;                                         // 0x0081(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPasswordTextField;                                      // 0x0082(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAnyUserCanInteract;                                     // 0x0083(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanCancel;                                              // 0x0084(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuppressSpawnSound;                                     // 0x0085(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZPF0[0x2];                                   // 0x0086(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                InitialChoice;                                           // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InitialChoiceIndex;                                      // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGbxGFxDialogBoxButtonType                                 ButtonType;                                              // 0x0094(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNHG[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AGbxPlayerController*                                TargetPC;                                                // 0x0098(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowCloseWhenAnotherLocalPlayerLeaves;                 // 0x00A0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0X96[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxDialogBoxData*                                OverrideDefaultTemplate;                                 // 0x00A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5TII[0x40];                                  // 0x00B0(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ReportReason
	 * Size -> 0x0020
	 */
	struct FReportReason
	{
	public:
		class FText                                                DisplayName;                                             // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		EShiftReportReason                                         Code;                                                    // 0x0018(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QI1F[0x3];                                   // 0x0019(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_8BHE[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DeathCircleStageData
	 * Size -> 0x00A8
	 */
	struct FDeathCircleStageData
	{
	public:
		struct FAttributeInitializationData                        Radius;                                                  // 0x0000(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        StableSeconds;                                           // 0x0038(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        TransitionSeconds;                                       // 0x0070(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.BossbarEventData
	 * Size -> 0x0010
	 */
	struct FBossbarEventData
	{
	public:
		EBossbarEventType                                          Type;                                                    // 0x0000(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G2C4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOakCharacter*                                       Boss;                                                    // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MayhemDebugOverrides
	 * Size -> 0x0010
	 */
	struct FMayhemDebugOverrides
	{
	public:
		TArray<int32_t>                                            ModifierIndexOverrides;                                  // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MayhemReplicableSetsData
	 * Size -> 0x0004
	 */
	struct FMayhemReplicableSetsData
	{
	public:
		int32_t                                                    ActiveSetsBits;                                          // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MayhemModeState
	 * Size -> 0x0028
	 */
	struct FMayhemModeState
	{
	public:
		bool                                                       bIsActive;                                               // 0x0000(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VIXW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MayhemLevel;                                             // 0x0004(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    PendingMayhemLevel;                                      // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    PendingRandomSeed;                                       // 0x000C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FMayhemDebugOverrides                               CachedOptionalOverrides;                                 // 0x0010(0x0010) Transient, NativeAccessSpecifierPrivate
		struct FMayhemReplicableSetsData                           ReplicableSets;                                          // 0x0020(0x0004) Transient, NoDestructor, NativeAccessSpecifierPrivate
		int32_t                                                    RandomSeed;                                              // 0x0024(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.EffectivePlayerCountData
	 * Size -> 0x0008
	 */
	struct FEffectivePlayerCountData
	{
	public:
		int32_t                                                    EffectiveNumPlayers;                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEffectivePlayerCountSetting                               Setting;                                                 // 0x0004(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQJU[0x3];                                   // 0x0005(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	};

	/**
	 * ScriptStruct OakGame.MapIDData
	 * Size -> 0x0002
	 */
	struct FMapIDData
	{
	public:
		unsigned char                                              ZoneNameID;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MapNameID;                                               // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GlobalScreenParticleData
	 * Size -> 0x0028
	 */
	struct FGlobalScreenParticleData
	{
	public:
		class UParticleSystem*                                     StartAndLoopParticle;                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     EndParticle;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ContentDims;                                             // 0x0010(0x0008) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ParticleDepth;                                           // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQ7B[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Tag;                                                     // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GearUpAirdropData
	 * Size -> 0x0010
	 */
	struct FGearUpAirdropData
	{
	public:
		class AOakMissionSpawner*                                  Spawner;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IO68[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakUIInventoryItemDisplayInfo
	 * Size -> 0x0110
	 */
	struct FOakUIInventoryItemDisplayInfo
	{
	public:
		class FText                                                ItemName;                                                // 0x0000(0x0018) BlueprintVisible, Transient, NativeAccessSpecifierPublic
		int32_t                                                    ItemLevel;                                               // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X58I[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ItemDescription;                                         // 0x0020(0x0018) BlueprintVisible, Transient, NativeAccessSpecifierPublic
		class FText                                                ManufacturerName;                                        // 0x0038(0x0018) BlueprintVisible, Transient, NativeAccessSpecifierPublic
		int32_t                                                    ItemScore;                                               // 0x0050(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNew;                                                    // 0x0054(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFavorite;                                               // 0x0055(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTrash;                                                  // 0x0056(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanEquip;                                               // 0x0057(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEquipped;                                             // 0x0058(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCellLocked;                                             // 0x0059(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCellUnavailable;                                        // 0x005A(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ST36[0x1];                                   // 0x005B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UObject>                              ReferenceObject;                                         // 0x005C(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NCQT[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ReferencePicture[0x28];                                  // 0x0068(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakUIInventoryItemDisplayInfo.ReferencePicture
		int32_t                                                    PickupOrderIndex;                                        // 0x0090(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KC21[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInventoryListEntry                                 ListEntry;                                               // 0x0098(0x0040) BlueprintVisible, Transient, NoDestructor, NativeAccessSpecifierPublic
		struct FInventoryListEntryHandle                           ItemHandle;                                              // 0x00D8(0x0004) BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               ItemActor;                                               // 0x00DC(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UInventoryRarityData>                 RarityData;                                              // 0x00E4(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UManufacturerData>                    ManufacturerData;                                        // 0x00EC(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UGbxDamageType>                       DamageType;                                              // 0x00F4(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2KC0[0x4];                                   // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SpecialSortName;                                         // 0x0100(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOakUIInventoryItemUseType                                 UseType;                                                 // 0x0108(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N6CF[0x3];                                   // 0x0109(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       bUseCosmeticLabel;                                       // 0x010C(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZC0Q[0x3];                                   // 0x010D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxBackpackWidgetConfig
	 * Size -> 0x0118
	 */
	struct FGFxBackpackWidgetConfig
	{
	public:
		class FString                                              GridWidgetPath;                                          // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGbxGFxListConfig                                   GridWidgetConfig;                                        // 0x0010(0x0090) Edit, NativeAccessSpecifierPublic
		int32_t                                                    ItemBackpackSpaceMinIfInfinite;                          // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumBackpackIconsToKeep;                                  // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemBackpackSpaceMinLocked;                              // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinVisibleCells;                                         // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumCellsToPreCreate;                                     // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R7TO[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BackpackItemScaleformClass;                              // 0x00B8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EmptyBackpackItemScaleformClass;                         // 0x00C8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ListItemNativeClass;                                     // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ButtonHelpText;                                          // 0x00E0(0x0018) Edit, NativeAccessSpecifierPublic
		bool                                                       bUseTrashButtonStates;                                   // 0x00F8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7D9D[0x3];                                   // 0x00F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AOakPlayerController>                 OakPC;                                                   // 0x00FC(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UGbxGFxMovie>                         OwningMovie;                                             // 0x0104(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UGbxGFxObject>                        GridWidgetParent;                                        // 0x010C(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QE3E[0x4];                                   // 0x0114(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxBackpackWidget
	 * Size -> 0x0198
	 */
	struct FGFxBackpackWidget
	{
	public:
		class FScriptMulticastDelegate                             ItemSelectedDelegate;                                    // 0x0000(0x0010) ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ItemClickedDelegate;                                     // 0x0010(0x0010) ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             ItemPressedDelegate;                                     // 0x0020(0x0010) ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UOakThumbnailManager>                 ThumbnailManager;                                        // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bThumbnailMangerIsExternal;                              // 0x0038(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PXN8[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UUIGlobals>                           UIGlobals;                                               // 0x003C(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CJGY[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGFxBackpackWidgetConfig                            Config;                                                  // 0x0048(0x0118) Transient, NativeAccessSpecifierPrivate
		TArray<struct FOakUIInventoryItemDisplayInfo>              Items;                                                   // 0x0160(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class UGbxGFxGridScrollingList*                            GridWidget;                                              // 0x0170(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UGFxBackpackWidgetListener*                          Listener;                                                // 0x0178(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bIsInited;                                               // 0x0180(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_I34Z[0x3];                                   // 0x0181(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FirstBackpackItemOfInterest;                             // 0x0184(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class UGFxBackpackWidgetItem>               LastSelectedBackpackItem;                                // 0x0188(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bNeedsThumbnailsRefreshed;                               // 0x0190(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bDoNotManageThumbnailSweeping;                           // 0x0191(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bNeedsSweep;                                             // 0x0192(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_L0XN[0x5];                                   // 0x0193(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakInventoryMenuFilter
	 * Size -> 0x0020
	 */
	struct FOakInventoryMenuFilter
	{
	public:
		class FText                                                DisplayName;                                             // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		EOakInventoryMenuSortMode                                  SortMode;                                                // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJBB[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakInventoryMenuTypePriorityInfo
	 * Size -> 0x0018
	 */
	struct FOakInventoryMenuTypePriorityInfo
	{
	public:
		class UInventoryCategoryData*                              ItemType;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponTypeAsset*                                    WeaponTypeData;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PriorityValue;                                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ERZO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxDisplayNotificationWidgetTextFields
	 * Size -> 0x0010
	 */
	struct FGFxDisplayNotificationWidgetTextFields
	{
	public:
		class FString                                              TextFieldPath;                                           // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxSkillScreenBranchContainer
	 * Size -> 0x0040
	 */
	struct FGFxSkillScreenBranchContainer
	{
	public:
		class UGbxGFxObject*                                       Root;                                                    // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       BranchObject;                                            // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxSkillScreenBranch*                               Branch;                                                  // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxSkillScreenBranch*                               OriginalBranch;                                          // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VFIS[0x20];                                  // 0x0020(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxSkillScreenInfoCardContainer
	 * Size -> 0x0160
	 */
	struct FGFxSkillScreenInfoCardContainer
	{
	public:
		class UGbxGFxObject*                                       Root;                                                    // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M214[0x110];                                 // 0x0008(0x0110) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxButton*                                       InfoCardButton;                                          // 0x0118(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       IconArt;                                                 // 0x0120(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxTextField*                                       DescriptionText;                                         // 0x0128(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxSlider*                                       ScrollBar;                                               // 0x0130(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       ScrollMask;                                              // 0x0138(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                AvailablePointsString;                                   // 0x0140(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JKQV[0x8];                                   // 0x0158(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxSkillScreenSkillInfo
	 * Size -> 0x00C8
	 */
	struct FGFxSkillScreenSkillInfo
	{
	public:
		ESkillItemDisplayType                                      ItemType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TOUO[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ItemName;                                                // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ItemDescription;                                         // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KV32[0x90];                                  // 0x0038(0x0090) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxMenuTutorialState
	 * Size -> 0x00D0
	 */
	struct FGFxMenuTutorialState
	{
	public:
		EGFxMenuTutorialDialogSize                                 DialogSize;                                              // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_16XC[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EGFxMenuTutorialFocusDirection                             FocusDirection;                                          // 0x0004(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QM8P[0x3];                                   // 0x0005(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EGFxMenuTutorialFocusDirection                             SplitScreenFocusDirection;                               // 0x0008(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YQA6[0x3];                                   // 0x0009(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EGFxMenuTutorialFocusDirection                             VerticalSplitScreenFocusDirection;                       // 0x000C(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XX1D[0x3];                                   // 0x000D(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EGFxMenuTutorialFocusDirection                             QuadSplitScreenFocusDirection;                           // 0x0010(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XIL[0x3];                                   // 0x0011(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FVector2D                                           DialogOffset;                                            // 0x0014(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SplitScreenDialogOffset;                                 // 0x001C(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           VerticalSplitScreenDialogOffset;                         // 0x0024(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           QuadSplitScreenDialogOffset;                             // 0x002C(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08G6[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                HeaderText;                                              // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                BodyText;                                                // 0x0050(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<class FName>                                        VisibleTintClipsNames;                                   // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        SplitScreenVisibleTintClipsNames;                        // 0x0078(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        VerticalSplitScreenVisibleTintClipsNames;                // 0x0088(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        QuadSplitScreenVisibleTintClipsNames;                    // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        AllowedInputAxes;                                        // 0x00A8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        AllowedInputActions;                                     // 0x00B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bAdvanceOnKeyPress;                                      // 0x00C8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowTutorialSkip;                                      // 0x00C9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ELJQ[0x6];                                   // 0x00CA(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxMenuTutorialSequence
	 * Size -> 0x0010
	 */
	struct FGFxMenuTutorialSequence
	{
	public:
		TArray<struct FGFxMenuTutorialState>                       SequenceList;                                            // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxMenuTutorial
	 * Size -> 0x0018
	 */
	struct FGFxMenuTutorial
	{
	public:
		class FName                                                TutorialName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGFxMenuTutorialSequence                            TutorialSequence;                                        // 0x0008(0x0010) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxMenuTutorialTintClipData
	 * Size -> 0x0020
	 */
	struct FGFxMenuTutorialTintClipData
	{
	public:
		class FName                                                TintClipName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TintClipPath;                                            // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       TintClip;                                                // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxMenuTutorialCollection
	 * Size -> 0x0020
	 */
	struct FGFxMenuTutorialCollection
	{
	public:
		TArray<struct FGFxMenuTutorial>                            Tutorials;                                               // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FGFxMenuTutorialTintClipData>                TintClips;                                               // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.HealthTypeDepletedDetails
	 * Size -> 0x0018
	 */
	struct FHealthTypeDepletedDetails
	{
	public:
		class UHealthTypeData*                                     HealthType;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxDamageType*                                      DamageType;                                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Index;                                                   // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZH27[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxBuddyWidgetAnimQueueItem
	 * Size -> 0x0010
	 */
	struct FGFxBuddyWidgetAnimQueueItem
	{
	public:
		class AActor*                                              TargetActor;                                             // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ATDJ[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCARMenuPartType
	 * Size -> 0x0002
	 */
	struct FOakCARMenuPartType
	{
	public:
		bool                                                       bIsBody;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ECARPartType                                               PartType;                                                // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.GFxCARMenuPartInfo
	 * Size -> 0x00E8
	 */
	struct FGFxCARMenuPartInfo
	{
	public:
		class FText                                                PartName;                                                // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		struct FOakCARMenuPartType                                 PartType;                                                // 0x0018(0x0002) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4C1S[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StageName;                                               // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ListName;                                                // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CustomizePanelFrameName;                                 // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGbxFocusableWidgetAdjacencyNames                   AdjacentWidgets;                                         // 0x0050(0x0040) Edit, NativeAccessSpecifierPublic
		struct FGbxFocusableWidgetAdjacencyNames                   AdjacentWidgetsSplitscreen;                              // 0x0090(0x0040) Edit, NativeAccessSpecifierPublic
		bool                                                       bCanSelectEmpty;                                         // 0x00D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N7CD[0x7];                                   // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGFxCARMenuPartButton*                               BUTTON;                                                  // 0x00D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxCARMenuCustomizePage*                            Page;                                                    // 0x00E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxCARMenuListData
	 * Size -> 0x0198
	 */
	struct FGFxCARMenuListData
	{
	public:
		class FString                                              ListClipName;                                            // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGbxGFxPooledGridListFullConfig                     ListConfig;                                              // 0x0010(0x00C0) Edit, NativeAccessSpecifierPublic
		struct FGbxGFxPooledGridListFullConfig                     ListConfigSplitScreen;                                   // 0x00D0(0x00C0) Edit, NativeAccessSpecifierPublic
		class UGbxGFxPooledGridList*                               List;                                                    // 0x0190(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.EchoDeviceUIController
	 * Size -> 0x0020
	 */
	struct FEchoDeviceUIController
	{
	public:
		class UEchoDeviceUIData*                                   Config;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEquipEchoDevice;                                        // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C4ZA[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AOakCharacter_Player>                 PrimaryCharacter;                                        // 0x000C(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SRMX[0xC];                                   // 0x0014(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StandInLightComponentInstance
	 * Size -> 0x0028
	 */
	struct FStandInLightComponentInstance
	{
	public:
		class ULightComponent*                                     Component;                                               // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AIU4[0x20];                                  // 0x0008(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DesiredStandInActorData
	 * Size -> 0x0050
	 */
	struct FDesiredStandInActorData
	{
	public:
		unsigned char                                              UnknownData_A46L[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              CustomStandInClass;                                      // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HU0W[0x30];                                  // 0x0010(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxDataAsset*                                       DataAsset;                                               // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CO1X[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StandInUIController
	 * Size -> 0x0390
	 */
	struct FStandInUIController
	{
	public:
		unsigned char                                              UnknownData_2RS2[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ContainerClass[0x28];                                    // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.StandInUIController.ContainerClass
		float                                                      VerticalSplitInVehicleAdjustment;                        // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KZLM[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             OuterObject;                                             // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AOakPlayerController*                                PlayerController;                                        // 0x0040(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AOakUIActorContainer*                                StandInContainer;                                        // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FStandInLightComponentInstance>              LightComponents;                                         // 0x0050(0x0010) ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		class USceneComponent*                                     StandInTransformRoot;                                    // 0x0060(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              CurrentStandInActor;                                     // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                      SecondaryActors;                                         // 0x0070(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class AActor*                                              TempInventoryActor;                                      // 0x0080(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInventoryBalanceStateComponent*                     StandInTemplateInventoryBalanceState;                    // 0x0088(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FRW9[0x18];                                  // 0x0090(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDesiredStandInActorData                            LastDesiredActorData;                                    // 0x00A8(0x0050) Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RJUE[0x138];                                 // 0x00F8(0x0138) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDesiredStandInActorData                            DesiredActorData;                                        // 0x0230(0x0050) Transient, NativeAccessSpecifierPrivate
		TArray<class UObject*>                                     StreamedObjects;                                         // 0x0280(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_KPIB[0x10];                                  // 0x0290(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   WantedStreamRequest;                                     // 0x02A0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_20N4[0xEC];                                  // 0x02A4(0x00EC) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCARMenuLoadoutCustomizer
	 * Size -> 0x0310
	 */
	struct FOakCARMenuLoadoutCustomizer
	{
	public:
		struct FOakCARMenuVehicleConfig                            CurrentConfig;                                           // 0x0000(0x0188) Transient, NativeAccessSpecifierPrivate
		struct FOakCARMenuVehicleConfig                            PreviewConfig;                                           // 0x0188(0x0188) Transient, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.GFxCARMenuLoadAssetInfo
	 * Size -> 0x0028
	 */
	struct FGFxCARMenuLoadAssetInfo
	{
	public:
		struct FSoftObjectPath                                     StringAssetRef;                                          // 0x0000(0x0018) Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GAJ4[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxCARPreviewData
	 * Size -> 0x0060
	 */
	struct FGFxCARPreviewData
	{
	public:
		class UOakCARVehicleData*                                  Vehicle;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UOakCARVehiclePartData*>                      Parts;                                                   // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UOakCARVehicleData*                                  SelectedVehicle;                                         // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakCARVehiclePartData*                              SelectedPart;                                            // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CEToPlay[0x28];                                          // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.GFxCARPreviewData.CEToPlay
		unsigned char                                              UnknownData_3Z28[0x10];                                  // 0x0050(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxChallengeProgressItem
	 * Size -> 0x00B8
	 */
	struct FGFxChallengeProgressItem
	{
	public:
		class FText                                                FirstChallengeName;                                      // 0x0000(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                SecondChallengeName;                                     // 0x0018(0x0018) Transient, NativeAccessSpecifierPublic
		bool                                                       bHasNameTransitioned;                                    // 0x0030(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FG8L[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                FirstDescription;                                        // 0x0038(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                SecondDescription;                                       // 0x0050(0x0018) Transient, NativeAccessSpecifierPublic
		bool                                                       bHasDescriptionTransitioned;                             // 0x0068(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QDWI[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FirstTypeIconFrame;                                      // 0x0070(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SecondTypeIconFrame;                                     // 0x0080(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasIconTransitioned;                                    // 0x0090(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bViewAsPercent;                                          // 0x0091(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bViewOneOffCompletionNotProgress;                        // 0x0092(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MG1I[0x1];                                   // 0x0093(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ProgressPctToStartAnimFrom;                              // 0x0094(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProgressOutOfValue;                                      // 0x0098(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProgressOutOfMax;                                        // 0x009C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChallengeWasCompleted;                                  // 0x00A0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasPercentCompleteTransitioned;                         // 0x00A1(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SSZ9[0x6];                                   // 0x00A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ChallengeClass;                                          // 0x00A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAddedAsProgressOfChildChallenge;                        // 0x00B0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NWKE[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ParentRanking;                                           // 0x00B4(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerClassInfo
	 * Size -> 0x0030
	 */
	struct FPlayerClassInfo
	{
	public:
		unsigned char                                              UnknownData_WIT5[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                PlayerStandInActorName;                                  // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorSocketName;                                         // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TextOffset;                                              // 0x0018(0x0008) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           DefaultPosition;                                         // 0x0020(0x0008) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPlayerClassIdentifier*                              PlayerClassId;                                           // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakUIControllerConnectedState
	 * Size -> 0x0010
	 */
	struct FOakUIControllerConnectedState
	{
	public:
		TWeakObjectPtr<class ULocalPlayer>                         LocalPlayer;                                             // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxControllerDisconnectMovie*                       DisconnectMovie;                                         // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OrganizationInfo
	 * Size -> 0x0028
	 */
	struct FOrganizationInfo
	{
	public:
		class FName                                                OrganizationId;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TextStyle;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TextEntry;                                               // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CreditsImageData
	 * Size -> 0x0020
	 */
	struct FCreditsImageData
	{
	public:
		struct FSoftObjectPath                                     CreditsImage;                                            // 0x0000(0x0018) Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImageShowTime;                                           // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImageMaxTime;                                            // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CreditsSection
	 * Size -> 0x0050
	 */
	struct FCreditsSection
	{
	public:
		TArray<class UCreditsDataAsset*>                           CreditsDataAssets;                                       // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<struct FCreditsImageData>                           CreditsImageDataList;                                    // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      TransitionTimeBetweenImages;                             // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizontalSpacing;                                       // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UserAnimationSpeed;                                      // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultAnimationSpeed;                                   // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PauseTime;                                               // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowScrollingCredits;                                  // 0x0034(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WQH2[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScrollingDelay;                                          // 0x0038(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelayAfterLastCredit;                                    // 0x003C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         BackgroundMusicStartEvent;                               // 0x0040(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         BackgroundMusicEndEvent;                                 // 0x0048(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CreditsTextureCache
	 * Size -> 0x0010
	 */
	struct FCreditsTextureCache
	{
	public:
		class UTexture2D*                                          CreditsTexture;                                          // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_243V[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CreditsLineInfo
	 * Size -> 0x0020
	 */
	struct FCreditsLineInfo
	{
	public:
		class FName                                                StyleId;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TextEntry;                                               // 0x0008(0x0018) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CreditsTextFieldInfo
	 * Size -> 0x0010
	 */
	struct FCreditsTextFieldInfo
	{
	public:
		class FName                                                StyleId;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxTextField*                                       TextField;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxCrewQuartersMoodMenuMoodInfo
	 * Size -> 0x000C
	 */
	struct FGFxCrewQuartersMoodMenuMoodInfo
	{
	public:
		TWeakObjectPtr<class UDynamicRoomBaseData>                 RoomBaseData;                                            // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLocked;                                               // 0x0008(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x0009(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_37HE[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakThumbnailManagerIcon
	 * Size -> 0x0028
	 */
	struct FOakThumbnailManagerIcon
	{
	public:
		unsigned char                                              UnknownData_KTYT[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxCurrencyCounterCategoryData
	 * Size -> 0x0010
	 */
	struct FGFxCurrencyCounterCategoryData
	{
	public:
		class UInventoryCategoryData*                              ItemCategory;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastValue;                                               // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZE1[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxCurrencyCounterQueueInfo
	 * Size -> 0x0028
	 */
	struct FGFxCurrencyCounterQueueInfo
	{
	public:
		class UInventoryCategoryData*                              ItemCategory;                                            // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DeltaValue;                                              // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartTotal;                                              // 0x000C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FinalTotal;                                              // 0x0010(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MDTT[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                StartAudioEvent;                                         // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StopAudioEvent;                                          // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxDeulingNotificationRewardWin
	 * Size -> 0x00E0
	 */
	struct FGFxDeulingNotificationRewardWin
	{
	public:
		unsigned char                                              UnknownData_UQ9S[0xE0];                                  // 0x0000(0x00E0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxDuelTimerTotemData
	 * Size -> 0x0018
	 */
	struct FGFxDuelTimerTotemData
	{
	public:
		class UGFxDuelTimerTotemObject*                            TimerClip;                                               // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UOakDuelingWidgetTotemComponent>      AttachedDuelTotemComponent;                              // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInUse;                                                  // 0x0010(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I6LB[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LocalizationStatus
	 * Size -> 0x00A8
	 */
	struct FLocalizationStatus
	{
	public:
		class FText                                                PanelTitle;                                              // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ShiftAccountLabel;                                       // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                StreamingServiceLabel;                                   // 0x0030(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                AccountNameLabel;                                        // 0x0048(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ExtensionVersionLabel;                                   // 0x0060(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ChannelTitleLabel;                                       // 0x0078(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                CurrentViewerLabel;                                      // 0x0090(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxEchoNetMailboxMenu_Adjustment
	 * Size -> 0x0010
	 */
	struct FGFxEchoNetMailboxMenu_Adjustment
	{
	public:
		struct FVector2D                                           ContextMenuOffsetExpandingDown;                          // 0x0000(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ContextMenuOffsetExpandingUp;                            // 0x0008(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxEchoNetMathcmakingActivitySubTypeData
	 * Size -> 0x0058
	 */
	struct FGFxEchoNetMathcmakingActivitySubTypeData
	{
	public:
		class FString                                              Guid;                                                    // 0x0000(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocked;                                                 // 0x0010(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFeatured;                                               // 0x0011(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsHeroic;                                               // 0x0012(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ANRG[0x5];                                   // 0x0013(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Name;                                                    // 0x0018(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0030(0x0018) Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VTNM[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxEchoNetMatchmakingActivityData
	 * Size -> 0x00C8
	 */
	struct FGFxEchoNetMatchmakingActivityData
	{
	public:
		struct FGFxEchoNetMathcmakingActivitySubTypeData           NormalData;                                              // 0x0000(0x0058) Transient, NativeAccessSpecifierPublic
		struct FGFxEchoNetMathcmakingActivitySubTypeData           HeroicData;                                              // 0x0058(0x0058) Transient, NativeAccessSpecifierPublic
		class FString                                              ImageId;                                                 // 0x00B0(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLookingAtHeroic;                                        // 0x00C0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R8GP[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxEchoNetRosterMenu_Adjustment
	 * Size -> 0x0010
	 */
	struct FGFxEchoNetRosterMenu_Adjustment
	{
	public:
		struct FVector2D                                           ContextMenuOffsetExpandingDown;                          // 0x0000(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ContextMenuOffsetExpandingUp;                            // 0x0008(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakOnlineLobbyPlayerInfo
	 * Size -> 0x0080
	 */
	struct FOakOnlineLobbyPlayerInfo
	{
	public:
		unsigned char                                              UnknownData_JXZ4[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EOakOnlineLobbyPlayerPlateState                            PlateState;                                              // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLobbyLead;                                            // 0x0011(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_280D[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0018(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                MissionDisplayName;                                      // 0x0030(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                MapDisplayName;                                          // 0x0048(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                PlayerClassDisplayName;                                  // 0x0060(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    CharacterLevel;                                          // 0x0078(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOakOnlineLobbyConnectivityState                           ConnectivityState;                                       // 0x007C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOakOnlineLobbyTalkingState                                TalkingState;                                            // 0x007D(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LPJH[0x2];                                   // 0x007E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxFriendsInAreaListMenu_Adjustment
	 * Size -> 0x0010
	 */
	struct FGFxFriendsInAreaListMenu_Adjustment
	{
	public:
		struct FVector2D                                           ContextMenuOffsetExpandingDown;                          // 0x0000(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ContextMenuOffsetExpandingUp;                            // 0x0008(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxGameModeNotificationWidgetInfo
	 * Size -> 0x0060
	 */
	struct FGFxGameModeNotificationWidgetInfo
	{
	public:
		EGameModeNotificationType                                  NotificationType;                                        // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IMMD[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TimelinePosition;                                        // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ContentPath;                                             // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TextFieldPath;                                           // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TextFieldShadowPath;                                     // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayedText;                                           // 0x0048(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxGrenadeIndicatorSortItem
	 * Size -> 0x0010
	 */
	struct FGFxGrenadeIndicatorSortItem
	{
	public:
		class AOakProjectile*                                      Grenade;                                                 // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistSq;                                                  // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_61SE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GuardianRankPerkEntry
	 * Size -> 0x0018
	 */
	struct FGuardianRankPerkEntry
	{
	public:
		class UGuardianRankPerkData*                               RankPerk;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAbility*                                         PerkAbilityInstance;                                     // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUnlocked;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasJustUnlocked;                                        // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U37V[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakInventoryMenuItemGrouping
	 * Size -> 0x0018
	 */
	struct FOakInventoryMenuItemGrouping
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponTypeAsset*                                    WeaponTypeData;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UManufacturerData*                                   ManufacturerData;                                        // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakInventoryMenuPaperDollSlotInfo
	 * Size -> 0x00A0
	 */
	struct FOakInventoryMenuPaperDollSlotInfo
	{
	public:
		class FString                                              WidgetName;                                              // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TrinketName;                                             // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventorySlotData*                                  SlotData;                                                // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SlotFilterId;                                            // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SlotIconWidgetName;                                      // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SlotIconFrame;                                           // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ButtonBinding[0x28];                                     // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakInventoryMenuPaperDollSlotInfo.ButtonBinding
		class FString                                              NoKeyBoundFrameName;                                     // 0x0078(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SlotIconInputAction;                                     // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOakInventoryMenuPaperDollSlotAdjacency                    Adjancency;                                              // 0x0090(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J2G3[0x3];                                   // 0x0091(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       bUnlockedIsBeastmaster;                                  // 0x0094(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUnlockedIsExtraArtifacts;                               // 0x0095(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7BVF[0x2];                                   // 0x0096(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SplitScreenPage;                                         // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SSDZ[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxInventoryMenuConfig
	 * Size -> 0x0298
	 */
	struct FGFxInventoryMenuConfig
	{
	public:
		class UInventoryCategoryData*                              WeaponCategory;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              GrenadeCategory;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              ShieldCategory;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              GoldenKeyResourceData;                                   // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              ErediumResourceData;                                     // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              MoneyResourceData;                                       // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              VaultCoinResourceData;                                   // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReturnToBackpackWhenEquippingFromIt;                    // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClearAllNewnessWhenLeavingMenu;                         // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableInspect;                                          // 0x003A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OF7Q[0x1];                                   // 0x003B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        SelectionHighlightColorForItemCard;                      // 0x003C(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        SelectionComparisonColorForItemCard;                     // 0x004C(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemCardLineThickness;                                   // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryMenuFilter>                     PageFilters;                                             // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryMenuTypePriorityInfo>           ItemTypeSortPriorities;                                  // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryMenuItemGrouping>               ItemGroupingsByType;                                     // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryMenuItemGrouping>               ItemGroupingsByManufacturer;                             // 0x0090(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                InputAction_Drop;                                        // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InputAction_DropByHolding;                               // 0x00A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InputAction_TrashFavorite;                               // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InputAction_Inspect;                                     // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InputAction_Unequip;                                     // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryMenuPaperDollSlotInfo>          PaperDollSlotSetup;                                      // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UGbxAmmoTypeData*>                            AmmoTypes;                                               // 0x00D8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UGbxAmmoTypeData*                                    GrenadeAmmoType;                                         // 0x00E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxMenuData*                                        ItemInspectionMenuData;                                  // 0x00F0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USwfMovie*                                           ItemCardMovie;                                           // 0x00F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ItemCardOffset;                                          // 0x0100(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemCardScale;                                           // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           CompareItemCardOffset;                                   // 0x010C(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CompareItemCardScale;                                    // 0x0114(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGFxBackpackWidgetConfig                            BackpackConfig;                                          // 0x0118(0x0118) Edit, NativeAccessSpecifierPublic
		int32_t                                                    TrinketIconsReserveCount;                                // 0x0230(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalCurrencySpinnerHeightOverride;                      // 0x0234(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrencyWidgetPauseOnNewValueTime;                       // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrencyWidgetCostSpinTime;                              // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TrinketsText;                                            // 0x0240(0x0018) Edit, NativeAccessSpecifierPublic
		struct FGFxMenuTutorialCollection                          Tutorials;                                               // 0x0258(0x0020) Edit, NativeAccessSpecifierPublic
		class FName                                                FirstBootTutorial;                                       // 0x0278(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GearUpModeTutorial;                                      // 0x0280(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LargeBackpackVisibleCells;                               // 0x0288(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SmallBackpackVisibleCells;                               // 0x028C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResortBackpackWhenAddingAndRemovingItems;               // 0x0290(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KKNM[0x3];                                   // 0x0291(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DelayBeforeDragStart;                                    // 0x0294(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxInventoryMenuUnlockLookupItem
	 * Size -> 0x0040
	 */
	struct FGFxInventoryMenuUnlockLookupItem
	{
	public:
		unsigned char                                              InventoryCategory[0x28];                                 // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.GFxInventoryMenuUnlockLookupItem.InventoryCategory
		class FText                                                DisplayText;                                             // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxInventoryMenuSwapItem
	 * Size -> 0x0014
	 */
	struct FGFxInventoryMenuSwapItem
	{
	public:
		EGFxInventoryMenuFocusSide                                 Side;                                                    // 0x0000(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_G5TB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UGFxInventoryItemWidget>              ItemWidget;                                              // 0x0004(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TWeakObjectPtr<class UObject>                              ItemObject;                                              // 0x000C(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.GFxInventoryMenuEquipToSlot
	 * Size -> 0x00D8
	 */
	struct FGFxInventoryMenuEquipToSlot
	{
	public:
		class UGFxInventoryItemWidget*                             ItemWidget;                                              // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxInventoryMenuTrinketButton*                      TrinketWidget;                                           // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       IconWidget;                                              // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JAE8[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bTrinketEnabled;                                         // 0x0030(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TMV8[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakInventoryMenuPaperDollSlotInfo                  SlotInfo;                                                // 0x0038(0x00A0) Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.UIHardpointData
	 * Size -> 0x0070
	 */
	struct FUIHardpointData
	{
	public:
		EIronBearUIHardpointType                                   Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6MND[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ProgressBarName;                                         // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProgressBarFrameName;                                    // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconFrameName;                                           // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ElementalIconName;                                       // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FallbackElementalIconFrameName;                          // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                BarText;                                                 // 0x0058(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ItemCardElementalDetails
	 * Size -> 0x0040
	 */
	struct FItemCardElementalDetails
	{
	public:
		class FText                                                EffectText;                                              // 0x0000(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                ProcChanceText;                                          // 0x0018(0x0018) Transient, NativeAccessSpecifierPublic
		class FString                                              IconFrame;                                               // 0x0030(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxItemCardAbbreviatedObject
	 * Size -> 0x01D8
	 */
	struct FGFxItemCardAbbreviatedObject
	{
	public:
		unsigned char                                              UnknownData_OHEA[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             ElementalUpdatedDelegate;                                // 0x0008(0x0010) ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AOakPlayerController>                 OwningPC;                                                // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       ItemCardRootClip;                                        // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UInventoryShopComponent*                             CachedInventoryShop;                                     // 0x0028(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3J0R[0xD8];                                  // 0x0030(0x00D8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UGFxItemCardMainStat*>                        MainStatWidgets;                                         // 0x0108(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		TArray<class UGFxItemCardMainStat*>                        MainStatMirroredWidgets;                                 // 0x0118(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		class UGbxGFxObject*                                       ArtifactRarityIcon;                                      // 0x0128(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxGFxObject*                                       AbbreviatedAmmoIcon;                                     // 0x0130(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      UpdateElementalInfoTime;                                 // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_A3ZV[0x4];                                   // 0x013C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInventoryBalanceStateComponent*                     CurrentBalanceComponent;                                 // 0x0140(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_7EO6[0x8];                                   // 0x0148(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInventoryBalanceStateComponent*                     CurrentComparisonItem;                                   // 0x0150(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FItemCardElementalDetails>                   ElementalEffects;                                        // 0x0158(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_UTND[0x10];                                  // 0x0168(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LastElementalFrame;                                      // 0x0178(0x0010) ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class UGFxItemCardArtifactLine*>                    ArtifactMainStats;                                       // 0x0188(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RZUY[0x8];                                   // 0x0198(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UGFxItemCardSkillEntry*>                      ClassModSkillEntries;                                    // 0x01A0(0x0010) ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
		class USwfMovie*                                           SkillIconSWF;                                            // 0x01B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSoftObjectPath                                     CurrentSkillIconSWFPath;                                 // 0x01B8(0x0018) Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_36FQ[0x8];                                   // 0x01D0(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxItemCardObject
	 * Size -> 0x0360 (FullSize[0x0538] - InheritedSize[0x01D8])
	 */
	struct FGFxItemCardObject : public FGFxItemCardAbbreviatedObject
	{
	public:
		class FString                                              DescriptionHighlightColor;                               // 0x01D8(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalSpinnerHeightOverride;                              // 0x01E8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CostSpinTime;                                            // 0x01EC(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PauseOnNewValueTime;                                     // 0x01F0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SecondaryStatsBottomSpacer;                              // 0x01F4(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClassModSpacingHeight;                                   // 0x01F8(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LegendaryArtifactSpacingHeight;                          // 0x01FC(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalVerticalAdjustment;                                 // 0x0200(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HAMY[0x4];                                   // 0x0204(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGFxCurrencyCounterClip*                             CurrencyWidget;                                          // 0x0208(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLUF[0xA0];                                  // 0x0210(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxTextField*                                       ItemName;                                                // 0x02B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_NAYL[0xE0];                                  // 0x02B8(0x00E0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxObject*                                       MainStatBackground;                                      // 0x0398(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxGFxObject*                                       MainStatBackgroundRaritySides;                           // 0x03A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxTextField*                                       TextStats;                                               // 0x03A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxTextField*                                       SDUTextStats;                                            // 0x03B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxTextField*                                       PickupTextStats;                                         // 0x03B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_QQPN[0xC0];                                  // 0x03C0(0x00C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxNumTextStats;                                         // 0x0480(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_BT00[0x1C];                                  // 0x0484(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxTextField*                                       TextStatsTextfieldToUse;                                 // 0x04A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_JVR1[0x28];                                  // 0x04A8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxObject*                                       ManufacturerWrapper;                                     // 0x04D0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_RKSU[0x18];                                  // 0x04D8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxObject*                                       ManufacturerFill;                                        // 0x04F0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxTextField*                                       ManufacturerStats;                                       // 0x04F8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxGFxObject*                                       ManufacturerTextTint;                                    // 0x0500(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxGFxObject*                                       ItemCardBottom;                                          // 0x0508(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_M25E[0x28];                                  // 0x0510(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionPageData
	 * Size -> 0x0038
	 */
	struct FGFxItemInspectionPageData
	{
	public:
		EGFxItemInspectionPages                                    Page;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X2H9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                NavId;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FrameName;                                               // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PageTitle;                                               // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionCategoryInfo
	 * Size -> 0x0040
	 */
	struct FGFxItemInspectionCategoryInfo
	{
	public:
		class UInventoryCategoryData*                              CategoryData;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8J6T[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          BaseTransform;                                           // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionPageBase
	 * Size -> 0x0010
	 */
	struct FGFxItemInspectionPageBase
	{
	public:
		unsigned char                                              UnknownData_PQRN[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxObject*                                       PageWrapper;                                             // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionInspectPage
	 * Size -> 0x0080 (FullSize[0x0090] - InheritedSize[0x0010])
	 */
	struct FGFxItemInspectionInspectPage : public FGFxItemInspectionPageBase
	{
	public:
		class FText                                                SkinTitleText;                                           // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UZAS[0x60];                                  // 0x0028(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxHintWidget*                                   SkinsHintClip;                                           // 0x0088(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectManufacturerChallengeInfo
	 * Size -> 0x0008
	 */
	struct FGFxItemInspectManufacturerChallengeInfo
	{
	public:
		class UClass*                                              ChallengeClass;                                          // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionManufacturerPage
	 * Size -> 0x0110 (FullSize[0x0120] - InheritedSize[0x0010])
	 */
	struct FGFxItemInspectionManufacturerPage : public FGFxItemInspectionPageBase
	{
	public:
		class FText                                                WatchCommericalHintText;                                 // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ChallengesHeaderText;                                    // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ViewChallengeText;                                       // 0x0040(0x0018) Edit, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       RootClip;                                                // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HOLZ[0x28];                                  // 0x0060(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxHintWidget*                                   PlayCommercialHintClip;                                  // 0x0088(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LY8W[0x18];                                  // 0x0090(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxTextField*                                       ManufacturerDescriptionTextClip;                         // 0x00A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxSlider*                                       ManufacturerDescriptionScrollbarClip;                    // 0x00B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       ManufacturerDescriptionMaskClip;                         // 0x00B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JU20[0x30];                                  // 0x00C0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UGFxItemInspectionManufacturerChallengeObject*> ChallengeClips;                                          // 0x00F0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		TArray<struct FGFxItemInspectManufacturerChallengeInfo>    ChallengeInfos;                                          // 0x0100(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QS2G[0x10];                                  // 0x0110(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionPageElementalStarRatings
	 * Size -> 0x000C
	 */
	struct FGFxItemInspectionPageElementalStarRatings
	{
	public:
		float                                                      VsFlesh;                                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VsShield;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VsArmor;                                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionElementalPage
	 * Size -> 0x0208 (FullSize[0x0218] - InheritedSize[0x0010])
	 */
	struct FGFxItemInspectionElementalPage : public FGFxItemInspectionPageBase
	{
	public:
		class FText                                                HealthHeaderLabel;                                       // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ShieldHeaderLabel;                                       // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ArmorHeaderLabel;                                        // 0x0040(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<class FText>                                        ChangeViewLables;                                        // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<EOakElementalType, struct FGFxItemInspectionPageElementalStarRatings> StarRatingMapping;                                       // 0x0068(0x0050) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              FallbackDamageType[0x28];                                // 0x00B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.GFxItemInspectionElementalPage.FallbackDamageType
		class UGbxGFxObject*                                       RootClip;                                                // 0x00E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2XYN[0x110];                                 // 0x00E8(0x0110) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxHintWidget*                                   ChangeViewHintClip;                                      // 0x01F8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UGbxDamageType*>                              ElementalTypes;                                          // 0x0200(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		int32_t                                                    CurrentElementalIndex;                                   // 0x0210(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FW2F[0x4];                                   // 0x0214(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionPartsPage
	 * Size -> 0x01A0 (FullSize[0x01B0] - InheritedSize[0x0010])
	 */
	struct FGFxItemInspectionPartsPage : public FGFxItemInspectionPageBase
	{
	public:
		struct FGbxGFxPooledGridListFullConfig                     PartsListConfig;                                         // 0x0010(0x00C0) Edit, NativeAccessSpecifierPublic
		int32_t                                                    SplitScreenPartsListSize;                                // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumStatRows;                                             // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                WeaponPartEffectsText;                                   // 0x00D8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                WeaponPartsText;                                         // 0x00F0(0x0018) Edit, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       WeaponPartsContainerClip;                                // 0x0108(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_46HE[0x48];                                  // 0x0110(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGFxItemInspectionPartList*                          PartsListClip;                                           // 0x0158(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxSlider*                                       ScrollBarClip;                                           // 0x0160(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_789F[0x20];                                  // 0x0168(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UGFxItemInspectionStatRowObject*>             StatRowClips;                                            // 0x0188(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FU4N[0x18];                                  // 0x0198(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionSkinsPage
	 * Size -> 0x0170 (FullSize[0x0180] - InheritedSize[0x0010])
	 */
	struct FGFxItemInspectionSkinsPage : public FGFxItemInspectionPageBase
	{
	public:
		struct FGbxGFxPooledGridListFullConfig                     SkinsListConfig;                                         // 0x0010(0x00C0) Edit, NativeAccessSpecifierPublic
		int32_t                                                    SplitScreenSkinListRowCount;                             // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G8G2[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DefaultSkinName;                                         // 0x00D8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                WeaponSkinTextName;                                      // 0x00F0(0x0018) Edit, NativeAccessSpecifierPublic
		class UGFxItemInspectionSkinsList*                         SkinsList;                                               // 0x0108(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxSlider*                                       ScrollBarSkinsClip;                                      // 0x0110(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxButton*                                       NavArrowLeftButton;                                      // 0x0118(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxButton*                                       NavArrowRightButton;                                     // 0x0120(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JFV3[0x58];                                  // 0x0128(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ItemInspectionSelectedPartData
	 * Size -> 0x0008
	 */
	struct FItemInspectionSelectedPartData
	{
	public:
		class UClass*                                              SelectedPartCE;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionMenuEnumIdMap
	 * Size -> 0x0018
	 */
	struct FGFxItemInspectionMenuEnumIdMap
	{
	public:
		class UEnum*                                               EnumType;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      IdValues;                                                // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFXItemInspectionPartEnumTable
	 * Size -> 0x0010
	 */
	struct FGFXItemInspectionPartEnumTable
	{
	public:
		TArray<struct FGFxItemInspectionMenuEnumIdMap>             IdMap;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionLocator
	 * Size -> 0x0120
	 */
	struct FGFxItemInspectionLocator
	{
	public:
		float                                                      RotateFactor;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PanFactor;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomFactor;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemFOV;                                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReferenceItemScale;                                      // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ScaleRange;                                              // 0x0014(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseToPanFactor;                                        // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseToRotateFactor;                                     // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseWheelFactor;                                        // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KeyboardZoomFactor;                                      // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeightThreshold;                                         // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IntroDuration;                                           // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            IntroRotation;                                           // 0x0034(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            IntroRotationRandomness;                                 // 0x0040(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      IntroRotationAlphaPowerRandomness;                       // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxItemInspectionMenu*                              MenuOuter;                                               // 0x0050(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WVDC[0xC8];                                  // 0x0058(0x00C8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RebindContextAndDescription
	 * Size -> 0x0050
	 */
	struct FRebindContextAndDescription
	{
	public:
		class FText                                                SchemeName;                                              // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              RebindContext[0x28];                                     // 0x0018(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.RebindContextAndDescription.RebindContext
		TArray<class UOptionDescriptionItem*>                      Description;                                             // 0x0040(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxLeaguesMenuStandInState
	 * Size -> 0x0080
	 */
	struct FGFxLeaguesMenuStandInState
	{
	public:
		unsigned char                                              UnknownData_2MH2[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDesiredStandInActorData                            ActorData;                                               // 0x0008(0x0050) Transient, NativeAccessSpecifierPublic
		class UOakCustomizationData*                               Customization;                                           // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponTrinketPartData*                              WeaponTrinket;                                           // 0x0060(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponSkinPartData*                                 WeaponSkin;                                              // 0x0068(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               ActorReward;                                             // 0x0070(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StandInConfig;                                           // 0x0078(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LoadGameMenuEntry
	 * Size -> 0x01C8
	 */
	struct FLoadGameMenuEntry
	{
	public:
		class FString                                              SaveGameName;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterLevel;                                          // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N418[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CharacterClassName;                                      // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   SaveGameId;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_34ZY[0x1A4];                                 // 0x0024(0x01A4) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RecommendedFriendInviteStatus
	 * Size -> 0x0020
	 */
	struct FRecommendedFriendInviteStatus
	{
	public:
		unsigned char                                              UnknownData_4TLB[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ContextMenuContextInfo
	 * Size -> 0x0018
	 */
	struct FContextMenuContextInfo
	{
	public:
		unsigned char                                              UnknownData_BLP2[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ContextMenu
	 * Size -> 0x0040
	 */
	struct FContextMenu
	{
	public:
		class UGbxGFxObject*                                       ContainerWrapper;                                        // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6MAA[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxGridScrollingList*                            MenuList;                                                // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FContextMenuContextInfo                             ContextInfo;                                             // 0x0020(0x0018) Transient, NativeAccessSpecifierPublic
		bool                                                       bIsVisible;                                              // 0x0038(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_B3BP[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MenuItemButton
	 * Size -> 0x0038
	 */
	struct FMenuItemButton
	{
	public:
		class UGbxGFxButton*                                       MenuItem;                                                // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxTextField*                                       LabelDropShadow;                                         // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       SocialWrapper;                                           // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       ListIconContainer;                                       // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       ListIcon;                                                // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxTextField*                                       ListIconText;                                            // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       NeedHelpIcon;                                            // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxMapMenuStateInfo
	 * Size -> 0x0028
	 */
	struct FGFxMapMenuStateInfo
	{
	public:
		class FText                                                StateName;                                               // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FString                                              StateFrame;                                              // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxMapMenu_Adjustment
	 * Size -> 0x0010
	 */
	struct FGFxMapMenu_Adjustment
	{
	public:
		struct FVector2D                                           ContextMenuOffsetExpandingDown;                          // 0x0000(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ContextMenuOffsetExpandingUp;                            // 0x0008(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapMissionWaypointEntry
	 * Size -> 0x00F0
	 */
	struct FZoneMapMissionWaypointEntry
	{
	public:
		class UZoneMapPOITypeData*                                 PointOfInterestType;                                     // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MissionWaypointObjectName;                               // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C7ZN[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          MissionWaypointTransform;                                // 0x0020(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MissionWaypointRadius;                                   // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P2U0[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMissionObjectiveReferenceWeak>              MissionObjectives;                                       // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		struct FGbxUIFormattedText                                 MissionDirectorName;                                     // 0x0068(0x0068) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              DirectorMissions[0x10];                                  // 0x00D0(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.ZoneMapMissionWaypointEntry.DirectorMissions
		int32_t                                                    BlacklistIndex;                                          // 0x00E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOutOfMap;                                               // 0x00E4(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideMissionAreaWaypoint;                                // 0x00E5(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z3HI[0x2];                                   // 0x00E6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AreaComponentClassOverride;                              // 0x00E8(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapChallengeEntry
	 * Size -> 0x0060
	 */
	struct FZoneMapChallengeEntry
	{
	public:
		class FString                                              ChallengeActorName;                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          ChallengeWaypointTransform;                              // 0x0010(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FIntPoint                                           ChallengeWaypointFODTexelCoords;                         // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ChallengeClass;                                          // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               ChallengeGUID;                                           // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapIconInfo
	 * Size -> 0x0270
	 */
	struct FZoneMapIconInfo
	{
	public:
		TWeakObjectPtr<class AActor>                               TargetActor;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMapIconAnchor*                                      IconAnchor;                                              // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 IconPOIComponent;                                        // 0x0010(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AOakZoneMapIcon_POI>                  IconActor;                                               // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              IconClass;                                               // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               IconGuid;                                                // 0x0028(0x0010) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             IconLocation;                                            // 0x0038(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            IconRotation;                                            // 0x0044(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UChallengeLevelActorComponent*                       ChallengeComponent;                                      // 0x0050(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0058(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0070(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FString                                              IconFrameName;                                           // 0x0088(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDynamic;                                              // 0x0098(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowDynamicInNonCurrentMap;                             // 0x0099(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPlayer;                                               // 0x009A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowInMiniMap;                                          // 0x009B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowInZoneMap;                                          // 0x009C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R5BN[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FZoneMapPOIEntry                                    POIEntry;                                                // 0x00A0(0x0060) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FZoneMapMissionWaypointEntry                        MissionWaypointEntry;                                    // 0x0100(0x00F0) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FZoneMapChallengeEntry                              ChallengeEntry;                                          // 0x01F0(0x0060) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class AOakVehicle*                                         TargetedVehicle;                                         // 0x0250(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EZoneMapMissionStatus                                      WaypointStatus;                                          // 0x0258(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMissionTrackerIcon;                                     // 0x0259(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOutOfMapWaypoint;                                       // 0x025A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EZoneMapChallengeStatus                                    ChallengeStatus;                                         // 0x025B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ChallengeRadius;                                         // 0x025C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ChallengeClass;                                          // 0x0260(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LKXI[0x8];                                   // 0x0268(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakUIChallengeListData
	 * Size -> 0x00C0
	 */
	struct FOakUIChallengeListData
	{
	public:
		class UChallengeCategoryData*                              HeaderCategory;                                          // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumHeaderChildren;                                       // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumHeaderChildrenCompleted;                              // 0x000C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FChallengeInstanceData                              ChallengeInstanceData;                                   // 0x0010(0x0080) Transient, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UZoneMapData>                         ZoneMapData;                                             // 0x0090(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumChildren;                                             // 0x0098(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumChildrenComplete;                                     // 0x009C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsUndiscovered;                                         // 0x00A0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BCC7[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ChallengeClass;                                          // 0x00A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UOakUIChallengeDataProvider>          OwnerDataProvider;                                       // 0x00B0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowAllChallenges;                                      // 0x00B8(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O0RQ[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MayhemModifier
	 * Size -> 0x0030
	 */
	struct FMayhemModifier
	{
	public:
		unsigned char                                              ModifierAbility[0x28];                                   // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.MayhemModifier.ModifierAbility
		class UGbxAbilityEffectTargetResolutionData*               ModifierTarget;                                          // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MayhemModifierSet
	 * Size -> 0x0038
	 */
	struct FMayhemModifierSet
	{
	public:
		TArray<struct FMayhemModifier>                             Modifiers;                                               // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HBDL[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        MutualExclusionTags;                                     // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UUIStatData*>                                 UIStats;                                                 // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxMinimapWidgetIcon
	 * Size -> 0x00D0
	 */
	struct FGFxMinimapWidgetIcon
	{
	public:
		struct FZoneMapPOIEntry                                    ZoneMapPOIData;                                          // 0x0000(0x0060) Edit, NativeAccessSpecifierPublic
		bool                                                       bIsAreaWaypoint;                                         // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bClampRadarEdge;                                         // 0x0061(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_STDI[0x2];                                   // 0x0062(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxClampDistance;                                        // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShouldBeVisibleIfInRange;                               // 0x0068(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_REZ7[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             IconLocation;                                            // 0x006C(0x000C) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStaticIconLocation;                                     // 0x0078(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9M37[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   WaypointRadius;                                          // 0x007C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               TargetActor;                                             // 0x0080(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               TargetGuid;                                              // 0x0088(0x0010) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UObject>                              TargetMinimapIconComponent;                              // 0x0098(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       IconInstance;                                            // 0x00A0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCachedVisible;                                          // 0x00A8(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGFxMinimapWidgetIconTrackedType                           TrackedType;                                             // 0x00A9(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RATG[0x2];                                   // 0x00AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AreaWaypointIconSize;                                    // 0x00AC(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentTransitionTime;                                   // 0x00B0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TransitionStartingLocation;                              // 0x00B4(0x0008) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IDG7[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              IconFrameName;                                           // 0x00C0(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MinimapBoundingCircle
	 * Size -> 0x000C
	 */
	struct FMinimapBoundingCircle
	{
	public:
		struct FVector2D                                           CenterPoint;                                             // 0x0000(0x0008) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YEFZ[0x4];                                   // 0x0008(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MissionLogEchoDeviceSettings
	 * Size -> 0x0040
	 */
	struct FMissionLogEchoDeviceSettings
	{
	public:
		EStandInActorType                                          StandInType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BM1G[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              StandInActorClass[0x28];                                 // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.MissionLogEchoDeviceSettings.StandInActorClass
		class FName                                                StandInConfigName;                                       // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EchoDeviceIdleScreenName;                                // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxMissionLogMissionItem
	 * Size -> 0x0050
	 */
	struct FGFxMissionLogMissionItem
	{
	public:
		bool                                                       bValid;                                                  // 0x0000(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3WE[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayText;                                             // 0x0008(0x0018) Transient, NativeAccessSpecifierPublic
		EGFxMissionLogMissionItemType                              Type;                                                    // 0x0020(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HR68[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              MissionClass;                                            // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakMission*                                         AsOakMission;                                            // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UEchoLogData>                         EchoLogData;                                             // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOakMissionType                                            MissionType;                                             // 0x0040(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsTracked;                                              // 0x0041(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBlocked;                                              // 0x0042(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCompleted;                                            // 0x0043(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInCurrentZone;                                        // 0x0044(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasBeenViewed;                                          // 0x0045(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGFxMissionLogMissionIconType                              IconType;                                                // 0x0046(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LTR9[0x1];                                   // 0x0047(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    NumFriendsPlayingThisMission;                            // 0x0048(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_11JQ[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxMissionTrackerRewardSlot
	 * Size -> 0x0080
	 */
	struct FGFxMissionTrackerRewardSlot
	{
	public:
		unsigned char                                              UnknownData_HRMI[0x80];                                  // 0x0000(0x0080) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxMissionTrackerInventoryItemData
	 * Size -> 0x0040
	 */
	struct FGFxMissionTrackerInventoryItemData
	{
	public:
		class FString                                              ItemTypeFrameName;                                       // 0x0000(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemRarityFrameName;                                     // 0x0010(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ItemRarityFrameText;                                     // 0x0020(0x0018) Transient, NativeAccessSpecifierPublic
		int32_t                                                    ItemScore;                                               // 0x0038(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N8TH[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxMissionTrackerRewardDisplayData
	 * Size -> 0x0020
	 */
	struct FGFxMissionTrackerRewardDisplayData
	{
	public:
		int32_t                                                    Currency;                                                // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B01T[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInventoryCategoryData*                              CurrencyType;                                            // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FGFxMissionTrackerInventoryItemData>         Items;                                                   // 0x0010(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxMissionTrackerRewardQueueData
	 * Size -> 0x0030
	 */
	struct FGFxMissionTrackerRewardQueueData
	{
	public:
		struct FGFxMissionTrackerRewardDisplayData                 RewardData;                                              // 0x0000(0x0020) Transient, NativeAccessSpecifierPublic
		class UClass*                                              Mission;                                                 // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IVER[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.NameplateBarData
	 * Size -> 0x0028
	 */
	struct FNameplateBarData
	{
	public:
		class UGbxGFxProgressBar*                                  NameplateBar;                                            // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       NameplateBarContainer;                                   // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TargetActorOverride[0x10];                               // 0x0010(0x0010) UNKNOWN PROPERTY: InterfaceProperty OakGame.NameplateBarData.TargetActorOverride
		unsigned char                                              UnknownData_QCBJ[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.Transition
	 * Size -> 0x0020
	 */
	struct FTransition
	{
	public:
		class UGFxNewsItem*                                        Curr;                                                    // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxNewsItem*                                        Next;                                                    // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JG3H[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxNotificationQueueListItem
	 * Size -> 0x0050
	 */
	struct FGFxNotificationQueueListItem
	{
	public:
		class UHUDNotificationAsset*                               AssetData;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxDisplayedNotificationWidget*                     ActiveWidgetContent;                                     // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YFT1[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                MessageText;                                             // 0x0018(0x0018) NativeAccessSpecifierPublic
		class FName                                                SpawnAudioOverride;                                      // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DespawnAudioOverride;                                    // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeoutTimeRemaining;                                    // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCurrentlyDisplayed;                                     // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              NotificationId;                                          // 0x0045(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FMVS[0xA];                                   // 0x0046(0x000A) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.BrushInfo
	 * Size -> 0x0090
	 */
	struct FBrushInfo
	{
	public:
		struct FSlateBrush                                         SlateBrush;                                              // 0x0000(0x0088) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M7ES[0x8];                                   // 0x0088(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MessageHandle
	 * Size -> 0x0008
	 */
	struct FMessageHandle
	{
	public:
		uint64_t                                                   ID;                                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.UIManagerMessage
	 * Size -> 0x0168
	 */
	struct FUIManagerMessage
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                PlayerName;                                              // 0x0018(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0030(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                Glyph;                                                   // 0x0048(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                CommandText;                                             // 0x0060(0x0018) Transient, NativeAccessSpecifierPublic
		class FString                                              IconFrame;                                               // 0x0078(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                IntroSound;                                              // 0x0088(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                OutroSound;                                              // 0x0090(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBlocking;                                             // 0x0098(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTimedMessage;                                           // 0x0099(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LV1S[0x2];                                   // 0x009A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeCreated;                                             // 0x009C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeRemaining;                                           // 0x00A0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplaySpinner;                                         // 0x00A4(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMessageSpecialType                                        SpecialType;                                             // 0x00A5(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DI7R[0xA];                                   // 0x00A6(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBrushInfo                                          BrushInfo;                                               // 0x00B0(0x0090) NativeAccessSpecifierPublic
		struct FMessageHandle                                      Handle;                                                  // 0x0140(0x0008) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7P9M[0x10];                                  // 0x0148(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOakPlayerState*                                     OtherPlayerState;                                        // 0x0158(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BXCT[0x8];                                   // 0x0160(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakLevelSyncMessageText
	 * Size -> 0x0050
	 */
	struct FOakLevelSyncMessageText
	{
	public:
		class FText                                                TitleText;                                               // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                PlayerStateDescriptionText;                              // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                AnonymousDescriptionText;                                // 0x0030(0x0018) Edit, NativeAccessSpecifierPublic
		float                                                      OnScreenDuration;                                        // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F3EH[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SubtitleBarItems
	 * Size -> 0x0040
	 */
	struct FSubtitleBarItems
	{
	public:
		class UGbxGFxGridScrollingList*                            ControlsSubtitlesSL;                                     // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxHintWidget*                                   LeftNavButton;                                           // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxListCell*                                     BasicTab;                                                // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxListCell*                                     AdvancedTab;                                             // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxListCell*                                     BenchmarkTab;                                            // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxListCell*                                     KeyboardMappings;                                        // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxListCell*                                     GamepadMappings;                                         // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxHintWidget*                                   RightNavButton;                                          // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxPassiveSkillWidgetSlotData
	 * Size -> 0x0010
	 */
	struct FGFxPassiveSkillWidgetSlotData
	{
	public:
		class UOakPlayerAbilityHUDItemData*                        HUDItemData;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxPassiveSkillIcon*                                Icon;                                                    // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxPlayerStorageBag
	 * Size -> 0x00D0
	 */
	struct FGFxPlayerStorageBag
	{
	public:
		unsigned char                                              UnknownData_MWML[0xB8];                                  // 0x0000(0x00B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOakUIInventoryItemDisplayInfo>              Items;                                                   // 0x00B8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L0JB[0x8];                                   // 0x00C8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlaythroughSelectionModeEntry
	 * Size -> 0x0050
	 */
	struct FPlaythroughSelectionModeEntry
	{
	public:
		class FText                                                ModeName;                                                // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ModeDescription;                                         // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		class FString                                              ModeFrameName;                                           // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlaythroughNum;                                          // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RN3L[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ModeSelectionSound;                                      // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.QuickChangeRespecTreeBranchRow
	 * Size -> 0x0020
	 */
	struct FQuickChangeRespecTreeBranchRow
	{
	public:
		TArray<class UGbxGFxObject*>                               Entries;                                                 // 0x0000(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		class UGbxGFxObject*                                       RespecAnim;                                              // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YZBU[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.BaseQuickChangeMenuStateData
	 * Size -> 0x0068
	 */
	struct FBaseQuickChangeMenuStateData
	{
	public:
		class FText                                                MenuStateName;                                           // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                MenuStateDescription;                                    // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		class FString                                              ContentFrameName;                                        // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconFrameName;                                           // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StandInConfig;                                           // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceProjectionFXOn;                                    // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBaseQuickChangeMenuState                                  MenuState;                                               // 0x0059(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1HOZ[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxCustomizationTypeData*                           CustomizationType;                                       // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SecondaryHealthDamageEventDetails
	 * Size -> 0x0038
	 */
	struct FSecondaryHealthDamageEventDetails
	{
	public:
		class UDamageSource*                                       DamageSource;                                            // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxDamageType*                                      DamageType;                                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APawn*                                               InstigatorPawn;                                          // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasCrit;                                                // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q4HU[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             HitLocation;                                             // 0x001C(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitDirection;                                            // 0x0028(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K55K[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxStatusMenuSubmenuKeyMap
	 * Size -> 0x0010
	 */
	struct FGFxStatusMenuSubmenuKeyMap
	{
	public:
		class FName                                                InputAction;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SubMenuId;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxStatusMenuNavBarInfo
	 * Size -> 0x0018
	 */
	struct FGFxStatusMenuNavBarInfo
	{
	public:
		class FString                                              IconFrameName;                                           // 0x0000(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MenuID;                                                  // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxStoreMenuDLCItem
	 * Size -> 0x0050
	 */
	struct FGFxStoreMenuDLCItem
	{
	public:
		EGFxStoreMenuTabType                                       Type;                                                    // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BK7Q[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_35FG[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Name;                                                    // 0x0008(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) Transient, NativeAccessSpecifierPublic
		class FString                                              PreviewImageUrl;                                         // 0x0038(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPurchased;                                              // 0x0048(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDownloaded;                                             // 0x0049(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EA19[0x2];                                   // 0x004A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DiscountPercent;                                         // 0x004C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxStoreMenuPage
	 * Size -> 0x0068
	 */
	struct FGFxStoreMenuPage
	{
	public:
		EGFxStoreMenuTabType                                       PageType;                                                // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J213[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_SHCP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGFxStoreMenuDLCItem                                FeaturedItem;                                            // 0x0008(0x0050) Transient, NativeAccessSpecifierPublic
		TArray<struct FGFxStoreMenuDLCItem>                        NonFeaturedItems;                                        // 0x0058(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ClosedCaptionEntry
	 * Size -> 0x0020
	 */
	struct FClosedCaptionEntry
	{
	public:
		class UGbxTextField*                                       LineField;                                               // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BK02[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RemainingLifetime;                                       // 0x0018(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0KCX[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SubtitleLine
	 * Size -> 0x0020
	 */
	struct FSubtitleLine
	{
	public:
		class FText                                                TextToDisplay;                                           // 0x0000(0x0018) Transient, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0018(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForce;                                                  // 0x001C(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q8XB[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VendingTabOrder
	 * Size -> 0x0018
	 */
	struct FVendingTabOrder
	{
	public:
		EGFxVendingMachineDisplayMode                              BuyTab;                                                  // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGFxVendingMachineDisplayMode                              BuyBackTab;                                              // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGFxVendingMachineDisplayMode                              SellTab;                                                 // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_11ZC[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EGFxVendingMachineDisplayMode>                      TabOrder;                                                // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VendingMachineSocketLocationAndOffset
	 * Size -> 0x0028
	 */
	struct FVendingMachineSocketLocationAndOffset
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_13MH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SocketName;                                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Offset;                                                  // 0x0018(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OffsetSplitScreen;                                       // 0x0020(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VendingIDToSocketNameMap
	 * Size -> 0x0050
	 */
	struct FVendingIDToSocketNameMap
	{
	public:
		TMap<class FString, struct FVendingMachineSocketLocationAndOffset> SocketMap;                                               // 0x0000(0x0050) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VendingObjectToSocketLocationMap
	 * Size -> 0x0050
	 */
	struct FVendingObjectToSocketLocationMap
	{
	public:
		TMap<class UGbxGFxObject*, struct FVendingMachineSocketLocationAndOffset> SocketMap;                                               // 0x0000(0x0050) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakBackpackCapacityThreshold
	 * Size -> 0x0030
	 */
	struct FOakBackpackCapacityThreshold
	{
	public:
		float                                                      Percentage;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QHFT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateColor                                         Color;                                                   // 0x0008(0x0028) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxVendingMenuConfig
	 * Size -> 0x0070
	 */
	struct FGFxVendingMenuConfig
	{
	public:
		class UInventoryCategoryData*                              GoldenKeyResourceData;                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              ErediumResourceData;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UInventoryCategoryData*>                      InventoryCategoriesAllowed;                              // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryMenuFilter>                     PageFilters;                                             // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryMenuItemGrouping>               ItemGroupingsByType;                                     // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryMenuItemGrouping>               ItemGroupingsByManufacturer;                             // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryMenuTypePriorityInfo>           ItemTypeSortPriorities;                                  // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakBackpackCapacityThreshold>               BackpackThresholds;                                      // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxVendingMachineMenuFilter
	 * Size -> 0x0020
	 */
	struct FGFxVendingMachineMenuFilter
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              DataTypeFilter;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakThumbnailManagerLightProperties
	 * Size -> 0x0014
	 */
	struct FOakThumbnailManagerLightProperties
	{
	public:
		struct FRotator                                            Direction;                                               // 0x0000(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Brightness;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              Color;                                                   // 0x0010(0x0004) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakThumbnailManagerRenderProperties
	 * Size -> 0x0670
	 */
	struct FOakThumbnailManagerRenderProperties
	{
	public:
		struct FTransform                                          ItemTransform;                                           // 0x0000(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FOakThumbnailManagerLightProperties                 LightProperties;                                         // 0x0030(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7194[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOakThumbnailManagerLightProperties>         AdditionalLights;                                        // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FThumbnailParameters                                ThumbnailParameters;                                     // 0x0058(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JBDX[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                PostProcessSettings;                                     // 0x0070(0x0600) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GoreSizeSelectionData
	 * Size -> 0x00A0
	 */
	struct FGoreSizeSelectionData
	{
	public:
		unsigned char                                              bSpecifiedMinScale : 1;                                  // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSpecifiedMaxScale : 1;                                  // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_05LK[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinScale;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxScale;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_84G6[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UStaticMesh*>                                 StumpMeshes;                                             // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UParticleSystem*>                             StumpParticles;                                          // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UMaterialInstanceConstant*>                   StumpDecals;                                             // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         StumpSound;                                              // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceConstant*                           StumpMaterialOverride;                                   // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UObject*>                                     LimbMeshes;                                              // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UParticleSystem*>                             LimbParticles;                                           // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UMaterialInstanceConstant*                           LimbMaterialOverride;                                    // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FForceSelection                                     LimbForce;                                               // 0x0078(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bScaleLimbToStump;                                       // 0x0098(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P59C[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LimbScale;                                               // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GoreSelectionResults
	 * Size -> 0x0090
	 */
	struct FGoreSelectionResults
	{
	public:
		class FName                                                StumpSocket;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StumpBoneScale;                                          // 0x0008(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StumpDecalSize;                                          // 0x0014(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         StumpMesh;                                               // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     StumpParticles;                                          // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceConstant*                           StumpMaterialOverride;                                   // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceConstant*                           StumpDecal;                                              // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         StumpSound;                                              // 0x0040(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStumpReceivesDecal;                                     // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritStumpMaterialParameters;                         // 0x0049(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialParameterCopyMethod                               InheritStumpMaterialParametersMethod;                    // 0x004A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritLimbMaterialParameters;                          // 0x004B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialParameterCopyMethod                               InheritLimbMaterialParametersMethod;                     // 0x004C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8NV3[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LimbSocket;                                              // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             LimbMesh;                                                // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     LimbParticles;                                           // 0x0060(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              LimbActorClass;                                          // 0x0068(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceConstant*                           LimbMaterialOverride;                                    // 0x0070(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimbForce;                                               // 0x0078(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScaleLimbToStump;                                       // 0x007C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PUYG[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LimbScale;                                               // 0x0080(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimbMassScale;                                           // 0x0084(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SourceMaterialIndex;                                     // 0x0088(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MCUH[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CauseDamageStatusEffectOverrides
	 * Size -> 0x001C
	 */
	struct FCauseDamageStatusEffectOverrides
	{
	public:
		float                                                      BaseChance;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseDuration;                                            // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseDamage;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBaseDamageAsPercent;                                    // 0x000C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3E3U[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChanceScalar;                                            // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DurationScalar;                                          // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageScalar;                                            // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GrenadeAttachedTrail
	 * Size -> 0x0010
	 */
	struct FGrenadeAttachedTrail
	{
	public:
		unsigned char                                              UnknownData_HX2E[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GrenadeChildGenerationData
	 * Size -> 0x0028
	 */
	struct FGrenadeChildGenerationData
	{
	public:
		int32_t                                                    DividerGrenadeGeneration;                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MiniMirvGrenadeGeneration;                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MirvGrenadeGeneration;                                   // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RainGrenadeGeneration;                                   // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpringGrenadeGeneration;                                 // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StickyGrenadeGeneration;                                 // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLingering;                                            // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P1VJ[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             LongbowTarget;                                           // 0x001C(0x000C) BlueprintVisible, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PayloadInstanceData
	 * Size -> 0x0030
	 */
	struct FPayloadInstanceData
	{
	public:
		int32_t                                                    StackCount;                                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInstanceBool;                                           // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XJR4[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InstanceFloat;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InstanceInt;                                             // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             InstanceVector;                                          // 0x0010(0x000C) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CFYF[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              InstanceActor;                                           // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TriggerCount;                                            // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UCNV[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DamageTypeParticleProperty
	 * Size -> 0x0060
	 */
	struct FDamageTypeParticleProperty
	{
	public:
		class FName                                                PropertyName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultPropertyValue;                                    // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MBIG[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UClass*, float>                                 DamageTypeValueAssociations;                             // 0x0010(0x0050) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LingeringDamageTypeInfo
	 * Size -> 0x0048
	 */
	struct FLingeringDamageTypeInfo
	{
	public:
		ELingeringDamageStyle                                      DamageStyle;                                             // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AD44[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     ElementalEmitter;                                        // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              LightBeam;                                               // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BeamSocketName;                                          // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageData;                                              // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageScale;                                             // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LingeringRadius;                                         // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MirvChildLingeringRadius;                                // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RainChildLingeringRadius;                                // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAttributeInitializationData>                StackValues;                                             // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MoneyStackValues
	 * Size -> 0x0010
	 */
	struct FMoneyStackValues
	{
	public:
		class UWwiseEvent*                                         AudioEvent;                                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemPoolListInterface*                              ItemPool;                                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SingularityInitializationBase
	 * Size -> 0x0070
	 */
	struct FSingularityInitializationBase
	{
	public:
		class UHitReactionTag*                                     PullTag;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               IgnoreTags;                                              // 0x0008(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      MinPullRadius;                                           // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JB9I[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      IgnoreActors;                                            // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class UWwiseAuxBus*                                        EffectAuxBus;                                            // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectSize;                                              // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectFadeDistance;                                      // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectDuration;                                          // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GQ0K[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseRtpc*                                          FadeDistanceRtpc;                                        // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         AdditionalStartEvent;                                    // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         AdditionalStopEvent;                                     // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SingularityInitializationInfo
	 * Size -> 0x0050 (FullSize[0x00C0] - InheritedSize[0x0070])
	 */
	struct FSingularityInitializationInfo : public FSingularityInitializationBase
	{
	public:
		float                                                      Duration;                                                // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForcePerSecond;                                          // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpinDirection                                             SpinDirection;                                           // 0x0078(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CBZJ[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SpinMinDistance;                                         // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpinMaxDistance;                                         // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpinHorizontalScalar;                                    // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpinVerticalScalar;                                      // 0x0088(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x008C(0x000C) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachToOwnerRoot;                                      // 0x0098(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPersistantComponent;                                    // 0x0099(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3GNZ[0x6];                                   // 0x009A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem*                                     SingularityParticles;                                    // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseDestructibleChunkMass;                               // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9XIS[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              SingularitySource;                                       // 0x00B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinFalloffScalar;                                        // 0x00B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I218[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DamageDataCustomStatusEffectApplicationSpec
	 * Size -> 0x0050
	 */
	struct FDamageDataCustomStatusEffectApplicationSpec
	{
	public:
		class UStatusEffectData*                                   StatusEffect;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxCondition*                                       Condition;                                               // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyToEnemiesOnly;                                     // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHIL[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttributeInitializationData                        EffectDuration;                                          // 0x0018(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SingularityTargetInfo
	 * Size -> 0x0010
	 */
	struct FSingularityTargetInfo
	{
	public:
		unsigned char                                              UnknownData_XVVA[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SingularityBurstInfo
	 * Size -> 0x0020 (FullSize[0x0090] - InheritedSize[0x0070])
	 */
	struct FSingularityBurstInfo : public FSingularityInitializationBase
	{
	public:
		struct FVector                                             SingularityLocation;                                     // 0x0070(0x000C) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPullRadius;                                           // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SingularityForce;                                        // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RULE[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UExplosionData*                                      SingularityExplosion;                                    // 0x0088(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.HolsteredGearSlotOptions
	 * Size -> 0x0010
	 */
	struct FHolsteredGearSlotOptions
	{
	public:
		class UInventoryCategoryData*                              InventoryCategory;                                       // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IH73[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.HolsteredGearAttachmentSlot
	 * Size -> 0x0018
	 */
	struct FHolsteredGearAttachmentSlot
	{
	public:
		class AHolsteredGearSlot*                                  OuterSlot;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMeshComponent*                                      Mesh;                                                    // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LZYC[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.InventoryAspectAbilityInfo
	 * Size -> 0x0008
	 */
	struct FInventoryAspectAbilityInfo
	{
	public:
		class UClass*                                              Ability;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ManufacturerWeaponSightData
	 * Size -> 0x0010
	 */
	struct FManufacturerWeaponSightData
	{
	public:
		class UManufacturerData*                                   Manufacturer;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          RarityTable;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakWeaponNamedNamingAttribute
	 * Size -> 0x0020
	 */
	struct FOakWeaponNamedNamingAttribute
	{
	public:
		class FName                                                AttributeName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseFormula;                                             // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NOOF[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxAttributeData*                                   Attribute;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUIStatFormulaEvaluator*                             Formula;                                                 // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VendingMachineRefillAmmoData
	 * Size -> 0x0020
	 */
	struct FVendingMachineRefillAmmoData
	{
	public:
		class UGbxAttributeData*                                   AmmoMax;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAttributeData*                                   AmmoCurrent;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAttributeData*                                   AmmoStackCount;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAttributeData*                                   AmmoStackCost;                                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LargeLiquidBodySurfaceSectionClippingVolume
	 * Size -> 0x0010
	 */
	struct FLargeLiquidBodySurfaceSectionClippingVolume
	{
	public:
		TArray<struct FPlane>                                      ClippingPlanes;                                          // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LargeLiquidBodySurfaceSection
	 * Size -> 0x0018
	 */
	struct FLargeLiquidBodySurfaceSection
	{
	public:
		float                                                      WorldZ;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7EVK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FLargeLiquidBodySurfaceSectionClippingVolume> ClippingVolumes;                                         // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LevelAssetList
	 * Size -> 0x0018
	 */
	struct FLevelAssetList
	{
	public:
		class FName                                                LevelPackage;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        AssetNames;                                              // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LevelMultiplierDefinedValueRow
	 * Size -> 0x00A8 (FullSize[0x00B0] - InheritedSize[0x0008])
	 */
	struct FLevelMultiplierDefinedValueRow : public FAttributeDefinedValueRow
	{
	public:
		struct FAttributeInitializationData                        Multiplier;                                              // 0x0008(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        Level;                                                   // 0x0040(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        Offset;                                                  // 0x0078(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.LootablePersistenceData
	 * Size -> 0x0008
	 */
	struct FLootablePersistenceData
	{
	public:
		float                                                      ResetDelay;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStoreInSaveGame;                                        // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VS7G[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LootableInteractionResponse
	 * Size -> 0x0010
	 */
	struct FLootableInteractionResponse
	{
	public:
		class UAnimSequence*                                       TransitionAnimation;                                     // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimSequence*                                       IdleAnimation;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LootableDirectionalResponse
	 * Size -> 0x0018
	 */
	struct FLootableDirectionalResponse
	{
	public:
		struct FNumericRange                                       AngleRange;                                              // 0x0000(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FLootableInteractionResponse>                Interactions;                                            // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ConditionalLootableInteractionResponse
	 * Size -> 0x0018
	 */
	struct FConditionalLootableInteractionResponse
	{
	public:
		class UGbxCondition*                                       Condition;                                               // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLootableInteractionResponse                        Interaction;                                             // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LootablePileInteractionResponse
	 * Size -> 0x0010
	 */
	struct FLootablePileInteractionResponse
	{
	public:
		class ULootSpawnPatternData*                               LootPatternOverride;                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisturbBoneForce;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JWSS[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LootablePileDamageInteraction
	 * Size -> 0x0020
	 */
	struct FLootablePileDamageInteraction
	{
	public:
		TArray<class UClass*>                                      DamageSources;                                           // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		struct FLootablePileInteractionResponse                    Response;                                                // 0x0010(0x0010) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LootableMeshSwapData
	 * Size -> 0x0020
	 */
	struct FLootableMeshSwapData
	{
	public:
		class USkeletalMesh*                                       NewMesh;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSkipRegularOpeningWhenDamaged;                          // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EEYS[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLootableInteractionResponse                        Response;                                                // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LootableAnimState
	 * Size -> 0x0010
	 */
	struct FLootableAnimState
	{
	public:
		bool                                                       bLooping;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OZ0P[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimSequence*                                       Animation;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LootableObjectDamageEventDetails
	 * Size -> 0x0040
	 */
	struct FLootableObjectDamageEventDetails
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitLocation;                                             // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitDirection;                                            // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitForce;                                                // 0x001C(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Instigator;                                              // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageType;                                              // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageSource;                                            // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MatchmakingSearchParameter
	 * Size -> 0x0018
	 */
	struct FMatchmakingSearchParameter
	{
	public:
		class FName                                                ParamName;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TargetParamName;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMatchmakingSearchParameterOp                              Op;                                                      // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AAMW[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ValueRange;                                              // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MatchmakingSearchParameters
	 * Size -> 0x0028
	 */
	struct FMatchmakingSearchParameters
	{
	public:
		class FString                                              SearchName;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMatchGameSettings;                                      // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P72A[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMatchmakingSearchParameter>                 SearchParameters;                                        // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MatchmakingRequirement
	 * Size -> 0x0030
	 */
	struct FMatchmakingRequirement
	{
	public:
		EMatchmakingRequirementType                                Type;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMatchmakingRequirementComparisonOp                        ComparisonOp;                                            // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XS5E[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DescriptionKey;                                          // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GIHP[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MatchmakingModifierData
	 * Size -> 0x0020
	 */
	struct FMatchmakingModifierData
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TargetResolverName;                                      // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EffectName;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JSYO[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MatchmakingModifierSetData
	 * Size -> 0x0048
	 */
	struct FMatchmakingModifierSetData
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0008(0x0018) NativeAccessSpecifierPublic
		class FText                                                DisplayDesc;                                             // 0x0020(0x0018) NativeAccessSpecifierPublic
		TArray<struct FMatchmakingModifierData>                    Modifiers;                                               // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MatchmakingSearchDefinition
	 * Size -> 0x00B8
	 */
	struct FMatchmakingSearchDefinition
	{
	public:
		class FString                                              ActivityGuidString;                                      // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ParentActivityGuidString;                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TitleKey;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DescriptionKey;                                          // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImageId;                                                 // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HopperName;                                              // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Version;                                                 // 0x0060(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMatchmakingSearchParameters>                OrderedSearches;                                         // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      TravelStationPaths;                                      // 0x0080(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FMatchmakingRequirement>                     MatchmakingRequirements;                                 // 0x0090(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    MinPlayerCount;                                          // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPlayerCount;                                          // 0x00A4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMatchmakingModifierSetData>                 ModifierSets;                                            // 0x00A8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MayhemCoreSetUIStats
	 * Size -> 0x0030
	 */
	struct FMayhemCoreSetUIStats
	{
	public:
		class UUIStatData*                                         UIStat_FleshHealthScale;                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUIStatData*                                         UIStat_ShieldHealthScale;                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUIStatData*                                         UIStat_ArmorHealthScale;                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUIStatData*                                         UIStat_ExperienceScale;                                  // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUIStatData*                                         UIStat_CurrencyScale;                                    // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUIStatData*                                         UIStat_LootDropRateScale;                                // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MayhemCoreModifierSet
	 * Size -> 0x0040
	 */
	struct FMayhemCoreModifierSet
	{
	public:
		TArray<struct FMayhemModifier>                             Modifiers;                                               // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FMayhemCoreSetUIStats                               UIStats;                                                 // 0x0010(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MayhemModeTwoLevelOverride
	 * Size -> 0x0068
	 */
	struct FMayhemModeTwoLevelOverride
	{
	public:
		int32_t                                                    LevelRangeMin;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelRangeMax;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideCoreModifierSet;                                // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5L9O[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMayhemCoreModifierSet                              CoreModifierSetOverride;                                 // 0x0010(0x0040) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideRandomModifiersSlots;                           // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PXHO[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMayhemModifierSlotInterface*>                RandomModifierSlotsOverride;                             // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MainMenuCameraBlendParams
	 * Size -> 0x0010
	 */
	struct FMainMenuCameraBlendParams
	{
	public:
		float                                                      BlendTime;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGbxEasingFunc                                      BlendEasing;                                             // 0x0004(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MainMenuCameraBlendParamsSet
	 * Size -> 0x0034
	 */
	struct FMainMenuCameraBlendParamsSet
	{
	public:
		struct FMainMenuCameraBlendParams                          DefaultParams;                                           // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideLocationParams : 1;                             // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideRotationParams : 1;                             // 0x0010(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F7UY[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMainMenuCameraBlendParams                          LocationParams;                                          // 0x0014(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FMainMenuCameraBlendParams                          RotationParams;                                          // 0x0024(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MainMenuCameraViewpointBlendPair
	 * Size -> 0x0038
	 */
	struct FMainMenuCameraViewpointBlendPair
	{
	public:
		EMainMenuViewpointType                                     ViewpointA;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMainMenuViewpointType                                     ViewpointB;                                              // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SJH4[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMainMenuCameraBlendParamsSet                       BlendParamsOverride;                                     // 0x0004(0x0034) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MainMenuCameraViewpoint
	 * Size -> 0x0008
	 */
	struct FMainMenuCameraViewpoint
	{
	public:
		class ACameraActor*                                        CameraActor;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MainMenuCameraViewpointGroup
	 * Size -> 0x0018
	 */
	struct FMainMenuCameraViewpointGroup
	{
	public:
		struct FMainMenuCameraViewpoint                            PrimaryViewpoint;                                        // 0x0000(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FMainMenuCameraViewpoint>                    SecondaryViewpoints;                                     // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ClaptrapSkitSublevel
	 * Size -> 0x0010
	 */
	struct FClaptrapSkitSublevel
	{
	public:
		class FName                                                SublevelName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxCondition*                                       LoadCondition;                                           // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ReplicatedInteractionInfo
	 * Size -> 0x0020
	 */
	struct FReplicatedInteractionInfo
	{
	public:
		TArray<class UMaterialInterface*>                          OriginalMaterials;                                       // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                HandSocketName;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGhostedMaterialOn;                                      // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttractEmitterOn;                                       // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7Q54[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakAbilityTimerSpec
	 * Size -> 0x0018
	 */
	struct FOakAbilityTimerSpec
	{
	public:
		class UOakAbilityTimerData*                                Timer;                                                   // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInfinite;                                             // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveOnPause;                                          // 0x0009(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RWRH[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LoopCount;                                               // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOakAbilityTimerReplacePolicy                              ReplacePolicy;                                           // 0x0014(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOakAbilityTimerTickPolicy                                 TickPolicy;                                              // 0x0015(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_91W3[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakAbilityTimer
	 * Size -> 0x0028
	 */
	struct FOakAbilityTimer
	{
	public:
		struct FOakAbilityTimerSpec                                Spec;                                                    // 0x0000(0x0018) Transient, NoDestructor, NativeAccessSpecifierPrivate
		float                                                      Value;                                                   // 0x0018(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6ENM[0xC];                                   // 0x001C(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakAbilityTimerResult
	 * Size -> 0x000C
	 */
	struct FOakAbilityTimerResult
	{
	public:
		EOakAbilityTimerResult                                     Result;                                                  // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_24RA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PulsesThisFrame;                                         // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalPulseTime;                                          // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakAbilityResourceController_WeaponShotModifier
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FOakAbilityResourceController_WeaponShotModifier : public FGbxAbilityResourceController
	{
	public:
		unsigned char                                              UnknownData_J966[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakAbilityResourceSpec_WeaponShotModifier
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FOakAbilityResourceSpec_WeaponShotModifier : public FGbxAbilityResourceSpec
	{
	public:
		class UOakDamageCauserComponent*                           DamageCauserComponent;                                   // 0x0010(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponShotModifier*                                 ShotModifier;                                            // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             ContextOverride;                                         // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakAbilityResourceController_SirenRushStack
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FOakAbilityResourceController_SirenRushStack : public FGbxAbilityResourceController
	{
	public:
		unsigned char                                              UnknownData_3131[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakAbilityResourceSpec_SirenRushStack
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FOakAbilityResourceSpec_SirenRushStack : public FGbxAbilityResourceSpec
	{
	public:
		class USirenCharacterComponent*                            SirenComponent;                                          // 0x0010(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USirenRushStackData*                                 RushStackData;                                           // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakAnimActionAbilityEndAction
	 * Size -> 0x0010
	 */
	struct FOakAnimActionAbilityEndAction
	{
	public:
		EOakAnimActionAbilityEndAction                             EndAction;                                               // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PVQ7[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxCondition*                                       Condition;                                               // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PhaseTranceActivationComboData
	 * Size -> 0x0018
	 */
	struct FPhaseTranceActivationComboData
	{
	public:
		class UOakActionAbilityAugmentData_PhaseTrance_Attack*     AttackData;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakActionAbilityAugmentData_PhaseTrance_Effect*     EffectData;                                              // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakActionAbilityAugmentData_PhaseTrance_Element*    ElementData;                                             // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PawnInterpolationInfo
	 * Size -> 0x0008
	 */
	struct FPawnInterpolationInfo
	{
	public:
		float                                                      TranslationTime;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationTime;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakElementalGibData
	 * Size -> 0x0160
	 */
	struct FOakElementalGibData
	{
	public:
		unsigned char                                              bOverrideDefaultEffects : 1;                             // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideDefaultParticleSystem : 1;                      // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideDefaultSound : 1;                               // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideDefaultDecal : 1;                               // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TGYP[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FImpactResponseEffect                               Effect;                                                  // 0x0010(0x0140) Edit, NativeAccessSpecifierPublic
		class UParticleSystem*                                     Particle;                                                // 0x0150(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         Sound;                                                   // 0x0158(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.RandomAnimDef
	 * Size -> 0x0020
	 */
	struct FRandomAnimDef
	{
	public:
		struct FAnimActionDef                                      AnimAsset3rd;                                            // 0x0000(0x0018) NoDestructor, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_770Q[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActionSkillFailureCodeDescription
	 * Size -> 0x0020
	 */
	struct FActionSkillFailureCodeDescription
	{
	public:
		unsigned char                                              FailureCode;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0CB9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                FailureCodeText;                                         // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilityEnumMaskHelper
	 * Size -> 0x0004
	 */
	struct FOakActionAbilityEnumMaskHelper
	{
	public:
		uint32_t                                                   Value;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakActionCloak_TrackedTargetState
	 * Size -> 0x0020
	 */
	struct FOakActionCloak_TrackedTargetState
	{
	public:
		class AActor*                                              TrackedTarget;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QLST[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ConsecutiveShotCount;                                    // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShotsRemaining;                                          // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QJ2K[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakPhaseTranceEffectSpec
	 * Size -> 0x0030
	 */
	struct FOakPhaseTranceEffectSpec
	{
	public:
		int32_t                                                    EffectMask;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y355[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPhaseTranceActivationComboData                     ComboData;                                               // 0x0008(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class AActor*                                              EffectTarget;                                            // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageData;                                              // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0X7K[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakPhaseTranceLockEffectSpec
	 * Size -> 0x0008
	 */
	struct FOakPhaseTranceLockEffectSpec
	{
	public:
		bool                                                       bIsLocked;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HWC2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EffectMask;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakLightProjectileInitializationData
	 * Size -> 0x0018 (FullSize[0x0158] - InheritedSize[0x0140])
	 */
	struct FOakLightProjectileInitializationData : public FLightProjectileInitializationData
	{
	public:
		float                                                      BaseStatusEffectChance;                                  // 0x0140(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseStatusEffectDamage;                                  // 0x0144(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseStatusEffectDuration;                                // 0x0148(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StatusEffectChanceScalar;                                // 0x014C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StatusEffectDamageScalar;                                // 0x0150(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StatusEffectDurationScalar;                              // 0x0154(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakAISwarmMovement
	 * Size -> 0x0188
	 */
	struct FOakAISwarmMovement
	{
	public:
		struct FGbxParam                                           MaxSpeed;                                                // 0x0000(0x0080) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           Acceleration;                                            // 0x0080(0x0080) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxParam                                           RotationRate;                                            // 0x0100(0x0080) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		EOakAISwarmRotation                                        RotationType;                                            // 0x0180(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UOYU[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakAISwarmActor
	 * Size -> 0x01D0
	 */
	struct FOakAISwarmActor
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     DestinationComponent;                                    // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     Destination;                                             // 0x0010(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FOakAISwarmMovement                                 Movement;                                                // 0x0018(0x0188) Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1SAJ[0x30];                                  // 0x01A0(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SpawnDroppedPickupLootRequest
	 * Size -> 0x00B8
	 */
	struct FSpawnDroppedPickupLootRequest
	{
	public:
		class AActor*                                              ContextActor;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSelectedInventoryInfo>                      SelectedInventoryInfos;                                  // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class UItemPoolListInterface*                              ItemPools;                                               // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELootInstancingPolicy                                      InstancingPolicy;                                        // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OL80[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOakPlayerController*                                PlayerToInstanceFor;                                     // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartHidden;                                            // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRandomizeActivateDelay;                                 // 0x0031(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XF99[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ActivateDelay;                                           // 0x0034(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpawnDelay;                                           // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialLootMassScale;                                    // 0x003C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              LootSpawnAction;                                         // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0048(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpawnDroppedPickupLootRequestType                         RequestType;                                             // 0x0050(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0F98[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAttributeEffectData>                        AttributeEffects;                                        // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bDroppedFromAI;                                          // 0x0068(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XB8S[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULootSpawnPatternData*                               DropPattern;                                             // 0x0070(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U0CY[0x10];                                  // 0x0078(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USceneComponent*                                     AttachComponent;                                         // 0x0088(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPickupLootAttachmentMode                                  AttachmentMode;                                          // 0x0090(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CUJE[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptDelegate                                      PickupSpawned;                                           // 0x0098(0x0010) BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TDL4[0x10];                                  // 0x00A8(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakModifierData
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FOakModifierData : public FTableRowBase
	{
	public:
		struct FDataTableRowHandle                                 TargetResolver;                                          // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 Effect;                                                  // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      MinValue;                                                // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapDisplayInfo
	 * Size -> 0x0038
	 */
	struct FZoneMapDisplayInfo
	{
	public:
		class FName                                                LevelName;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0008(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ProjectedMeshResults
	 * Size -> 0x0040
	 */
	struct FProjectedMeshResults
	{
	public:
		unsigned char                                              UnknownData_49AM[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakProjectedShield
	 * Size -> 0x0010
	 */
	struct FOakProjectedShield
	{
	public:
		class UStaticMeshComponent*                                StaticMesh;                                              // 0x0000(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            ParticleSystem;                                          // 0x0008(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.BodyMeshLinkedParameters
	 * Size -> 0x0020
	 */
	struct FBodyMeshLinkedParameters
	{
	public:
		TArray<class UClass*>                                      OwnerClasses;                                            // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<struct FCustomizationLinkedParameter>               LinkedParameters;                                        // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakCARMenuStatValue
	 * Size -> 0x0010
	 */
	struct FOakCARMenuStatValue
	{
	public:
		class UOakCARVehiclePartStat*                              StatData;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HG6Q[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CARSkinMaterials
	 * Size -> 0x0068
	 */
	struct FCARSkinMaterials
	{
	public:
		unsigned char                                              Materials[0x28];                                         // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.CARSkinMaterials.Materials
		class FName                                                ComponentName;                                           // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SectionIndex;                                            // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MKA7[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        Color1Params;                                            // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        Color2Params;                                            // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        Color3Params;                                            // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CARPreviewMeshOffsetByPart
	 * Size -> 0x0010
	 */
	struct FCARPreviewMeshOffsetByPart
	{
	public:
		ECARPartType                                               Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GVUN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Offset;                                                  // 0x0004(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CARPreviewMesh
	 * Size -> 0x00F0
	 */
	struct FCARPreviewMesh
	{
	public:
		class FName                                                ComponentName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BA07[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Offset;                                                  // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              SkinMesh[0x28];                                          // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.CARPreviewMesh.SkinMesh
		unsigned char                                              AnimInstanceClass[0x28];                                 // 0x0068(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.CARPreviewMesh.AnimInstanceClass
		unsigned char                                              StaticMesh[0x28];                                        // 0x0090(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.CARPreviewMesh.StaticMesh
		TArray<struct FCARSkinMaterials>                           Skin;                                                    // 0x00B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		ECARPartType                                               ParentPart;                                              // 0x00C8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZLDT[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ParentSocket;                                            // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCARPreviewMeshOffsetByPart>                 OffsetToOtherParts;                                      // 0x00D8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O921[0x8];                                   // 0x00E8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CARPreviewParticleSystem
	 * Size -> 0x0080
	 */
	struct FCARPreviewParticleSystem
	{
	public:
		class FName                                                ComponentName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R0IX[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Offset;                                                  // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              Particle[0x28];                                          // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.CARPreviewParticleSystem.Particle
		ECARPartType                                               ParentPart;                                              // 0x0068(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D4N5[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ParentSocket;                                            // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MNCI[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCARVehicleUIInfo
	 * Size -> 0x06E0
	 */
	struct FOakCARVehicleUIInfo
	{
	public:
		class FText                                                DisplayName;                                             // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              PartIconTexture[0x28];                                   // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCARVehicleUIInfo.PartIconTexture
		TArray<struct FOakCARMenuStatValue>                        DisplayStats;                                            // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsLoading;                                              // 0x0068(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEmpty;                                                // 0x0069(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLocked;                                               // 0x006A(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y2YM[0x5];                                   // 0x006B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCARPreviewMesh>                             PreviewMesh;                                             // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCARPreviewParticleSystem>                   PreviewParticles;                                        // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         OnEquipSound;                                            // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       OverridePreviewLookAtTransform;                          // 0x0098(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9CZG[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          PreviewLookAtTransform;                                  // 0x00A0(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       BlendPostProcess;                                        // 0x00D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S2YR[0xF];                                   // 0x00D1(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                PostProcessSetting;                                      // 0x00E0(0x0600) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakChallengeTierRewards
	 * Size -> 0x00E0
	 */
	struct FOakChallengeTierRewards
	{
	public:
		struct FAttributeInitializationData                        ExperienceReward;                                        // 0x0000(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        CashReward;                                              // 0x0038(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        EridiumReward;                                           // 0x0070(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class UItemPoolData*                                       RewardItemPool;                                          // 0x00A8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UOakCustomizationData*>                       RewardCustomizations;                                    // 0x00B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UWeaponSkinPartData*>                         RewardWeaponSkins;                                       // 0x00C0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UWeaponTrinketPartData*>                      RewardWeaponTrinkets;                                    // 0x00D0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakChallengeTierRewardsPerInstance
	 * Size -> 0x0018
	 */
	struct FOakChallengeTierRewardsPerInstance
	{
	public:
		unsigned char                                              LeagueInstance;                                          // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IB4U[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOakChallengeTierRewards>                    TierRewards;                                             // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ChallengeInWorldIcon
	 * Size -> 0x0018
	 */
	struct FChallengeInWorldIcon
	{
	public:
		class UChallengeLevelActorComponent*                       LevelActorComponent;                                     // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxInWorldIconContainer*                            AssociatedContainer;                                     // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxInWorldIcon*                                     ChallengeIcon;                                           // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ChallengeMinimapIcon
	 * Size -> 0x0028
	 */
	struct FChallengeMinimapIcon
	{
	public:
		class UChallengeLevelActorComponent*                       LevelActorComponent;                                     // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxMinimapWidget*                                   MinimapIconWidget;                                       // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               MinimapIconGUID;                                         // 0x0010(0x0010) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompleted;                                              // 0x0020(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E0MO[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ChallengeInWorldIconQueueEntry
	 * Size -> 0x0010
	 */
	struct FChallengeInWorldIconQueueEntry
	{
	public:
		class UChallengeLevelActorComponent*                       LevelActorComponent;                                     // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AGbxPlayerController*                                PlayerToRegister;                                        // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DamageChallengeData
	 * Size -> 0x0028
	 */
	struct FDamageChallengeData
	{
	public:
		class UWeaponTypeData*                                     WeaponType;                                              // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UManufacturerData*                                   Manufacturer;                                            // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageTypeClass;                                         // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4FXF[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.IronBearHardPointData
	 * Size -> 0x0020
	 */
	struct FIronBearHardPointData
	{
	public:
		class UOakActionAbilityAugmentSlotData*                    Slot;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakActionAbilityAugmentSlotData*                    ModSlot;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponSlotData*                                     WeaponSlot;                                              // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EIronBearHardPointOrientation                              Orientation;                                             // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M665[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.EchoDeviceButtonState
	 * Size -> 0x0008
	 */
	struct FEchoDeviceButtonState
	{
	public:
		bool                                                       bPressed;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NEOX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AutoReleaseDelay;                                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.EchoDeviceTargetFXPosition
	 * Size -> 0x0020
	 */
	struct FEchoDeviceTargetFXPosition
	{
	public:
		unsigned char                                              UnknownData_MD1W[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxGFxObject*                                       UIObject;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NRXI[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlayerEchoDeviceState
	 * Size -> 0x0260
	 */
	struct FPlayerEchoDeviceState
	{
	public:
		class UClass*                                              EchoDeviceBlueprint;                                     // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable*                                          OverrideScreenDataTable;                                 // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffsetInterpSpeed;                                       // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationInterpSpeed;                                     // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           BaseScreenPositionOffset;                                // 0x0018(0x0008) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DepthOffset;                                             // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5N04[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AEchoDevice*                                         EchoDevice;                                              // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAttached;                                             // 0x0030(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V08O[0x147];                                 // 0x0031(0x0147) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                IdleScreenName;                                          // 0x0178(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_F81A[0x10];                                  // 0x0180(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CurrentScreenName;                                       // 0x0190(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YXD0[0x10];                                  // 0x0198(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                NextScreenName;                                          // 0x01A8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FEchoDeviceButtonState                              ButtonStates[0x3];                                       // 0x01B0(0x0018) Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		struct FVector2D                                           DPadAxes;                                                // 0x01C8(0x0008) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector2D                                           LastDPadAxes;                                            // 0x01D0(0x0008) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                CurrentMenuName;                                         // 0x01D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector2D                                           CurrentScreenPosition;                                   // 0x01E0(0x0008) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FRotator                                            CurrentRotationOffset;                                   // 0x01E8(0x000C) Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BIFN[0x4];                                   // 0x01F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FEchoDeviceTargetFXPosition                         ProjectionFXPosition;                                    // 0x01F8(0x0020) Transient, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7DVU[0x8];                                   // 0x0218(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          CachedInMenuFXTransform;                                 // 0x0220(0x0030) Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_HP44[0x10];                                  // 0x0250(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakSDUEntry
	 * Size -> 0x0014 (FullSize[0x0020] - InheritedSize[0x000C])
	 */
	struct FOakSDUEntry : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_DZL5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOakSDUData*                                         SDUData;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SDULevel;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DUOZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakSDUContainer
	 * Size -> 0x0048 (FullSize[0x00F8] - InheritedSize[0x00B0])
	 */
	struct FOakSDUContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FOakSDUEntry>                                SDUList;                                                 // 0x00B0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOBD[0x28];                                  // 0x00C0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGbxAttributeModifierHandle>                 SDUAttributeModifiers;                                   // 0x00E8(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.ReplicatedPlayerEchoDeviceState
	 * Size -> 0x0010
	 */
	struct FReplicatedPlayerEchoDeviceState
	{
	public:
		bool                                                       bWantsToBeActive;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponEquipType                                           EquipType;                                               // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D085[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ScreenName;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerPainSoundData
	 * Size -> 0x0010
	 */
	struct FPlayerPainSoundData
	{
	public:
		float                                                      HealthPercentThreshold;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S2QY[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCharacterSoundTag*                                  SoundTag;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerStandInInitData
	 * Size -> 0x0030
	 */
	struct FPlayerStandInInitData
	{
	public:
		class UPlayerClassIdentifier*                              PlayerClass;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I9OC[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOakPlayerController*                                OwnerPlayerController;                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7BWN[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.TrackedSlidingImpactEffect
	 * Size -> 0x0030
	 */
	struct FTrackedSlidingImpactEffect
	{
	public:
		class USceneComponent*                                     Component;                                               // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   PhysicalMaterial;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIOV[0x20];                                  // 0x0010(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SlidingImpactState
	 * Size -> 0x00E8
	 */
	struct FSlidingImpactState
	{
	public:
		class UOakCharacterMovementComponent*                      OwnerMovementComponent;                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         StartAudioEvent;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         StopAudioEvent;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreSlidingState;                                     // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LTZX[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                          LastImpact;                                              // 0x0020(0x0090) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      LastImpactTraceTime;                                     // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RB0T[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTrackedSlidingImpactEffect>                 Effects;                                                 // 0x00B8(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class FName                                                SpeedParticleParameterName;                              // 0x00C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UEWO[0x18];                                  // 0x00D0(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SlideEndedDetails
	 * Size -> 0x0018
	 */
	struct FSlideEndedDetails
	{
	public:
		class AActor*                                              HitActor;                                                // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StopVelocity;                                            // 0x0008(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E1GP[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GroundSlamEndedDetails
	 * Size -> 0x0008
	 */
	struct FGroundSlamEndedDetails
	{
	public:
		bool                                                       bInterrupted;                                            // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8636[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ImpactVelocity;                                          // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ResourcePoolSavegameData
	 * Size -> 0x0038
	 */
	struct FResourcePoolSavegameData
	{
	public:
		float                                                      Amount;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4J1E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ResourcePath[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.ResourcePoolSavegameData.ResourcePath
		unsigned char                                              UnknownData_P0W6[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakAbilityTreeItemSaveGameData
	 * Size -> 0x0038
	 */
	struct FOakAbilityTreeItemSaveGameData
	{
	public:
		unsigned char                                              ItemAssetPath[0x28];                                     // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakAbilityTreeItemSaveGameData.ItemAssetPath
		int32_t                                                    Points;                                                  // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    MaxPoints;                                               // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    TreeIdentifier;                                          // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z9F4[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakAbilitySlotSaveGameData
	 * Size -> 0x0050
	 */
	struct FOakAbilitySlotSaveGameData
	{
	public:
		unsigned char                                              AbilityClassPath[0x28];                                  // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.OakAbilitySlotSaveGameData.AbilityClassPath
		unsigned char                                              SlotAssetPath[0x28];                                     // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakAbilitySlotSaveGameData.SlotAssetPath
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilityAugmentSaveGameData
	 * Size -> 0x0078
	 */
	struct FOakActionAbilityAugmentSaveGameData
	{
	public:
		unsigned char                                              ActionAbilityClassPath[0x28];                            // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.OakActionAbilityAugmentSaveGameData.ActionAbilityClassPath
		unsigned char                                              SlotAssetPath[0x28];                                     // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakActionAbilityAugmentSaveGameData.SlotAssetPath
		unsigned char                                              AugmentAssetPath[0x28];                                  // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakActionAbilityAugmentSaveGameData.AugmentAssetPath
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilityAugmentConfigurationSaveGameData
	 * Size -> 0x00A0
	 */
	struct FOakActionAbilityAugmentConfigurationSaveGameData
	{
	public:
		unsigned char                                              AbilityClassPath[0x28];                                  // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.OakActionAbilityAugmentConfigurationSaveGameData.AbilityClassPath
		unsigned char                                              AugmentAssetPath[0x28];                                  // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakActionAbilityAugmentConfigurationSaveGameData.AugmentAssetPath
		unsigned char                                              ModSlotAssetPath[0x28];                                  // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakActionAbilityAugmentConfigurationSaveGameData.ModSlotAssetPath
		unsigned char                                              ModAssetPath[0x28];                                      // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakActionAbilityAugmentConfigurationSaveGameData.ModAssetPath
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilitySaveGameData
	 * Size -> 0x0048
	 */
	struct FOakPlayerAbilitySaveGameData
	{
	public:
		int32_t                                                    TreeGrade;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AbilityPoints;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOakAbilityTreeItemSaveGameData>             TreeItemList;                                            // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakAbilitySlotSaveGameData>                 AbilitySlotList;                                         // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakActionAbilityAugmentSaveGameData>        AugmentSlotList;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakActionAbilityAugmentConfigurationSaveGameData> AugmentConfigurationList;                                // 0x0038(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakSDUSaveGameData
	 * Size -> 0x0018
	 */
	struct FOakSDUSaveGameData
	{
	public:
		int32_t                                                    SDULevel;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3PG[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SDUDataPath;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.ClientExpectedSaveGameValues
	 * Size -> 0x0080
	 */
	struct FClientExpectedSaveGameValues
	{
	public:
		bool                                                       bWaitingForServer;                                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WAVY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ExperiencePoints;                                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FResourcePoolSavegameData>                   ResourcePools;                                           // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		struct FOakPlayerAbilitySaveGameData                       Abilities;                                               // 0x0018(0x0048) NativeAccessSpecifierPublic
		TArray<struct FInventorySaveGameData>                      InventoryList;                                           // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakSDUSaveGameData>                         SDUList;                                                 // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OutstandingActivityFeedData
	 * Size -> 0x0010
	 */
	struct FOutstandingActivityFeedData
	{
	public:
		class UActivityFeedReward*                                 FeedData;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChallengeLevelTargetValue;                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChallengeLevelCompleted;                                 // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OrphanedUIStandIn
	 * Size -> 0x0010
	 */
	struct FOrphanedUIStandIn
	{
	public:
		class AActor*                                              StandInActor;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AOakUIActorContainer*                                Container;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.TriggerFeedbackState
	 * Size -> 0x0020
	 */
	struct FTriggerFeedbackState
	{
	public:
		unsigned char                                              UnknownData_CW0J[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWeaponTriggerFeedbackAsset*                         WeaponTriggerFeedback;                                   // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPlayerPath
	 * Size -> 0x0018
	 */
	struct FOakPlayerPath
	{
	public:
		unsigned char                                              UnknownData_DGAW[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlayerCombatEncounterData
	 * Size -> 0x0014
	 */
	struct FPlayerCombatEncounterData
	{
	public:
		int32_t                                                    Experience;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    CriticalHits;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    Kills;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    BadassKills;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    RaidBossKills;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakCustomizationInfo
	 * Size -> 0x0010
	 */
	struct FOakCustomizationInfo
	{
	public:
		class UOakCustomizationData*                               Customization;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNew;                                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5AGJ[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakInventoryCustomizationPartInfo
	 * Size -> 0x0010
	 */
	struct FOakInventoryCustomizationPartInfo
	{
	public:
		class UOakInventoryCustomizationPartData*                  CustomizationPart;                                       // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNew;                                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IZW1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CrewQuartersDecorationInfo
	 * Size -> 0x0010
	 */
	struct FCrewQuartersDecorationInfo
	{
	public:
		class UCrewQuartersDecorationItemData*                     DecorationItemData;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNew;                                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IR69[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CrewQuartersRoomInfo
	 * Size -> 0x0010
	 */
	struct FCrewQuartersRoomInfo
	{
	public:
		class UCrewQuartersRoomItemData*                           RoomItemData;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsNew;                                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SOEN[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.UnlockedPlayerEchoLogData
	 * Size -> 0x0010
	 */
	struct FUnlockedPlayerEchoLogData
	{
	public:
		class UEchoLogData*                                        EchoLogData;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VBUX[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PremiumCurrencyData
	 * Size -> 0x0010
	 */
	struct FPremiumCurrencyData
	{
	public:
		class UGbxInventoryCategoryData*                           CategoryData;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EIYX[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PremiumCurrencyManager
	 * Size -> 0x0020
	 */
	struct FPremiumCurrencyManager
	{
	public:
		TArray<struct FPremiumCurrencyData>                        Currencies;                                              // 0x0000(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class AOakPlayerController*                                Owner;                                                   // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7RDB[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VaultCardRewardInfo
	 * Size -> 0x0008
	 */
	struct FVaultCardRewardInfo
	{
	public:
		unsigned char                                              UnknownData_3PP0[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VaultCardGearRewardInfo
	 * Size -> 0x0008
	 */
	struct FVaultCardGearRewardInfo
	{
	public:
		unsigned char                                              UnknownData_PFJI[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VaultCardRewardList
	 * Size -> 0x0058
	 */
	struct FVaultCardRewardList
	{
	public:
		unsigned char                                              UnknownData_08IU[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVaultCardRewardInfo>                        UnlockedVaultCardRewards;                                // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FVaultCardRewardInfo>                        RedeemedVaultCardRewards;                                // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FVaultCardGearRewardInfo>                    RedeemedVaultCardGearRewards;                            // 0x0048(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.VaultCardPreviousChallenge
	 * Size -> 0x0010
	 */
	struct FVaultCardPreviousChallenge
	{
	public:
		int32_t                                                    PreviousChallengeSeed;                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7N5S[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              PreviousChallenge;                                       // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VaultCardCurrentChallengeLists
	 * Size -> 0x0048
	 */
	struct FVaultCardCurrentChallengeLists
	{
	public:
		unsigned char                                              UnknownData_OIXL[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      Challenges;                                              // 0x0008(0x0010) ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      CompletedChallenges;                                     // 0x0018(0x0010) ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		TArray<struct FVaultCardPreviousChallenge>                 PreviouslyActiveDailyChallenges;                         // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FVaultCardPreviousChallenge>                 PreviouslyActiveWeeklyChallenges;                        // 0x0038(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VaultCardManager
	 * Size -> 0x0128
	 */
	struct FVaultCardManager
	{
	public:
		unsigned char                                              UnknownData_Q1AT[0xD0];                                  // 0x0000(0x00D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVaultCardRewardList>                        VaultCardRewardEntries;                                  // 0x00D0(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		struct FInventoryReplicationData                           PendingInventoryReward;                                  // 0x00E0(0x0010) Transient, NativeAccessSpecifierPrivate
		uint32_t                                                   PendingRewardVaultCardID;                                // 0x00F0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TTYP[0xC];                                   // 0x00F4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVaultCardCurrentChallengeLists>             CurrentVaultCardChallenges;                              // 0x0100(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
		class AOakPlayerController*                                Owner;                                                   // 0x0110(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UVaultCardGeneralData*                               VaultCardGlobalData;                                     // 0x0118(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_B4CI[0x8];                                   // 0x0120(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GearSoldByFriendData
	 * Size -> 0x0040
	 */
	struct FGearSoldByFriendData
	{
	public:
		class FString                                              GearSerialNumber;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerClassIdentifierHash;                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DY58[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FUniqueNetIdRepl                                    FriendNetId;                                             // 0x0018(0x0028) HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ProcessedReward
	 * Size -> 0x0020
	 */
	struct FProcessedReward
	{
	public:
		int32_t                                                    Currency;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Experience;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              CurrencyType;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      SpawnedInventoryItems;                                   // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakNPCMailDataEntry
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FOakNPCMailDataEntry : public FTableRowBase
	{
	public:
		class FText                                                SenderDisplayName;                                       // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                Subject;                                                 // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                Body;                                                    // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
		class UItemPoolData*                                       ItemPoolReward;                                          // 0x0050(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CinematicState
	 * Size -> 0x0010
	 */
	struct FCinematicState
	{
	public:
		class UOakCinematicTag*                                    CinematicTag;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SequenceTime;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECinematicState                                            CurrentState;                                            // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8O8N[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CinematicData
	 * Size -> 0x0068
	 */
	struct FCinematicData
	{
	public:
		class UOakCinematicTag*                                    CinematicTag;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ULevelSequence*                                      Sequence;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMediaSource*                                        Movie;                                                   // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCinematicModeData*                                  IntroCinematicMode;                                      // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRepeatable;                                             // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisallowCutsceneSkip;                                   // 0x0021(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EGWG[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      IntroTime;                                               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     IntroScreenParticle;                                     // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCinematicModeData*                                  PlayingCinematicMode;                                    // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMissionObjectiveReference                          MissionObjective;                                        // 0x0038(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.RegisteredWeaponShotModifier
	 * Size -> 0x0020
	 */
	struct FRegisteredWeaponShotModifier
	{
	public:
		class UWeaponShotModifier*                                 Modifier;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             Owner;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             ContextOverride;                                         // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VIM8[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GoreRegionState
	 * Size -> 0x0060
	 */
	struct FGoreRegionState
	{
	public:
		class UGoreDamageData*                                     GoreData;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideStumpSocket : 1;                                // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideRootDamageBone : 1;                             // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideStumpBoneScale : 1;                             // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideLimbSocket : 1;                                 // 0x0008(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9P93[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                StumpSocket;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StumpBoneScale;                                          // 0x0018(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N046[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                RootDamageBone;                                          // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LimbSocket;                                              // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimbScale;                                               // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_18RQ[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EventName;                                               // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQYL[0x18];                                  // 0x0048(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GoreRegionEventSummary
	 * Size -> 0x002C
	 */
	struct FGoreRegionEventSummary
	{
	public:
		struct FVector_NetQuantize                                 HitLocation;                                             // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           HitDirection;                                            // 0x000C(0x000C) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Origin;                                                  // 0x0018(0x000C) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GoreRegionIndex;                                         // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.NumPlayersDamageBalanceInfo
	 * Size -> 0x0008
	 */
	struct FNumPlayersDamageBalanceInfo
	{
	public:
		int32_t                                                    NumPlayers;                                              // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RadiationMultiplier;                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerDifficultyBalanceInfo
	 * Size -> 0x0004
	 */
	struct FPlayerDifficultyBalanceInfo
	{
	public:
		float                                                      PlayerDamageTakenMultiplier;                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.StatusEffectApplicationDamageDefaultSettings
	 * Size -> 0x0018
	 */
	struct FStatusEffectApplicationDamageDefaultSettings
	{
	public:
		class UStatusEffectData*                                   StatusEffectData;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PercentBaseDamage;                                       // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PercentChance;                                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7H5Z[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DamageDisplayInfo
	 * Size -> 0x0038
	 */
	struct FDamageDisplayInfo
	{
	public:
		class UParticleSystem*                                     DamageNumberParticleSystem;                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageNumberParticleEventName;                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageNumberCritParticleEventName;                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageNumberResistParticleEventName;                     // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageNumberImmuneParticleEventName;                     // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DamageNumberVehicleLocationOffset;                       // 0x0028(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GCVC[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.IncomingDamageDisplayInfo
	 * Size -> 0x0270
	 */
	struct FIncomingDamageDisplayInfo
	{
	public:
		class UStaticMesh*                                         HealthDamageIndicatorStaticMesh;                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         ShieldDamageIndicatorStaticMesh;                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         ArmorDamageIndicatorStaticMesh;                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DamageIndicatorRelativeLocation;                         // 0x0018(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageIndicatorScale;                                    // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinForegroundFOVToDrawIndicators;                        // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageIndicatorDuration;                                 // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageIndicatorFadeDuration;                             // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DB04[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  ScaleDurationBySeverityCurve;                            // 0x0038(0x0078) Edit, NativeAccessSpecifierPublic
		int32_t                                                    MaxDamageIndicators;                                     // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DamageIndicatorSphereRelativeLocation;                   // 0x00B4(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageIndicatorSphereRelativePitch;                      // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DamageIndicatorSphereRadius;                             // 0x00C4(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageIndicatorOpacityAlphaParameterName;                // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageIndicatorPercentOfLifeMaterialParameterName;       // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FNumericRange                                       DamageIndicatorCenterFadeScreenPercent;                  // 0x00E0(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                DamageIndicatorCenterFadeMaterialParameterName;          // 0x00E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  DamageIndicatorYawRemappingCurve;                        // 0x00F0(0x0078) Edit, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  DamageIndicatorPitchRemappingCurve;                      // 0x0168(0x0078) Edit, NativeAccessSpecifierPublic
		float                                                      MaxPitchToApplyYawRemapping;                             // 0x01E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MeleeJoltRange;                                          // 0x01E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  MeleeJoltLocationCurve;                                  // 0x01E8(0x0078) Edit, NativeAccessSpecifierPublic
		struct FGbxEasingFunc                                      AttackerLocationCrouchEasing;                            // 0x0260(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      AttackerLocationCrouchTransitionDuration;                // 0x026C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.IncomingDamagePresentationData
	 * Size -> 0x00E0
	 */
	struct FIncomingDamagePresentationData
	{
	public:
		struct FAttributeInitializationData                        DamageThreshold;                                         // 0x0000(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        DamageScore;                                             // 0x0038(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        DamageScoreThreshold;                                    // 0x0070(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		class UFeedbackData*                                       FeedbackData;                                            // 0x00A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         HealthAudioEvent;                                        // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         ShieldAudioEvent;                                        // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         ArmorAudioEvent;                                         // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageSeverityParticleParamValue;                        // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ArmsAnimationFlinchStrength;                             // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRadialBlur;                                          // 0x00D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BKOF[0x3];                                   // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRadialBlurSelection                                RadialBlur;                                              // 0x00D4(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.IncomingDamagePresentationGroup
	 * Size -> 0x0380
	 */
	struct FIncomingDamagePresentationGroup
	{
	public:
		struct FIncomingDamagePresentationData                     PresentationLevels[0x4];                                 // 0x0000(0x0380) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.IncomingDamagePresentationSource
	 * Size -> 0x0390
	 */
	struct FIncomingDamagePresentationSource
	{
	public:
		TArray<class UClass*>                                      DamageSources;                                           // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		struct FIncomingDamagePresentationGroup                    PresentationGroup;                                       // 0x0010(0x0380) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.IncomingDamagePresentationGenericData
	 * Size -> 0x0001
	 */
	struct FIncomingDamagePresentationGenericData
	{
	public:
		unsigned char                                              UnknownData_LZEN[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.IncomingDamagePresentationGlobalInfo
	 * Size -> 0x0080
	 */
	struct FIncomingDamagePresentationGlobalInfo
	{
	public:
		class UParticleSystem*                                     ScreenParticleHealth;                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ScreenParticleShield;                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ScreenParticleArmor;                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ScreenParticleHealth_SplitScreen;                        // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ScreenParticleShield_SplitScreen;                        // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ScreenParticleArmor_SplitScreen;                         // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DirectionalParticleEventName;                            // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DirectionalEmitterName;                                  // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumDirectionalParticles;                              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8W6B[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                FullParticleEventName;                                   // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FullEmitterName;                                         // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageSeverityParameterName;                             // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageDirectionParameterName;                            // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageParticleDirectionQuantization;                     // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AspectRatioThresholdToUseWidescreenParticles;            // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlinchAnimationStregthNoise;                             // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlinchAnimationAngleNoise;                               // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RadialBlurMaxDistance;                                   // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FIncomingDamagePresentationGenericData              PresentationLevels[0x4];                                 // 0x007C(0x0004) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPipelineDamageInput
	 * Size -> 0x0050 (FullSize[0x0200] - InheritedSize[0x01B0])
	 */
	struct FOakPipelineDamageInput : public FPipelineDamageInput
	{
	public:
		unsigned char                                              UnknownData_DIEF[0x40];                                  // 0x01B0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameStatData*                                       KillStat;                                                // 0x01F0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q8CQ[0x8];                                   // 0x01F8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AmputateLimbData
	 * Size -> 0x00C0
	 */
	struct FAmputateLimbData
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             BoneScale;                                               // 0x0008(0x000C) BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VVAT[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMesh*                                         StumpMesh;                                               // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     StumpParticles;                                          // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceConstant*                           StumpMaterialOverride;                                   // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceConstant*                           StumpDecal;                                              // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StumpDecalSize;                                          // 0x0038(0x000C) BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStumpReceivesDecal;                                     // 0x0044(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0NVQ[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         StumpSound;                                              // 0x0048(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          StumpTransform;                                          // 0x0050(0x0030) BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UObject*                                             LimbMesh;                                                // 0x0080(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     LimbParticles;                                           // 0x0088(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              LimbActorClass;                                          // 0x0090(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceConstant*                           LimbMaterialOverride;                                    // 0x0098(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritStumpMaterialParameters;                         // 0x00A0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialParameterCopyMethod                               InheritStumpMaterialParametersMethod;                    // 0x00A1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInheritLimbMaterialParameters;                          // 0x00A2(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialParameterCopyMethod                               InheritLimbMaterialParametersMethod;                     // 0x00A3(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScaleLimbToStump;                                       // 0x00A4(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5YS1[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LimbSocket;                                              // 0x00A8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimbScale;                                               // 0x00B0(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LimbMassScale;                                           // 0x00B4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SourceMaterialIndex;                                     // 0x00B8(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GVVG[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AvailableManufacturer
	 * Size -> 0x0018
	 */
	struct FAvailableManufacturer
	{
	public:
		class UManufacturerData*                                   Manufacturer;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakDebugWeaponBuilderButton*                        OptionButton;                                            // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4TV3[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AvailableAmmoType
	 * Size -> 0x0018
	 */
	struct FAvailableAmmoType
	{
	public:
		class UGbxAmmoTypeData*                                    AmmoType;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakDebugWeaponBuilderButton*                        OptionButton;                                            // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HQUT[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AvailableInventoryBalanceData
	 * Size -> 0x0018
	 */
	struct FAvailableInventoryBalanceData
	{
	public:
		class UInventoryBalanceData*                               InventoryBalance;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakDebugWeaponBuilderButton*                        OptionButton;                                            // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z8JM[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AvailablePartData
	 * Size -> 0x0050
	 */
	struct FAvailablePartData
	{
	public:
		struct FWeightedActorPartData                              PartData;                                                // 0x0000(0x0040) NoDestructor, NativeAccessSpecifierPublic
		class UOakDebugWeaponBuilderButton*                        OptionButton;                                            // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MUWL[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DeveloperPerk
	 * Size -> 0x0018
	 */
	struct FDeveloperPerk
	{
	public:
		TArray<struct FKey>                                        KeyCombo;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              PerkTypeEnumIdx;                                         // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EROP[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.EchoLogTrackingInfo
	 * Size -> 0x0020
	 */
	struct FEchoLogTrackingInfo
	{
	public:
		unsigned char                                              UnknownData_ZG89[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptDelegate                                      Event;                                                   // 0x0010(0x0010) ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DialogScriptToLoadEntry
	 * Size -> 0x0038
	 */
	struct FDialogScriptToLoadEntry
	{
	public:
		class FString                                              DialogScriptLevelName;                                   // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DialogScriptToLoad[0x28];                                // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.DialogScriptToLoadEntry.DialogScriptToLoad
	};

	/**
	 * ScriptStruct OakGame.OakDownloadableEntitlementCurrencyType
	 * Size -> 0x0010
	 */
	struct FOakDownloadableEntitlementCurrencyType
	{
	public:
		class FName                                                CurrencyName;                                            // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDownloadableEntitlementPartData_Currency*           CurrencyPartData;                                        // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DownloadableEntitlementSetItem
	 * Size -> 0x0030
	 */
	struct FDownloadableEntitlementSetItem
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int32_t                                                    Count;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FText                                                Description;                                             // 0x0008(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate
		class FString                                              SerialNumber;                                            // 0x0020(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.GRMLNHoverProfile
	 * Size -> 0x0038
	 */
	struct FGRMLNHoverProfile
	{
	public:
		EOakDroneMovementMode                                      MovementMode;                                            // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IK3A[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableValueHandle                               Radius;                                                  // 0x0008(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FDataTableValueHandle                               Altitude;                                                // 0x0020(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GRMLNBeamConfiguration
	 * Size -> 0x0128
	 */
	struct FGRMLNBeamConfiguration
	{
	public:
		struct FEnvQueryParams                                     TargetQuery;                                             // 0x0000(0x00B8) Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        BeamDuration;                                            // 0x00B8(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        CooldownDuration;                                        // 0x00F0(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GRMLNHardPointDamageData
	 * Size -> 0x0018
	 */
	struct FGRMLNHardPointDamageData
	{
	public:
		class UClass*                                              DamageTypeClass;                                         // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         WeaponFireEvent;                                         // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     MuzzleFlash;                                             // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GRMLNHardpointData
	 * Size -> 0x0168
	 */
	struct FGRMLNHardpointData
	{
	public:
		EGRMLNHardpointType                                        Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bIsModUnlockedHardpoint;                                 // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EGRMLNModType                                              ModUnlock;                                               // 0x0002(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SKJ9[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttributeInitializationData                        FireRate;                                                // 0x0008(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
		struct FAttributeInitializationData                        Ammunition;                                              // 0x0040(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
		struct FAttributeInitializationData                        BurstRefireRate;                                         // 0x0078(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
		struct FAttributeInitializationData                        Damage;                                                  // 0x00B0(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
		class UClass*                                              LightProjectileDataClass;                                // 0x00E8(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FGRMLNHardPointDamageData                           NormalDamageData;                                        // 0x00F0(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
		struct FGRMLNHardPointDamageData                           CryoDamageData;                                          // 0x0108(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate
		TArray<class FName>                                        WeaponFireSockets;                                       // 0x0120(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate
		float                                                      RandomRangeMin;                                          // 0x0130(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      RandomRangeMax;                                          // 0x0134(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AOakDroneProjectile_GRMLN*                           Owner;                                                   // 0x0138(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_DOGX[0x28];                                  // 0x0140(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GRMLNBeamData
	 * Size -> 0x00F8
	 */
	struct FGRMLNBeamData
	{
	public:
		unsigned char                                              UnknownData_MCWE[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOakDroneProjectile_GRMLN*                           Owner;                                                   // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AActor*                                              CurrentTarget;                                           // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UDamageComponent*                                    TargetDamageComponent;                                   // 0x0018(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FEnvQueryParams                                     TargetQueryParams;                                       // 0x0020(0x00B8) Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_00BJ[0x20];                                  // 0x00D8(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GRMLNStaticFieldData
	 * Size -> 0x0028 (FullSize[0x0120] - InheritedSize[0x00F8])
	 */
	struct FGRMLNStaticFieldData : public FGRMLNBeamData
	{
	public:
		unsigned char                                              ShieldProviderInterface[0x10];                           // 0x00F8(0x0010) UNKNOWN PROPERTY: InterfaceProperty OakGame.GRMLNStaticFieldData.ShieldProviderInterface
		unsigned char                                              UnknownData_YZXS[0x18];                                  // 0x0108(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GRMLNBadDoseData
	 * Size -> 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
	 */
	struct FGRMLNBadDoseData : public FGRMLNBeamData
	{	};

	/**
	 * ScriptStruct OakGame.DevMapToMapId
	 * Size -> 0x0010
	 */
	struct FDevMapToMapId
	{
	public:
		class FName                                                DevMapName;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   MapID;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2DMH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlayerClassToClassId
	 * Size -> 0x0018
	 */
	struct FPlayerClassToClassId
	{
	public:
		class FString                                              PlayerClassName;                                         // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ClassId;                                                 // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YPET[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ConditionalSavegameExpression
	 * Size -> 0x0018
	 */
	struct FConditionalSavegameExpression
	{
	public:
		class UGbxCondition*                                       Condition;                                               // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SaveGame;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Profile;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LootAudioStinger
	 * Size -> 0x0010
	 */
	struct FLootAudioStinger
	{
	public:
		TWeakObjectPtr<class AActor>                               SoundActor;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         Sound;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakHitRegionModifierData
	 * Size -> 0x0048
	 */
	struct FOakHitRegionModifierData
	{
	public:
		struct FAttributeInitializationData                        DamageScale;                                             // 0x0000(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		class UGbxCondition*                                       Condition;                                               // 0x0038(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageType;                                              // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakInventoryNameData
	 * Size -> 0x0010
	 */
	struct FOakInventoryNameData
	{
	public:
		class UInventoryPartData*                                  Part;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInventoryNamePartData*                              NamePart;                                                // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.ExtractedOakInventoryCombinationNameData
	 * Size -> 0x0018
	 */
	struct FExtractedOakInventoryCombinationNameData
	{
	public:
		class FName                                                FirstPartTag;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class FName                                                SecondPartTag;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UInventoryNamePartData*                              NamePart;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakJAKFeedbackData
	 * Size -> 0x0010
	 */
	struct FOakJAKFeedbackData
	{
	public:
		class UParticleSystem*                                     ParticleEffect;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         SoundEvent;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakLightBeamInitializationData
	 * Size -> 0x0010 (FullSize[0x0138] - InheritedSize[0x0128])
	 */
	struct FOakLightBeamInitializationData : public FLightBeamInitializationData
	{
	public:
		float                                                      BaseStatusEffectChance;                                  // 0x0128(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseStatusEffectDamage;                                  // 0x012C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseStatusEffectDuration;                                // 0x0130(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I61D[0x4];                                   // 0x0134(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.WeightedLoadingTooltip
	 * Size -> 0x0020
	 */
	struct FWeightedLoadingTooltip
	{
	public:
		class FText                                                ToolTipText;                                             // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ECVF[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MapCharacterPhysicsSettings
	 * Size -> 0x0004
	 */
	struct FMapCharacterPhysicsSettings
	{
	public:
		float                                                      PlayerAirControlScale;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakModifierSet
	 * Size -> 0x0050
	 */
	struct FOakModifierSet
	{
	public:
		bool                                                       bDisplay;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CWH3[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ModifierName;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                DisplayDesc;                                             // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowHandle>                         Modifiers;                                               // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeightedOakModifierSet
	 * Size -> 0x0068
	 */
	struct FWeightedOakModifierSet
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RCYC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakModifierSet                                     ModifierSet;                                             // 0x0008(0x0050) Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        MutualExclusionTags;                                     // 0x0058(0x0010) ZeroConstructor, Deprecated, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MayhemModifierDifficultyLevel
	 * Size -> 0x0070
	 */
	struct FMayhemModifierDifficultyLevel
	{
	public:
		int32_t                                                    MayhemLevel;                                             // 0x0000(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9N37[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakModifierSet                                     StaticModifiers;                                         // 0x0008(0x0050) Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomModifierCount;                                     // 0x0058(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HXR3[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWeightedOakModifierSet>                     RandomModifierSets;                                      // 0x0060(0x0010) ZeroConstructor, Deprecated, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MayhemUILevelData
	 * Size -> 0x0090
	 */
	struct FMayhemUILevelData
	{
	public:
		class FText                                                ModEnemies[0x3];                                         // 0x0000(0x0048) Deprecated, NativeAccessSpecifierPublic
		class FText                                                ModCurrency;                                             // 0x0048(0x0018) Deprecated, NativeAccessSpecifierPublic
		class FText                                                ModDropRate;                                             // 0x0060(0x0018) Deprecated, NativeAccessSpecifierPublic
		class FText                                                ModXP;                                                   // 0x0078(0x0018) Deprecated, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.InstancedPlayerOwnerInfo
	 * Size -> 0x0018
	 */
	struct FInstancedPlayerOwnerInfo
	{
	public:
		TWeakObjectPtr<class AOakPlayerController>                 InstancedPlayerOwner;                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyShowOnPlayerOwner;                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PINR[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UZoneMapPOITypeData*                                 PointOfInterestType;                                     // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MissionStarterGear
	 * Size -> 0x0058
	 */
	struct FMissionStarterGear
	{
	public:
		class UMissionObjective*                                   Objective;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              StarterGearItemPool[0x28];                               // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.MissionStarterGear.StarterGearItemPool
		unsigned char                                              InventoryCategory[0x28];                                 // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.MissionStarterGear.InventoryCategory
	};

	/**
	 * ScriptStruct OakGame.AutoplayAction
	 * Size -> 0x0020
	 */
	struct FAutoplayAction
	{
	public:
		class AActor*                                              Target;                                                  // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IROY[0x18];                                  // 0x0008(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AutoplayMissionState
	 * Size -> 0x0030
	 */
	struct FAutoplayMissionState
	{
	public:
		unsigned char                                              UnknownData_S848[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAutoplayAction>                             PossibleActions;                                         // 0x0008(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		class UClass*                                              CurrentMission;                                          // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UObject*                                             CurrentObjective;                                        // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZEAH[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AutoplayCombatState
	 * Size -> 0x0030
	 */
	struct FAutoplayCombatState
	{
	public:
		unsigned char                                              UnknownData_AV66[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              EnemyTarget;                                             // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PUMV[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MissionSpawnerFailsafeData
	 * Size -> 0x0010
	 */
	struct FMissionSpawnerFailsafeData
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FailsafeSeconds;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T79R[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LevelSyncCompletedMission
	 * Size -> 0x0010
	 */
	struct FLevelSyncCompletedMission
	{
	public:
		class UClass*                                              MissionClass;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WH73[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MusicLayerInfo
	 * Size -> 0x0020
	 */
	struct FMusicLayerInfo
	{
	public:
		class UWwiseState*                                         NoneState;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseState*                                         OnState;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseState*                                         OffState;                                                // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseState*                                         ExitCombatState;                                         // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MusicInterestASR
	 * Size -> 0x0010
	 */
	struct FMusicInterestASR
	{
	public:
		float                                                      SustainValue;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackTimeSeconds;                                       // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SustainTimeSeconds;                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DecayTimeSeconds;                                        // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MusicLayer
	 * Size -> 0x0008
	 */
	struct FMusicLayer
	{
	public:
		float                                                      InterestMin;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterestMax;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MusicPart
	 * Size -> 0x0060
	 */
	struct FMusicPart
	{
	public:
		int32_t                                                    UpdateIntervalInBeats;                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterestMin;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterestMax;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XJOH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EOakMusicLayer, struct FMusicLayer>                   AssociatedMusicLayers;                                   // 0x0010(0x0050) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MusicSection
	 * Size -> 0x0058
	 */
	struct FMusicSection
	{
	public:
		float                                                      CombatMin;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CombatMax;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EOakMusicPart, struct FMusicPart>                     AssociatedMusicParts;                                    // 0x0008(0x0050) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakNavReverseState
	 * Size -> 0x0018
	 */
	struct FOakNavReverseState
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOakNavComponent*                                    NavComp;                                                 // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q70C[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakVehicleNavCorrecter
	 * Size -> 0x00B8
	 */
	struct FOakVehicleNavCorrecter
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AGbxNavWorld*                                        GbxNavWorld;                                             // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOakNavComponent*                                    OakNavComp;                                              // 0x0010(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class AOakVehicle*                                         OakVehicle;                                              // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FNavAgentProperties                                 NavAgentProps;                                           // 0x0020(0x0030) Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_WYQN[0x68];                                  // 0x0050(0x0068) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StuckTeleport
	 * Size -> 0x0020
	 */
	struct FStuckTeleport
	{
	public:
		bool                                                       bEnableStuckTeleport;                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PH2E[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForwardStuckValue;                                       // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CantMoveValuePerSec;                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StuckTeleportTrigger;                                    // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StuckDecay;                                              // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowDebug;                                              // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KUS5[0xB];                                   // 0x0015(0x000B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RubberbandSpeedData
	 * Size -> 0x0040
	 */
	struct FRubberbandSpeedData
	{
	public:
		TWeakObjectPtr<class AActor>                               RubberBandTarget;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistance;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistance;                                             // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistanceSpeed;                                        // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistanceSpeed;                                        // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBehindOnly;                                             // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_85YF[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              SplineReference;                                         // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SplineDistanceOffset;                                    // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSpline;                                              // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y0RZ[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USplineComponent*                                    CachedSplineComponent;                                   // 0x0030(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49DW[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OnlineNetworkOptionData
	 * Size -> 0x0038
	 */
	struct FOnlineNetworkOptionData
	{
	public:
		class FText                                                Label;                                                   // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0018(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ENetworkType                                               NetworkType;                                             // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInviteType                                                InviteType;                                              // 0x0031(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R1CD[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.TriggeredPassiveAbilityEffect
	 * Size -> 0x0048
	 */
	struct FTriggeredPassiveAbilityEffect
	{
	public:
		class UStatusEffectData*                                   StatusEffectData;                                        // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        Duration;                                                // 0x0008(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bApplyToPlayer;                                          // 0x0040(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAdditionalTriggeredEffectTargets                          AdditionalEffectTargets;                                 // 0x0041(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsePlayerForAdditionalEffectTargetContext;              // 0x0042(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWantsEffectEndedEvent;                                  // 0x0043(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanTriggerMultipleTimesPerFrame;                        // 0x0044(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JK8O[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakPassiveAbilityHUDIconData
	 * Size -> 0x0020
	 */
	struct FOakPassiveAbilityHUDIconData
	{
	public:
		EOakPassiveAbilityHUDIconActivationType                    ActivationType;                                          // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_71M4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStatusEffectData*                                   CustomStatusEffectData;                                  // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakAbilityTimerData*                                AbilityTimerData;                                        // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakPlayerAbilityHUDItemData*                        HUDItemData;                                             // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPassiveAbilitySirenGhostArmControllerSpec
	 * Size -> 0x0018
	 */
	struct FOakPassiveAbilitySirenGhostArmControllerSpec
	{
	public:
		EOakPassiveAbilitySirenArmDurationType                     DurationType;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UNR2[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOakAbilityTimerData*                                TimerData;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStatusEffectData*                                   StatusEffectData;                                        // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.BonusAttributeModifierUpgrade
	 * Size -> 0x0040
	 */
	struct FBonusAttributeModifierUpgrade
	{
	public:
		int32_t                                                    GradeToApplyAt;                                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GD2V[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttributeInitializationData                        BonusUpgrade;                                            // 0x0008(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.BranchColorInfo
	 * Size -> 0x0060
	 */
	struct FBranchColorInfo
	{
	public:
		class FString                                              FrameColorName;                                          // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        FrameColorHeader;                                        // 0x0010(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        FrameColorBackground;                                    // 0x0020(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        IconColor;                                               // 0x0030(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        IconBackgroundColor;                                     // 0x0040(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IllustrationName;                                        // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PassiveAbilityBuffData
	 * Size -> 0x0108
	 */
	struct FPassiveAbilityBuffData
	{
	public:
		struct FSoftObjectPath                                     PassiveAbilityClassPath;                                 // 0x0000(0x0018) Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PassiveAbilityClassPtr[0x28];                            // 0x0018(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.PassiveAbilityBuffData.PassiveAbilityClassPtr
		struct FBranchColorInfo                                    TreeBranchColorInfo;                                     // 0x0040(0x0060) Edit, EditConst, NativeAccessSpecifierPublic
		class FString                                              ItemFrameName;                                           // 0x00A0(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AbilityNameLocNamespace;                                 // 0x00B0(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AbilityNameLocKey;                                       // 0x00C0(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        GradeBonusInitializer;                                   // 0x00D0(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PawnAttachCameraModeOptions
	 * Size -> 0x0028
	 */
	struct FPawnAttachCameraModeOptions
	{
	public:
		float                                                      AttachingBlendInTimeOverride;                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PersistentBlendInTimeOverride;                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PersistentBlendOutTimeOverride;                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DetachingBlendOutTimeOverride;                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachingMode;                                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PersistentMode;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DetachingMode;                                           // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPhaseWebSphereBeamData
	 * Size -> 0x0030
	 */
	struct FOakPhaseWebSphereBeamData
	{
	public:
		class FName                                                BeamEmitterName;                                         // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     BeamParticleSystem;                                      // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     BeamSourceComponent;                                     // 0x0010(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SourceSocketName;                                        // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class USceneComponent>                      BeamDestComponent;                                       // 0x0020(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DestSocketName;                                          // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPhaseWebSphereLinkedTargetItem
	 * Size -> 0x0054 (FullSize[0x0060] - InheritedSize[0x000C])
	 */
	struct FOakPhaseWebSphereLinkedTargetItem : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_L0CH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOakCharacter*                                       LinkedTarget;                                            // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FOakPhaseWebSphereBeamData                          BeamData;                                                // 0x0018(0x0030) RepSkip, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            BeamComponent;                                           // 0x0048(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RQDT[0x10];                                  // 0x0050(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakPhaseWebSphereLinkedTargetList
	 * Size -> 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
	 */
	struct FOakPhaseWebSphereLinkedTargetList : public FFastArraySerializer
	{
	public:
		class AOakPhaseWebSphere*                                  Owner;                                                   // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FOakPhaseWebSphereLinkedTargetItem>          Items;                                                   // 0x00B8(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakPhaseWebSphereListLock
	 * Size -> 0x0020
	 */
	struct FOakPhaseWebSphereListLock
	{
	public:
		unsigned char                                              UnknownData_UPK6[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOakPhaseWebSphere*                                  Owner;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class AOakCharacter*>                               PendingRemoves;                                          // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakPhaseWebSphere_SharedDamageData
	 * Size -> 0x0018
	 */
	struct FOakPhaseWebSphere_SharedDamageData
	{
	public:
		float                                                      SharedDamage;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2IXN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              DamageType;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageSource;                                            // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilitySlot
	 * Size -> 0x0014 (FullSize[0x0020] - InheritedSize[0x000C])
	 */
	struct FOakPlayerAbilitySlot : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_AEEO[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOakPlayerAbilitySlotData*                           SlotData;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UClass*                                              AbilityClass;                                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilitySlotList
	 * Size -> 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
	 */
	struct FOakPlayerAbilitySlotList : public FFastArraySerializer
	{
	public:
		class UOakPlayerAbilityManagerComponent*                   Owner;                                                   // 0x00B0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FOakPlayerAbilitySlot>                       Items;                                                   // 0x00B8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilityAugmentSlot
	 * Size -> 0x001C (FullSize[0x0028] - InheritedSize[0x000C])
	 */
	struct FOakActionAbilityAugmentSlot : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_08QY[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ActionAbilityClass;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOakActionAbilityAugmentSlotData*                    SlotData;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOakActionAbilityAugmentData*                        AugmentData;                                             // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilityAugmentSlotList
	 * Size -> 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
	 */
	struct FOakActionAbilityAugmentSlotList : public FFastArraySerializer
	{
	public:
		class UOakPlayerAbilityManagerComponent*                   Owner;                                                   // 0x00B0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FOakActionAbilityAugmentSlot>                Items;                                                   // 0x00B8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilityHUDItemValue
	 * Size -> 0x0008
	 */
	struct FOakPlayerAbilityHUDItemValue
	{
	public:
		int32_t                                                    StackCount;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PercentComplete;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilityHUDItem
	 * Size -> 0x002C (FullSize[0x0038] - InheritedSize[0x000C])
	 */
	struct FOakPlayerAbilityHUDItem : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_GQNS[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Provider[0x10];                                          // 0x0010(0x0010) UNKNOWN PROPERTY: InterfaceProperty OakGame.OakPlayerAbilityHUDItem.Provider
		class UOakPlayerAbilityHUDItemData*                        HUDItemData;                                             // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FOakPlayerAbilityHUDItemValue                       Value;                                                   // 0x0028(0x0008) NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_17UI[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilityHUDItemList
	 * Size -> 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
	 */
	struct FOakPlayerAbilityHUDItemList : public FFastArraySerializer
	{
	public:
		class UOakPlayerAbilityManagerComponent*                   Owner;                                                   // 0x00B0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FOakPlayerAbilityHUDItem>                    Items;                                                   // 0x00B8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilityAugmentConfigurationSetting
	 * Size -> 0x0010
	 */
	struct FOakActionAbilityAugmentConfigurationSetting
	{
	public:
		class UOakActionAbilityAugmentSlotData*                    ModSlotData;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOakActionAbilityAugmentData*                        ModData;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilityAugmentConfiguration
	 * Size -> 0x0018
	 */
	struct FOakActionAbilityAugmentConfiguration
	{
	public:
		class UOakActionAbilityAugmentData*                        AugmentData;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FOakActionAbilityAugmentConfigurationSetting> Settings;                                                // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilityAugmentSlotConfiguration
	 * Size -> 0x0020
	 */
	struct FOakActionAbilityAugmentSlotConfiguration
	{
	public:
		class UClass*                                              ActionAbilityClass;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOakActionAbilityAugmentSlotData*                    SlotData;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FOakActionAbilityAugmentConfiguration>       AugmentConfigurations;                                   // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilityAugmentSlotConfigurationList
	 * Size -> 0x0018
	 */
	struct FOakActionAbilityAugmentSlotConfigurationList
	{
	public:
		class UOakPlayerAbilityManagerComponent*                   Owner;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FOakActionAbilityAugmentSlotConfiguration>   SlotConfigurations;                                      // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakAbilitySlot
	 * Size -> 0x0014
	 */
	struct FOakAbilitySlot
	{
	public:
		int32_t                                                    LevelUnlock;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGuid                                               SlotID;                                                  // 0x0004(0x0010) Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakActionAbilitySlot
	 * Size -> 0x0014 (FullSize[0x0028] - InheritedSize[0x0014])
	 */
	struct FOakActionAbilitySlot : public FOakAbilitySlot
	{
	public:
		unsigned char                                              UnknownData_325R[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOakAbilitySlot>                             AugmentSlots;                                            // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilityAllyQueryResult
	 * Size -> 0x0020
	 */
	struct FOakPlayerAbilityAllyQueryResult
	{
	public:
		TArray<class AOakCharacter_Player*>                        Allies;                                                  // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      Companions;                                              // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AbilityTreeBranch
	 * Size -> 0x0028
	 */
	struct FAbilityTreeBranch
	{
	public:
		class UOakPlayerAbilityTree*                               Owner;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakPlayerAbilityTreeBranchData*                     BranchData;                                              // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OASS[0x18];                                  // 0x0010(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AbilityTreeTier
	 * Size -> 0x0038
	 */
	struct FAbilityTreeTier
	{
	public:
		class UOakPlayerAbilityTree*                               Owner;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakPlayerAbilityTreeTierData*                       TierData;                                                // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N44N[0x28];                                  // 0x0010(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AbilityTreeItem
	 * Size -> 0x0030
	 */
	struct FAbilityTreeItem
	{
	public:
		class UOakPlayerAbilityTree*                               Owner;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakPlayerAbilityTreeItemData*                       ItemData;                                                // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X43B[0x20];                                  // 0x0010(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ViewLeadingInfo
	 * Size -> 0x0068
	 */
	struct FViewLeadingInfo
	{
	public:
		struct FViewLeadingTranslationInfo                         Translation;                                             // 0x0000(0x002C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FViewLeadingRotationInfo                            Rotation;                                                // 0x002C(0x003C) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MissionDeliveryData
	 * Size -> 0x0018
	 */
	struct FMissionDeliveryData
	{
	public:
		TArray<class UClass*>                                      Missions;                                                // 0x0000(0x0010) ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		class AActor*                                              MissionGiver;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakProfileLastInventoryFilterInfo
	 * Size -> 0x0010
	 */
	struct FOakProfileLastInventoryFilterInfo
	{
	public:
		class FName                                                SlotTypeId;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastFilterIndex;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AJTE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakProfileMenuTutorialInfo
	 * Size -> 0x0018
	 */
	struct FOakProfileMenuTutorialInfo
	{
	public:
		TArray<class FName>                                        SeenTutorials;                                           // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bTutorialsDisabled;                                      // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTutorialsAllowedInNonGameModes;                         // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSeenFastTravelPrompt;                                // 0x0012(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PO5N[0x5];                                   // 0x0013(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakFriendEncounterData
	 * Size -> 0x0010
	 */
	struct FOakFriendEncounterData
	{
	public:
		uint32_t                                                   NumEncounters;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GNUK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    TimeLastEncounter;                                       // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GameStatSaveGameData
	 * Size -> 0x0030
	 */
	struct FGameStatSaveGameData
	{
	public:
		int32_t                                                    StatValue;                                               // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QR9S[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              StatPath[0x28];                                          // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.GameStatSaveGameData.StatPath
	};

	/**
	 * ScriptStruct OakGame.OakMailItem
	 * Size -> 0x00B8
	 */
	struct FOakMailItem
	{
	public:
		EMailItemType                                              MailItemType;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AOP2[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                SenderDisplayName;                                       // 0x0008(0x0018) NativeAccessSpecifierPublic
		class FText                                                Subject;                                                 // 0x0020(0x0018) NativeAccessSpecifierPublic
		class FText                                                Body;                                                    // 0x0038(0x0018) NativeAccessSpecifierPublic
		class FString                                              GearSerialNumber;                                        // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   MissionHash;                                             // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8Y6B[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MailGuid;                                                // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           DateSent;                                                // 0x0078(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ExpirationDate;                                          // 0x0080(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FUniqueNetIdRepl                                    FromPlayerId;                                            // 0x0088(0x0028) HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasBeenRead;                                            // 0x00B0(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CH5S[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCustomizationSaveGameData
	 * Size -> 0x0030
	 */
	struct FOakCustomizationSaveGameData
	{
	public:
		bool                                                       IsNew;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UFKF[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              CustomizationAssetPath[0x28];                            // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakCustomizationSaveGameData.CustomizationAssetPath
	};

	/**
	 * ScriptStruct OakGame.GuardianRankRewardSaveGameData
	 * Size -> 0x0030
	 */
	struct FGuardianRankRewardSaveGameData
	{
	public:
		int32_t                                                    NumTokens;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_23TW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              RewardDataPath[0x28];                                    // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.GuardianRankRewardSaveGameData.RewardDataPath
	};

	/**
	 * ScriptStruct OakGame.GuardianRankProfileData
	 * Size -> 0x0030
	 */
	struct FGuardianRankProfileData
	{
	public:
		int32_t                                                    AvailableTokens;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XD16[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGuardianRankRewardSaveGameData>             RankRewards;                                             // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    GuardianRank;                                            // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DGRF[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    GuardianExperience;                                      // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankRewardRandomSeed;                                    // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4JI4[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CrewQuartersDecorationItemSaveGameData
	 * Size -> 0x0030
	 */
	struct FCrewQuartersDecorationItemSaveGameData
	{
	public:
		bool                                                       IsNew;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9L8L[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              DecorationItemAssetPath[0x28];                           // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.CrewQuartersDecorationItemSaveGameData.DecorationItemAssetPath
	};

	/**
	 * ScriptStruct OakGame.CrewQuartersRoomItemSaveGameData
	 * Size -> 0x0018
	 */
	struct FCrewQuartersRoomItemSaveGameData
	{
	public:
		bool                                                       IsNew;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SJG2[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RoomItemAssetPath;                                       // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakVaultCardPreviousChallengeData
	 * Size -> 0x0008
	 */
	struct FOakVaultCardPreviousChallengeData
	{
	public:
		int32_t                                                    PreviousChallengeSeed;                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   PreviousChallengeID;                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakChallengeStatSaveGameData
	 * Size -> 0x0030
	 */
	struct FOakChallengeStatSaveGameData
	{
	public:
		int32_t                                                    CurrentStatValue;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PSP8[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ChallengeStatPath[0x28];                                 // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakChallengeStatSaveGameData.ChallengeStatPath
	};

	/**
	 * ScriptStruct OakGame.OakChallengeSaveGameData
	 * Size -> 0x0060
	 */
	struct FOakChallengeSaveGameData
	{
	public:
		int32_t                                                    CompletedCount;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActive;                                               // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCurrentlyCompleted;                                     // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XMP[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CompletedProgressLevel;                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProgressCounter;                                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOakChallengeStatSaveGameData>               StatInstanceState;                                       // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<bool>                                               RewardTiersClaimed;                                      // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              ChallengeClassPath[0x28];                                // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.OakChallengeSaveGameData.ChallengeClassPath
		class UChallenge*                                          DefaultChallengeObj;                                     // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.RecentlyResistedAttackData
	 * Size -> 0x0010
	 */
	struct FRecentlyResistedAttackData
	{
	public:
		class AActor*                                              DamagedActor;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y5R6[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RecentIncomingDamageData
	 * Size -> 0x0048
	 */
	struct FRecentIncomingDamageData
	{
	public:
		class AActor*                                              DamageInstigator;                                        // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YN8D[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageComponent*                                    DamageInstigatorDamageComponent;                         // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 DamageInstigatorLocation;                                // 0x0020(0x000C) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BC69[0xC];                                   // 0x002C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialDuration;                                         // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageSeverity;                                          // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeRemaining;                                           // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasJolt;                                                // 0x0044(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERecentDamageFlags                                         Flags;                                                   // 0x0045(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InstanceId;                                              // 0x0046(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49SP[0x1];                                   // 0x0047(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.TriggeredDamagePresentation
	 * Size -> 0x0028
	 */
	struct FTriggeredDamagePresentation
	{
	public:
		unsigned char                                              UnknownData_UFS9[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LevelPersistence_Actor_SaveGameData
	 * Size -> 0x0010
	 */
	struct FLevelPersistence_Actor_SaveGameData
	{
	public:
		class FName                                                ActorName;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TimerRemaining;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BK0O[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.LevelPersistence_Level_SaveGameData
	 * Size -> 0x0018
	 */
	struct FLevelPersistence_Level_SaveGameData
	{
	public:
		class FName                                                LevelName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FLevelPersistence_Actor_SaveGameData>        SavedActors;                                             // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerClassSaveGameData
	 * Size -> 0x0030
	 */
	struct FPlayerClassSaveGameData
	{
	public:
		unsigned char                                              PlayerClassPath[0x28];                                   // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.PlayerClassSaveGameData.PlayerClassPath
		uint32_t                                                   DlcPackageId;                                            // 0x0028(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UXHH[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RegionSaveGameData
	 * Size -> 0x0038
	 */
	struct FRegionSaveGameData
	{
	public:
		int32_t                                                    GameStage;                                               // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayThroughIdx;                                          // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RegionPath[0x28];                                        // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.RegionSaveGameData.RegionPath
		uint32_t                                                   DlcPackageId;                                            // 0x0030(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_M7L6[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakInventoryItemSaveGameData
	 * Size -> 0x00B0
	 */
	struct FOakInventoryItemSaveGameData
	{
	public:
		struct FInventorySaveGameData                              Item;                                                    // 0x0000(0x0080) NativeAccessSpecifierPublic
		int32_t                                                    PickupOrderIndex;                                        // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Flags;                                                   // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              WeaponSkinPath[0x28];                                    // 0x0088(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakInventoryItemSaveGameData.WeaponSkinPath
	};

	/**
	 * ScriptStruct OakGame.EquippedInventorySaveGameData
	 * Size -> 0x0058
	 */
	struct FEquippedInventorySaveGameData
	{
	public:
		int32_t                                                    InventoryListIndex;                                      // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Enabled;                                                 // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5D76[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SlotDataPath[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.EquippedInventorySaveGameData.SlotDataPath
		unsigned char                                              TrinketDataPath[0x28];                                   // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.EquippedInventorySaveGameData.TrinketDataPath
	};

	/**
	 * ScriptStruct OakGame.MissionStatusPlayerSaveGameData
	 * Size -> 0x0078
	 */
	struct FMissionStatusPlayerSaveGameData
	{
	public:
		EMissionStatus                                             Status;                                                  // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasBeenViewedInLog;                                     // 0x0001(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKickoffPlayed;                                          // 0x0002(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WJ9N[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<uint32_t>                                           ObjectivesProgress;                                      // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              LeagueInstance;                                          // 0x0018(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G55W[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              MissionClassPath[0x28];                                  // 0x0020(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.MissionStatusPlayerSaveGameData.MissionClassPath
		unsigned char                                              ActiveObjectiveSetPath[0x28];                            // 0x0048(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.MissionStatusPlayerSaveGameData.ActiveObjectiveSetPath
		uint32_t                                                   DlcPackageId;                                            // 0x0070(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OSB2[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MissionPlaythroughSaveGameData
	 * Size -> 0x0038
	 */
	struct FMissionPlaythroughSaveGameData
	{
	public:
		TArray<struct FMissionStatusPlayerSaveGameData>            MissionList;                                             // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              TrackedMissionClassPath[0x28];                           // 0x0010(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.MissionPlaythroughSaveGameData.TrackedMissionClassPath
	};

	/**
	 * ScriptStruct OakGame.PlaythroughActiveFastTravelSaveData
	 * Size -> 0x0010
	 */
	struct FPlaythroughActiveFastTravelSaveData
	{
	public:
		TArray<struct FActiveFastTravelSaveData>                   ActiveTravelStations;                                    // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DiscoverySaveData
	 * Size -> 0x0010
	 */
	struct FDiscoverySaveData
	{
	public:
		TArray<struct FDiscoveredLevelInfo>                        DiscoveredLevelInfo;                                     // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleUnlockedSaveGameData
	 * Size -> 0x0018
	 */
	struct FVehicleUnlockedSaveGameData
	{
	public:
		class FString                                              AssetPath;                                               // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bJustUnlocked;                                           // 0x0010(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XRYS[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCARMenuVehicleConfigSaveData
	 * Size -> 0x00B0
	 */
	struct FOakCARMenuVehicleConfigSaveData
	{
	public:
		class FString                                              LoadoutSaveName;                                         // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BodyAssetPath;                                           // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WheelAssetPath;                                          // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ArmorAssetPath;                                          // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CoreModAssetPath;                                        // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GunnerWeaponAssetPath;                                   // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DriverWeaponAssetPath;                                   // 0x0060(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OrnamentAssetPath;                                       // 0x0070(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MaterialDecalAssetPath;                                  // 0x0080(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MaterialAssetPath;                                       // 0x0090(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorIndex1;                                             // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorIndex2;                                             // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorIndex3;                                             // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NWXQ[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CustomPlayerColorSaveGameData
	 * Size -> 0x0028
	 */
	struct FCustomPlayerColorSaveGameData
	{
	public:
		class FName                                                ColorParameter;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AppliedColor;                                            // 0x0008(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SplitColor;                                              // 0x0014(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDefaultColor;                                        // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDefaultSplitColor;                                   // 0x0021(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_07EC[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CrewQuartersDecorationSaveData
	 * Size -> 0x0018
	 */
	struct FCrewQuartersDecorationSaveData
	{
	public:
		int32_t                                                    DecorationIndex;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LG2E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DecorationDataPath;                                      // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.CrewQuartersSaveData
	 * Size -> 0x0028
	 */
	struct FCrewQuartersSaveData
	{
	public:
		int32_t                                                    PreferredRoomAssignment;                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WOA0[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCrewQuartersDecorationSaveData>             Decorations;                                             // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              RoomDataPath;                                            // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.CrewQuartersGunRackItemSaveData
	 * Size -> 0x0088
	 */
	struct FCrewQuartersGunRackItemSaveData
	{
	public:
		TArray<unsigned char>                                      EncryptedSerialNumber;                                   // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		struct FInventoryBalanceStateInitializationData            DevelopmentSaveData;                                     // 0x0010(0x0068) Edit, EditConst, NativeAccessSpecifierPublic
		class FString                                              SlotAssetPath;                                           // 0x0078(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.CrewQuartersGunRackSaveData
	 * Size -> 0x0010
	 */
	struct FCrewQuartersGunRackSaveData
	{
	public:
		TArray<struct FCrewQuartersGunRackItemSaveData>            RackSaveData;                                            // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.EchoLogSaveGameData
	 * Size -> 0x0030
	 */
	struct FEchoLogSaveGameData
	{
	public:
		bool                                                       bHasBeenSeenInLog;                                       // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J1U1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              EchoLogPath[0x28];                                       // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.EchoLogSaveGameData.EchoLogPath
	};

	/**
	 * ScriptStruct OakGame.GameStateSaveData
	 * Size -> 0x000C
	 */
	struct FGameStateSaveData
	{
	public:
		struct FMapIDData                                          LastTraveledMapID;                                       // 0x0000(0x0002) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5VAI[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MayhemLevel;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MayhemRandomSeed;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ChallengeCategoryProgressSaveData
	 * Size -> 0x0010
	 */
	struct FChallengeCategoryProgressSaveData
	{
	public:
		TArray<unsigned char>                                      CategoryProgress;                                        // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPlayerCharacterAugmentSaveGameData
	 * Size -> 0x0050
	 */
	struct FOakPlayerCharacterAugmentSaveGameData
	{
	public:
		unsigned char                                              SlotAssetPath[0x28];                                     // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakPlayerCharacterAugmentSaveGameData.SlotAssetPath
		unsigned char                                              AugmentAssetPath[0x28];                                  // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.OakPlayerCharacterAugmentSaveGameData.AugmentAssetPath
	};

	/**
	 * ScriptStruct OakGame.OakPlayerCharacterSlotSaveGameData
	 * Size -> 0x0010
	 */
	struct FOakPlayerCharacterSlotSaveGameData
	{
	public:
		TArray<struct FOakPlayerCharacterAugmentSaveGameData>      AugmentSlotList;                                         // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.UITrackingSaveGameData
	 * Size -> 0x0028
	 */
	struct FUITrackingSaveGameData
	{
	public:
		bool                                                       bHasSeenSkillMenuUnlock;                                 // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSeenGuardianRankMenuUnlock;                          // 0x0001(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSeenEchoBoot_AmmoBar;                                // 0x0002(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSeenEchoBoot_ShieldBar;                              // 0x0003(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasSeenEchoBoot_Grenades;                               // 0x0004(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OHOL[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HighestTHVMBreadcrumbSeen;                               // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QF09[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              InventorySlotUnlocksSeen[0x10];                          // 0x0010(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.UITrackingSaveGameData.InventorySlotUnlocksSeen
		int32_t                                                    SavedSpinOffset;                                         // 0x0020(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NTD1[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GuardianRankRewardCharacterSaveGameData
	 * Size -> 0x0030
	 */
	struct FGuardianRankRewardCharacterSaveGameData
	{
	public:
		int32_t                                                    NumTokens;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1EZL[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              RewardDataPath[0x28];                                    // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.GuardianRankRewardCharacterSaveGameData.RewardDataPath
	};

	/**
	 * ScriptStruct OakGame.GuardianRankPerkCharacterSaveGameData
	 * Size -> 0x0030
	 */
	struct FGuardianRankPerkCharacterSaveGameData
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FM3D[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PerkDataPath[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.GuardianRankPerkCharacterSaveGameData.PerkDataPath
	};

	/**
	 * ScriptStruct OakGame.GuardianRankCharacterSaveGameData
	 * Size -> 0x0040
	 */
	struct FGuardianRankCharacterSaveGameData
	{
	public:
		int32_t                                                    AvailableTokens;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuardianRank;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    GuardianExperience;                                      // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGuardianRankSystemEnabled;                              // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C9FH[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGuardianRankRewardCharacterSaveGameData>    RankRewards;                                             // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FGuardianRankPerkCharacterSaveGameData>      RankPerks;                                               // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    RankRewardRandomSeed;                                    // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9N2R[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GuardianRankSaveGameData
	 * Size -> 0x000C
	 */
	struct FGuardianRankSaveGameData
	{
	public:
		int32_t                                                    GuardianRank;                                            // 0x0000(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartingExperience;                                      // 0x0004(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuardianExperience;                                      // 0x0008(0x0004) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SpawnPointEffect
	 * Size -> 0x0010
	 */
	struct FSpawnPointEffect
	{
	public:
		class UGbxCondition*                                       Condition;                                               // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SpecialEffect;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakResourceEffectData
	 * Size -> 0x0040
	 */
	struct FOakResourceEffectData
	{
	public:
		EOakStatusEffectResourceEffectType                         ResourceEffectType;                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BC2E[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGameResourcePoolData*                               ResourcePool;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAttributeData*                                   PostDepleteImmuneTime;                                   // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageTypeClass;                                         // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAttributeData*                                   DamageModifier;                                          // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAttributeData*                                   DamagedActorModifier;                                    // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultPercentBaseDamage;                                // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VBCL[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOakStatusEffectPresentationData*                    FXData;                                                  // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakElementalAuraEffectData
	 * Size -> 0x0060
	 */
	struct FOakElementalAuraEffectData
	{
	public:
		class UOakElementalEffectData*                             ElementalEffectData;                                     // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageData;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        DamageRadius;                                            // 0x0010(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class UGbxAttributeData*                                   DamagedActorModifier;                                    // 0x0048(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAttributeData*                                   DamageCauserModifier;                                    // 0x0050(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageRate;                                              // 0x0058(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LDOQ[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CryoFreezeAssetData
	 * Size -> 0x0010
	 */
	struct FCryoFreezeAssetData
	{
	public:
		class UDestructibleMesh*                                   Mesh;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AssociatedComponentName;                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ShieldEffectStateData
	 * Size -> 0x0020
	 */
	struct FShieldEffectStateData
	{
	public:
		class UOakStatusEffectManagerComponent*                    Owner;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EShieldEffectState                                         State;                                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QTB6[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize                                 RelativeHitLocation;                                     // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      NextHitTime;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_I5LI[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CSBoosterStatus
	 * Size -> 0x0018
	 */
	struct FCSBoosterStatus
	{
	public:
		class UOakStatusEffectManagerComponent*                    Owner;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int8_t                                                     BoosterStatusIndex;                                      // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Z239[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeDuration;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      TimeRemaining;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Q9OO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StreamerBoosterStatus
	 * Size -> 0x0018
	 */
	struct FStreamerBoosterStatus
	{
	public:
		class UOakStatusEffectManagerComponent*                    Owner;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int8_t                                                     PrimaryBoosterStatusIndex;                               // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		int8_t                                                     SecondaryBoosterStatusIndex;                             // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_181Q[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeDuration;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      TimeRemaining;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EY6L[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActiveOakResourceEffect
	 * Size -> 0x00F0
	 */
	struct FActiveOakResourceEffect
	{
	public:
		struct FOakResourceEffectData                              ResourceEffectData;                                      // 0x0000(0x0040) NoDestructor, NativeAccessSpecifierPublic
		struct FGameResourcePoolReference                          ResourcePoolReference;                                   // 0x0040(0x0018) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FGbxGameSystemCore_FResourceLock                    ResourceLock;                                            // 0x0058(0x0098) RepSkip, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakElementalAuraEffectInstance
	 * Size -> 0x0068
	 */
	struct FOakElementalAuraEffectInstance
	{
	public:
		struct FOakElementalAuraEffectData                         Data;                                                    // 0x0000(0x0060) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4AJK[0x8];                                   // 0x0060(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakEffectPresentationItem
	 * Size -> 0x0034 (FullSize[0x0040] - InheritedSize[0x000C])
	 */
	struct FOakEffectPresentationItem : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_3PUD[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOakStatusEffectPresentationData*                    FXData;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      EffectValue;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7VBB[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWwisePlaybackInstance                              EffectAudioInstance;                                     // 0x0020(0x0018) RepSkip, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_2TGG[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakPresentationParticleSystemWrapper
	 * Size -> 0x0018
	 */
	struct FOakPresentationParticleSystemWrapper
	{
	public:
		class UParticleSystemComponent*                            Component;                                               // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_COK4[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakPresentationParamTransitionInstance
	 * Size -> 0x0028
	 */
	struct FOakPresentationParamTransitionInstance
	{
	public:
		class UOakStatusEffectPresentationData*                    FXData;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystemComponent*                            ScreenComponent;                                         // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_LU54[0x18];                                  // 0x0010(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakFreezePresentation
	 * Size -> 0x0040
	 */
	struct FOakFreezePresentation
	{
	public:
		class UOakFreezeData*                                      Data;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UDestructibleComponent*>                      DestructibleComponents;                                  // 0x0008(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class UStaticMeshComponent*>                        StaticMeshComponents;                                    // 0x0018(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UDecalComponent*                                     GroundDecalComponent;                                    // 0x0028(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2U51[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AppliedMeshComponentTracker
	 * Size -> 0x0030
	 */
	struct FAppliedMeshComponentTracker
	{
	public:
		unsigned char                                              UnknownData_XYKW[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOakStatusEffectManagerComponent*                    ManagerComponent;                                        // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class UMeshComponent*>                              TrackedMeshes;                                           // 0x0010(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<class AActor*>                                      ChildTargetActors;                                       // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakEffectPresentationManager
	 * Size -> 0x0108 (FullSize[0x01B8] - InheritedSize[0x00B0])
	 */
	struct FOakEffectPresentationManager : public FFastArraySerializer
	{
	public:
		class UOakStatusEffectManagerComponent*                    Owner;                                                   // 0x00B0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FOakEffectPresentationItem>                  Items;                                                   // 0x00B8(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
		TArray<struct FOakPresentationParticleSystemWrapper>       ParticleSystemWrappers;                                  // 0x00C8(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		TArray<struct FOakPresentationParamTransitionInstance>     PresentationTransitionInstances;                         // 0x00D8(0x0010) ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CRU9[0x30];                                  // 0x00E8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakFreezePresentation                              FreezePresentation;                                      // 0x0118(0x0040) ContainsInstancedReference, NativeAccessSpecifierPrivate
		struct FAppliedMeshComponentTracker                        MeshComponentTracker;                                    // 0x0158(0x0030) ContainsInstancedReference, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_9DAA[0x30];                                  // 0x0188(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakStatusEffectPresentation_Particle
	 * Size -> 0x0030
	 */
	struct FOakStatusEffectPresentation_Particle
	{
	public:
		bool                                                       bUsesThirdPersonParticles;                               // 0x0000(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UPD8[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ParticlePresentationName;                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ThirdPersonParameterName;                                // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ThirdPersonParticleSystem;                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        SupportedEmitters;                                       // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakStatusEffectPresentation_ScreenParticle
	 * Size -> 0x0020
	 */
	struct FOakStatusEffectPresentation_ScreenParticle
	{
	public:
		bool                                                       bUsesScreenParticle;                                     // 0x0000(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VGEH[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TransitionDuration;                                      // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParamName;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     FirstPersonScreenEffect;                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScreenParticleDepth;                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EI15[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakStatusEffectPresentation_Material
	 * Size -> 0x0028
	 */
	struct FOakStatusEffectPresentation_Material
	{
	public:
		bool                                                       bUsesMaterialParameter;                                  // 0x0000(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VDS1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                MaterialParameterName;                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TransitionDuration;                                      // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PUV3[0x14];                                  // 0x0014(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakStatusEffectPresentation_Audio
	 * Size -> 0x0018
	 */
	struct FOakStatusEffectPresentation_Audio
	{
	public:
		bool                                                       bUsesAudioEvents;                                        // 0x0000(0x0001) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KOGS[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         StartEvent;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         StopEvent;                                               // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DonorInfo
	 * Size -> 0x0018
	 */
	struct FDonorInfo
	{
	public:
		class FString                                              DonorName;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalDonation;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T2V7[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PollActionInfo
	 * Size -> 0x0060
	 */
	struct FPollActionInfo
	{
	public:
		class UStreamingPoolActionInfo*                            PollAction;                                              // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PollActionClass[0x28];                                   // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.PollActionInfo.PollActionClass
		class FText                                                SelectionText;                                           // 0x0030(0x0018) Edit, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxUsagePerEvent;                                        // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ActionID;                                                // 0x0050(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbTimeUsedInEvent;                                       // 0x0054(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastSelectedValue;                                       // 0x0058(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VoteCount;                                               // 0x005C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakThumbnailManagerConfig
	 * Size -> 0x0018
	 */
	struct FOakThumbnailManagerConfig
	{
	public:
		float                                                      ThumbnailLoadFrequency;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxThumbnails;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FIntPoint                                           ThumbnailSize;                                           // 0x0008(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  ThumbnailMaterial;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LootableEventResultItem
	 * Size -> 0x0060
	 */
	struct FLootableEventResultItem
	{
	public:
		int32_t                                                    OrderIndex;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayNameIsInventoryDataName;                         // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ONZM[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UInventoryNamePartData*>                      DisplayNameParts;                                        // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              SerialNumber;                                            // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MonetaryValue;                                           // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InventoryScoreValue;                                     // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasAFoilPart;                                           // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQH0[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCachedUIStatCollectionData                         Stats;                                                   // 0x0038(0x0010) NativeAccessSpecifierPublic
		class FString                                              Base64EncodedThumbnail;                                  // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryBalanceStateComponent*                     BalanceStateComp;                                        // 0x0058(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MinimalInventoryInfo
	 * Size -> 0x0068
	 */
	struct FMinimalInventoryInfo
	{
	public:
		int32_t                                                    PickupOrderIdx;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O8WN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              StoredActor;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SerialNumber;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ThumbnailName;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              InventoryCategory;                                       // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsTrash;                                                // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFavorite;                                             // 0x0039(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMissionItem;                                          // 0x003A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_22B5[0x1];                                   // 0x003B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   TrinketPartHash;                                         // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   SkinPartHash;                                            // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   MayhemPartHash;                                          // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   MayhemPartUIStatHash;                                    // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BABN[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ItemJsonObjString;                                       // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBase64ThumbnailGenerated;                               // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QMYU[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DonationTier
	 * Size -> 0x0040
	 */
	struct FDonationTier
	{
	public:
		float                                                      PercentOfMinProductCost;                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1D27[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TierTitle;                                               // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                TierDescription;                                         // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		float                                                      TierDuration;                                            // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AWMS[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.BitProduct
	 * Size -> 0x0040
	 */
	struct FBitProduct
	{
	public:
		class FText                                                ProductName;                                             // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FString                                              ProductSKU;                                              // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ProductDevSKU;                                           // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BitsCost;                                                // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NHN6[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.Donator
	 * Size -> 0x0020
	 */
	struct FDonator
	{
	public:
		bool                                                       bIsFirstDonator;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YP8B[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DonatorName;                                             // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfDonations;                                       // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BitsDonatedTotal;                                        // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MinimalEquippedInventoryInfo
	 * Size -> 0x000C
	 */
	struct FMinimalEquippedInventoryInfo
	{
	public:
		uint32_t                                                   InventorySlotHash;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PickupOrderIdx;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A5O6[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MinimalAbilitSlotInfo
	 * Size -> 0x0008
	 */
	struct FMinimalAbilitSlotInfo
	{
	public:
		uint32_t                                                   AbilitySlotHash;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   AbilityHash;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.MinimalAugmentSlotInfo
	 * Size -> 0x000C
	 */
	struct FMinimalAugmentSlotInfo
	{
	public:
		uint32_t                                                   ActionAbilityHash;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   AugmentSlotHash;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   AugmentHash;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SkillTreeItemsStatValues
	 * Size -> 0x00A0
	 */
	struct FSkillTreeItemsStatValues
	{
	public:
		unsigned char                                              UnknownData_BXKT[0xA0];                                  // 0x0000(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MinimalCharacterInfo
	 * Size -> 0x0158
	 */
	struct FMinimalCharacterInfo
	{
	public:
		uint32_t                                                   TimePlayedSeconds;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExperiencePoints;                                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerLevel;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BackpackSize;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GoldenKeys;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U23S[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMinimalInventoryInfo>                       Inventory;                                               // 0x0018(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FMinimalEquippedInventoryInfo>               EquippedInventory;                                       // 0x0028(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TMap<uint32_t, int32_t>                                    InventoryCategoryList;                                   // 0x0038(0x0050) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    AbilityPoints;                                           // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F485[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<uint32_t, int32_t>                                    TreeItems;                                               // 0x0090(0x0050) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FMinimalAbilitSlotInfo>                      AbilitySlots;                                            // 0x00E0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FMinimalAugmentSlotInfo>                     AugmentSlots;                                            // 0x00F0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		uint32_t                                                   PetAugmentHash;                                          // 0x0100(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2K5R[0x4];                                   // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<uint32_t, struct FSkillTreeItemsStatValues>           SkillTreeItemsStatValues;                                // 0x0108(0x0050) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakInteractiveSessionStats
	 * Size -> 0x0020
	 */
	struct FOakInteractiveSessionStats
	{
	public:
		float                                                      SessionLifetimeInSeconds;                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08ZB[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    DamageCaused;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbEnemiesKilled;                                         // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbTimeInjured;                                           // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbTimeDead;                                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbLegendaries;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PickupEvaluationResult
	 * Size -> 0x0010
	 */
	struct FPickupEvaluationResult
	{
	public:
		class AOakInventoryItemPickup*                             Pickup;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NZEP[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.TouchPickupEvaluationResult
	 * Size -> 0x0010
	 */
	struct FTouchPickupEvaluationResult
	{
	public:
		TArray<class AOakInventoryItemPickup*>                     Pickups;                                                 // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VaultCardRewardDataBase
	 * Size -> 0x0048
	 */
	struct FVaultCardRewardDataBase
	{
	public:
		class FText                                                DisplayName;                                             // 0x0000(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0018(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FString                                              PerkFrameName;                                           // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VaultCardRewardKeyCost;                                  // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O9RA[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VaultCardGearRewardData
	 * Size -> 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
	 */
	struct FVaultCardGearRewardData : public FVaultCardRewardDataBase
	{
	public:
		class UInventoryBalanceData*                               GearReward;                                              // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UItemPoolData*                                       GearRewardItemPool;                                      // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VaultCardRewardData
	 * Size -> 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
	 */
	struct FVaultCardRewardData : public FVaultCardRewardDataBase
	{
	public:
		TArray<class UOakCustomizationData*>                       VaultCardRewardCustomizations;                           // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UWeaponSkinPartData*                                 VaultCardRewardWeaponSkin;                               // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponTrinketPartData*                              VaultCardRewardWeaponTrinket;                            // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCrewQuartersDecorationItemData*                     VaultCardRewardQuartersDeco;                             // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VaultCardColumnData
	 * Size -> 0x0010
	 */
	struct FVaultCardColumnData
	{
	public:
		TArray<struct FVaultCardRewardData>                        VaultCardRewardRows;                                     // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleInputParams
	 * Size -> 0x0038
	 */
	struct FVehicleInputParams
	{
	public:
		class UClass*                                              InputComponentClass;                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCameraOverride;                                      // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PXBW[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPawnAttachCameraModeOptions                        DriverSeatCameraModeOptionsOverride;                     // 0x0010(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleOccupantLoopingFeedback
	 * Size -> 0x0020
	 */
	struct FVehicleOccupantLoopingFeedback
	{
	public:
		class UFeedbackData*                                       FeedbackData;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H3D3[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class APlayerController*>                           AffectedControllers;                                     // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.OakVehicleAdditiveData
	 * Size -> 0x0028
	 */
	struct FOakVehicleAdditiveData
	{
	public:
		float                                                      VelocityMinTresholdForward;                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityMaxTresholdForward;                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityMinTresholdBackward;                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityMaxTresholdBackward;                             // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityMinTresholdLateral;                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VelocityMaxTresholdLateral;                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrontBackMinInterpSpeed;                                 // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrontBackMaxInterpSpeed;                                 // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftRightMinInterpSpeed;                                 // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftRightMaxInterpSpeed;                                 // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ConditionalAudioSwitch
	 * Size -> 0x0010
	 */
	struct FConditionalAudioSwitch
	{
	public:
		class UGbxCondition*                                       SwitchCondition;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseSwitch*                                        SwitchToSet;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleEffectData
	 * Size -> 0x0068
	 */
	struct FVehicleEffectData
	{
	public:
		class FName                                                Event;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem*                                     ParticleEffect;                                          // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Socket;                                                  // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPlayerOnly : 1;                                         // 0x0018(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAutoActivate : 1;                                       // 0x0018(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPlayAudioAtLocation : 1;                                // 0x0018(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IHBQ[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             RelativeLocation;                                        // 0x001C(0x000C) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RelativeRotation;                                        // 0x0028(0x000C) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      RelativeScale;                                           // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         StartAudioEvent;                                         // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         StopAudioEvent;                                          // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FConditionalAudioSwitch>                     ConditionalAudioSwitches;                                // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                AudioComponentName;                                      // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AudioEmitterRadius;                                      // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XZO6[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SkinParameterData
	 * Size -> 0x0030
	 */
	struct FSkinParameterData
	{
	public:
		TArray<struct FMaterialParameterData>                      Color1;                                                  // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FMaterialParameterData>                      Color2;                                                  // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FMaterialParameterData>                      Color3;                                                  // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DummyProjectileInfo
	 * Size -> 0x0030
	 */
	struct FDummyProjectileInfo
	{
	public:
		class UClass*                                              ProjectileClass;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Socket;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              TransitInAction;                                         // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              TransitOutAction;                                        // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         TransitInSoundEvent;                                     // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              ProjectileActor;                                         // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeaponAudioBodyLoop
	 * Size -> 0x0028
	 */
	struct FWeaponAudioBodyLoop
	{
	public:
		class FName                                                PlaybackSocket;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         StartLoopEvent;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         StopLoopEvent;                                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponAudioBodyLoopType                                   LoopType;                                                // 0x0018(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6TW6[0x3];                                   // 0x0019(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      ComponentSize;                                           // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ComponentTag;                                            // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeaponShellCasingAudioParameters
	 * Size -> 0x0010
	 */
	struct FWeaponShellCasingAudioParameters
	{
	public:
		class UWwiseEvent*                                         ShellCasingWwiseEvent;                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EjectDistance;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImpactDelay;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakWeaponTriggerFeedbackDefinitionData
	 * Size -> 0x0048
	 */
	struct FOakWeaponTriggerFeedbackDefinitionData
	{
	public:
		class UWeaponTriggerFeedbackAsset*                         Feedback;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponClassPath;                                         // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOakWeaponPartType                                         PartType;                                                // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PartTypeValue;                                           // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F0R8[0x2E];                                  // 0x001A(0x002E) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakVehicleWeaponTriggerFeedbackDefinitionData
	 * Size -> 0x0040
	 */
	struct FOakVehicleWeaponTriggerFeedbackDefinitionData
	{
	public:
		class UWeaponTriggerFeedbackAsset*                         Feedback;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponAssetPath;                                         // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IZHI[0x28];                                  // 0x0018(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakWeaponNameThresholdPairData
	 * Size -> 0x0010
	 */
	struct FOakWeaponNameThresholdPairData
	{
	public:
		float                                                      Threshold;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_MBML[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInventoryNamePartData*                              NamePart;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.OakWeaponAttributeNamingData
	 * Size -> 0x0018
	 */
	struct FOakWeaponAttributeNamingData
	{
	public:
		class UGbxAttributeData*                                   Attribute;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FOakWeaponNameThresholdPairData>             NamingTiers;                                             // 0x0008(0x0010) ZeroConstructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.OakWeaponNamingAttributeThresholdData
	 * Size -> 0x0010
	 */
	struct FOakWeaponNamingAttributeThresholdData
	{
	public:
		class FName                                                AttributeName;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FirstThreshold;                                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SecondThreshold;                                         // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakWeaponNamingAttributePair
	 * Size -> 0x0018
	 */
	struct FOakWeaponNamingAttributePair
	{
	public:
		class FName                                                FirstAttributeName;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SecondAttributeName;                                     // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryNamePartData*                              NamePart;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.RepWindDirection
	 * Size -> 0x0008
	 */
	struct FRepWindDirection
	{
	public:
		float                                                      TargetYaw;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.RepWindGust
	 * Size -> 0x0004
	 */
	struct FRepWindGust
	{
	public:
		int32_t                                                    Seed;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WindVectorField
	 * Size -> 0x0040
	 */
	struct FWindVectorField
	{
	public:
		struct FIntVector                                          VectorFieldSize;                                         // 0x0000(0x000C) Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBox                                                Bounds;                                                  // 0x000C(0x001C) Edit, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZBN[0x18];                                  // 0x0028(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ShieldBarrierTrackedBuffTarget
	 * Size -> 0x0048
	 */
	struct FShieldBarrierTrackedBuffTarget
	{
	public:
		class AActor*                                              Target;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FStatusEffectInstanceReference                      Mod1Reference;                                           // 0x0008(0x0018) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FStatusEffectInstanceReference                      Mod5Reference;                                           // 0x0020(0x0018) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K8HV[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OperativeBarrierStatusEffectInfo
	 * Size -> 0x0018
	 */
	struct FOperativeBarrierStatusEffectInfo
	{
	public:
		class UStatusEffectData*                                   OwnerStatusEffect;                                       // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStatusEffectData*                                   DefaultStatusEffect;                                     // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WN3U[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OperativeBarrierState
	 * Size -> 0x0020
	 */
	struct FOperativeBarrierState
	{
	public:
		EOperativeBarrierState                                     BarrierState;                                            // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2JNN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             RedeployLocation;                                        // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RedeployRotation;                                        // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIsTransitioningStates;                                  // 0x001C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZFVZ[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OperativeStandInActionAbility
	 * Size -> 0x0080
	 */
	struct FOperativeStandInActionAbility
	{
	public:
		unsigned char                                              Ability[0x28];                                           // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.OperativeStandInActionAbility.Ability
		class UClass*                                              CharacterFlourishAnimation;                              // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AuxiliaryActor;                                          // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AuxiliaryTranslationOffset;                              // 0x0038(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            AuxiliaryRotationOffset;                                 // 0x0044(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      AuxiliaryScale;                                          // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6WVH[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AuxiliaryFlourishAnimation;                              // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AuxiliaryIdleAnimation;                                  // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachAuxiliaryActorToCharacter;                        // 0x0068(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MV6G[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AuxiliaryAttachmentSocket;                               // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyPlayerAnims;                                        // 0x0078(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyPlayerWeapon;                                       // 0x0079(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IJ6H[0x2];                                   // 0x007A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FadeInFlourishVisibleDelay;                              // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CurrentOperativeStandInAbilitySlotInfo
	 * Size -> 0x0020
	 */
	struct FCurrentOperativeStandInAbilitySlotInfo
	{
	public:
		class UClass*                                              ActionAbility;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AStandInAuxiliaryActor*                              AuxiliaryActor;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IWK1[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GamepadStickTypeToSchemes
	 * Size -> 0x0010
	 */
	struct FGamepadStickTypeToSchemes
	{
	public:
		TArray<struct FRebindContextAndDescription>                SchemesWithStickType;                                    // 0x0000(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PerPlayerCullable
	 * Size -> 0x0008
	 */
	struct FPerPlayerCullable
	{
	public:
		class AActor*                                              CullableActor;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PhotoModeState
	 * Size -> 0x0670
	 */
	struct FPhotoModeState
	{
	public:
		bool                                                       bPhotoModeUIVisible;                                     // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHUDVisible;                                             // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGamePausedState;                                        // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoFocusState;                                         // 0x0003(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XGEV[0xC];                                   // 0x0004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                PostProcessSettings;                                     // 0x0010(0x0600) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		float                                                      Contrast;                                                // 0x0610(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DOFIntensity;                                            // 0x0614(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FOV;                                                     // 0x0618(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFilmToneMapperState;                                    // 0x061C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q5CP[0x3];                                   // 0x061D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FilterIndex;                                             // 0x0620(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FilterIntensity;                                         // 0x0624(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FocalDistance;                                           // 0x0628(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FocalRegion;                                             // 0x062C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FringeIntensity;                                         // 0x0630(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Gain;                                                    // 0x0634(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Gamma;                                                   // 0x0638(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GrainIntensity;                                          // 0x063C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHidePlayerState;                                        // 0x0640(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SM0X[0x3];                                   // 0x0641(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Quality;                                                 // 0x0644(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Saturation;                                              // 0x0648(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Shoulder;                                                // 0x064C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Slope;                                                   // 0x0650(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuperSharpModeState;                                    // 0x0654(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLMU[0x3];                                   // 0x0655(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Toe;                                                     // 0x0658(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ViewRoll;                                                // 0x065C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VignetteIntensity;                                       // 0x0660(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VignetteFeathering;                                      // 0x0664(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeOfDay;                                               // 0x0668(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPausable;                                               // 0x066C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideDamageNumbersState;                                 // 0x066D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideFocusState;                                     // 0x066E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMatchGameState;                                         // 0x066F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PhotoModeOption
	 * Size -> 0x0050
	 */
	struct FPhotoModeOption
	{
	public:
		class FText                                                OptionName;                                              // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		EPhotoModeOptionEffect                                     OptionEffect;                                            // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsSlider;                                               // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0YBC[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SliderDisplayMin;                                        // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SliderDisplayMax;                                        // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SliderOutputMin;                                         // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SliderOutputMax;                                         // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSliderDisplayAsInteger;                                 // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VY30[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SliderStepping;                                          // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SliderRepeatsToAccelerate;                               // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SliderMaxIncreases;                                      // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SliderFastestSteps;                                      // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FText>                                        SpinnerOptions;                                          // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PhotoModeOptionSet
	 * Size -> 0x0020
	 */
	struct FPhotoModeOptionSet
	{
	public:
		class FString                                              OptionSetName;                                           // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPhotoModeOption>                            Options;                                                 // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapPOIMeshListEntry
	 * Size -> 0x0010
	 */
	struct FZoneMapPOIMeshListEntry
	{
	public:
		class UStaticMesh*                                         ZoneMapPOIMesh;                                          // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UZoneMapData*                                        ZoneMapForPOIMesh;                                       // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GuardianRankRewardEntry
	 * Size -> 0x0020
	 */
	struct FGuardianRankRewardEntry
	{
	public:
		class UGuardianRankRewardData*                             RankReward;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumTokens;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M0AZ[0x14];                                  // 0x000C(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GuardianRankEnabledIndexTracker
	 * Size -> 0x0020
	 */
	struct FGuardianRankEnabledIndexTracker
	{
	public:
		unsigned char                                              UnknownData_9YUJ[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GuardianRankRewardCategoryEntry
	 * Size -> 0x0010
	 */
	struct FGuardianRankRewardCategoryEntry
	{
	public:
		class UGuardianRankRewardCategoryData*                     RankRewardCategory;                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumCategoryTokens;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HORE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.MeleeReverseImpactEntry
	 * Size -> 0x0008
	 */
	struct FMeleeReverseImpactEntry
	{
	public:
		float                                                      TargetMass;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImpactForce;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ReplicatedMeleeActionData
	 * Size -> 0x0018
	 */
	struct FReplicatedMeleeActionData
	{
	public:
		int32_t                                                    Counter;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_38V3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              Action;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPlayerMeleeData*                                    MeleeData;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerBuyBackableInventory
	 * Size -> 0x0008
	 */
	struct FPlayerBuyBackableInventory
	{
	public:
		class AActor*                                              InventoryActor;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.LobbyPlayerStandInLoadOutInfo
	 * Size -> 0x00C8
	 */
	struct FLobbyPlayerStandInLoadOutInfo
	{
	public:
		unsigned char                                              UnknownData_OM8U[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOakCustomizationData*                               HeadCustomization;                                       // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakCustomizationData*                               BodyCustomization;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakCustomizationData*                               SkinCustomization;                                       // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakCustomizationData*                               EquippedEmote;                                           // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9ZUJ[0x88];                                  // 0x0028(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWeaponSkinPartData*                                 Weapon1Skin;                                             // 0x00B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7CLI[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.FrontendStandInAuxiliaryActorData
	 * Size -> 0x0058
	 */
	struct FFrontendStandInAuxiliaryActorData
	{
	public:
		class UClass*                                              ActorClass;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Translation;                                             // 0x0008(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayAnimations;                                         // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDigistructIn;                                           // 0x0025(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H1WM[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DigistructDelay;                                         // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachAuxiliaryActorToCharacter;                        // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8DHF[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AuxiliaryAttachmentSocket;                               // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyPlayerWeapon;                                       // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2WTE[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             PlayerTranslation;                                       // 0x003C(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            PlayerRotation;                                          // 0x0048(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7508[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StandInAuxiliaryState
	 * Size -> 0x0060
	 */
	struct FStandInAuxiliaryState
	{
	public:
		class AStandInAuxiliaryActor*                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFrontendStandInAuxiliaryActorData                  TemplateData;                                            // 0x0008(0x0058) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ExtraStandInAnimationMeshData
	 * Size -> 0x0018
	 */
	struct FExtraStandInAnimationMeshData
	{
	public:
		class FName                                                ComponentName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AnimBlueprint;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAnimSet*                                         AnimSet;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.FrontendStandInSpecialAnimationData
	 * Size -> 0x0018
	 */
	struct FFrontendStandInSpecialAnimationData
	{
	public:
		class UClass*                                              Animation;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AuxiliaryAnimation;                                      // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialDelay;                                            // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2MFV[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlayerStandIn_ActionAbility
	 * Size -> 0x0088
	 */
	struct FPlayerStandIn_ActionAbility
	{
	public:
		unsigned char                                              ActionAbilityClass[0x28];                                // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.PlayerStandIn_ActionAbility.ActionAbilityClass
		struct FFrontendStandInAuxiliaryActorData                  ActorData;                                               // 0x0028(0x0058) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideDefault;                                        // 0x0080(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BYSC[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlayerStandIn_Augment
	 * Size -> 0x0088
	 */
	struct FPlayerStandIn_Augment
	{
	public:
		unsigned char                                              Augment[0x28];                                           // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.PlayerStandIn_Augment.Augment
		struct FFrontendStandInAuxiliaryActorData                  ActorData;                                               // 0x0028(0x0058) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideDefault;                                        // 0x0080(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LDRZ[0x7];                                   // 0x0081(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlaythroughDefinedValueRow
	 * Size -> 0x0070 (FullSize[0x0078] - InheritedSize[0x0008])
	 */
	struct FPlaythroughDefinedValueRow : public FAttributeDefinedValueRow
	{
	public:
		struct FAttributeInitializationData                        PlaythroughOne;                                          // 0x0008(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        PlaythroughTwoAndBeyond;                                 // 0x0040(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.RegionBalanceDataBase
	 * Size -> 0x0010
	 */
	struct FRegionBalanceDataBase
	{
	public:
		int32_t                                                    MinGameStage;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxGameStage;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GameStageIncreaseAbovePlayer;                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpecifyBoostAbovePlayer;                                // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1BJY[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RegionMissionBalanceData
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FRegionMissionBalanceData : public FRegionBalanceDataBase
	{
	public:
		class UClass*                                              Mission;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.RegionBalanceData
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FRegionBalanceData : public FRegionBalanceDataBase
	{
	public:
		class URegionData*                                         REGION;                                                  // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRegionMissionBalanceData>                   MissionOverrides;                                        // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayThroughData
	 * Size -> 0x0058
	 */
	struct FPlayThroughData
	{
	public:
		int32_t                                                    PlayThrough;                                             // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnforceMinimumGameStageForPlaythrough;                  // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XQHY[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttributeInitializationData                        MinimumGameStageForPlaythrough;                          // 0x0008(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FRegionBalanceData>                          Regions;                                                 // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bGameStageTracksPlayerLevelAboveMinimum;                 // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_I40A[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RegionSaveData
	 * Size -> 0x0010
	 */
	struct FRegionSaveData
	{
	public:
		class URegionData*                                         REGION;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GameStage;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayThroughIdx;                                          // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SDUCaseSpawner
	 * Size -> 0x0088
	 */
	struct FSDUCaseSpawner
	{
	public:
		class FName                                                AttachmentSocketName;                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UOakSDUData*                                         SDUData;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         DisplayMesh;                                             // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NextSDULeft;                                             // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NextSDURight;                                            // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NextSDUUp;                                               // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NextSDUDown;                                             // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSoldOut;                                                // 0x0038(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AY57[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USocketComponent*                                    AttachmentSocket;                                        // 0x0040(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USocketComponent*                                    CameraSocket;                                            // 0x0048(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                DisplayMeshComponent;                                    // 0x0050(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextRenderComponent*                                TextRenderComponent;                                     // 0x0058(0x0008) ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       MouseCollisionComponent;                                 // 0x0060(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R56Z[0x20];                                  // 0x0068(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AugmentData
	 * Size -> 0x0030
	 */
	struct FAugmentData
	{
	public:
		class AShield*                                             Shield;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackCount;                                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeTriggered;                                         // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInstanceBool;                                           // 0x000D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XNAZ[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InstanceFloat;                                           // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InstanceInt;                                             // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             InstanceVector;                                          // 0x0018(0x000C) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_23LO[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              InstanceActor;                                           // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.TrackedShieldAttributeData
	 * Size -> 0x0028
	 */
	struct FTrackedShieldAttributeData
	{
	public:
		class UGbxAttributeData*                                   Data;                                                    // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGbxAttributeModifierHandle                         ModifierHandle;                                          // 0x0008(0x0010) Transient, NativeAccessSpecifierPublic
		class UClass*                                              ShieldAugmentClass;                                      // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_22BP[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ShieldDamageModifierData
	 * Size -> 0x0020
	 */
	struct FShieldDamageModifierData
	{
	public:
		class UShieldAugment_DamageModifier*                       Augment;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UConditionalDamageModifier*                          ModifierInstance;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AOakCharacter*>                               RegisteredCharacters;                                    // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ShieldAugmentDamageEventData
	 * Size -> 0x0048
	 */
	struct FShieldAugmentDamageEventData
	{
	public:
		unsigned char                                              bShieldMustNotBeDepleted : 1;                            // 0x0000(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInstanceBoolMustBeTrue : 1;                             // 0x0000(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bInstanceBoolMustBeTrueForBarrier : 1;                   // 0x0000(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bMustBeTriggerable : 1;                                  // 0x0000(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSetNotTriggerableAfterTriggering : 1;                   // 0x0000(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PS7M[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttributeInitializationData                        TriggerCooldown;                                         // 0x0008(0x0038) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		class UDamageFilter*                                       DamageEventFilter;                                       // 0x0040(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ShieldAugmentAbsorbRestoreData
	 * Size -> 0x0050
	 */
	struct FShieldAugmentAbsorbRestoreData
	{
	public:
		bool                                                       bOnlyTriggerOnBarrier;                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AS35[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      TriggeringDamageTypes;                                   // 0x0008(0x0010) Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        RestoreAmount;                                           // 0x0018(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AdaptiveTypeAssociations
	 * Size -> 0x0020
	 */
	struct FAdaptiveTypeAssociations
	{
	public:
		EOakElementalType                                          DamageType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2CUU[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxAttributeData*                                   ResistanceAttribute;                                     // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         TriggerAudioEvent;                                       // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         HitByTypeAudioEvent;                                     // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AttributeModifiers
	 * Size -> 0x0020
	 */
	struct FAttributeModifiers
	{
	public:
		class UGbxAttributeData*                                   AttributeToModify;                                       // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGbxAttributeModifierType                                  ModifierType;                                            // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PNGT[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAttributeInitializationData>                StackValues;                                             // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DamageTypeAttribute
	 * Size -> 0x0010
	 */
	struct FDamageTypeAttribute
	{
	public:
		class UGbxAttributeData*                                   AttributeToModify;                                       // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DamageType;                                              // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ShieldTriggeredElementalEffect
	 * Size -> 0x0080
	 */
	struct FShieldTriggeredElementalEffect
	{
	public:
		bool                                                       bShieldMustBeActiveToTrigger;                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MKHS[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttributeInitializationData                        DamagePerSecond;                                         // 0x0008(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        ResourceEffectValue;                                     // 0x0040(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		class UClass*                                              DamageType;                                              // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ShieldTriggeredProjectileReflectEffect
	 * Size -> 0x0048
	 */
	struct FShieldTriggeredProjectileReflectEffect
	{
	public:
		bool                                                       bShieldMustBeActiveToTrigger;                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FIU3[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              LightProjectile;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeInitializationData                        Damage;                                                  // 0x0010(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.RushStackInstance
	 * Size -> 0x0010
	 */
	struct FRushStackInstance
	{
	public:
		unsigned char                                              UnknownData_IV7B[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USirenRushStackData*                                 StackData;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.SirenGhostArmConfiguration
	 * Size -> 0x0010
	 */
	struct FSirenGhostArmConfiguration
	{
	public:
		ESirenGhostArmConfigurationType                            GhostArmConfiguration;                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XP29[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInstance*                                   MaterialInstance;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SirenArmAppearanceState
	 * Size -> 0x0058
	 */
	struct FSirenArmAppearanceState
	{
	public:
		struct FSirenGhostArmConfiguration                         PassiveGhostArmConfiguration;                            // 0x0000(0x0010) NoDestructor, NativeAccessSpecifierPrivate
		bool                                                       bTattooFlare;                                            // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		EPhaseTranceElementalType                                  ElementalType;                                           // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NXGM[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSirenGhostArmConfiguration                         ActiveGhostArmConfiguration;                             // 0x0018(0x0010) RepSkip, NoDestructor, NativeAccessSpecifierPrivate
		class USirenCharacterComponent*                            Owner;                                                   // 0x0028(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SCGW[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PassiveArmControllers[0x10];                             // 0x0038(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.SirenArmAppearanceState.PassiveArmControllers
		unsigned char                                              ActionArmControllers[0x10];                              // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.SirenArmAppearanceState.ActionArmControllers
	};

	/**
	 * ScriptStruct OakGame.SirenStandInFlourish
	 * Size -> 0x0028
	 */
	struct FSirenStandInFlourish
	{
	public:
		unsigned char                                              SlotDatas[0x10];                                         // 0x0000(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.SirenStandInFlourish.SlotDatas
		bool                                                       bHideCharacterDuringFlourish;                            // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartAuxiliaryActorHidden;                              // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CCE2[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              AuxiliaryActor;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Animation;                                               // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SpawnFactorKeyedAction
	 * Size -> 0x0038
	 */
	struct FSpawnFactorKeyedAction
	{
	public:
		bool                                                       bOverrideKeyedActionList;                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RX7W[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDataActionPair_Spawn>                       SpawnKeyedActionList;                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDataActionPair_SpawnMesh>                   SpawnMeshKeyedActionList;                                // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FDataActionPair_SmartObject>                 SmartObjectKeyedActionList;                              // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehiclePartListData
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	struct FVehiclePartListData : public FActorPartListData
	{	};

	/**
	 * ScriptStruct OakGame.SeatOccupant
	 * Size -> 0x0010
	 */
	struct FSeatOccupant
	{
	public:
		int32_t                                                    SeatSlot;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2OI0[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USpawnOptionData*                                    SpawnOptions;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeightedPassengersNum
	 * Size -> 0x0008
	 */
	struct FWeightedPassengersNum
	{
	public:
		int32_t                                                    PassengerCount;                                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SpawnFactoryDataArray
	 * Size -> 0x0018
	 */
	struct FSpawnFactoryDataArray
	{
	public:
		TArray<struct FSpawnFactoryData>                           SpawnFactoryDataArray;                                   // 0x0000(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9IXD[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SelectedInventorySpawningState
	 * Size -> 0x00E0
	 */
	struct FSelectedInventorySpawningState
	{
	public:
		struct FSelectedInventoryInfo                              SeletedInventoryInfo;                                    // 0x0000(0x0060) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5LNN[0x8];                                   // 0x0060(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInventoryBalanceStateInitializationData            InitData;                                                // 0x0068(0x0068) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VDDY[0x10];                                  // 0x00D0(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SpawnDroppedPickupLootRequestEntry
	 * Size -> 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
	 */
	struct FSpawnDroppedPickupLootRequestEntry : public FSpawnDroppedPickupLootRequest
	{
	public:
		unsigned char                                              UnknownData_02N0[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSelectedInventorySpawningState>             SpawningStates;                                          // 0x00C8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YLLB[0x38];                                  // 0x00D8(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SpawnInventoryLootRequest
	 * Size -> 0x0038
	 */
	struct FSpawnInventoryLootRequest
	{
	public:
		class AActor*                                              ContextActor;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSelectedInventoryInfo>                      SelectedInventoryInfos;                                  // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		ELootInstancingPolicy                                      InstancingPolicy;                                        // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NZ6Q[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOakPlayerController*                                PlayerToInstanceFor;                                     // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PNTP[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SpawnInventoryLootRequestEntry
	 * Size -> 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
	 */
	struct FSpawnInventoryLootRequestEntry : public FSpawnInventoryLootRequest
	{
	public:
		unsigned char                                              UnknownData_RXZ4[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SplineFollowerDistanceCheckpoint
	 * Size -> 0x0018
	 */
	struct FSplineFollowerDistanceCheckpoint
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Distance;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HPC6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.IronBearHardPointAugmentInfo
	 * Size -> 0x0040
	 */
	struct FIronBearHardPointAugmentInfo
	{
	public:
		unsigned char                                              HardPointAugment[0x28];                                  // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.IronBearHardPointAugmentInfo.HardPointAugment
		class USkeletalMesh*                                       Mesh;                                                    // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              LeftFlourishAnimation;                                   // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              RightFlourishAnimation;                                  // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.HardPointSlotSettings
	 * Size -> 0x0028
	 */
	struct FHardPointSlotSettings
	{
	public:
		class FName                                                AnimationSlotName;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CESlotName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              HardPointSelectedCE;                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              HardpointPreviewCE;                                      // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              HardPointEquippedCE;                                     // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GlobalsStandInSettings
	 * Size -> 0x0070
	 */
	struct FGlobalsStandInSettings
	{
	public:
		float                                                      BaseStandInDepth_EchoRelative;                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           BaseStandInPosition_EchoRelative;                        // 0x0004(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            BaseStandInRotation_EchoRelative;                        // 0x000C(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      BaseEchoProjectionFXDepth_UIObject;                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PPBD[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UPlayerClassIdentifier*, float>                 BasePlayerClassScale;                                    // 0x0020(0x0050) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.FrontendStandInSlotTransitionSettings
	 * Size -> 0x0010
	 */
	struct FFrontendStandInSlotTransitionSettings
	{
	public:
		TArray<int32_t>                                            SlotsToHideDuringInspection;                             // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.FrontendStandInSlotSettings
	 * Size -> 0x0050
	 */
	struct FFrontendStandInSlotSettings
	{
	public:
		TArray<int32_t>                                            SlotsToRemainHidden;                                     // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FFrontendStandInSlotTransitionSettings              Transitions[0x4];                                        // 0x0010(0x0040) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.StreamerBoosterInfo
	 * Size -> 0x0030
	 */
	struct FStreamerBoosterInfo
	{
	public:
		class FName                                                NameId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DisplayName;                                             // 0x0008(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UStatusEffectData*                                   StatusEffectData;                                        // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            Icon;                                                    // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeaponUseModeAspectSetData
	 * Size -> 0x0038
	 */
	struct FWeaponUseModeAspectSetData
	{
	public:
		class UWeaponUseModeAspectData*                            Aspect;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UWeaponUseModeSecondaryAspectData*>           SecondaryAspectList;                                     // 0x0008(0x0010) Edit, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic
		class UWeaponDamageTypeAspectData*                         DamageTypeAspect[0x2];                                   // 0x0018(0x0010) Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponUseModeNameAspectData*                        NameAspect;                                              // 0x0028(0x0008) Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponUseModeCrosshairAspectData*                   CrosshairAspect;                                         // 0x0030(0x0008) Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.TransporterCraneRecord
	 * Size -> 0x0010
	 */
	struct FTransporterCraneRecord
	{
	public:
		ETransporterCraneState                                     CraneState;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SXST[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MoveSpeed;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveStartPosition;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveStartTime;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeightedTransporterCrane
	 * Size -> 0x0010
	 */
	struct FWeightedTransporterCrane
	{
	public:
		class UClass*                                              Crane;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JVG2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.TrophyCaseReplicatedBase
	 * Size -> 0x0010
	 */
	struct FTrophyCaseReplicatedBase
	{
	public:
		class FName                                                BaseTag;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CompletedProgressLevel;                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MaxProgressLevel;                                        // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BHSJ[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.TrophyCaseReplicatedSet
	 * Size -> 0x0010
	 */
	struct FTrophyCaseReplicatedSet
	{
	public:
		TArray<struct FTrophyCaseReplicatedBase>                   BaseData;                                                // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ChallengeTrophy
	 * Size -> 0x0050
	 */
	struct FChallengeTrophy
	{
	public:
		class FText                                                TrophyName;                                              // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                TrophyDescription;                                       // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UStaticMesh*                                         TrophyMesh;                                              // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AssociatedChallenge;                                     // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AssociatedTrophyBaseTag;                                 // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UChallengeTrophyBaseComponent*                       AssociatedTrophyBase;                                    // 0x0048(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ChallengeTrophyGroup
	 * Size -> 0x0048
	 */
	struct FChallengeTrophyGroup
	{
	public:
		class FText                                                TrophyGroupName;                                         // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                TrophyGroupDescription;                                  // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UTrophyCaseBaseComponent*                            AssociatedGroupBase;                                     // 0x0030(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FChallengeTrophy>                            TrophyList;                                              // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ChallengeTrophySet
	 * Size -> 0x0040
	 */
	struct FChallengeTrophySet
	{
	public:
		class FText                                                TrophySetName;                                           // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                TrophySetDescription;                                    // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FChallengeTrophyGroup>                       TrophyGroupList;                                         // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlaythroughUnlockedData
	 * Size -> 0x0028
	 */
	struct FPlaythroughUnlockedData
	{
	public:
		TArray<class UTutorialMessageDataAsset*>                   PlaythroughUnlockedMessages;                             // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class UGFxModalTutorialDataAsset*>                  PlaythroughUnlockedMessages_Modal;                       // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bUseModalTutorial;                                       // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E5ZD[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ModalTutorialDelay;                                      // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.TutorialLevelUpData
	 * Size -> 0x0020
	 */
	struct FTutorialLevelUpData
	{
	public:
		class UTutorialMessageDataAsset*                           LevelUpMessage;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGFxModalTutorialDataAsset*                          LevelUpMessage_Modal;                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelForMessage;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseModalTutorial;                                       // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_512A[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ModalTutorialDelay;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MLEU[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxNewsMenuFullscreenData
	 * Size -> 0x0040
	 */
	struct FGFxNewsMenuFullscreenData
	{
	public:
		class FText                                                NewsLabel;                                               // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              NewsImage[0x28];                                         // 0x0018(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.GFxNewsMenuFullscreenData.NewsImage
	};

	/**
	 * ScriptStruct OakGame.CurrencyInfo
	 * Size -> 0x0030
	 */
	struct FCurrencyInfo
	{
	public:
		class UInventoryCategoryData*                              ItemCategory;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                IncStartAudioEvent;                                      // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                IncStopAudioEvent;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DecStartAudioEvent;                                      // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DecStopAudioEvent;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CurrencyFrameName;                                       // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeightedWeaponUIStat
	 * Size -> 0x0020
	 */
	struct FWeightedWeaponUIStat
	{
	public:
		struct FFloatInterval                                      NormalizationRange;                                      // 0x0000(0x0008) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxAttributeData*                                   Attribute;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EUIStatValueStyle                                          ValueStyle;                                              // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49UZ[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Weight;                                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreviewPercentWeight;                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y6UQ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.WeaponTypeAttributeStatWeighting
	 * Size -> 0x0018
	 */
	struct FWeaponTypeAttributeStatWeighting
	{
	public:
		class UWeaponTypeData*                                     WeaponType;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeightedWeaponUIStat>                       WeightedStats;                                           // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleConfigurationRtpc
	 * Size -> 0x0020
	 */
	struct FVehicleConfigurationRtpc
	{
	public:
		class UWwiseRtpc*                                          RtpcParam;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      DefaultValue;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5Q00[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxAttributeData*                                   ValueAttribute;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bUpdateEveryFrame;                                       // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YL8F[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VehicleLandingEventData
	 * Size -> 0x0010
	 */
	struct FVehicleLandingEventData
	{
	public:
		class UWwiseEvent*                                         LandingEvent;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTimeInAir;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QTVK[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VehicleAudioLoopData
	 * Size -> 0x0010
	 */
	struct FVehicleAudioLoopData
	{
	public:
		class UWwiseEvent*                                         LoopStart;                                               // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWwiseEvent*                                         LoopEnd;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WheelRandomSwitchPack
	 * Size -> 0x0020
	 */
	struct FWheelRandomSwitchPack
	{
	public:
		TArray<class UWwiseSwitch*>                                WheelSwitches;                                           // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WheelsToIgnoreForSwitches;                               // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleAudioLoopOnNamedCompData
	 * Size -> 0x0028
	 */
	struct FVehicleAudioLoopOnNamedCompData
	{
	public:
		struct FVehicleAudioLoopData                               AudioLoopData;                                           // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPrivate
		class FName                                                AudioComponentTag;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FWwisePlaybackInstance>                      PlaybackInstances;                                       // 0x0018(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.VehicleConfigurationEvent
	 * Size -> 0x0010
	 */
	struct FVehicleConfigurationEvent
	{
	public:
		class UWwiseEvent*                                         WwiseEvent;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioComponentTag;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.FilteredImpactData
	 * Size -> 0x0090
	 */
	struct FFilteredImpactData
	{
	public:
		TArray<class UImpactData*>                                 ImpactData;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class UFeedbackData*                                       DefaultVehicleOccupantsFeedback;                         // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class UPhysicalMaterial*, class UFeedbackData*>       VehicleOccupantsFeedback;                                // 0x0018(0x0050) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      FeedbackScale;                                           // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLocalOnlyFeedback;                                      // 0x006C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0F4V[0x3];                                   // 0x006D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ClassesToTarget[0x10];                                   // 0x0070(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.FilteredImpactData.ClassesToTarget
		unsigned char                                              ClassesToExclude[0x10];                                  // 0x0080(0x0010) UNKNOWN PROPERTY: ArrayProperty OakGame.FilteredImpactData.ClassesToExclude
	};

	/**
	 * ScriptStruct OakGame.VehicleImpactEffectData
	 * Size -> 0x0028
	 */
	struct FVehicleImpactEffectData
	{
	public:
		unsigned char                                              UnknownData_2CG0[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FFilteredImpactData>                         FilteredImpactData;                                      // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleEffect
	 * Size -> 0x0010
	 */
	struct FVehicleEffect
	{
	public:
		class UBaseVehicleEffectData*                              EffectData;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XXNO[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VehicleEffectQueryData
	 * Size -> 0x0018
	 */
	struct FVehicleEffectQueryData
	{
	public:
		class FName                                                Event;                                                   // 0x0000(0x0008) ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVehicleEffectEvent                                        EffectEvent;                                             // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZKYF[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ComponentTag;                                            // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.EmitterEnableData
	 * Size -> 0x0010
	 */
	struct FEmitterEnableData
	{
	public:
		class FName                                                EmitterName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEmitterEnableMode                                         EnableMode;                                              // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9XL1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.UseCharacterWeaponSettings
	 * Size -> 0x0004
	 */
	struct FUseCharacterWeaponSettings
	{
	public:
		float                                                      ShootMaxAngle;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.InventoryDataUnlockedInfo
	 * Size -> 0x0030
	 */
	struct FInventoryDataUnlockedInfo
	{
	public:
		unsigned char                                              UnknownData_93NW[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.InventoryPartDataUnlockedInfo
	 * Size -> 0x0030
	 */
	struct FInventoryPartDataUnlockedInfo
	{
	public:
		unsigned char                                              UnknownData_TFVD[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.TrailVectorParam
	 * Size -> 0x0018
	 */
	struct FTrailVectorParam
	{
	public:
		class FName                                                ParamName;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Value;                                                   // 0x0008(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0NIB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VehicleTrailParticleSystemData
	 * Size -> 0x0018
	 */
	struct FVehicleTrailParticleSystemData
	{
	public:
		class UParticleSystem*                                     ParticleSystemTemplate;                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTrailVectorParam>                           VectorParamsToSet;                                       // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleTrailData
	 * Size -> 0x0050
	 */
	struct FVehicleTrailData
	{
	public:
		class FName                                                WheelFXSocketName;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                WheelPhysBoneName;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocalOffset;                                             // 0x0010(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            LocalRotationOffset;                                     // 0x001C(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            TrailPSComponent;                                        // 0x0028(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            WadingPSComponent;                                       // 0x0030(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxVehicleWheel*                                    WheelRef;                                                // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5YEQ[0x10];                                  // 0x0040(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ExtraWadingData
	 * Size -> 0x00B8
	 */
	struct FExtraWadingData
	{
	public:
		struct FVehicleTrailData                                   WadingData;                                              // 0x0000(0x0050) Edit, ContainsInstancedReference, NativeAccessSpecifierPublic
		TMap<class UElementalInteractionData*, struct FVehicleTrailParticleSystemData> WadeParticleSystems;                                     // 0x0050(0x0050) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FVehicleTrailParticleSystemData                     DefaultWadeParticleSystem;                               // 0x00A0(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VendingMachineMenuFilter
	 * Size -> 0x0020
	 */
	struct FVendingMachineMenuFilter
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class UInventoryCategoryData*                              DataTypeFilter;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VendingMachineItemRarityData
	 * Size -> 0x0020
	 */
	struct FVendingMachineItemRarityData
	{
	public:
		class UInventoryRarityData*                                Rarity;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  ShelfMaterial;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  ItemOfTheDayShelfMaterial;                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SelectionParticleRarityParameter;                        // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FKPY[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VendingMachineSequenceTimedEvent
	 * Size -> 0x0010
	 */
	struct FVendingMachineSequenceTimedEvent
	{
	public:
		float                                                      Delay;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RRP5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EventName;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VendingMachineInteractSequence
	 * Size -> 0x0090
	 */
	struct FVendingMachineInteractSequence
	{
	public:
		struct FRuntimeFloatCurve                                  DigistructCurve;                                         // 0x0000(0x0078) Edit, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RVIO[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVendingMachineSequenceTimedEvent>           Events;                                                  // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VendingMachineTrayTile
	 * Size -> 0x0040
	 */
	struct FVendingMachineTrayTile
	{
	public:
		class APickupableMeshActor*                                PhysicalActor;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              InventoryActor;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UInventoryBalanceStateComponent*                     InventoryBalance;                                        // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7BN6[0x28];                                  // 0x0018(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VendingMachinePhysicalShelf
	 * Size -> 0x0030
	 */
	struct FVendingMachinePhysicalShelf
	{
	public:
		class UStaticMeshComponent*                                ShelfMeshComponent;                                      // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBoxComponent*                                       ClickCollisionComponent;                                 // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            ItemScoreParticleComponent;                              // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent*                            SoldOutParticleComponent;                                // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            MaterialInstance;                                        // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7H9E[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.VendingMachineLastSelectionData
	 * Size -> 0x0010
	 */
	struct FVendingMachineLastSelectionData
	{
	public:
		class AActor*                                              InventoryActor;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FJH5[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.WeaponUseModeAttributeEffectData
	 * Size -> 0x0018
	 */
	struct FWeaponUseModeAttributeEffectData
	{
	public:
		EWeaponUseMode                                             UseMode;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OMQ4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UseModeBitmask;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAttributeEffectData>                        AttributeEffects;                                        // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeaponBonusData
	 * Size -> 0x0028
	 */
	struct FWeaponBonusData
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<struct FWeaponUseModeAttributeEffectData>           WeaponUseModeAttributeEffects;                           // 0x0008(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<struct FAttributeEffectData>                        InstigatorAttributeEffects;                              // 0x0018(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.WeaponBonusDataTableAttributeMappingData
	 * Size -> 0x0030
	 */
	struct FWeaponBonusDataTableAttributeMappingData
	{
	public:
		bool                                                       bInstigatorAttribute;                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_XLQZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ColumnName;                                              // 0x0008(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class UGbxAttributeData*                                   Attribute;                                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		EGbxAttributeModifierType                                  ModifierType;                                            // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_9JUA[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWeaponBonusDataTableAttributeValueResolver*         DataTableAttributeValueResolver;                         // 0x0028(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.WeaponBonusDataTableColumnCollectionData
	 * Size -> 0x0028
	 */
	struct FWeaponBonusDataTableColumnCollectionData
	{
	public:
		class FName                                                CollectionName;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<class FString>                                      ColumnNames;                                             // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_NUOH[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.WeaponBonusDataTableSelectionData
	 * Size -> 0x0048
	 */
	struct FWeaponBonusDataTableSelectionData
	{
	public:
		int32_t                                                    UseModeBitmask;                                          // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_IU87[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWeaponBonusDataTableData*                           WeaponBonusDataTable;                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                RowName;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FString>                                      ColumnNames;                                             // 0x0018(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		TArray<class FName>                                        ColumnCollections;                                       // 0x0028(0x0010) Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_OJ4E[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.COVBrokenEffectData
	 * Size -> 0x0020
	 */
	struct FCOVBrokenEffectData
	{
	public:
		class UStaticMesh*                                         Mesh;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachSocket;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HiddenBone;                                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponEffectType                                          BreakEffectType;                                         // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              BreakEffectID;                                           // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponEffectType                                          BrokenEffectType;                                        // 0x001A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              BrokenEffectID;                                          // 0x001B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideAmpEffect;                                          // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O9MG[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.COVRepairType
	 * Size -> 0x0048
	 */
	struct FCOVRepairType
	{
	public:
		struct FAttributeInitializationData                        BrokenEffectIndex;                                       // 0x0000(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      RepairTime;                                              // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepairCompletePercent;                                   // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CooldownCompletePercent;                                 // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SelectionWeight;                                         // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeightedFloatRange
	 * Size -> 0x0040
	 */
	struct FWeightedFloatRange
	{
	public:
		float                                                      MinValue;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		float                                                      MaxValue;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        Weight;                                                  // 0x0008(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.WeaponSkinSectionData
	 * Size -> 0x0030
	 */
	struct FWeaponSkinSectionData
	{
	public:
		int32_t                                                    SectionIndex;                                            // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UEZZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Material[0x28];                                          // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.WeaponSkinSectionData.Material
	};

	/**
	 * ScriptStruct OakGame.WeaponSkinWeaponTypeData
	 * Size -> 0x0018
	 */
	struct FWeaponSkinWeaponTypeData
	{
	public:
		class UWeaponTypeData*                                     WeaponType;                                              // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponSkinSectionData>                      Materials;                                               // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeaponSkinManufacturerData
	 * Size -> 0x0018
	 */
	struct FWeaponSkinManufacturerData
	{
	public:
		class UManufacturerData*                                   Manufacturer;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponSkinWeaponTypeData>                   WeaponTypes;                                             // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapDataSection
	 * Size -> 0x0040
	 */
	struct FZoneMapDataSection
	{
	public:
		class FString                                              ZoneMapSectionObjectName;                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                SectionName;                                             // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FVector                                             Origin;                                                  // 0x0028(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Extents;                                                 // 0x0034(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapMissionPOIBlacklistEntry
	 * Size -> 0x0058
	 */
	struct FZoneMapMissionPOIBlacklistEntry
	{
	public:
		unsigned char                                              BlacklistedCharacter[0x28];                              // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty OakGame.ZoneMapMissionPOIBlacklistEntry.BlacklistedCharacter
		class FString                                              BlacklistedCharacterPath;                                // 0x0028(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxCondition*                                       MissionBlacklistCondition;                               // 0x0038(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlacklistMissionGiving;                                 // 0x0040(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NVG7[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxCondition*                                       ObjectiveBlacklistCondition;                             // 0x0048(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlacklistObjectiveWaypoint;                             // 0x0050(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6UFK[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ZoneMapChallengeGroupEntry
	 * Size -> 0x0020
	 */
	struct FZoneMapChallengeGroupEntry
	{
	public:
		class UChallengeCategoryData*                              ChallengeGroup;                                          // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      ChallengesInGroup;                                       // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic
		int32_t                                                    NumChallengesInCategory;                                 // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumChallengesVisibleInUI;                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapMeshListEntry
	 * Size -> 0x0038
	 */
	struct FZoneMapMeshListEntry
	{
	public:
		class UStaticMesh*                                         ZoneMapMesh;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBox                                                ZoneMapVisibilityExtents;                                // 0x0008(0x001C) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TENE[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UGbxCondition*                                       MeshDisplayCondition;                                    // 0x0028(0x0008) Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bConditionalMeshDisplay;                                 // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XY6G[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ZoneMapGPUPointCloudData
	 * Size -> 0x0010
	 */
	struct FZoneMapGPUPointCloudData
	{
	public:
		class UTexture*                                            PositionData;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            NormalsData;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlanetZonePOI
	 * Size -> 0x0010
	 */
	struct FPlanetZonePOI
	{
	public:
		class UZoneMapData*                                        ZoneReference;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMesh*                                         ZoneMeshOnPlanet;                                        // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapDynamicPOIEntry
	 * Size -> 0x0010
	 */
	struct FZoneMapDynamicPOIEntry
	{
	public:
		class UZoneMapPOITypeData*                                 POIType;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowInMiniMap;                                          // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowInZoneMap;                                          // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K5WU[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ZoneMapLevelMeshInfo
	 * Size -> 0x0028
	 */
	struct FZoneMapLevelMeshInfo
	{
	public:
		class UStaticMeshComponent*                                MapMesh;                                                 // 0x0000(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            MapMeshDMI;                                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                MapTranslucentMesh;                                      // 0x0010(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic*                            MapTranslucentMeshDMI;                                   // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxCondition*                                       MeshDisplayCondition;                                    // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerIconInfo
	 * Size -> 0x0030
	 */
	struct FPlayerIconInfo
	{
	public:
		class AOakPlayerState*                                     AssociatedPlayer;                                        // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AOakCharacter_Player*                                AssociatedCharacter;                                     // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                PlayerIconMesh;                                          // 0x0010(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LastPlayerLocation;                                      // 0x0018(0x000C) Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            LastPlayerRotation;                                      // 0x0024(0x000C) Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ZoneMapChallengeQuery
	 * Size -> 0x0018
	 */
	struct FZoneMapChallengeQuery
	{
	public:
		class UClass*                                              ChallengeClass;                                          // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EZoneMapChallengeStatus                                    ChallengeStatus;                                         // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HI9W[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AOakZoneMapIcon_POI*                                 IconActor;                                               // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.DamageBlockEventDetails
	 * Size -> 0x0010
	 */
	struct FDamageBlockEventDetails
	{
	public:
		class UGbxDamageType*                                      DamageType;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageSource*                                       DamageSource;                                            // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SectorDistance
	 * Size -> 0x0008
	 */
	struct FSectorDistance
	{
	public:
		unsigned char                                              UnknownData_DQLK[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AgonizerAttackDataTableRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FAgonizerAttackDataTableRow : public FTableRowBase
	{
	public:
		float                                                      CooldownMin;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CooldownMax;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.FloorSectorDistance
	 * Size -> 0x0008
	 */
	struct FFloorSectorDistance
	{
	public:
		unsigned char                                              UnknownData_UUQ1[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AnimNode_Carnivora
	 * Size -> 0x1A10 (FullSize[0x1B50] - InheritedSize[0x0140])
	 */
	struct FAnimNode_Carnivora : public FAnimNode_SkeletalControlBase
	{
	public:
		float                                                      MaxYawFrontWheel;                                        // 0x0140(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinYawFrontWheel;                                        // 0x0144(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxYawTireTrack;                                         // 0x0148(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinYawTireTrack;                                         // 0x014C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTrackShaftBoneScale;                                  // 0x0150(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTrackShaftBoneScale;                                  // 0x0154(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrontWheelsMinHeight;                                    // 0x0158(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrontWheelsMaxHeight;                                    // 0x015C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TireTrackMinHeight;                                      // 0x0160(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TireTrackMaxHeight;                                      // 0x0164(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrontWheelRadius;                                        // 0x0168(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TireTrackWheelsRadius;                                   // 0x016C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmallGearRadius;                                         // 0x0170(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BigAxleRadius;                                           // 0x0174(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MainAxleRadius;                                          // 0x0178(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_94O7[0x19D4];                                // 0x017C(0x19D4) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AnimNode_EmperorHandler
	 * Size -> 0x1990 (FullSize[0x1AD0] - InheritedSize[0x0140])
	 */
	struct FAnimNode_EmperorHandler : public FAnimNode_SkeletalControlBase
	{
	public:
		float                                                      SuspensionDropMaxSpeed;                                  // 0x0140(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SlidingInterpolationSpeed;                               // 0x0144(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SlidingDisplacement;                                     // 0x0148(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinPeriod1;                                              // 0x0150(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinPeriod2;                                              // 0x0154(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinPeriod3;                                              // 0x0158(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinAmplitude1;                                           // 0x015C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinAmplitude2;                                           // 0x0160(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinAmplitude3;                                           // 0x0164(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwivelConeX;                                             // 0x0168(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwivelConeY;                                             // 0x016C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverIntrepSpeed;                                        // 0x0170(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverBodyHeigth;                                         // 0x0174(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InoccupiedHoverBodyHeigth;                               // 0x0178(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A4QE[0x1954];                                // 0x017C(0x1954) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AnimNode_OutrunnerBooster
	 * Size -> 0x0870 (FullSize[0x09B0] - InheritedSize[0x0140])
	 */
	struct FAnimNode_OutrunnerBooster : public FAnimNode_SkeletalControlBase
	{
	public:
		unsigned char                                              UnknownData_N5SK[0x870];                                 // 0x0140(0x0870) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RoadBumpinessDataOutrunner
	 * Size -> 0x0008
	 */
	struct FRoadBumpinessDataOutrunner
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z5ES[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Bumpiness;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.HoverBodySinusOutrunner
	 * Size -> 0x001C
	 */
	struct FHoverBodySinusOutrunner
	{
	public:
		struct FVector                                             HoverScale;                                              // 0x0000(0x000C) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffsetX;                                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffsetY;                                                 // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Frequency;                                               // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Amplitude;                                               // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AnimNode_OutrunnerHandler
	 * Size -> 0x1700 (FullSize[0x1840] - InheritedSize[0x0140])
	 */
	struct FAnimNode_OutrunnerHandler : public FAnimNode_SkeletalControlBase
	{
	public:
		float                                                      SuspensionDropMaxSpeed;                                  // 0x0140(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccelInterpSpeed;                                        // 0x0144(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccelerationTreshold;                                    // 0x0148(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurningVelocityTreshold;                                 // 0x014C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchInterpSpeed;                                        // 0x0150(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollInterpSpeed;                                         // 0x0154(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollMaxAngle;                                            // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoostAlphaInterSpeed;                                    // 0x015C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BankingBoostAlpha;                                       // 0x0160(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IMZ5[0x4];                                   // 0x0164(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  PitchAccelerationCurve;                                  // 0x0168(0x0078) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  TranslationUpAccelerationCurve;                          // 0x01E0(0x0078) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      MaxSteeringAngle;                                        // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             BoostBodyTranslation;                                    // 0x025C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoostBodyPitchAdd;                                       // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceAmplitudePitchHighFreq;                       // 0x026C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceFrequencyPitchHighFreq;                       // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceFrequencyRollFreq;                            // 0x0274(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfacePersistencePitchHighFreq;                     // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoadSurfaceOctavesPitchHighFreq;                         // 0x027C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceAmplitudePitchLowFreq;                        // 0x0280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceFrequencyPitchLowFreq;                        // 0x0284(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfacePersistencePitchLowFreq;                      // 0x0288(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoadSurfaceOctavesPitchLowFreq;                          // 0x028C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyFollowSpeedOfPitch;                                  // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyFollowAmplitudeMultiplier;                           // 0x0294(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTimeToSwitch;                                         // 0x0298(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTimeToSwitch;                                         // 0x029C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinBumpTimeValue;                                        // 0x02A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxBumpTimeValue;                                        // 0x02A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinAlphaValue;                                           // 0x02A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAlphaValue;                                           // 0x02AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinInterpSpeed;                                          // 0x02B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxInterpSpeed;                                          // 0x02B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultRoadBumpiness;                                    // 0x02B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_V0X7[0x4];                                   // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRoadBumpinessDataOutrunner>                 RoadBumpinessOverrides;                                  // 0x02C0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		float                                                      HoverWheelSpeedWhenTurningOnSelf;                        // 0x02D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverWheelAngle;                                         // 0x02D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HoverWheelRearLeftPos;                                   // 0x02D8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HoverWheelRearRightPos;                                  // 0x02E4(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSpinSpeedIdle;                                      // 0x02F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverOffsetZ;                                            // 0x02F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSuspensionArmAngleOffset;                           // 0x02F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSuspensionArmAmplitude;                             // 0x02FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSuspensionArmSpeed;                                 // 0x0300(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverMaxPitchAngle;                                      // 0x0304(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverMaxRollAngle;                                       // 0x0308(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSpinSpeedFullTrottle;                               // 0x030C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSpinMaxSpeedAngularVelocity;                        // 0x0310(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverMaxVelocity;                                        // 0x0314(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverPitchInterpSpeed;                                   // 0x0318(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverPitchBoostingInterpSpeed;                           // 0x031C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverRollInterpSpeed;                                    // 0x0320(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverBodyAccelTreshold;                                  // 0x0324(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverBodyActiveBlend;                                    // 0x0328(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverVelocityIntensityX;                                 // 0x032C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverVelocityIntensityY;                                 // 0x0330(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverWheelRotationIntensity;                             // 0x0334(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverWheelRotationIntensityY;                            // 0x0338(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XKF0[0x4];                                   // 0x033C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHoverBodySinusOutrunner>                    HoverBodySin;                                            // 0x0340(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FVector2D                                           SwivelCone;                                              // 0x0350(0x0008) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  HoverBodyTransitionCurve;                                // 0x0358(0x0078) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_22VD[0x1470];                                // 0x03D0(0x1470) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AnimNode_RevolverBooster
	 * Size -> 0x0340 (FullSize[0x0480] - InheritedSize[0x0140])
	 */
	struct FAnimNode_RevolverBooster : public FAnimNode_SkeletalControlBase
	{
	public:
		unsigned char                                              UnknownData_90K4[0x314];                                 // 0x0140(0x0314) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BodyCycleFromEngineCycleRatio;                           // 0x0454(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IdleRPM;                                                 // 0x0458(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EngineRunningAmplitude;                                  // 0x045C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EngineIdleAmplitude;                                     // 0x0460(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MufflerAmplitudeMutliplier;                              // 0x0464(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EngineRunningFrequency;                                  // 0x0468(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EngineIdleFrequency;                                     // 0x046C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MufflerFrequencyMutliplier;                              // 0x0470(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QGCR[0xC];                                   // 0x0474(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AnimNode_RevolverHandler
	 * Size -> 0x0460 (FullSize[0x05A0] - InheritedSize[0x0140])
	 */
	struct FAnimNode_RevolverHandler : public FAnimNode_SkeletalControlBase
	{
	public:
		float                                                      MaxSteeringAngle;                                        // 0x0140(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinPeriod1;                                              // 0x0144(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinPeriod2;                                              // 0x0148(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinPeriod3;                                              // 0x014C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinAmplitude1;                                           // 0x0150(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinAmplitude2;                                           // 0x0154(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SinAmplitude3;                                           // 0x0158(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwivelConeX;                                             // 0x015C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwivelConeY;                                             // 0x0160(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwivelPeriodX;                                           // 0x0164(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwivelPeriodY;                                           // 0x0168(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverIntrepSpeed;                                        // 0x016C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyCompensationInterpSpeed;                             // 0x0170(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverBodyCompensationInterpSpeed;                        // 0x0174(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyOffsetInterpSpeed;                                   // 0x0178(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyHoverOffset;                                         // 0x017C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PositionOffsetFromRotation;                              // 0x0180(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverMaxPitchAngle;                                      // 0x0184(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverMaxRollAngle;                                       // 0x0188(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverPitchInterpSpeed;                                   // 0x018C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverPitchBoostingInterpSpeed;                           // 0x0190(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverRollInterpSpeed;                                    // 0x0194(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  AccelerationCurve;                                       // 0x0198(0x0078) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DS0Y[0x390];                                 // 0x0210(0x0390) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RoadBumpinessData
	 * Size -> 0x0008
	 */
	struct FRoadBumpinessData
	{
	public:
		EPhysicalSurface                                           SurfaceType;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IP9Y[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Bumpiness;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.HoverBodySinus
	 * Size -> 0x001C
	 */
	struct FHoverBodySinus
	{
	public:
		struct FVector                                             HoverScale;                                              // 0x0000(0x000C) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffsetX;                                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffsetY;                                                 // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Frequency;                                               // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Amplitude;                                               // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.AnimNode_TechnicalHandler
	 * Size -> 0x2BF0 (FullSize[0x2D30] - InheritedSize[0x0140])
	 */
	struct FAnimNode_TechnicalHandler : public FAnimNode_SkeletalControlBase
	{
	public:
		float                                                      SuspensionDropMaxSpeed;                                  // 0x0140(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RKQS[0x4];                                   // 0x0144(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  SuspensionCamberCurve;                                   // 0x0148(0x0078) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      CamberIntensity;                                         // 0x01C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BigWheelsBodyZ;                                          // 0x01C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccelerationTreshold;                                    // 0x01C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurningVelocityTreshold;                                 // 0x01CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchInterpSpeed;                                        // 0x01D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollInterpSpeed;                                         // 0x01D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollMaxAngle;                                            // 0x01D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BankingBoostAlpha;                                       // 0x01DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  PitchAccelerationCurve;                                  // 0x01E0(0x0078) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      BoostBodyPitchAdd;                                       // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoostBodyUpAdd;                                          // 0x025C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSteeringAngle;                                        // 0x0260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceAmplitudePitchHighFreq;                       // 0x0264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceFrequencyPitchHighFreq;                       // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceFrequencyRollFreq;                            // 0x026C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfacePersistencePitchHighFreq;                     // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoadSurfaceOctavesPitchHighFreq;                         // 0x0274(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceAmplitudePitchLowFreq;                        // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfaceFrequencyPitchLowFreq;                        // 0x027C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoadSurfacePersistencePitchLowFreq;                      // 0x0280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RoadSurfaceOctavesPitchLowFreq;                          // 0x0284(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyFollowSpeedOfPitch;                                  // 0x0288(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyFollowAmplitudeMultiplier;                           // 0x028C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTimeToSwitch;                                         // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTimeToSwitch;                                         // 0x0294(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinBumpTimeValue;                                        // 0x0298(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxBumpTimeValue;                                        // 0x029C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinAlphaValue;                                           // 0x02A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAlphaValue;                                           // 0x02A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinInterpSpeed;                                          // 0x02A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxInterpSpeed;                                          // 0x02AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultRoadBumpiness;                                    // 0x02B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_N8NV[0x4];                                   // 0x02B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FRoadBumpinessData>                          RoadBumpinessOverrides;                                  // 0x02B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPrivate
		float                                                      EngineAmplitude;                                         // 0x02C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BodyCycleFromEngineCycleRatio;                           // 0x02CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IdleRPM;                                                 // 0x02D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverWheelAngle;                                         // 0x02D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSpinSpeedIdle;                                      // 0x02D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSpinSpeedFullTrottle;                               // 0x02DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverOffsetZ;                                            // 0x02E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverFrontWheelAdd;                                      // 0x02E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverMaxVelocity;                                        // 0x02E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSuspensionIntensityUp;                              // 0x02EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverSuspensionIntensityDown;                            // 0x02F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VLRC[0x4];                                   // 0x02F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FHoverBodySinus>                             HoverBodySin;                                            // 0x02F8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FVector2D                                           SwivelCone;                                              // 0x0308(0x0008) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverMaxPitchAngle;                                      // 0x0310(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverMaxRollAngle;                                       // 0x0314(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverPitchInterpSpeed;                                   // 0x0318(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverPitchBoostingInterpSpeed;                           // 0x031C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverRollInterpSpeed;                                    // 0x0320(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverWheelRotationIntensity;                             // 0x0324(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverWheelRotationIntensityY;                            // 0x0328(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IAEP[0x4];                                   // 0x032C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  HoverBodyTransitionCurve;                                // 0x0330(0x0078) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_37R8[0x2988];                                // 0x03A8(0x2988) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AnimNode_TrailerHandler
	 * Size -> 0x0760 (FullSize[0x08A0] - InheritedSize[0x0140])
	 */
	struct FAnimNode_TrailerHandler : public FAnimNode_SkeletalControlBase
	{
	public:
		float                                                      SuspensionDropMaxSpeed;                                  // 0x0140(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EN65[0x75C];                                 // 0x0144(0x075C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AnimNode_WeaponVehicleHandler
	 * Size -> 0x1480 (FullSize[0x15C0] - InheritedSize[0x0140])
	 */
	struct FAnimNode_WeaponVehicleHandler : public FAnimNode_SkeletalControlBase
	{
	public:
		bool                                                       bUseYawBone;                                             // 0x0140(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsePitchBone;                                           // 0x0141(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZBU4[0x2];                                   // 0x0142(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PitchMinAngleClamp;                                      // 0x0144(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchMaxAngleClamp;                                      // 0x0148(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseProjectileBone;                                      // 0x014C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDualWeapon;                                           // 0x014D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseBoneReTargeting;                                     // 0x014E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9R0Z[0x1];                                   // 0x014F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBoneReference                                      SourceBone;                                              // 0x0150(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FBoneReference                                      DestBone;                                                // 0x0168(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NI28[0x1440];                                // 0x0180(0x1440) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DialogParameterValuePair
	 * Size -> 0x0088
	 */
	struct FDialogParameterValuePair
	{
	public:
		class UDialogParameter*                                    Parameter;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGbxParam                                           Value;                                                   // 0x0008(0x0080) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CarnivoraAnimInstanceProxy
	 * Size -> 0x0020 (FullSize[0x06E0] - InheritedSize[0x06C0])
	 */
	struct FCarnivoraAnimInstanceProxy : public FAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_QJP9[0x20];                                  // 0x06C0(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.EchoDeviceScreenData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FEchoDeviceScreenData : public FTableRowBase
	{
	public:
		class UMaterialInstance*                                   MaterialInstance;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Rate;                                                    // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RWPQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWwiseEvent*                                         Sound;                                                   // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NextScreenName;                                          // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerEchoDeviceOrientationData
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FPlayerEchoDeviceOrientationData : public FTableRowBase
	{
	public:
		bool                                                       bHideEchoInFirstPerson;                                  // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVerticalSplitscreenHideEchoInFirstPerson;               // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bQuadSplitscreenHideEchoInFirstPerson;                   // 0x000A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TN71[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           ScreenPosition;                                          // 0x000C(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SplitScreenScreenPosition;                               // 0x0014(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           VerticalSplitScreenScreenPosition;                       // 0x001C(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           QuadSplitScreenScreenPosition;                           // 0x0024(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x002C(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            SplitScreenRotationOffset;                               // 0x0038(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            VerticalSplitScreenRotationOffset;                       // 0x0044(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            QuadSplitScreenRotationOffset;                           // 0x0050(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HD3G[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakVehicleAnimInstanceProxy
	 * Size -> 0x00A0 (FullSize[0x0780] - InheritedSize[0x06E0])
	 */
	struct FOakVehicleAnimInstanceProxy : public FVehicleAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_LBFA[0xA0];                                  // 0x06E0(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.EmperorVehicleAnimInstanceProxy
	 * Size -> 0x0070 (FullSize[0x07F0] - InheritedSize[0x0780])
	 */
	struct FEmperorVehicleAnimInstanceProxy : public FOakVehicleAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_1BU5[0x70];                                  // 0x0780(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ReviveStateInformation
	 * Size -> 0x0002
	 */
	struct FReviveStateInformation
	{
	public:
		EReviveState                                               ReviveState;                                             // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ReviveSuccessful;                                        // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.FriendEventDataEntry
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FFriendEventDataEntry : public FTableRowBase
	{
	public:
		EFriendEventType                                           FriendEventType;                                         // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFriendEventPriority                                       Priority;                                                // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_USXA[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Ordinal;                                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ContainsSpoiler;                                         // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       BroadcastToSingleFriend;                                 // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DisplayNotificationOnFriendHUD;                          // 0x0012(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysShowNotification;                                 // 0x0013(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DisplayEventOnTimeline;                                  // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QKYA[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                EventTitleText;                                          // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EventText;                                               // 0x0030(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VaultCardExportChallengeLists
	 * Size -> 0x0020
	 */
	struct FVaultCardExportChallengeLists
	{
	public:
		unsigned char                                              UnknownData_TE3B[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDownloadableContentData*                            AssociatedDLC;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      Challenges;                                              // 0x0010(0x0010) ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GbxInputEvent_OakLookAxis
	 * Size -> 0x0010 (FullSize[0x0080] - InheritedSize[0x0070])
	 */
	struct FGbxInputEvent_OakLookAxis : public FGbxInputEvent_Axis_Core
	{
	public:
		unsigned char                                              UnknownData_CWHU[0x10];                                  // 0x0070(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GbxInputEvent_OakMoveAxis
	 * Size -> 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
	 */
	struct FGbxInputEvent_OakMoveAxis : public FGbxInputEvent_Axis_Core
	{	};

	/**
	 * ScriptStruct OakGame.GbxInputEvent_OakUIAxis
	 * Size -> 0x0010 (FullSize[0x0080] - InheritedSize[0x0070])
	 */
	struct FGbxInputEvent_OakUIAxis : public FGbxInputEvent_Axis_Core
	{
	public:
		unsigned char                                              UnknownData_WMGR[0x8];                                   // 0x0070(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HoldTime;                                                // 0x0078(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AP36[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxCARMenuCustomizePageConfig
	 * Size -> 0x0020
	 */
	struct FGFxCARMenuCustomizePageConfig
	{
	public:
		class UGFxCARMenu*                                         CARMenuOwner;                                            // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVehicleSpawnerComponent*                            VehicleSpawner;                                          // 0x0008(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UGbxGFxPooledGridList*                               ItemList;                                                // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FOakCARMenuPartType                                 PartType;                                                // 0x0018(0x0002) Transient, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bCanSelectEmpty;                                         // 0x001A(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TLDJ[0x5];                                   // 0x001B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCARMenuStatCardStatInfo
	 * Size -> 0x0010
	 */
	struct FOakCARMenuStatCardStatInfo
	{
	public:
		class UOakCARVehiclePartStat*                              Stat;                                                    // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AggregatedValue;                                         // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y304[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CreditsTableRow
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FCreditsTableRow : public FTableRowBase
	{
	public:
		class FString                                              FirstName;                                               // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastName;                                                // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Title;                                                   // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Organization;                                            // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ExtraText;                                               // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ExtraTextStyle;                                          // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CreditsRangeIndex
	 * Size -> 0x0010
	 */
	struct FCreditsRangeIndex
	{
	public:
		unsigned char                                              UnknownData_V2WZ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StatusItem
	 * Size -> 0x0058
	 */
	struct FStatusItem
	{
	public:
		unsigned char                                              UnknownData_UHUN[0x58];                                  // 0x0000(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxItemInspectionPartStat
	 * Size -> 0x0020
	 */
	struct FGFxItemInspectionPartStat
	{
	public:
		class FText                                                Description;                                             // 0x0000(0x0018) Transient, NativeAccessSpecifierPublic
		EUIStatComparisonResult                                    CompareResult;                                           // 0x0018(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L0A3[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.FriendIconNameAndIndex
	 * Size -> 0x0018
	 */
	struct FFriendIconNameAndIndex
	{
	public:
		int32_t                                                    IconFlashIndex;                                          // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BNQN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              IconTextureName;                                         // 0x0008(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxMissionTrackerAnimationData
	 * Size -> 0x0060
	 */
	struct FGFxMissionTrackerAnimationData
	{
	public:
		class FText                                                Description;                                             // 0x0000(0x0018) Transient, NativeAccessSpecifierPublic
		EGFxMissionTrackerAnimationType                            AnimationType;                                           // 0x0018(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3WEO[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMissionObjectiveReference                          MissionObjectiveLink;                                    // 0x0020(0x0030) Transient, NativeAccessSpecifierPublic
		class UGFxMissionTrackerSlot*                              OptionalSlotToClearOut;                                  // 0x0050(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2MIS[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxOakMenuHelpers
	 * Size -> 0x0001
	 */
	struct FGFxOakMenuHelpers
	{
	public:
		unsigned char                                              UnknownData_HVKG[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PauseMenuTickFunction
	 * Size -> 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
	 */
	struct FPauseMenuTickFunction : public FTickFunction
	{
	public:
		unsigned char                                              UnknownData_9CZ3[0x10];                                  // 0x0050(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.IconNameAndIndex
	 * Size -> 0x0018
	 */
	struct FIconNameAndIndex
	{
	public:
		int32_t                                                    IconFlashIndex;                                          // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_80RE[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              IconTextureName;                                         // 0x0008(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxSkillScreenLoadoutChoiceInfo
	 * Size -> 0x0058
	 */
	struct FGFxSkillScreenLoadoutChoiceInfo
	{
	public:
		class UOakPlayerAbilityTreeItemData*                       ItemData;                                                // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ChoiceSelectedName;                                      // 0x0008(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                ChoiceSelectionName;                                     // 0x0020(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                ChoiceDescription;                                       // 0x0038(0x0018) Transient, NativeAccessSpecifierPublic
		EGFxSkillScreenLoadoutChoiceEquipState                     EquipState;                                              // 0x0050(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EB9C[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StatConfigInfo
	 * Size -> 0x0020
	 */
	struct FStatConfigInfo
	{
	public:
		class FText                                                StatName;                                                // 0x0000(0x0018) Transient, NativeAccessSpecifierPublic
		unsigned char                                              PercentCompletion;                                       // 0x0018(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6WXZ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxVaultHunterProfileCardStatConfig
	 * Size -> 0x0018
	 */
	struct FGFxVaultHunterProfileCardStatConfig
	{
	public:
		TArray<struct FStatConfigInfo>                             StatsInfo;                                               // 0x0000(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		uint32_t                                                   TimePlayedHours;                                         // 0x0010(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   TimePlayedMinutes;                                       // 0x0014(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxVaultHunterProfileCardInventoryConfig
	 * Size -> 0x00C8
	 */
	struct FGFxVaultHunterProfileCardInventoryConfig
	{
	public:
		class FString                                              WeaponRarityFrames[0x4];                                 // 0x0000(0x0040) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponTypeFrames[0x4];                                   // 0x0040(0x0040) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GrenadeRarityFrame;                                      // 0x0080(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ShieldRarityFrame;                                       // 0x0090(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ClassModRarityFrame;                                     // 0x00A0(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RelicRarityFrame;                                        // 0x00B0(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRelic2;                                               // 0x00C0(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FY1A[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.GFxVaultHunterProfileCardSkillsConfig
	 * Size -> 0x0020
	 */
	struct FGFxVaultHunterProfileCardSkillsConfig
	{
	public:
		float                                                      GreenProgress;                                           // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlueProgress;                                            // 0x0004(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RedProgress;                                             // 0x0008(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PurpleProgress;                                          // 0x000C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ClassFrameName;                                          // 0x0010(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GFxVaultHunterProfileCardPlayerConfig
	 * Size -> 0x0078
	 */
	struct FGFxVaultHunterProfileCardPlayerConfig
	{
	public:
		class UTexture*                                            ProfilePicture;                                          // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PlayerName;                                              // 0x0008(0x0018) Transient, NativeAccessSpecifierPublic
		class FText                                                MissionName;                                             // 0x0020(0x0018) Transient, NativeAccessSpecifierPublic
		unsigned char                                              PlayerClass[0x28];                                       // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.GFxVaultHunterProfileCardPlayerConfig.PlayerClass
		bool                                                       bHasSelectedCharacter;                                   // 0x0060(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z89B[0x17];                                  // 0x0061(0x0017) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakCharacterMassData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FOakCharacterMassData : public FTableRowBase
	{
	public:
		float                                                      Mass;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlinchThreshold;                                         // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaggerThreshold;                                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LaunchThreshold;                                         // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeaponSightEffectTableData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FWeaponSightEffectTableData : public FTableRowBase
	{
	public:
		struct FLinearColor                                        CrosshairColor;                                          // 0x0008(0x0010) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAnimInstanceProxy
	 * Size -> 0x0010 (FullSize[0x06E0] - InheritedSize[0x06D0])
	 */
	struct FOakPlayerAnimInstanceProxy : public FGbxCharacterAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_YPAU[0x10];                                  // 0x06D0(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.IronBearAnimInstanceProxy_FirstPerson
	 * Size -> 0x0000 (FullSize[0x06E0] - InheritedSize[0x06E0])
	 */
	struct FIronBearAnimInstanceProxy_FirstPerson : public FOakPlayerAnimInstanceProxy
	{	};

	/**
	 * ScriptStruct OakGame.PendingMayhemState
	 * Size -> 0x0010
	 */
	struct FPendingMayhemState
	{
	public:
		TArray<struct FMayhemModifierSet>                          ModifierSets;                                            // 0x0000(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakAbilityDebugMenuSpecList
	 * Size -> 0x0010
	 */
	struct FOakAbilityDebugMenuSpecList
	{
	public:
		unsigned char                                              UnknownData_WSW6[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakAbilityDebugMenuListItemSpec
	 * Size -> 0x0014
	 */
	struct FOakAbilityDebugMenuListItemSpec
	{
	public:
		unsigned char                                              UnknownData_8VJ6[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilityTreeItemInfo
	 * Size -> 0x0020
	 */
	struct FOakPlayerAbilityTreeItemInfo
	{
	public:
		class UOakPlayerAbilityTreeItemData*                       ItemData;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXAW[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOakPlayerAbilityTreeBranchData*                     BranchData;                                              // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilityTreeTierInfo
	 * Size -> 0x0010
	 */
	struct FOakPlayerAbilityTreeTierInfo
	{
	public:
		class UOakPlayerAbilityTreeTierData*                       TierData;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UH3V[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakPlayerAbilityTreeBranchInfo
	 * Size -> 0x0010
	 */
	struct FOakPlayerAbilityTreeBranchInfo
	{
	public:
		class UOakPlayerAbilityTreeBranchData*                     BranchData;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R4RF[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActionState_OakAnim
	 * Size -> 0x0028 (FullSize[0x0520] - InheritedSize[0x04F8])
	 */
	struct FActionState_OakAnim : public FActionState_Anim
	{
	public:
		unsigned char                                              UnknownData_SQUW[0x28];                                  // 0x04F8(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActionState_OakAnimActionAbility
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakAnimActionAbility : public FActionState_OakAnim
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakAnimActionAbilityOperative
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakAnimActionAbilityOperative : public FActionState_OakAnimActionAbility
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakAnimActionAbilityPhaseTrance
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakAnimActionAbilityPhaseTrance : public FActionState_OakAnimActionAbility
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakAnimPhaseTranceArms
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakAnimPhaseTranceArms : public FActionState_OakAnim
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakPlayerMelee
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakPlayerMelee : public FActionState_OakAnim
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakAnim_TedioreReload
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakAnim_TedioreReload : public FActionState_OakAnim
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakAnim_WeaponReload
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakAnim_WeaponReload : public FActionState_OakAnim
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakAttachedAnim
	 * Size -> 0x0008 (FullSize[0x0528] - InheritedSize[0x0520])
	 */
	struct FActionState_OakAttachedAnim : public FActionState_OakAnim
	{
	public:
		unsigned char                                              UnknownData_MWY4[0x8];                                   // 0x0520(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakActionState_CoordinatedEffect
	 * Size -> 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
	 */
	struct FOakActionState_CoordinatedEffect : public FActionState_CoordinatedEffect
	{	};

	/**
	 * ScriptStruct OakGame.OakActionState_CoordinatedEffect_ActionAbility
	 * Size -> 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
	 */
	struct FOakActionState_CoordinatedEffect_ActionAbility : public FOakActionState_CoordinatedEffect
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakDetachFromSeat
	 * Size -> 0x0008 (FullSize[0x00D0] - InheritedSize[0x00C8])
	 */
	struct FActionState_OakDetachFromSeat : public FActionState_Base
	{
	public:
		unsigned char                                              UnknownData_4F12[0x8];                                   // 0x00C8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActionState_OakEmote
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakEmote : public FActionState_OakAnim
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakFrozenDeath
	 * Size -> 0x0000 (FullSize[0x00C8] - InheritedSize[0x00C8])
	 */
	struct FActionState_OakFrozenDeath : public FActionState_Base
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakGib
	 * Size -> 0x0000 (FullSize[0x00D0] - InheritedSize[0x00D0])
	 */
	struct FActionState_OakGib : public FActionState_Gib
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakHostileAttach
	 * Size -> 0x0088 (FullSize[0x04F0] - InheritedSize[0x0468])
	 */
	struct FActionState_OakHostileAttach : public FActionState_SimpleAnim
	{
	public:
		unsigned char                                              UnknownData_ZG24[0x88];                                  // 0x0468(0x0088) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ReplicatedEject
	 * Size -> 0x000C
	 */
	struct FReplicatedEject
	{
	public:
		struct FVector                                             EjectVel;                                                // 0x0000(0x000C) IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ActionState_OakLeapOnVehicle
	 * Size -> 0x0010 (FullSize[0x0570] - InheritedSize[0x0560])
	 */
	struct FActionState_OakLeapOnVehicle : public FActionState_NavHomingJump
	{
	public:
		unsigned char                                              UnknownData_NF62[0x10];                                  // 0x0560(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActionState_OakRandomAnim
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakRandomAnim : public FActionState_OakAnim
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakPetUltimateAbility
	 * Size -> 0x0000 (FullSize[0x0520] - InheritedSize[0x0520])
	 */
	struct FActionState_OakPetUltimateAbility : public FActionState_OakRandomAnim
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakPhaseMove
	 * Size -> 0x0060 (FullSize[0x0598] - InheritedSize[0x0538])
	 */
	struct FActionState_OakPhaseMove : public FActionState_Loop
	{
	public:
		unsigned char                                              UnknownData_O342[0x60];                                  // 0x0538(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActionState_OakPhysicalDeath
	 * Size -> 0x0000 (FullSize[0x0538] - InheritedSize[0x0538])
	 */
	struct FActionState_OakPhysicalDeath : public FActionState_PhysicalDeath
	{	};

	/**
	 * ScriptStruct OakGame.ActionState_OakVehicleInteractionAnim
	 * Size -> 0x0010 (FullSize[0x0530] - InheritedSize[0x0520])
	 */
	struct FActionState_OakVehicleInteractionAnim : public FActionState_OakAnim
	{
	public:
		unsigned char                                              UnknownData_IBZ1[0x10];                                  // 0x0520(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActionState_OakVehicleMoveTo
	 * Size -> 0x0018 (FullSize[0x00E0] - InheritedSize[0x00C8])
	 */
	struct FActionState_OakVehicleMoveTo : public FActionState_Base
	{
	public:
		unsigned char                                              UnknownData_NEN3[0x18];                                  // 0x00C8(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActionState_OakVehicleSpawnAnim
	 * Size -> 0x0020 (FullSize[0x0518] - InheritedSize[0x04F8])
	 */
	struct FActionState_OakVehicleSpawnAnim : public FActionState_SpawnAnim
	{
	public:
		unsigned char                                              UnknownData_1HGX[0x20];                                  // 0x04F8(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ActionState_OakCloak
	 * Size -> 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
	 */
	struct FActionState_OakCloak : public FOakActionState_CoordinatedEffect
	{	};

	/**
	 * ScriptStruct OakGame.ChunkIdAssetClassesData
	 * Size -> 0x0018
	 */
	struct FChunkIdAssetClassesData
	{
	public:
		int32_t                                                    ChunkId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9R7X[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSoftClassPath>                              AssetClasses;                                            // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.PlayerCountAndPlaythroughDefinedValueRow
	 * Size -> 0x01C0 (FullSize[0x01C8] - InheritedSize[0x0008])
	 */
	struct FPlayerCountAndPlaythroughDefinedValueRow : public FAttributeDefinedValueRow
	{
	public:
		struct FAttributeInitializationData                        OnePlayer_PT1;                                           // 0x0008(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        TwoPlayers_PT1;                                          // 0x0040(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        ThreePlayers_PT1;                                        // 0x0078(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        FourPlayers_PT1;                                         // 0x00B0(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        OnePlayer_PT2;                                           // 0x00E8(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        TwoPlayers_PT2;                                          // 0x0120(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        ThreePlayers_PT2;                                        // 0x0158(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        FourPlayers_PT2;                                         // 0x0190(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.PlayerCountDefinedValueRow
	 * Size -> 0x00E0 (FullSize[0x00E8] - InheritedSize[0x0008])
	 */
	struct FPlayerCountDefinedValueRow : public FAttributeDefinedValueRow
	{
	public:
		struct FAttributeInitializationData                        OnePlayer;                                               // 0x0008(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        TwoPlayers;                                              // 0x0040(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        ThreePlayers;                                            // 0x0078(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FAttributeInitializationData                        FourPlayers;                                             // 0x00B0(0x0038) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct OakGame.OakCARMenuStatLineData
	 * Size -> 0x0008
	 */
	struct FOakCARMenuStatLineData
	{
	public:
		class UOakCARVehiclePartStat*                              PartStat;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ChallengeReward
	 * Size -> 0x0020
	 */
	struct FChallengeReward
	{
	public:
		unsigned char                                              UnknownData_IJ11[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CameraManViewPoint
	 * Size -> 0x0018
	 */
	struct FCameraManViewPoint
	{
	public:
		unsigned char                                              UnknownData_CKXP[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlayerTeleportState
	 * Size -> 0x0038
	 */
	struct FPlayerTeleportState
	{
	public:
		unsigned char                                              UnknownData_LLKE[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UOakPlayerTeleportData*                              TeleportData;                                            // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.CheatManagerItemPool
	 * Size -> 0x0018
	 */
	struct FCheatManagerItemPool
	{
	public:
		class FString                                              ItemPool;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G754[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakHealthTypeBalanceData
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FOakHealthTypeBalanceData : public FHealthTypeBalanceData
	{
	public:
		float                                                      NonelementalModifier;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CorrosiveModifier;                                       // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CryoModifier;                                            // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireModifier;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShockModifier;                                           // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RadiationModifier;                                       // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 PlayThroughTwoOverride;                                  // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 MayhemLevel4Override;                                    // 0x0030(0x0010) Deprecated, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.GbxInputEventHelper_SigFunc_OakMoveLookAxis_Data
	 * Size -> 0x0010
	 */
	struct FGbxInputEventHelper_SigFunc_OakMoveLookAxis_Data
	{
	public:
		struct FVector                                             Val;                                                     // 0x0000(0x000C) IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGamePad;                                                // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LXWT[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakInventorySortData
	 * Size -> 0x0028
	 */
	struct FOakInventorySortData
	{
	public:
		EOakInventoryMenuSortMode                                  SortMode;                                                // 0x0000(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9LJ1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOakInventoryMenuTypePriorityInfo>           SortPriorities;                                          // 0x0008(0x0010) ZeroConstructor, Transient, NativeAccessSpecifierPublic
		bool                                                       bDoEquippedTypeFirst;                                    // 0x0018(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OTPV[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EquippedItemGrouping;                                    // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakInventoryMenuCounts
	 * Size -> 0x0028
	 */
	struct FOakInventoryMenuCounts
	{
	public:
		int32_t                                                    ItemCount;                                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemMax;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ItemCountColor;                                          // 0x0008(0x0010) BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GoldenKeyCount;                                          // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ErediumCount;                                            // 0x001C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MoneyCount;                                              // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VaultCoinCount;                                          // 0x0024(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.ManagedActorCountData
	 * Size -> 0x0010
	 */
	struct FManagedActorCountData
	{
	public:
		unsigned char                                              UnknownData_E158[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ManagedActorOwnerEntry
	 * Size -> 0x0018
	 */
	struct FManagedActorOwnerEntry
	{
	public:
		unsigned char                                              UnknownData_6V65[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.ManagedActorEntry
	 * Size -> 0x0018
	 */
	struct FManagedActorEntry
	{
	public:
		unsigned char                                              UnknownData_9KZU[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      Actors;                                                  // 0x0008(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakModifierSetWithMutexTags
	 * Size -> 0x0060
	 */
	struct FOakModifierSetWithMutexTags
	{
	public:
		struct FOakModifierSet                                     ModifierSet;                                             // 0x0000(0x0050) HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        MutexTags;                                               // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakModifierStatusEffectData
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FOakModifierStatusEffectData : public FTableRowBase
	{
	public:
		class UGbxAttributeData*                                   AttributeData;                                           // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGbxAttributeModifierType                                  ModifierType;                                            // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2H7N[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxValue;                                                // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinValue;                                                // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UQL8[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakModifierTargetResolverData
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FOakModifierTargetResolverData : public FTableRowBase
	{
	public:
		TArray<class UGbxAbilityEffectTargetResolutionData*>       TargetResolvers;                                         // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic
		class UGbxAbilityEffectTargetResolutionData*               TargetResolver;                                          // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct OakGame.ScriptedVehicleMove
	 * Size -> 0x0024
	 */
	struct FScriptedVehicleMove
	{
	public:
		unsigned char                                              UnknownData_C3AP[0x24];                                  // 0x0000(0x0024) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.DrivingOverride
	 * Size -> 0x0002
	 */
	struct FDrivingOverride
	{
	public:
		unsigned char                                              UnknownData_NSCC[0x2];                                   // 0x0000(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.SpeedOverride
	 * Size -> 0x0060
	 */
	struct FSpeedOverride
	{
	public:
		unsigned char                                              UnknownData_5325[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakOnlineLobbyInfo
	 * Size -> 0x0030
	 */
	struct FOakOnlineLobbyInfo
	{
	public:
		ENetworkType                                               NetworkType;                                             // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInviteType                                                InviteType;                                              // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9GFZ[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                CurrentActivity;                                         // 0x0008(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		EOakOnlineLobbyConnectivityState                           ConnectivityState;                                       // 0x0020(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V8KS[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurrentConnectedPlayerCount;                             // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxConnectedPlayerCount;                                 // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LS8C[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlayerEchoLogStatus
	 * Size -> 0x0010
	 */
	struct FPlayerEchoLogStatus
	{
	public:
		class UEchoLogData*                                        EchoLogData;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HIBV[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.AutoAimDebugData
	 * Size -> 0x0088
	 */
	struct FAutoAimDebugData
	{
	public:
		unsigned char                                              UnknownData_95EV[0x88];                                  // 0x0000(0x0088) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakProfileCloudData
	 * Size -> 0x0100
	 */
	struct FOakProfileCloudData
	{
	public:
		TArray<struct FGameStatSaveGameData>                       ProfileStatsData;                                        // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FInventorySaveGameData>                      BankInventoryList;                                       // 0x0010(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FInventorySaveGameData>                      LostLootInventoryList;                                   // 0x0020(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakMailItem>                                NPCMailItems;                                            // 0x0030(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      MailGuids;                                               // 0x0040(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakSDUSaveGameData>                         ProfileSDUList;                                          // 0x0050(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakCustomizationSaveGameData>               UnlockedCustomizations;                                  // 0x0060(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakInventoryCustomizationPartInfo>          UnlockedInventoryCustomizationParts;                     // 0x0070(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int64_t                                                    GuardianExperience;                                      // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCrewQuartersDecorationItemSaveGameData>     UnlockedCrewQuartersDecorations;                         // 0x0088(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FCrewQuartersRoomItemSaveGameData>           UnlockedCrewQuartersRooms;                               // 0x0098(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakChallengeSaveGameData>                   OakProfileChallengeData;                                 // 0x00A8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            CitizenScienceLevelProgression;                          // 0x00B8(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    CitizenScienceCSBucksAmount;                             // 0x00C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCitizenScienceHasSeenIntroVideo;                        // 0x00CC(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCitizenScienceTutorialDone;                             // 0x00CD(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RXUC[0x2];                                   // 0x00CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   LastActiveVaultCardID;                                   // 0x00D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentVaultCardDaySeed;                                 // 0x00D4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentVaultCardWeekSeed;                                // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SSMP[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVaultCardRewardList>                        VaultCardRewards;                                        // 0x00E0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FOakVaultCardPreviousChallengeData>          VaultCardPreviousChallenges;                             // 0x00F0(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.InventoryUISaveGameData
	 * Size -> 0x000C
	 */
	struct FInventoryUISaveGameData
	{
	public:
		int32_t                                                    PickupOrderIndex;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasBeenSeenInInventoryMenu;                             // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMarkedAsFavorite;                                       // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMarkedAsJunk;                                           // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BU4O[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    InventoryListIndex;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.SDUBonusLevelData
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FSDUBonusLevelData : public FTableRowBase
	{
	public:
		int32_t                                                    SDUPrice;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SWMO[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UInventoryCategoryData*                              Currency;                                                // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttributeEffectData                                AttributeModifyInfo;                                     // 0x0018(0x0048) Edit, NoDestructor, NativeAccessSpecifierPublic
		class UInventoryRarityData*                                SDURarity;                                               // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakStatusEffectPresentation_Material_TransitionData
	 * Size -> 0x0008
	 */
	struct FOakStatusEffectPresentation_Material_TransitionData
	{
	public:
		float                                                      TransitionTriggerValue;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaterialTargetValue;                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.StreamingStatusInfo
	 * Size -> 0x0040
	 */
	struct FStreamingStatusInfo
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018) NativeAccessSpecifierPublic
		struct FColor                                              Color;                                                   // 0x0018(0x0004) IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q80M[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Description;                                             // 0x0020(0x0018) NativeAccessSpecifierPublic
		bool                                                       bIsDescriptionRelevant;                                  // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F4WG[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakInteractiveEventStats
	 * Size -> 0x0020
	 */
	struct FOakInteractiveEventStats
	{
	public:
		int32_t                                                    NbRareChestEvents;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RareChestEventWinners;                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbBadassEvents;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BadassViewersKilled;                                     // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbPinataEvents;                                          // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbMoxxisEvents;                                          // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MoxxisEventTotalBits;                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NbExtractionEvents;                                      // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.OakThumbnailManagerItemInfo
	 * Size -> 0x0710
	 */
	struct FOakThumbnailManagerItemInfo
	{
	public:
		unsigned char                                              UnknownData_V0DE[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              URL;                                                     // 0x0040(0x0010) ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_SLQL[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakThumbnailManagerIcon                            IconData;                                                // 0x0058(0x0028) Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_3ML5[0x10];                                  // 0x0080(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FOakThumbnailManagerRenderProperties                RenderProperties;                                        // 0x0090(0x0670) Transient, Protected, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_17T8[0x10];                                  // 0x0700(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OakUIVirtualBackpackConfig
	 * Size -> 0x0070
	 */
	struct FOakUIVirtualBackpackConfig
	{
	public:
		unsigned char                                              UnknownData_VJY0[0x70];                                  // 0x0000(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.HornSequence
	 * Size -> 0x0020
	 */
	struct FHornSequence
	{
	public:
		TArray<struct FHornSequenceEntry>                          HornSequence;                                            // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E991[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.FakeGear
	 * Size -> 0x0098
	 */
	struct FFakeGear
	{
	public:
		struct FFloatCurve                                         RPMCurve;                                                // 0x0000(0x0090) Edit, NativeAccessSpecifierPublic
		struct FVector2D                                           SpeedMinMax;                                             // 0x0090(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.NavPainterLayerEntry
	 * Size -> 0x0002
	 */
	struct FNavPainterLayerEntry
	{
	public:
		unsigned char                                              UnknownData_WFEV[0x2];                                   // 0x0000(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.WeaponAudioBodyLoopPlaybackInfo
	 * Size -> 0x0028
	 */
	struct FWeaponAudioBodyLoopPlaybackInfo
	{
	public:
		unsigned char                                              UnknownData_S3GV[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.WeaponShellCasingImpact
	 * Size -> 0x0018
	 */
	struct FWeaponShellCasingImpact
	{
	public:
		unsigned char                                              UnknownData_5JHS[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.WeaponAudioFailsafe
	 * Size -> 0x0030
	 */
	struct FWeaponAudioFailsafe
	{
	public:
		unsigned char                                              UnknownData_3650[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.OutrunnerVehicleAnimInstanceProxy
	 * Size -> 0x0040 (FullSize[0x07C0] - InheritedSize[0x0780])
	 */
	struct FOutrunnerVehicleAnimInstanceProxy : public FOakVehicleAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_OANH[0x40];                                  // 0x0780(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.PlayerIdentityWidgetInfo
	 * Size -> 0x0058
	 */
	struct FPlayerIdentityWidgetInfo
	{
	public:
		unsigned char                                              UnknownData_2289[0x58];                                  // 0x0000(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.RegionBalancePreviewData
	 * Size -> 0x000C
	 */
	struct FRegionBalancePreviewData
	{
	public:
		int32_t                                                    GameStageMinimum;                                        // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GameStageMaximum;                                        // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GameStageIncreaseOverPlayerLevel;                        // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.RevolverVehicleAnimInstanceProxy
	 * Size -> 0x0020 (FullSize[0x07A0] - InheritedSize[0x0780])
	 */
	struct FRevolverVehicleAnimInstanceProxy : public FOakVehicleAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_66UH[0x20];                                  // 0x0780(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StandInLightingComponentConfig
	 * Size -> 0x0030
	 */
	struct FStandInLightingComponentConfig
	{
	public:
		class FName                                                ComponentName;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideLocation;                                       // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5PLC[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x000C(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideRotation;                                       // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_30SS[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            Rotation;                                                // 0x001C(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideIntensity;                                      // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EHKP[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Intensity;                                               // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.StandInLightingConfig
	 * Size -> 0x0018
	 */
	struct FStandInLightingConfig
	{
	public:
		TArray<struct FStandInLightingComponentConfig>             LightComponents;                                         // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      AmbientCubemapIntensity;                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_62J4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StandInLightingSetting
	 * Size -> 0x0068
	 */
	struct FStandInLightingSetting
	{
	public:
		struct FStandInLightingConfig                              DefaultLighting;                                         // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		TMap<class UPlayerClassIdentifier*, struct FStandInLightingConfig> PlayerClassLighting;                                     // 0x0018(0x0050) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.StandInScaleSetting
	 * Size -> 0x0068
	 */
	struct FStandInScaleSetting
	{
	public:
		float                                                      Scale;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1XGZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class UPlayerClassIdentifier*, float>                 PlayerClassScale;                                        // 0x0008(0x0050) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		EStandInAutoScaleMode                                      AutoScaleMode;                                           // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3RM6[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             AutoScaleExtent;                                         // 0x005C(0x000C) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.StandInPlayerClassSpecificPositionSettingContextOverride
	 * Size -> 0x0018
	 */
	struct FStandInPlayerClassSpecificPositionSettingContextOverride
	{
	public:
		struct FVector2D                                           ScreenPosition;                                          // 0x0000(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            DefaultRotation;                                         // 0x0008(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Depth;                                                   // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.StandInPlayerClassSpecificPositionSetting
	 * Size -> 0x0068
	 */
	struct FStandInPlayerClassSpecificPositionSetting
	{
	public:
		struct FVector2D                                           ScreenPosition;                                          // 0x0000(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            DefaultRotation;                                         // 0x0008(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Depth;                                                   // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, struct FStandInPlayerClassSpecificPositionSettingContextOverride> ContextOverrides;                                        // 0x0018(0x0050) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.StandInPositionSetting
	 * Size -> 0x0078
	 */
	struct FStandInPositionSetting
	{
	public:
		struct FVector2D                                           ScreenPosition;                                          // 0x0000(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            DefaultRotation;                                         // 0x0008(0x000C) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Depth;                                                   // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOrientProjectionFX;                                     // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DEFL[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           ProjectionFXOffset;                                      // 0x001C(0x0008) Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProjectionFXDepthOffset;                                 // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class UPlayerClassIdentifier*, struct FStandInPlayerClassSpecificPositionSetting> PlayerClassPosition;                                     // 0x0028(0x0050) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.StandInUIConfigData
	 * Size -> 0x0410 (FullSize[0x0418] - InheritedSize[0x0008])
	 */
	struct FStandInUIConfigData : public FTableRowBase
	{
	public:
		bool                                                       bPositionRelativeToEchoDeviceProjectionSocket;           // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9VFR[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CustomPivotSocket;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLockStandInPositionOnFadeOut;                           // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DGX7[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStandInLightingSetting                             Lighting;                                                // 0x0020(0x0068) Edit, NativeAccessSpecifierPublic
		struct FStandInScaleSetting                                Scale;                                                   // 0x0088(0x0068) Edit, NativeAccessSpecifierPublic
		struct FStandInPositionSetting                             Positioning;                                             // 0x00F0(0x0078) Edit, NativeAccessSpecifierPublic
		struct FStandInScaleSetting                                ScaleSplitScreen;                                        // 0x0168(0x0068) Edit, NativeAccessSpecifierPublic
		struct FStandInScaleSetting                                ScaleVerticalSplitScreen;                                // 0x01D0(0x0068) Edit, NativeAccessSpecifierPublic
		struct FStandInScaleSetting                                ScaleQuadSplitScreen;                                    // 0x0238(0x0068) Edit, NativeAccessSpecifierPublic
		struct FStandInPositionSetting                             PositioningSplitScreen;                                  // 0x02A0(0x0078) Edit, NativeAccessSpecifierPublic
		struct FStandInPositionSetting                             PositioningVerticalSplitScreen;                          // 0x0318(0x0078) Edit, NativeAccessSpecifierPublic
		struct FStandInPositionSetting                             PositioningQuadSplitScreen;                              // 0x0390(0x0078) Edit, NativeAccessSpecifierPublic
		bool                                                       bMayAlterRotationDamping;                                // 0x0408(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7T9D[0x3];                                   // 0x0409(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RotationDamping;                                         // 0x040C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LocationDamping;                                         // 0x0410(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O1C0[0x4];                                   // 0x0414(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.StandInUIControllerTickFunction
	 * Size -> 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
	 */
	struct FStandInUIControllerTickFunction : public FTickFunction
	{
	public:
		unsigned char                                              UnknownData_GS9R[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.TechnicalVehicleAnimInstanceProxy
	 * Size -> 0x0010 (FullSize[0x0790] - InheritedSize[0x0780])
	 */
	struct FTechnicalVehicleAnimInstanceProxy : public FOakVehicleAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_QJLB[0x10];                                  // 0x0780(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.TestMapMenuEntry
	 * Size -> 0x0028
	 */
	struct FTestMapMenuEntry
	{
	public:
		class FText                                                DisplayName;                                             // 0x0000(0x0018) NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.VehicleAttachWeaponAdditionalData
	 * Size -> 0x0010
	 */
	struct FVehicleAttachWeaponAdditionalData
	{
	public:
		class FName                                                Key;                                                     // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Data;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct OakGame.WeaponVehicleAnimInstanceProxy
	 * Size -> 0x00C0 (FullSize[0x0780] - InheritedSize[0x06C0])
	 */
	struct FWeaponVehicleAnimInstanceProxy : public FAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_WA3R[0xC0];                                  // 0x06C0(0x00C0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct OakGame.CachedPlanetZonePOI
	 * Size -> 0x0030
	 */
	struct FCachedPlanetZonePOI
	{
	public:
		class UZoneMapData*                                        ZoneReference;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ZoneMeshOnPlanet[0x28];                                  // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty OakGame.CachedPlanetZonePOI.ZoneMeshOnPlanet
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
